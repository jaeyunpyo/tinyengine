
TTE_demo_mcunet.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000115f0  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000e058  080117c0  080117c0  000217c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    000000f4  0801f818  0801f818  0002f818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000188  0801f90c  0801f90c  0002f90c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .init_array   0000000c  0801fa94  0801fa94  0002fa94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .fini_array   00000004  0801faa0  0801faa0  0002faa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .data         000009d8  20000000  0801faa4  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          0001d680  200009d8  0802047c  000309d8  2**2
                  ALLOC
  9 ._user_heap_stack 00000a00  2001e058  0802047c  0003e058  2**0
                  ALLOC
 10 .ARM.attributes 00000030  00000000  00000000  000309d8  2**0
                  CONTENTS, READONLY
 11 .debug_info   0009b666  00000000  00000000  00030a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00004d9d  00000000  00000000  000cc06e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00011da7  00000000  00000000  000d0e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000de0  00000000  00000000  000e2bb8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00002fc8  00000000  00000000  000e3998  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   0000d30f  00000000  00000000  000e6960  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00006352  00000000  00000000  000f3c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007b  00000000  00000000  000f9fc1  2**0
                  CONTENTS, READONLY
 19 .debug_frame  000058fc  00000000  00000000  000fa03c  2**2
                  CONTENTS, READONLY, DEBUGGING
 20 .stab         0000003c  00000000  00000000  000ff938  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stabstr      00000076  00000000  00000000  000ff974  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200009d8 	.word	0x200009d8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080117a8 	.word	0x080117a8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200009dc 	.word	0x200009dc
 800020c:	080117a8 	.word	0x080117a8

08000210 <d_make_comp>:
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	1e4c      	subs	r4, r1, #1
 8000214:	4605      	mov	r5, r0
 8000216:	2c4e      	cmp	r4, #78	; 0x4e
 8000218:	d83f      	bhi.n	800029a <d_make_comp+0x8a>
 800021a:	e8df f004 	tbb	[pc, r4]
 800021e:	3b3b      	.short	0x3b3b
 8000220:	3e3e3b3b 	.word	0x3e3e3b3b
 8000224:	28283e3e 	.word	0x28283e3e
 8000228:	2828283b 	.word	0x2828283b
 800022c:	28282828 	.word	0x28282828
 8000230:	28282828 	.word	0x28282828
 8000234:	29293e28 	.word	0x29293e28
 8000238:	29292929 	.word	0x29292929
 800023c:	283b2929 	.word	0x283b2929
 8000240:	28282828 	.word	0x28282828
 8000244:	3c29283e 	.word	0x3c29283e
 8000248:	293b3e3b 	.word	0x293b3e3b
 800024c:	3e3e3c29 	.word	0x3e3e3c29
 8000250:	3b282828 	.word	0x3b282828
 8000254:	3b3b3b3b 	.word	0x3b3b3b3b
 8000258:	283b3b28 	.word	0x283b3b28
 800025c:	283e3e3b 	.word	0x283e3e3b
 8000260:	3e3e2828 	.word	0x3e3e2828
 8000264:	2828283e 	.word	0x2828283e
 8000268:	293b293b 	.word	0x293b293b
 800026c:	29          	.byte	0x29
 800026d:	00          	.byte	0x00
 800026e:	b1a2      	cbz	r2, 800029a <d_make_comp+0x8a>
 8000270:	e9d5 4005 	ldrd	r4, r0, [r5, #20]
 8000274:	4284      	cmp	r4, r0
 8000276:	da10      	bge.n	800029a <d_make_comp+0x8a>
 8000278:	692f      	ldr	r7, [r5, #16]
 800027a:	0126      	lsls	r6, r4, #4
 800027c:	19b8      	adds	r0, r7, r6
 800027e:	3401      	adds	r4, #1
 8000280:	f04f 0c00 	mov.w	ip, #0
 8000284:	f8c0 c004 	str.w	ip, [r0, #4]
 8000288:	616c      	str	r4, [r5, #20]
 800028a:	55b9      	strb	r1, [r7, r6]
 800028c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8000290:	bcf0      	pop	{r4, r5, r6, r7}
 8000292:	4770      	bx	lr
 8000294:	b10a      	cbz	r2, 800029a <d_make_comp+0x8a>
 8000296:	2b00      	cmp	r3, #0
 8000298:	d1ea      	bne.n	8000270 <d_make_comp+0x60>
 800029a:	2000      	movs	r0, #0
 800029c:	bcf0      	pop	{r4, r5, r6, r7}
 800029e:	4770      	bx	lr

080002a0 <d_ref_qualifier>:
 80002a0:	b410      	push	{r4}
 80002a2:	68c3      	ldr	r3, [r0, #12]
 80002a4:	781c      	ldrb	r4, [r3, #0]
 80002a6:	2c52      	cmp	r4, #82	; 0x52
 80002a8:	460a      	mov	r2, r1
 80002aa:	d00f      	beq.n	80002cc <d_ref_qualifier+0x2c>
 80002ac:	2c4f      	cmp	r4, #79	; 0x4f
 80002ae:	d003      	beq.n	80002b8 <d_ref_qualifier+0x18>
 80002b0:	4608      	mov	r0, r1
 80002b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80002b6:	4770      	bx	lr
 80002b8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80002ba:	3103      	adds	r1, #3
 80002bc:	6301      	str	r1, [r0, #48]	; 0x30
 80002be:	2120      	movs	r1, #32
 80002c0:	3301      	adds	r3, #1
 80002c2:	60c3      	str	r3, [r0, #12]
 80002c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80002c8:	2300      	movs	r3, #0
 80002ca:	e7a1      	b.n	8000210 <d_make_comp>
 80002cc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80002ce:	3102      	adds	r1, #2
 80002d0:	6301      	str	r1, [r0, #48]	; 0x30
 80002d2:	211f      	movs	r1, #31
 80002d4:	e7f4      	b.n	80002c0 <d_ref_qualifier+0x20>
 80002d6:	bf00      	nop

080002d8 <d_count_templates_scopes>:
 80002d8:	2a00      	cmp	r2, #0
 80002da:	d04e      	beq.n	800037a <d_count_templates_scopes+0xa2>
 80002dc:	b570      	push	{r4, r5, r6, lr}
 80002de:	4605      	mov	r5, r0
 80002e0:	460e      	mov	r6, r1
 80002e2:	4614      	mov	r4, r2
 80002e4:	7823      	ldrb	r3, [r4, #0]
 80002e6:	3b01      	subs	r3, #1
 80002e8:	2b4e      	cmp	r3, #78	; 0x4e
 80002ea:	d82c      	bhi.n	8000346 <d_count_templates_scopes+0x6e>
 80002ec:	e8df f003 	tbb	[pc, r3]
 80002f0:	40373737 	.word	0x40373737
 80002f4:	28282b2b 	.word	0x28282b2b
 80002f8:	37373737 	.word	0x37373737
 80002fc:	37373737 	.word	0x37373737
 8000300:	37373737 	.word	0x37373737
 8000304:	2b373737 	.word	0x2b373737
 8000308:	37373737 	.word	0x37373737
 800030c:	37373737 	.word	0x37373737
 8000310:	30303737 	.word	0x30303737
 8000314:	372b3737 	.word	0x372b3737
 8000318:	2c373737 	.word	0x2c373737
 800031c:	37373737 	.word	0x37373737
 8000320:	3737282b 	.word	0x3737282b
 8000324:	37373737 	.word	0x37373737
 8000328:	37373737 	.word	0x37373737
 800032c:	2b373737 	.word	0x2b373737
 8000330:	2c2c372b 	.word	0x2c2c372b
 8000334:	372b2c2c 	.word	0x372b2c2c
 8000338:	37373737 	.word	0x37373737
 800033c:	3737      	.short	0x3737
 800033e:	37          	.byte	0x37
 800033f:	00          	.byte	0x00
 8000340:	68e4      	ldr	r4, [r4, #12]
 8000342:	2c00      	cmp	r4, #0
 8000344:	d1ce      	bne.n	80002e4 <d_count_templates_scopes+0xc>
 8000346:	bd70      	pop	{r4, r5, r6, pc}
 8000348:	68a4      	ldr	r4, [r4, #8]
 800034a:	2c00      	cmp	r4, #0
 800034c:	d1ca      	bne.n	80002e4 <d_count_templates_scopes+0xc>
 800034e:	e7fa      	b.n	8000346 <d_count_templates_scopes+0x6e>
 8000350:	68a2      	ldr	r2, [r4, #8]
 8000352:	7813      	ldrb	r3, [r2, #0]
 8000354:	2b05      	cmp	r3, #5
 8000356:	d103      	bne.n	8000360 <d_count_templates_scopes+0x88>
 8000358:	6833      	ldr	r3, [r6, #0]
 800035a:	3301      	adds	r3, #1
 800035c:	6033      	str	r3, [r6, #0]
 800035e:	68a2      	ldr	r2, [r4, #8]
 8000360:	4631      	mov	r1, r6
 8000362:	4628      	mov	r0, r5
 8000364:	f7ff ffb8 	bl	80002d8 <d_count_templates_scopes>
 8000368:	68e4      	ldr	r4, [r4, #12]
 800036a:	2c00      	cmp	r4, #0
 800036c:	d1ba      	bne.n	80002e4 <d_count_templates_scopes+0xc>
 800036e:	e7ea      	b.n	8000346 <d_count_templates_scopes+0x6e>
 8000370:	682b      	ldr	r3, [r5, #0]
 8000372:	3301      	adds	r3, #1
 8000374:	602b      	str	r3, [r5, #0]
 8000376:	68a2      	ldr	r2, [r4, #8]
 8000378:	e7f2      	b.n	8000360 <d_count_templates_scopes+0x88>
 800037a:	4770      	bx	lr

0800037c <d_append_buffer>:
 800037c:	b39a      	cbz	r2, 80003e6 <d_append_buffer+0x6a>
 800037e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000382:	188e      	adds	r6, r1, r2
 8000384:	4604      	mov	r4, r0
 8000386:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800038a:	3e01      	subs	r6, #1
 800038c:	1e4d      	subs	r5, r1, #1
 800038e:	2700      	movs	r7, #0
 8000390:	e016      	b.n	80003c0 <d_append_buffer+0x44>
 8000392:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000396:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800039a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800039e:	4798      	blx	r3
 80003a0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80003a4:	2200      	movs	r2, #0
 80003a6:	3301      	adds	r3, #1
 80003a8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80003ac:	42b5      	cmp	r5, r6
 80003ae:	f04f 0301 	mov.w	r3, #1
 80003b2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80003b6:	f804 8002 	strb.w	r8, [r4, r2]
 80003ba:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80003be:	d010      	beq.n	80003e2 <d_append_buffer+0x66>
 80003c0:	2bff      	cmp	r3, #255	; 0xff
 80003c2:	4619      	mov	r1, r3
 80003c4:	4620      	mov	r0, r4
 80003c6:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 80003ca:	d0e2      	beq.n	8000392 <d_append_buffer+0x16>
 80003cc:	461a      	mov	r2, r3
 80003ce:	42b5      	cmp	r5, r6
 80003d0:	f103 0301 	add.w	r3, r3, #1
 80003d4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80003d8:	f804 8002 	strb.w	r8, [r4, r2]
 80003dc:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80003e0:	d1ee      	bne.n	80003c0 <d_append_buffer+0x44>
 80003e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80003e6:	4770      	bx	lr

080003e8 <is_fnqual_component_type>:
 80003e8:	f1a0 031c 	sub.w	r3, r0, #28
 80003ec:	2b04      	cmp	r3, #4
 80003ee:	d907      	bls.n	8000400 <is_fnqual_component_type+0x18>
 80003f0:	284c      	cmp	r0, #76	; 0x4c
 80003f2:	d005      	beq.n	8000400 <is_fnqual_component_type+0x18>
 80003f4:	384e      	subs	r0, #78	; 0x4e
 80003f6:	2801      	cmp	r0, #1
 80003f8:	bf8c      	ite	hi
 80003fa:	2000      	movhi	r0, #0
 80003fc:	2001      	movls	r0, #1
 80003fe:	4770      	bx	lr
 8000400:	2001      	movs	r0, #1
 8000402:	4770      	bx	lr

08000404 <d_number.isra.1>:
 8000404:	b470      	push	{r4, r5, r6}
 8000406:	6802      	ldr	r2, [r0, #0]
 8000408:	7811      	ldrb	r1, [r2, #0]
 800040a:	296e      	cmp	r1, #110	; 0x6e
 800040c:	d018      	beq.n	8000440 <d_number.isra.1+0x3c>
 800040e:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8000412:	2b09      	cmp	r3, #9
 8000414:	d81e      	bhi.n	8000454 <d_number.isra.1+0x50>
 8000416:	2600      	movs	r6, #0
 8000418:	2300      	movs	r3, #0
 800041a:	3201      	adds	r2, #1
 800041c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8000420:	6002      	str	r2, [r0, #0]
 8000422:	eb01 0443 	add.w	r4, r1, r3, lsl #1
 8000426:	7811      	ldrb	r1, [r2, #0]
 8000428:	f1a1 0530 	sub.w	r5, r1, #48	; 0x30
 800042c:	2d09      	cmp	r5, #9
 800042e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8000432:	d9f2      	bls.n	800041a <d_number.isra.1+0x16>
 8000434:	b10e      	cbz	r6, 800043a <d_number.isra.1+0x36>
 8000436:	f1c4 0330 	rsb	r3, r4, #48	; 0x30
 800043a:	4618      	mov	r0, r3
 800043c:	bc70      	pop	{r4, r5, r6}
 800043e:	4770      	bx	lr
 8000440:	1c53      	adds	r3, r2, #1
 8000442:	6003      	str	r3, [r0, #0]
 8000444:	7851      	ldrb	r1, [r2, #1]
 8000446:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 800044a:	2a09      	cmp	r2, #9
 800044c:	d802      	bhi.n	8000454 <d_number.isra.1+0x50>
 800044e:	461a      	mov	r2, r3
 8000450:	2601      	movs	r6, #1
 8000452:	e7e1      	b.n	8000418 <d_number.isra.1+0x14>
 8000454:	2300      	movs	r3, #0
 8000456:	4618      	mov	r0, r3
 8000458:	bc70      	pop	{r4, r5, r6}
 800045a:	4770      	bx	lr

0800045c <d_number_component>:
 800045c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8000460:	4293      	cmp	r3, r2
 8000462:	b570      	push	{r4, r5, r6, lr}
 8000464:	da0e      	bge.n	8000484 <d_number_component+0x28>
 8000466:	6901      	ldr	r1, [r0, #16]
 8000468:	011a      	lsls	r2, r3, #4
 800046a:	188c      	adds	r4, r1, r2
 800046c:	3301      	adds	r3, #1
 800046e:	2600      	movs	r6, #0
 8000470:	2541      	movs	r5, #65	; 0x41
 8000472:	6066      	str	r6, [r4, #4]
 8000474:	300c      	adds	r0, #12
 8000476:	6083      	str	r3, [r0, #8]
 8000478:	548d      	strb	r5, [r1, r2]
 800047a:	f7ff ffc3 	bl	8000404 <d_number.isra.1>
 800047e:	60a0      	str	r0, [r4, #8]
 8000480:	4620      	mov	r0, r4
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	2400      	movs	r4, #0
 8000486:	4620      	mov	r0, r4
 8000488:	bd70      	pop	{r4, r5, r6, pc}
 800048a:	bf00      	nop

0800048c <d_compact_number>:
 800048c:	b510      	push	{r4, lr}
 800048e:	68c3      	ldr	r3, [r0, #12]
 8000490:	781a      	ldrb	r2, [r3, #0]
 8000492:	2a5f      	cmp	r2, #95	; 0x5f
 8000494:	4604      	mov	r4, r0
 8000496:	d00d      	beq.n	80004b4 <d_compact_number+0x28>
 8000498:	2a6e      	cmp	r2, #110	; 0x6e
 800049a:	d00d      	beq.n	80004b8 <d_compact_number+0x2c>
 800049c:	300c      	adds	r0, #12
 800049e:	f7ff ffb1 	bl	8000404 <d_number.isra.1>
 80004a2:	3001      	adds	r0, #1
 80004a4:	d408      	bmi.n	80004b8 <d_compact_number+0x2c>
 80004a6:	68e3      	ldr	r3, [r4, #12]
 80004a8:	781a      	ldrb	r2, [r3, #0]
 80004aa:	2a5f      	cmp	r2, #95	; 0x5f
 80004ac:	d104      	bne.n	80004b8 <d_compact_number+0x2c>
 80004ae:	3301      	adds	r3, #1
 80004b0:	60e3      	str	r3, [r4, #12]
 80004b2:	bd10      	pop	{r4, pc}
 80004b4:	2000      	movs	r0, #0
 80004b6:	e7fa      	b.n	80004ae <d_compact_number+0x22>
 80004b8:	f04f 30ff 	mov.w	r0, #4294967295
 80004bc:	bd10      	pop	{r4, pc}
 80004be:	bf00      	nop

080004c0 <d_template_param>:
 80004c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c2:	68c3      	ldr	r3, [r0, #12]
 80004c4:	781a      	ldrb	r2, [r3, #0]
 80004c6:	2a54      	cmp	r2, #84	; 0x54
 80004c8:	d119      	bne.n	80004fe <d_template_param+0x3e>
 80004ca:	3301      	adds	r3, #1
 80004cc:	60c3      	str	r3, [r0, #12]
 80004ce:	4604      	mov	r4, r0
 80004d0:	f7ff ffdc 	bl	800048c <d_compact_number>
 80004d4:	1e05      	subs	r5, r0, #0
 80004d6:	db12      	blt.n	80004fe <d_template_param+0x3e>
 80004d8:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80004dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80004de:	428b      	cmp	r3, r1
 80004e0:	f102 0201 	add.w	r2, r2, #1
 80004e4:	62a2      	str	r2, [r4, #40]	; 0x28
 80004e6:	da0a      	bge.n	80004fe <d_template_param+0x3e>
 80004e8:	6921      	ldr	r1, [r4, #16]
 80004ea:	011a      	lsls	r2, r3, #4
 80004ec:	1888      	adds	r0, r1, r2
 80004ee:	3301      	adds	r3, #1
 80004f0:	2700      	movs	r7, #0
 80004f2:	2605      	movs	r6, #5
 80004f4:	6047      	str	r7, [r0, #4]
 80004f6:	6163      	str	r3, [r4, #20]
 80004f8:	548e      	strb	r6, [r1, r2]
 80004fa:	6085      	str	r5, [r0, #8]
 80004fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004fe:	2000      	movs	r0, #0
 8000500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000502:	bf00      	nop

08000504 <d_source_name>:
 8000504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000508:	4604      	mov	r4, r0
 800050a:	300c      	adds	r0, #12
 800050c:	f7ff ff7a 	bl	8000404 <d_number.isra.1>
 8000510:	1e07      	subs	r7, r0, #0
 8000512:	dd49      	ble.n	80005a8 <d_source_name+0xa4>
 8000514:	68e5      	ldr	r5, [r4, #12]
 8000516:	6863      	ldr	r3, [r4, #4]
 8000518:	1b5b      	subs	r3, r3, r5
 800051a:	429f      	cmp	r7, r3
 800051c:	dc42      	bgt.n	80005a4 <d_source_name+0xa0>
 800051e:	68a2      	ldr	r2, [r4, #8]
 8000520:	19eb      	adds	r3, r5, r7
 8000522:	0752      	lsls	r2, r2, #29
 8000524:	60e3      	str	r3, [r4, #12]
 8000526:	d504      	bpl.n	8000532 <d_source_name+0x2e>
 8000528:	5dea      	ldrb	r2, [r5, r7]
 800052a:	2a24      	cmp	r2, #36	; 0x24
 800052c:	bf04      	itt	eq
 800052e:	3301      	addeq	r3, #1
 8000530:	60e3      	streq	r3, [r4, #12]
 8000532:	2f09      	cmp	r7, #9
 8000534:	e9d4 6805 	ldrd	r6, r8, [r4, #20]
 8000538:	dc10      	bgt.n	800055c <d_source_name+0x58>
 800053a:	45b0      	cmp	r8, r6
 800053c:	dd32      	ble.n	80005a4 <d_source_name+0xa0>
 800053e:	6921      	ldr	r1, [r4, #16]
 8000540:	0132      	lsls	r2, r6, #4
 8000542:	1888      	adds	r0, r1, r2
 8000544:	3601      	adds	r6, #1
 8000546:	2300      	movs	r3, #0
 8000548:	6043      	str	r3, [r0, #4]
 800054a:	6166      	str	r6, [r4, #20]
 800054c:	b355      	cbz	r5, 80005a4 <d_source_name+0xa0>
 800054e:	6043      	str	r3, [r0, #4]
 8000550:	548b      	strb	r3, [r1, r2]
 8000552:	e9c0 5702 	strd	r5, r7, [r0, #8]
 8000556:	62e0      	str	r0, [r4, #44]	; 0x2c
 8000558:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800055c:	2208      	movs	r2, #8
 800055e:	4914      	ldr	r1, [pc, #80]	; (80005b0 <d_source_name+0xac>)
 8000560:	4628      	mov	r0, r5
 8000562:	f00d fcf5 	bl	800df50 <memcmp>
 8000566:	2800      	cmp	r0, #0
 8000568:	d1e7      	bne.n	800053a <d_source_name+0x36>
 800056a:	7a2b      	ldrb	r3, [r5, #8]
 800056c:	2b2e      	cmp	r3, #46	; 0x2e
 800056e:	d003      	beq.n	8000578 <d_source_name+0x74>
 8000570:	2b5f      	cmp	r3, #95	; 0x5f
 8000572:	d001      	beq.n	8000578 <d_source_name+0x74>
 8000574:	2b24      	cmp	r3, #36	; 0x24
 8000576:	d1e0      	bne.n	800053a <d_source_name+0x36>
 8000578:	7a6b      	ldrb	r3, [r5, #9]
 800057a:	2b4e      	cmp	r3, #78	; 0x4e
 800057c:	d1dd      	bne.n	800053a <d_source_name+0x36>
 800057e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000580:	3316      	adds	r3, #22
 8000582:	1bdf      	subs	r7, r3, r7
 8000584:	45b0      	cmp	r8, r6
 8000586:	6327      	str	r7, [r4, #48]	; 0x30
 8000588:	dd0c      	ble.n	80005a4 <d_source_name+0xa0>
 800058a:	6922      	ldr	r2, [r4, #16]
 800058c:	4d09      	ldr	r5, [pc, #36]	; (80005b4 <d_source_name+0xb0>)
 800058e:	0133      	lsls	r3, r6, #4
 8000590:	18d0      	adds	r0, r2, r3
 8000592:	2100      	movs	r1, #0
 8000594:	3601      	adds	r6, #1
 8000596:	6166      	str	r6, [r4, #20]
 8000598:	6041      	str	r1, [r0, #4]
 800059a:	54d1      	strb	r1, [r2, r3]
 800059c:	2315      	movs	r3, #21
 800059e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80005a2:	e7d8      	b.n	8000556 <d_source_name+0x52>
 80005a4:	2000      	movs	r0, #0
 80005a6:	e7d6      	b.n	8000556 <d_source_name+0x52>
 80005a8:	2000      	movs	r0, #0
 80005aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80005ae:	bf00      	nop
 80005b0:	0801ed24 	.word	0x0801ed24
 80005b4:	0801ed30 	.word	0x0801ed30

080005b8 <d_abi_tags>:
 80005b8:	b570      	push	{r4, r5, r6, lr}
 80005ba:	68c3      	ldr	r3, [r0, #12]
 80005bc:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 80005be:	781a      	ldrb	r2, [r3, #0]
 80005c0:	2a42      	cmp	r2, #66	; 0x42
 80005c2:	4604      	mov	r4, r0
 80005c4:	460d      	mov	r5, r1
 80005c6:	d10f      	bne.n	80005e8 <d_abi_tags+0x30>
 80005c8:	3301      	adds	r3, #1
 80005ca:	60e3      	str	r3, [r4, #12]
 80005cc:	4620      	mov	r0, r4
 80005ce:	f7ff ff99 	bl	8000504 <d_source_name>
 80005d2:	462a      	mov	r2, r5
 80005d4:	4603      	mov	r3, r0
 80005d6:	214b      	movs	r1, #75	; 0x4b
 80005d8:	4620      	mov	r0, r4
 80005da:	f7ff fe19 	bl	8000210 <d_make_comp>
 80005de:	68e3      	ldr	r3, [r4, #12]
 80005e0:	781a      	ldrb	r2, [r3, #0]
 80005e2:	2a42      	cmp	r2, #66	; 0x42
 80005e4:	4605      	mov	r5, r0
 80005e6:	d0ef      	beq.n	80005c8 <d_abi_tags+0x10>
 80005e8:	62e6      	str	r6, [r4, #44]	; 0x2c
 80005ea:	4628      	mov	r0, r5
 80005ec:	bd70      	pop	{r4, r5, r6, pc}
 80005ee:	bf00      	nop

080005f0 <d_substitution>:
 80005f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005f4:	4605      	mov	r5, r0
 80005f6:	68c0      	ldr	r0, [r0, #12]
 80005f8:	7803      	ldrb	r3, [r0, #0]
 80005fa:	2b53      	cmp	r3, #83	; 0x53
 80005fc:	d131      	bne.n	8000662 <d_substitution+0x72>
 80005fe:	1c43      	adds	r3, r0, #1
 8000600:	60eb      	str	r3, [r5, #12]
 8000602:	7842      	ldrb	r2, [r0, #1]
 8000604:	b3a2      	cbz	r2, 8000670 <d_substitution+0x80>
 8000606:	1c83      	adds	r3, r0, #2
 8000608:	60eb      	str	r3, [r5, #12]
 800060a:	7842      	ldrb	r2, [r0, #1]
 800060c:	2a5f      	cmp	r2, #95	; 0x5f
 800060e:	f000 8089 	beq.w	8000724 <d_substitution+0x134>
 8000612:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8000616:	b2e3      	uxtb	r3, r4
 8000618:	2b09      	cmp	r3, #9
 800061a:	d825      	bhi.n	8000668 <d_substitution+0x78>
 800061c:	2100      	movs	r1, #0
 800061e:	e00e      	b.n	800063e <d_substitution+0x4e>
 8000620:	3b30      	subs	r3, #48	; 0x30
 8000622:	4299      	cmp	r1, r3
 8000624:	d81d      	bhi.n	8000662 <d_substitution+0x72>
 8000626:	68e9      	ldr	r1, [r5, #12]
 8000628:	780a      	ldrb	r2, [r1, #0]
 800062a:	1c48      	adds	r0, r1, #1
 800062c:	b122      	cbz	r2, 8000638 <d_substitution+0x48>
 800062e:	60e8      	str	r0, [r5, #12]
 8000630:	780a      	ldrb	r2, [r1, #0]
 8000632:	2a5f      	cmp	r2, #95	; 0x5f
 8000634:	f000 8082 	beq.w	800073c <d_substitution+0x14c>
 8000638:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 800063c:	4619      	mov	r1, r3
 800063e:	b2e4      	uxtb	r4, r4
 8000640:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000644:	2c09      	cmp	r4, #9
 8000646:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
 800064a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800064e:	d9e7      	bls.n	8000620 <d_substitution+0x30>
 8000650:	2819      	cmp	r0, #25
 8000652:	d806      	bhi.n	8000662 <d_substitution+0x72>
 8000654:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000658:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800065c:	3b37      	subs	r3, #55	; 0x37
 800065e:	4299      	cmp	r1, r3
 8000660:	d9e1      	bls.n	8000626 <d_substitution+0x36>
 8000662:	2000      	movs	r0, #0
 8000664:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000668:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800066c:	2b19      	cmp	r3, #25
 800066e:	d9d5      	bls.n	800061c <d_substitution+0x2c>
 8000670:	68ab      	ldr	r3, [r5, #8]
 8000672:	f003 0308 	and.w	r3, r3, #8
 8000676:	2b00      	cmp	r3, #0
 8000678:	bf14      	ite	ne
 800067a:	2401      	movne	r4, #1
 800067c:	2400      	moveq	r4, #0
 800067e:	d101      	bne.n	8000684 <d_substitution+0x94>
 8000680:	2900      	cmp	r1, #0
 8000682:	d15d      	bne.n	8000740 <d_substitution+0x150>
 8000684:	4b35      	ldr	r3, [pc, #212]	; (800075c <d_substitution+0x16c>)
 8000686:	2174      	movs	r1, #116	; 0x74
 8000688:	4291      	cmp	r1, r2
 800068a:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800068e:	d005      	beq.n	800069c <d_substitution+0xac>
 8000690:	331c      	adds	r3, #28
 8000692:	4283      	cmp	r3, r0
 8000694:	d2e5      	bcs.n	8000662 <d_substitution+0x72>
 8000696:	7819      	ldrb	r1, [r3, #0]
 8000698:	4291      	cmp	r1, r2
 800069a:	d1f9      	bne.n	8000690 <d_substitution+0xa0>
 800069c:	6958      	ldr	r0, [r3, #20]
 800069e:	e9d5 2105 	ldrd	r2, r1, [r5, #20]
 80006a2:	b1a8      	cbz	r0, 80006d0 <d_substitution+0xe0>
 80006a4:	428a      	cmp	r2, r1
 80006a6:	da57      	bge.n	8000758 <d_substitution+0x168>
 80006a8:	f8d5 c010 	ldr.w	ip, [r5, #16]
 80006ac:	f8d3 e018 	ldr.w	lr, [r3, #24]
 80006b0:	0117      	lsls	r7, r2, #4
 80006b2:	eb0c 0607 	add.w	r6, ip, r7
 80006b6:	3201      	adds	r2, #1
 80006b8:	f04f 0900 	mov.w	r9, #0
 80006bc:	f04f 0818 	mov.w	r8, #24
 80006c0:	f8c6 9004 	str.w	r9, [r6, #4]
 80006c4:	616a      	str	r2, [r5, #20]
 80006c6:	f80c 8007 	strb.w	r8, [ip, r7]
 80006ca:	e9c6 0e02 	strd	r0, lr, [r6, #8]
 80006ce:	62ee      	str	r6, [r5, #44]	; 0x2c
 80006d0:	2c00      	cmp	r4, #0
 80006d2:	d13c      	bne.n	800074e <d_substitution+0x15e>
 80006d4:	e9d3 6401 	ldrd	r6, r4, [r3, #4]
 80006d8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80006da:	4291      	cmp	r1, r2
 80006dc:	4423      	add	r3, r4
 80006de:	632b      	str	r3, [r5, #48]	; 0x30
 80006e0:	dd38      	ble.n	8000754 <d_substitution+0x164>
 80006e2:	6929      	ldr	r1, [r5, #16]
 80006e4:	0113      	lsls	r3, r2, #4
 80006e6:	18c8      	adds	r0, r1, r3
 80006e8:	3201      	adds	r2, #1
 80006ea:	f04f 0c00 	mov.w	ip, #0
 80006ee:	2718      	movs	r7, #24
 80006f0:	f8c0 c004 	str.w	ip, [r0, #4]
 80006f4:	616a      	str	r2, [r5, #20]
 80006f6:	54cf      	strb	r7, [r1, r3]
 80006f8:	e9c0 6402 	strd	r6, r4, [r0, #8]
 80006fc:	68eb      	ldr	r3, [r5, #12]
 80006fe:	781b      	ldrb	r3, [r3, #0]
 8000700:	2b42      	cmp	r3, #66	; 0x42
 8000702:	d1af      	bne.n	8000664 <d_substitution+0x74>
 8000704:	4601      	mov	r1, r0
 8000706:	4628      	mov	r0, r5
 8000708:	f7ff ff56 	bl	80005b8 <d_abi_tags>
 800070c:	2800      	cmp	r0, #0
 800070e:	d0a8      	beq.n	8000662 <d_substitution+0x72>
 8000710:	e9d5 3208 	ldrd	r3, r2, [r5, #32]
 8000714:	4293      	cmp	r3, r2
 8000716:	daa5      	bge.n	8000664 <d_substitution+0x74>
 8000718:	69e9      	ldr	r1, [r5, #28]
 800071a:	1c5a      	adds	r2, r3, #1
 800071c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8000720:	622a      	str	r2, [r5, #32]
 8000722:	e79f      	b.n	8000664 <d_substitution+0x74>
 8000724:	2300      	movs	r3, #0
 8000726:	6a2a      	ldr	r2, [r5, #32]
 8000728:	429a      	cmp	r2, r3
 800072a:	d99a      	bls.n	8000662 <d_substitution+0x72>
 800072c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800072e:	69e9      	ldr	r1, [r5, #28]
 8000730:	3201      	adds	r2, #1
 8000732:	62aa      	str	r2, [r5, #40]	; 0x28
 8000734:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
 8000738:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800073c:	3301      	adds	r3, #1
 800073e:	e7f2      	b.n	8000726 <d_substitution+0x136>
 8000740:	68eb      	ldr	r3, [r5, #12]
 8000742:	781b      	ldrb	r3, [r3, #0]
 8000744:	3b43      	subs	r3, #67	; 0x43
 8000746:	2b01      	cmp	r3, #1
 8000748:	bf98      	it	ls
 800074a:	460c      	movls	r4, r1
 800074c:	e79a      	b.n	8000684 <d_substitution+0x94>
 800074e:	e9d3 6403 	ldrd	r6, r4, [r3, #12]
 8000752:	e7c1      	b.n	80006d8 <d_substitution+0xe8>
 8000754:	2000      	movs	r0, #0
 8000756:	e7d1      	b.n	80006fc <d_substitution+0x10c>
 8000758:	2600      	movs	r6, #0
 800075a:	e7b8      	b.n	80006ce <d_substitution+0xde>
 800075c:	080117c0 	.word	0x080117c0

08000760 <d_discriminator>:
 8000760:	68c3      	ldr	r3, [r0, #12]
 8000762:	781a      	ldrb	r2, [r3, #0]
 8000764:	2a5f      	cmp	r2, #95	; 0x5f
 8000766:	d001      	beq.n	800076c <d_discriminator+0xc>
 8000768:	2001      	movs	r0, #1
 800076a:	4770      	bx	lr
 800076c:	b510      	push	{r4, lr}
 800076e:	1c5a      	adds	r2, r3, #1
 8000770:	4604      	mov	r4, r0
 8000772:	f840 2f0c 	str.w	r2, [r0, #12]!
 8000776:	785a      	ldrb	r2, [r3, #1]
 8000778:	2a5f      	cmp	r2, #95	; 0x5f
 800077a:	d004      	beq.n	8000786 <d_discriminator+0x26>
 800077c:	f7ff fe42 	bl	8000404 <d_number.isra.1>
 8000780:	43c0      	mvns	r0, r0
 8000782:	0fc0      	lsrs	r0, r0, #31
 8000784:	bd10      	pop	{r4, pc}
 8000786:	3302      	adds	r3, #2
 8000788:	60e3      	str	r3, [r4, #12]
 800078a:	f7ff fe3b 	bl	8000404 <d_number.isra.1>
 800078e:	2800      	cmp	r0, #0
 8000790:	db05      	blt.n	800079e <d_discriminator+0x3e>
 8000792:	2809      	cmp	r0, #9
 8000794:	dd07      	ble.n	80007a6 <d_discriminator+0x46>
 8000796:	68e3      	ldr	r3, [r4, #12]
 8000798:	781a      	ldrb	r2, [r3, #0]
 800079a:	2a5f      	cmp	r2, #95	; 0x5f
 800079c:	d001      	beq.n	80007a2 <d_discriminator+0x42>
 800079e:	2000      	movs	r0, #0
 80007a0:	bd10      	pop	{r4, pc}
 80007a2:	3301      	adds	r3, #1
 80007a4:	60e3      	str	r3, [r4, #12]
 80007a6:	2001      	movs	r0, #1
 80007a8:	bd10      	pop	{r4, pc}
 80007aa:	bf00      	nop

080007ac <d_index_template_argument.part.9>:
 80007ac:	b170      	cbz	r0, 80007cc <d_index_template_argument.part.9+0x20>
 80007ae:	7803      	ldrb	r3, [r0, #0]
 80007b0:	2b2f      	cmp	r3, #47	; 0x2f
 80007b2:	d10f      	bne.n	80007d4 <d_index_template_argument.part.9+0x28>
 80007b4:	2900      	cmp	r1, #0
 80007b6:	dc04      	bgt.n	80007c2 <d_index_template_argument.part.9+0x16>
 80007b8:	e009      	b.n	80007ce <d_index_template_argument.part.9+0x22>
 80007ba:	7803      	ldrb	r3, [r0, #0]
 80007bc:	2b2f      	cmp	r3, #47	; 0x2f
 80007be:	d109      	bne.n	80007d4 <d_index_template_argument.part.9+0x28>
 80007c0:	b131      	cbz	r1, 80007d0 <d_index_template_argument.part.9+0x24>
 80007c2:	68c0      	ldr	r0, [r0, #12]
 80007c4:	3901      	subs	r1, #1
 80007c6:	2800      	cmp	r0, #0
 80007c8:	d1f7      	bne.n	80007ba <d_index_template_argument.part.9+0xe>
 80007ca:	4770      	bx	lr
 80007cc:	4770      	bx	lr
 80007ce:	d101      	bne.n	80007d4 <d_index_template_argument.part.9+0x28>
 80007d0:	6880      	ldr	r0, [r0, #8]
 80007d2:	4770      	bx	lr
 80007d4:	2000      	movs	r0, #0
 80007d6:	4770      	bx	lr

080007d8 <d_lookup_template_argument.isra.10>:
 80007d8:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 80007dc:	b133      	cbz	r3, 80007ec <d_lookup_template_argument.isra.10+0x14>
 80007de:	6809      	ldr	r1, [r1, #0]
 80007e0:	685b      	ldr	r3, [r3, #4]
 80007e2:	2900      	cmp	r1, #0
 80007e4:	68db      	ldr	r3, [r3, #12]
 80007e6:	db04      	blt.n	80007f2 <d_lookup_template_argument.isra.10+0x1a>
 80007e8:	4618      	mov	r0, r3
 80007ea:	e7df      	b.n	80007ac <d_index_template_argument.part.9>
 80007ec:	2201      	movs	r2, #1
 80007ee:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
 80007f2:	4618      	mov	r0, r3
 80007f4:	4770      	bx	lr
 80007f6:	bf00      	nop

080007f8 <d_find_pack>:
 80007f8:	2900      	cmp	r1, #0
 80007fa:	d042      	beq.n	8000882 <d_find_pack+0x8a>
 80007fc:	b538      	push	{r3, r4, r5, lr}
 80007fe:	4605      	mov	r5, r0
 8000800:	460c      	mov	r4, r1
 8000802:	7823      	ldrb	r3, [r4, #0]
 8000804:	2b4b      	cmp	r3, #75	; 0x4b
 8000806:	d827      	bhi.n	8000858 <d_find_pack+0x60>
 8000808:	e8df f003 	tbb	[pc, r3]
 800080c:	2626262e 	.word	0x2626262e
 8000810:	2b2e3026 	.word	0x2b2e3026
 8000814:	2626262b 	.word	0x2626262b
 8000818:	26262626 	.word	0x26262626
 800081c:	26262626 	.word	0x26262626
 8000820:	26262626 	.word	0x26262626
 8000824:	2626262e 	.word	0x2626262e
 8000828:	26262626 	.word	0x26262626
 800082c:	26262626 	.word	0x26262626
 8000830:	2e262626 	.word	0x2e262626
 8000834:	26262626 	.word	0x26262626
 8000838:	2626262e 	.word	0x2626262e
 800083c:	262b2e26 	.word	0x262b2e26
 8000840:	26262626 	.word	0x26262626
 8000844:	26262626 	.word	0x26262626
 8000848:	26262626 	.word	0x26262626
 800084c:	26262e2e 	.word	0x26262e2e
 8000850:	2e2e2e26 	.word	0x2e2e2e26
 8000854:	2e2e2626 	.word	0x2e2e2626
 8000858:	68a1      	ldr	r1, [r4, #8]
 800085a:	4628      	mov	r0, r5
 800085c:	f7ff ffcc 	bl	80007f8 <d_find_pack>
 8000860:	b918      	cbnz	r0, 800086a <d_find_pack+0x72>
 8000862:	68e4      	ldr	r4, [r4, #12]
 8000864:	2c00      	cmp	r4, #0
 8000866:	d1cc      	bne.n	8000802 <d_find_pack+0xa>
 8000868:	2000      	movs	r0, #0
 800086a:	bd38      	pop	{r3, r4, r5, pc}
 800086c:	f104 0108 	add.w	r1, r4, #8
 8000870:	4628      	mov	r0, r5
 8000872:	f7ff ffb1 	bl	80007d8 <d_lookup_template_argument.isra.10>
 8000876:	2800      	cmp	r0, #0
 8000878:	d0f6      	beq.n	8000868 <d_find_pack+0x70>
 800087a:	7803      	ldrb	r3, [r0, #0]
 800087c:	2b2f      	cmp	r3, #47	; 0x2f
 800087e:	d1f3      	bne.n	8000868 <d_find_pack+0x70>
 8000880:	bd38      	pop	{r3, r4, r5, pc}
 8000882:	2000      	movs	r0, #0
 8000884:	4770      	bx	lr
 8000886:	bf00      	nop

08000888 <d_growable_string_callback_adapter>:
 8000888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800088c:	4614      	mov	r4, r2
 800088e:	e9d4 5702 	ldrd	r5, r7, [r4, #8]
 8000892:	6852      	ldr	r2, [r2, #4]
 8000894:	1c4b      	adds	r3, r1, #1
 8000896:	4413      	add	r3, r2
 8000898:	42ab      	cmp	r3, r5
 800089a:	b082      	sub	sp, #8
 800089c:	460e      	mov	r6, r1
 800089e:	4680      	mov	r8, r0
 80008a0:	d814      	bhi.n	80008cc <d_growable_string_callback_adapter+0x44>
 80008a2:	b117      	cbz	r7, 80008aa <d_growable_string_callback_adapter+0x22>
 80008a4:	b002      	add	sp, #8
 80008a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008aa:	e9d4 0300 	ldrd	r0, r3, [r4]
 80008ae:	4632      	mov	r2, r6
 80008b0:	4641      	mov	r1, r8
 80008b2:	4418      	add	r0, r3
 80008b4:	f00d fb5b 	bl	800df6e <memcpy>
 80008b8:	e9d4 3200 	ldrd	r3, r2, [r4]
 80008bc:	4433      	add	r3, r6
 80008be:	549f      	strb	r7, [r3, r2]
 80008c0:	6863      	ldr	r3, [r4, #4]
 80008c2:	441e      	add	r6, r3
 80008c4:	6066      	str	r6, [r4, #4]
 80008c6:	b002      	add	sp, #8
 80008c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008cc:	2f00      	cmp	r7, #0
 80008ce:	d1e9      	bne.n	80008a4 <d_growable_string_callback_adapter+0x1c>
 80008d0:	b91d      	cbnz	r5, 80008da <d_growable_string_callback_adapter+0x52>
 80008d2:	2b02      	cmp	r3, #2
 80008d4:	f04f 0502 	mov.w	r5, #2
 80008d8:	d902      	bls.n	80008e0 <d_growable_string_callback_adapter+0x58>
 80008da:	006d      	lsls	r5, r5, #1
 80008dc:	42ab      	cmp	r3, r5
 80008de:	d8fc      	bhi.n	80008da <d_growable_string_callback_adapter+0x52>
 80008e0:	4629      	mov	r1, r5
 80008e2:	6820      	ldr	r0, [r4, #0]
 80008e4:	f00d fbfe 	bl	800e0e4 <realloc>
 80008e8:	b128      	cbz	r0, 80008f6 <d_growable_string_callback_adapter+0x6e>
 80008ea:	68e7      	ldr	r7, [r4, #12]
 80008ec:	6020      	str	r0, [r4, #0]
 80008ee:	60a5      	str	r5, [r4, #8]
 80008f0:	2f00      	cmp	r7, #0
 80008f2:	d1d7      	bne.n	80008a4 <d_growable_string_callback_adapter+0x1c>
 80008f4:	e7d9      	b.n	80008aa <d_growable_string_callback_adapter+0x22>
 80008f6:	9001      	str	r0, [sp, #4]
 80008f8:	6820      	ldr	r0, [r4, #0]
 80008fa:	f00d f8eb 	bl	800dad4 <free>
 80008fe:	9b01      	ldr	r3, [sp, #4]
 8000900:	2201      	movs	r2, #1
 8000902:	e9c4 3300 	strd	r3, r3, [r4]
 8000906:	e9c4 3202 	strd	r3, r2, [r4, #8]
 800090a:	e7cb      	b.n	80008a4 <d_growable_string_callback_adapter+0x1c>

0800090c <d_call_offset>:
 800090c:	b538      	push	{r3, r4, r5, lr}
 800090e:	4604      	mov	r4, r0
 8000910:	b929      	cbnz	r1, 800091e <d_call_offset+0x12>
 8000912:	68c3      	ldr	r3, [r0, #12]
 8000914:	781a      	ldrb	r2, [r3, #0]
 8000916:	b132      	cbz	r2, 8000926 <d_call_offset+0x1a>
 8000918:	1c5a      	adds	r2, r3, #1
 800091a:	60c2      	str	r2, [r0, #12]
 800091c:	7819      	ldrb	r1, [r3, #0]
 800091e:	2968      	cmp	r1, #104	; 0x68
 8000920:	d012      	beq.n	8000948 <d_call_offset+0x3c>
 8000922:	2976      	cmp	r1, #118	; 0x76
 8000924:	d001      	beq.n	800092a <d_call_offset+0x1e>
 8000926:	2000      	movs	r0, #0
 8000928:	bd38      	pop	{r3, r4, r5, pc}
 800092a:	f104 050c 	add.w	r5, r4, #12
 800092e:	4628      	mov	r0, r5
 8000930:	f7ff fd68 	bl	8000404 <d_number.isra.1>
 8000934:	68e3      	ldr	r3, [r4, #12]
 8000936:	781a      	ldrb	r2, [r3, #0]
 8000938:	2a5f      	cmp	r2, #95	; 0x5f
 800093a:	d1f4      	bne.n	8000926 <d_call_offset+0x1a>
 800093c:	3301      	adds	r3, #1
 800093e:	60e3      	str	r3, [r4, #12]
 8000940:	4628      	mov	r0, r5
 8000942:	f7ff fd5f 	bl	8000404 <d_number.isra.1>
 8000946:	e003      	b.n	8000950 <d_call_offset+0x44>
 8000948:	f104 000c 	add.w	r0, r4, #12
 800094c:	f7ff fd5a 	bl	8000404 <d_number.isra.1>
 8000950:	68e3      	ldr	r3, [r4, #12]
 8000952:	781a      	ldrb	r2, [r3, #0]
 8000954:	2a5f      	cmp	r2, #95	; 0x5f
 8000956:	d1e6      	bne.n	8000926 <d_call_offset+0x1a>
 8000958:	3301      	adds	r3, #1
 800095a:	60e3      	str	r3, [r4, #12]
 800095c:	2001      	movs	r0, #1
 800095e:	bd38      	pop	{r3, r4, r5, pc}

08000960 <d_append_num>:
 8000960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000964:	b088      	sub	sp, #32
 8000966:	460a      	mov	r2, r1
 8000968:	4604      	mov	r4, r0
 800096a:	491c      	ldr	r1, [pc, #112]	; (80009dc <d_append_num+0x7c>)
 800096c:	a801      	add	r0, sp, #4
 800096e:	f00d fdbf 	bl	800e4f0 <sprintf>
 8000972:	a801      	add	r0, sp, #4
 8000974:	f006 fa16 	bl	8006da4 <strlen>
 8000978:	b368      	cbz	r0, 80009d6 <d_append_num+0x76>
 800097a:	ad01      	add	r5, sp, #4
 800097c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8000980:	182e      	adds	r6, r5, r0
 8000982:	2700      	movs	r7, #0
 8000984:	e016      	b.n	80009b4 <d_append_num+0x54>
 8000986:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800098a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800098e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8000992:	4798      	blx	r3
 8000994:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8000998:	2200      	movs	r2, #0
 800099a:	3301      	adds	r3, #1
 800099c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80009a0:	42ae      	cmp	r6, r5
 80009a2:	f04f 0301 	mov.w	r3, #1
 80009a6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80009aa:	f804 8002 	strb.w	r8, [r4, r2]
 80009ae:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80009b2:	d010      	beq.n	80009d6 <d_append_num+0x76>
 80009b4:	2bff      	cmp	r3, #255	; 0xff
 80009b6:	4619      	mov	r1, r3
 80009b8:	4620      	mov	r0, r4
 80009ba:	f815 8b01 	ldrb.w	r8, [r5], #1
 80009be:	d0e2      	beq.n	8000986 <d_append_num+0x26>
 80009c0:	461a      	mov	r2, r3
 80009c2:	42ae      	cmp	r6, r5
 80009c4:	f103 0301 	add.w	r3, r3, #1
 80009c8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80009cc:	f804 8002 	strb.w	r8, [r4, r2]
 80009d0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80009d4:	d1ee      	bne.n	80009b4 <d_append_num+0x54>
 80009d6:	b008      	add	sp, #32
 80009d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009dc:	0801ed48 	.word	0x0801ed48

080009e0 <d_exprlist>:
 80009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009e4:	68c3      	ldr	r3, [r0, #12]
 80009e6:	781d      	ldrb	r5, [r3, #0]
 80009e8:	b083      	sub	sp, #12
 80009ea:	2200      	movs	r2, #0
 80009ec:	428d      	cmp	r5, r1
 80009ee:	4604      	mov	r4, r0
 80009f0:	9201      	str	r2, [sp, #4]
 80009f2:	f000 8199 	beq.w	8000d28 <d_exprlist+0x348>
 80009f6:	f8df 94c0 	ldr.w	r9, [pc, #1216]	; 8000eb8 <d_exprlist+0x4d8>
 80009fa:	4688      	mov	r8, r1
 80009fc:	af01      	add	r7, sp, #4
 80009fe:	2501      	movs	r5, #1
 8000a00:	6b66      	ldr	r6, [r4, #52]	; 0x34
 8000a02:	6365      	str	r5, [r4, #52]	; 0x34
 8000a04:	781a      	ldrb	r2, [r3, #0]
 8000a06:	2a4c      	cmp	r2, #76	; 0x4c
 8000a08:	d05c      	beq.n	8000ac4 <d_exprlist+0xe4>
 8000a0a:	2a54      	cmp	r2, #84	; 0x54
 8000a0c:	d066      	beq.n	8000adc <d_exprlist+0xfc>
 8000a0e:	2a73      	cmp	r2, #115	; 0x73
 8000a10:	d045      	beq.n	8000a9e <d_exprlist+0xbe>
 8000a12:	2a66      	cmp	r2, #102	; 0x66
 8000a14:	d11c      	bne.n	8000a50 <d_exprlist+0x70>
 8000a16:	785a      	ldrb	r2, [r3, #1]
 8000a18:	2a70      	cmp	r2, #112	; 0x70
 8000a1a:	f000 8087 	beq.w	8000b2c <d_exprlist+0x14c>
 8000a1e:	4620      	mov	r0, r4
 8000a20:	f001 fa70 	bl	8001f04 <d_operator_name>
 8000a24:	4605      	mov	r5, r0
 8000a26:	2800      	cmp	r0, #0
 8000a28:	f000 818c 	beq.w	8000d44 <d_exprlist+0x364>
 8000a2c:	7803      	ldrb	r3, [r0, #0]
 8000a2e:	2b31      	cmp	r3, #49	; 0x31
 8000a30:	f000 8098 	beq.w	8000b64 <d_exprlist+0x184>
 8000a34:	2b32      	cmp	r3, #50	; 0x32
 8000a36:	d056      	beq.n	8000ae6 <d_exprlist+0x106>
 8000a38:	2b33      	cmp	r3, #51	; 0x33
 8000a3a:	d171      	bne.n	8000b20 <d_exprlist+0x140>
 8000a3c:	68e3      	ldr	r3, [r4, #12]
 8000a3e:	781a      	ldrb	r2, [r3, #0]
 8000a40:	2a5f      	cmp	r2, #95	; 0x5f
 8000a42:	f000 81da 	beq.w	8000dfa <d_exprlist+0x41a>
 8000a46:	4620      	mov	r0, r4
 8000a48:	f000 fa38 	bl	8000ebc <d_expression_1>
 8000a4c:	4603      	mov	r3, r0
 8000a4e:	e0c1      	b.n	8000bd4 <d_exprlist+0x1f4>
 8000a50:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8000a54:	2909      	cmp	r1, #9
 8000a56:	f200 80e7 	bhi.w	8000c28 <d_exprlist+0x248>
 8000a5a:	4620      	mov	r0, r4
 8000a5c:	f001 fbfe 	bl	800225c <d_unqualified_name>
 8000a60:	4605      	mov	r5, r0
 8000a62:	2800      	cmp	r0, #0
 8000a64:	f000 816e 	beq.w	8000d44 <d_exprlist+0x364>
 8000a68:	68e3      	ldr	r3, [r4, #12]
 8000a6a:	781a      	ldrb	r2, [r3, #0]
 8000a6c:	2a49      	cmp	r2, #73	; 0x49
 8000a6e:	f000 80b8 	beq.w	8000be2 <d_exprlist+0x202>
 8000a72:	6366      	str	r6, [r4, #52]	; 0x34
 8000a74:	462a      	mov	r2, r5
 8000a76:	2300      	movs	r3, #0
 8000a78:	212e      	movs	r1, #46	; 0x2e
 8000a7a:	4620      	mov	r0, r4
 8000a7c:	f7ff fbc8 	bl	8000210 <d_make_comp>
 8000a80:	6038      	str	r0, [r7, #0]
 8000a82:	b330      	cbz	r0, 8000ad2 <d_exprlist+0xf2>
 8000a84:	68e3      	ldr	r3, [r4, #12]
 8000a86:	781a      	ldrb	r2, [r3, #0]
 8000a88:	4542      	cmp	r2, r8
 8000a8a:	f100 070c 	add.w	r7, r0, #12
 8000a8e:	d1b6      	bne.n	80009fe <d_exprlist+0x1e>
 8000a90:	3301      	adds	r3, #1
 8000a92:	9d01      	ldr	r5, [sp, #4]
 8000a94:	60e3      	str	r3, [r4, #12]
 8000a96:	4628      	mov	r0, r5
 8000a98:	b003      	add	sp, #12
 8000a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a9e:	785a      	ldrb	r2, [r3, #1]
 8000aa0:	2a72      	cmp	r2, #114	; 0x72
 8000aa2:	f000 80ab 	beq.w	8000bfc <d_exprlist+0x21c>
 8000aa6:	2a70      	cmp	r2, #112	; 0x70
 8000aa8:	d1b9      	bne.n	8000a1e <d_exprlist+0x3e>
 8000aaa:	3302      	adds	r3, #2
 8000aac:	60e3      	str	r3, [r4, #12]
 8000aae:	4620      	mov	r0, r4
 8000ab0:	f000 fa04 	bl	8000ebc <d_expression_1>
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	4602      	mov	r2, r0
 8000ab8:	214a      	movs	r1, #74	; 0x4a
 8000aba:	4620      	mov	r0, r4
 8000abc:	f7ff fba8 	bl	8000210 <d_make_comp>
 8000ac0:	4605      	mov	r5, r0
 8000ac2:	e003      	b.n	8000acc <d_exprlist+0xec>
 8000ac4:	4620      	mov	r0, r4
 8000ac6:	f002 f813 	bl	8002af0 <d_expr_primary>
 8000aca:	4605      	mov	r5, r0
 8000acc:	6366      	str	r6, [r4, #52]	; 0x34
 8000ace:	2d00      	cmp	r5, #0
 8000ad0:	d1d0      	bne.n	8000a74 <d_exprlist+0x94>
 8000ad2:	2500      	movs	r5, #0
 8000ad4:	4628      	mov	r0, r5
 8000ad6:	b003      	add	sp, #12
 8000ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000adc:	4620      	mov	r0, r4
 8000ade:	f7ff fcef 	bl	80004c0 <d_template_param>
 8000ae2:	4605      	mov	r5, r0
 8000ae4:	e7f2      	b.n	8000acc <d_exprlist+0xec>
 8000ae6:	6883      	ldr	r3, [r0, #8]
 8000ae8:	2b03      	cmp	r3, #3
 8000aea:	d819      	bhi.n	8000b20 <d_exprlist+0x140>
 8000aec:	a201      	add	r2, pc, #4	; (adr r2, 8000af4 <d_exprlist+0x114>)
 8000aee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000af2:	bf00      	nop
 8000af4:	08000c87 	.word	0x08000c87
 8000af8:	08000a47 	.word	0x08000a47
 8000afc:	08000b21 	.word	0x08000b21
 8000b00:	08000b21 	.word	0x08000b21
 8000b04:	2a74      	cmp	r2, #116	; 0x74
 8000b06:	d18a      	bne.n	8000a1e <d_exprlist+0x3e>
 8000b08:	785b      	ldrb	r3, [r3, #1]
 8000b0a:	2b6c      	cmp	r3, #108	; 0x6c
 8000b0c:	d187      	bne.n	8000a1e <d_exprlist+0x3e>
 8000b0e:	4620      	mov	r0, r4
 8000b10:	f000 fdfe 	bl	8001710 <d_type>
 8000b14:	68e3      	ldr	r3, [r4, #12]
 8000b16:	785a      	ldrb	r2, [r3, #1]
 8000b18:	4605      	mov	r5, r0
 8000b1a:	2a00      	cmp	r2, #0
 8000b1c:	f040 8123 	bne.w	8000d66 <d_exprlist+0x386>
 8000b20:	2500      	movs	r5, #0
 8000b22:	4628      	mov	r0, r5
 8000b24:	6366      	str	r6, [r4, #52]	; 0x34
 8000b26:	b003      	add	sp, #12
 8000b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b2c:	1c9a      	adds	r2, r3, #2
 8000b2e:	60e2      	str	r2, [r4, #12]
 8000b30:	789a      	ldrb	r2, [r3, #2]
 8000b32:	2a54      	cmp	r2, #84	; 0x54
 8000b34:	f040 8082 	bne.w	8000c3c <d_exprlist+0x25c>
 8000b38:	3303      	adds	r3, #3
 8000b3a:	60e3      	str	r3, [r4, #12]
 8000b3c:	2000      	movs	r0, #0
 8000b3e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000b42:	4293      	cmp	r3, r2
 8000b44:	daec      	bge.n	8000b20 <d_exprlist+0x140>
 8000b46:	6921      	ldr	r1, [r4, #16]
 8000b48:	011a      	lsls	r2, r3, #4
 8000b4a:	188d      	adds	r5, r1, r2
 8000b4c:	3301      	adds	r3, #1
 8000b4e:	f04f 0e00 	mov.w	lr, #0
 8000b52:	f04f 0c06 	mov.w	ip, #6
 8000b56:	f8c5 e004 	str.w	lr, [r5, #4]
 8000b5a:	6163      	str	r3, [r4, #20]
 8000b5c:	f801 c002 	strb.w	ip, [r1, r2]
 8000b60:	60a8      	str	r0, [r5, #8]
 8000b62:	e786      	b.n	8000a72 <d_exprlist+0x92>
 8000b64:	f8d0 b008 	ldr.w	fp, [r0, #8]
 8000b68:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000b6a:	f8db 2008 	ldr.w	r2, [fp, #8]
 8000b6e:	f8db a000 	ldr.w	sl, [fp]
 8000b72:	3a02      	subs	r2, #2
 8000b74:	4413      	add	r3, r2
 8000b76:	6323      	str	r3, [r4, #48]	; 0x30
 8000b78:	4650      	mov	r0, sl
 8000b7a:	4649      	mov	r1, r9
 8000b7c:	f006 f908 	bl	8006d90 <strcmp>
 8000b80:	2800      	cmp	r0, #0
 8000b82:	f000 80e4 	beq.w	8000d4e <d_exprlist+0x36e>
 8000b86:	f8db b00c 	ldr.w	fp, [fp, #12]
 8000b8a:	f1bb 0f03 	cmp.w	fp, #3
 8000b8e:	d8c7      	bhi.n	8000b20 <d_exprlist+0x140>
 8000b90:	e8df f01b 	tbh	[pc, fp, lsl #1]
 8000b94:	00040079 	.word	0x00040079
 8000b98:	008100f7 	.word	0x008100f7
 8000b9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000ba0:	2b70      	cmp	r3, #112	; 0x70
 8000ba2:	d065      	beq.n	8000c70 <d_exprlist+0x290>
 8000ba4:	2b6d      	cmp	r3, #109	; 0x6d
 8000ba6:	d063      	beq.n	8000c70 <d_exprlist+0x290>
 8000ba8:	f04f 0b00 	mov.w	fp, #0
 8000bac:	4650      	mov	r0, sl
 8000bae:	49bd      	ldr	r1, [pc, #756]	; (8000ea4 <d_exprlist+0x4c4>)
 8000bb0:	f006 f8ee 	bl	8006d90 <strcmp>
 8000bb4:	2800      	cmp	r0, #0
 8000bb6:	f040 80c0 	bne.w	8000d3a <d_exprlist+0x35a>
 8000bba:	4620      	mov	r0, r4
 8000bbc:	f000 fb90 	bl	80012e0 <d_template_args_1>
 8000bc0:	4603      	mov	r3, r0
 8000bc2:	f1bb 0f00 	cmp.w	fp, #0
 8000bc6:	d005      	beq.n	8000bd4 <d_exprlist+0x1f4>
 8000bc8:	461a      	mov	r2, r3
 8000bca:	2138      	movs	r1, #56	; 0x38
 8000bcc:	4620      	mov	r0, r4
 8000bce:	f7ff fb1f 	bl	8000210 <d_make_comp>
 8000bd2:	4603      	mov	r3, r0
 8000bd4:	462a      	mov	r2, r5
 8000bd6:	2136      	movs	r1, #54	; 0x36
 8000bd8:	4620      	mov	r0, r4
 8000bda:	f7ff fb19 	bl	8000210 <d_make_comp>
 8000bde:	4605      	mov	r5, r0
 8000be0:	e774      	b.n	8000acc <d_exprlist+0xec>
 8000be2:	3301      	adds	r3, #1
 8000be4:	60e3      	str	r3, [r4, #12]
 8000be6:	4620      	mov	r0, r4
 8000be8:	f000 fb7a 	bl	80012e0 <d_template_args_1>
 8000bec:	462a      	mov	r2, r5
 8000bee:	4603      	mov	r3, r0
 8000bf0:	2104      	movs	r1, #4
 8000bf2:	4620      	mov	r0, r4
 8000bf4:	f7ff fb0c 	bl	8000210 <d_make_comp>
 8000bf8:	4605      	mov	r5, r0
 8000bfa:	e767      	b.n	8000acc <d_exprlist+0xec>
 8000bfc:	3302      	adds	r3, #2
 8000bfe:	60e3      	str	r3, [r4, #12]
 8000c00:	4620      	mov	r0, r4
 8000c02:	f000 fd85 	bl	8001710 <d_type>
 8000c06:	4682      	mov	sl, r0
 8000c08:	4620      	mov	r0, r4
 8000c0a:	f001 fb27 	bl	800225c <d_unqualified_name>
 8000c0e:	68e3      	ldr	r3, [r4, #12]
 8000c10:	781a      	ldrb	r2, [r3, #0]
 8000c12:	2a49      	cmp	r2, #73	; 0x49
 8000c14:	4683      	mov	fp, r0
 8000c16:	d01e      	beq.n	8000c56 <d_exprlist+0x276>
 8000c18:	4603      	mov	r3, r0
 8000c1a:	4629      	mov	r1, r5
 8000c1c:	4652      	mov	r2, sl
 8000c1e:	4620      	mov	r0, r4
 8000c20:	f7ff faf6 	bl	8000210 <d_make_comp>
 8000c24:	4605      	mov	r5, r0
 8000c26:	e751      	b.n	8000acc <d_exprlist+0xec>
 8000c28:	2a6f      	cmp	r2, #111	; 0x6f
 8000c2a:	f040 8094 	bne.w	8000d56 <d_exprlist+0x376>
 8000c2e:	785a      	ldrb	r2, [r3, #1]
 8000c30:	2a6e      	cmp	r2, #110	; 0x6e
 8000c32:	f47f aef4 	bne.w	8000a1e <d_exprlist+0x3e>
 8000c36:	3302      	adds	r3, #2
 8000c38:	60e3      	str	r3, [r4, #12]
 8000c3a:	e70e      	b.n	8000a5a <d_exprlist+0x7a>
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	f7ff fc25 	bl	800048c <d_compact_number>
 8000c42:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8000c46:	4298      	cmp	r0, r3
 8000c48:	f43f af6a 	beq.w	8000b20 <d_exprlist+0x140>
 8000c4c:	1c43      	adds	r3, r0, #1
 8000c4e:	f43f af67 	beq.w	8000b20 <d_exprlist+0x140>
 8000c52:	3001      	adds	r0, #1
 8000c54:	e773      	b.n	8000b3e <d_exprlist+0x15e>
 8000c56:	3301      	adds	r3, #1
 8000c58:	60e3      	str	r3, [r4, #12]
 8000c5a:	4620      	mov	r0, r4
 8000c5c:	f000 fb40 	bl	80012e0 <d_template_args_1>
 8000c60:	465a      	mov	r2, fp
 8000c62:	4603      	mov	r3, r0
 8000c64:	2104      	movs	r1, #4
 8000c66:	4620      	mov	r0, r4
 8000c68:	f7ff fad2 	bl	8000210 <d_make_comp>
 8000c6c:	4603      	mov	r3, r0
 8000c6e:	e7d4      	b.n	8000c1a <d_exprlist+0x23a>
 8000c70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8000c74:	429a      	cmp	r2, r3
 8000c76:	d197      	bne.n	8000ba8 <d_exprlist+0x1c8>
 8000c78:	68e3      	ldr	r3, [r4, #12]
 8000c7a:	781a      	ldrb	r2, [r3, #0]
 8000c7c:	2a5f      	cmp	r2, #95	; 0x5f
 8000c7e:	d195      	bne.n	8000bac <d_exprlist+0x1cc>
 8000c80:	3301      	adds	r3, #1
 8000c82:	60e3      	str	r3, [r4, #12]
 8000c84:	e790      	b.n	8000ba8 <d_exprlist+0x1c8>
 8000c86:	462a      	mov	r2, r5
 8000c88:	2300      	movs	r3, #0
 8000c8a:	2135      	movs	r1, #53	; 0x35
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f7ff fabf 	bl	8000210 <d_make_comp>
 8000c92:	4605      	mov	r5, r0
 8000c94:	e71a      	b.n	8000acc <d_exprlist+0xec>
 8000c96:	f1ba 0f00 	cmp.w	sl, #0
 8000c9a:	f43f af41 	beq.w	8000b20 <d_exprlist+0x140>
 8000c9e:	4982      	ldr	r1, [pc, #520]	; (8000ea8 <d_exprlist+0x4c8>)
 8000ca0:	4650      	mov	r0, sl
 8000ca2:	f006 f875 	bl	8006d90 <strcmp>
 8000ca6:	2800      	cmp	r0, #0
 8000ca8:	f000 80c7 	beq.w	8000e3a <d_exprlist+0x45a>
 8000cac:	f89a 3000 	ldrb.w	r3, [sl]
 8000cb0:	2b66      	cmp	r3, #102	; 0x66
 8000cb2:	f000 80ed 	beq.w	8000e90 <d_exprlist+0x4b0>
 8000cb6:	2b6e      	cmp	r3, #110	; 0x6e
 8000cb8:	f47f af32 	bne.w	8000b20 <d_exprlist+0x140>
 8000cbc:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8000cc0:	2b77      	cmp	r3, #119	; 0x77
 8000cc2:	d002      	beq.n	8000cca <d_exprlist+0x2ea>
 8000cc4:	2b61      	cmp	r3, #97	; 0x61
 8000cc6:	f47f af2b 	bne.w	8000b20 <d_exprlist+0x140>
 8000cca:	215f      	movs	r1, #95	; 0x5f
 8000ccc:	4620      	mov	r0, r4
 8000cce:	f7ff fe87 	bl	80009e0 <d_exprlist>
 8000cd2:	4682      	mov	sl, r0
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f000 fd1b 	bl	8001710 <d_type>
 8000cda:	68e3      	ldr	r3, [r4, #12]
 8000cdc:	781a      	ldrb	r2, [r3, #0]
 8000cde:	2a45      	cmp	r2, #69	; 0x45
 8000ce0:	4683      	mov	fp, r0
 8000ce2:	f000 8086 	beq.w	8000df2 <d_exprlist+0x412>
 8000ce6:	2a70      	cmp	r2, #112	; 0x70
 8000ce8:	f000 80c6 	beq.w	8000e78 <d_exprlist+0x498>
 8000cec:	2a69      	cmp	r2, #105	; 0x69
 8000cee:	f47f af17 	bne.w	8000b20 <d_exprlist+0x140>
 8000cf2:	785b      	ldrb	r3, [r3, #1]
 8000cf4:	2b6c      	cmp	r3, #108	; 0x6c
 8000cf6:	f47f af13 	bne.w	8000b20 <d_exprlist+0x140>
 8000cfa:	4620      	mov	r0, r4
 8000cfc:	f000 f8de 	bl	8000ebc <d_expression_1>
 8000d00:	4603      	mov	r3, r0
 8000d02:	465a      	mov	r2, fp
 8000d04:	213b      	movs	r1, #59	; 0x3b
 8000d06:	4620      	mov	r0, r4
 8000d08:	f7ff fa82 	bl	8000210 <d_make_comp>
 8000d0c:	4652      	mov	r2, sl
 8000d0e:	4603      	mov	r3, r0
 8000d10:	213a      	movs	r1, #58	; 0x3a
 8000d12:	4620      	mov	r0, r4
 8000d14:	f7ff fa7c 	bl	8000210 <d_make_comp>
 8000d18:	462a      	mov	r2, r5
 8000d1a:	4603      	mov	r3, r0
 8000d1c:	2139      	movs	r1, #57	; 0x39
 8000d1e:	4620      	mov	r0, r4
 8000d20:	f7ff fa76 	bl	8000210 <d_make_comp>
 8000d24:	4605      	mov	r5, r0
 8000d26:	e6d1      	b.n	8000acc <d_exprlist+0xec>
 8000d28:	3301      	adds	r3, #1
 8000d2a:	60c3      	str	r3, [r0, #12]
 8000d2c:	212e      	movs	r1, #46	; 0x2e
 8000d2e:	4613      	mov	r3, r2
 8000d30:	b003      	add	sp, #12
 8000d32:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d36:	f7ff ba6b 	b.w	8000210 <d_make_comp>
 8000d3a:	4620      	mov	r0, r4
 8000d3c:	f000 f8be 	bl	8000ebc <d_expression_1>
 8000d40:	4603      	mov	r3, r0
 8000d42:	e73e      	b.n	8000bc2 <d_exprlist+0x1e2>
 8000d44:	4628      	mov	r0, r5
 8000d46:	6366      	str	r6, [r4, #52]	; 0x34
 8000d48:	b003      	add	sp, #12
 8000d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d4e:	4620      	mov	r0, r4
 8000d50:	f000 fcde 	bl	8001710 <d_type>
 8000d54:	e73d      	b.n	8000bd2 <d_exprlist+0x1f2>
 8000d56:	2a69      	cmp	r2, #105	; 0x69
 8000d58:	f47f aed4 	bne.w	8000b04 <d_exprlist+0x124>
 8000d5c:	785a      	ldrb	r2, [r3, #1]
 8000d5e:	2a6c      	cmp	r2, #108	; 0x6c
 8000d60:	f47f ae5d 	bne.w	8000a1e <d_exprlist+0x3e>
 8000d64:	2500      	movs	r5, #0
 8000d66:	3302      	adds	r3, #2
 8000d68:	60e3      	str	r3, [r4, #12]
 8000d6a:	2145      	movs	r1, #69	; 0x45
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	f7ff fe37 	bl	80009e0 <d_exprlist>
 8000d72:	462a      	mov	r2, r5
 8000d74:	4603      	mov	r3, r0
 8000d76:	2130      	movs	r1, #48	; 0x30
 8000d78:	4620      	mov	r0, r4
 8000d7a:	f7ff fa49 	bl	8000210 <d_make_comp>
 8000d7e:	4605      	mov	r5, r0
 8000d80:	e6a4      	b.n	8000acc <d_exprlist+0xec>
 8000d82:	f1ba 0f00 	cmp.w	sl, #0
 8000d86:	f43f aecb 	beq.w	8000b20 <d_exprlist+0x140>
 8000d8a:	68ab      	ldr	r3, [r5, #8]
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	785a      	ldrb	r2, [r3, #1]
 8000d90:	2a63      	cmp	r2, #99	; 0x63
 8000d92:	d03a      	beq.n	8000e0a <d_exprlist+0x42a>
 8000d94:	f89a 3000 	ldrb.w	r3, [sl]
 8000d98:	2b66      	cmp	r3, #102	; 0x66
 8000d9a:	d149      	bne.n	8000e30 <d_exprlist+0x450>
 8000d9c:	4620      	mov	r0, r4
 8000d9e:	f001 f8b1 	bl	8001f04 <d_operator_name>
 8000da2:	4683      	mov	fp, r0
 8000da4:	4941      	ldr	r1, [pc, #260]	; (8000eac <d_exprlist+0x4cc>)
 8000da6:	4650      	mov	r0, sl
 8000da8:	f005 fff2 	bl	8006d90 <strcmp>
 8000dac:	2800      	cmp	r0, #0
 8000dae:	d039      	beq.n	8000e24 <d_exprlist+0x444>
 8000db0:	493f      	ldr	r1, [pc, #252]	; (8000eb0 <d_exprlist+0x4d0>)
 8000db2:	4650      	mov	r0, sl
 8000db4:	f005 ffec 	bl	8006d90 <strcmp>
 8000db8:	b128      	cbz	r0, 8000dc6 <d_exprlist+0x3e6>
 8000dba:	4650      	mov	r0, sl
 8000dbc:	493d      	ldr	r1, [pc, #244]	; (8000eb4 <d_exprlist+0x4d4>)
 8000dbe:	f005 ffe7 	bl	8006d90 <strcmp>
 8000dc2:	2800      	cmp	r0, #0
 8000dc4:	d168      	bne.n	8000e98 <d_exprlist+0x4b8>
 8000dc6:	4620      	mov	r0, r4
 8000dc8:	f001 fa48 	bl	800225c <d_unqualified_name>
 8000dcc:	68e3      	ldr	r3, [r4, #12]
 8000dce:	781a      	ldrb	r2, [r3, #0]
 8000dd0:	2a49      	cmp	r2, #73	; 0x49
 8000dd2:	4682      	mov	sl, r0
 8000dd4:	d043      	beq.n	8000e5e <d_exprlist+0x47e>
 8000dd6:	4653      	mov	r3, sl
 8000dd8:	465a      	mov	r2, fp
 8000dda:	2138      	movs	r1, #56	; 0x38
 8000ddc:	4620      	mov	r0, r4
 8000dde:	f7ff fa17 	bl	8000210 <d_make_comp>
 8000de2:	462a      	mov	r2, r5
 8000de4:	4603      	mov	r3, r0
 8000de6:	2137      	movs	r1, #55	; 0x37
 8000de8:	4620      	mov	r0, r4
 8000dea:	f7ff fa11 	bl	8000210 <d_make_comp>
 8000dee:	4605      	mov	r5, r0
 8000df0:	e66c      	b.n	8000acc <d_exprlist+0xec>
 8000df2:	3301      	adds	r3, #1
 8000df4:	60e3      	str	r3, [r4, #12]
 8000df6:	2300      	movs	r3, #0
 8000df8:	e783      	b.n	8000d02 <d_exprlist+0x322>
 8000dfa:	3301      	adds	r3, #1
 8000dfc:	60e3      	str	r3, [r4, #12]
 8000dfe:	2145      	movs	r1, #69	; 0x45
 8000e00:	4620      	mov	r0, r4
 8000e02:	f7ff fded 	bl	80009e0 <d_exprlist>
 8000e06:	4603      	mov	r3, r0
 8000e08:	e6e4      	b.n	8000bd4 <d_exprlist+0x1f4>
 8000e0a:	781b      	ldrb	r3, [r3, #0]
 8000e0c:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8000e10:	2a01      	cmp	r2, #1
 8000e12:	d902      	bls.n	8000e1a <d_exprlist+0x43a>
 8000e14:	3b72      	subs	r3, #114	; 0x72
 8000e16:	2b01      	cmp	r3, #1
 8000e18:	d8bc      	bhi.n	8000d94 <d_exprlist+0x3b4>
 8000e1a:	4620      	mov	r0, r4
 8000e1c:	f000 fc78 	bl	8001710 <d_type>
 8000e20:	4683      	mov	fp, r0
 8000e22:	e7bf      	b.n	8000da4 <d_exprlist+0x3c4>
 8000e24:	2145      	movs	r1, #69	; 0x45
 8000e26:	4620      	mov	r0, r4
 8000e28:	f7ff fdda 	bl	80009e0 <d_exprlist>
 8000e2c:	4682      	mov	sl, r0
 8000e2e:	e7d2      	b.n	8000dd6 <d_exprlist+0x3f6>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f000 f843 	bl	8000ebc <d_expression_1>
 8000e36:	4683      	mov	fp, r0
 8000e38:	e7b4      	b.n	8000da4 <d_exprlist+0x3c4>
 8000e3a:	4620      	mov	r0, r4
 8000e3c:	f000 f83e 	bl	8000ebc <d_expression_1>
 8000e40:	4682      	mov	sl, r0
 8000e42:	4620      	mov	r0, r4
 8000e44:	f000 f83a 	bl	8000ebc <d_expression_1>
 8000e48:	4683      	mov	fp, r0
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	f000 f836 	bl	8000ebc <d_expression_1>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2800      	cmp	r0, #0
 8000e54:	f47f af55 	bne.w	8000d02 <d_exprlist+0x322>
 8000e58:	6366      	str	r6, [r4, #52]	; 0x34
 8000e5a:	4605      	mov	r5, r0
 8000e5c:	e61b      	b.n	8000a96 <d_exprlist+0xb6>
 8000e5e:	3301      	adds	r3, #1
 8000e60:	60e3      	str	r3, [r4, #12]
 8000e62:	4620      	mov	r0, r4
 8000e64:	f000 fa3c 	bl	80012e0 <d_template_args_1>
 8000e68:	4652      	mov	r2, sl
 8000e6a:	4603      	mov	r3, r0
 8000e6c:	2104      	movs	r1, #4
 8000e6e:	4620      	mov	r0, r4
 8000e70:	f7ff f9ce 	bl	8000210 <d_make_comp>
 8000e74:	4682      	mov	sl, r0
 8000e76:	e7ae      	b.n	8000dd6 <d_exprlist+0x3f6>
 8000e78:	785a      	ldrb	r2, [r3, #1]
 8000e7a:	2a69      	cmp	r2, #105	; 0x69
 8000e7c:	f47f ae50 	bne.w	8000b20 <d_exprlist+0x140>
 8000e80:	3302      	adds	r3, #2
 8000e82:	60e3      	str	r3, [r4, #12]
 8000e84:	2145      	movs	r1, #69	; 0x45
 8000e86:	4620      	mov	r0, r4
 8000e88:	f7ff fdaa 	bl	80009e0 <d_exprlist>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	e738      	b.n	8000d02 <d_exprlist+0x322>
 8000e90:	4620      	mov	r0, r4
 8000e92:	f001 f837 	bl	8001f04 <d_operator_name>
 8000e96:	e7d3      	b.n	8000e40 <d_exprlist+0x460>
 8000e98:	4620      	mov	r0, r4
 8000e9a:	f000 f80f 	bl	8000ebc <d_expression_1>
 8000e9e:	4682      	mov	sl, r0
 8000ea0:	e799      	b.n	8000dd6 <d_exprlist+0x3f6>
 8000ea2:	bf00      	nop
 8000ea4:	0801ed4c 	.word	0x0801ed4c
 8000ea8:	0801ed5c 	.word	0x0801ed5c
 8000eac:	0801ed50 	.word	0x0801ed50
 8000eb0:	0801ed54 	.word	0x0801ed54
 8000eb4:	0801ed58 	.word	0x0801ed58
 8000eb8:	0801f268 	.word	0x0801f268

08000ebc <d_expression_1>:
 8000ebc:	68c1      	ldr	r1, [r0, #12]
 8000ebe:	780b      	ldrb	r3, [r1, #0]
 8000ec0:	2b4c      	cmp	r3, #76	; 0x4c
 8000ec2:	d067      	beq.n	8000f94 <d_expression_1+0xd8>
 8000ec4:	2b54      	cmp	r3, #84	; 0x54
 8000ec6:	d067      	beq.n	8000f98 <d_expression_1+0xdc>
 8000ec8:	2b73      	cmp	r3, #115	; 0x73
 8000eca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ece:	4604      	mov	r4, r0
 8000ed0:	d01c      	beq.n	8000f0c <d_expression_1+0x50>
 8000ed2:	2b66      	cmp	r3, #102	; 0x66
 8000ed4:	d13d      	bne.n	8000f52 <d_expression_1+0x96>
 8000ed6:	784b      	ldrb	r3, [r1, #1]
 8000ed8:	2b70      	cmp	r3, #112	; 0x70
 8000eda:	d11d      	bne.n	8000f18 <d_expression_1+0x5c>
 8000edc:	1c8b      	adds	r3, r1, #2
 8000ede:	60c3      	str	r3, [r0, #12]
 8000ee0:	788b      	ldrb	r3, [r1, #2]
 8000ee2:	2b54      	cmp	r3, #84	; 0x54
 8000ee4:	f040 809a 	bne.w	800101c <d_expression_1+0x160>
 8000ee8:	3103      	adds	r1, #3
 8000eea:	60c1      	str	r1, [r0, #12]
 8000eec:	2000      	movs	r0, #0
 8000eee:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	da4a      	bge.n	8000f8c <d_expression_1+0xd0>
 8000ef6:	6921      	ldr	r1, [r4, #16]
 8000ef8:	011a      	lsls	r2, r3, #4
 8000efa:	188d      	adds	r5, r1, r2
 8000efc:	3301      	adds	r3, #1
 8000efe:	2700      	movs	r7, #0
 8000f00:	2606      	movs	r6, #6
 8000f02:	606f      	str	r7, [r5, #4]
 8000f04:	6163      	str	r3, [r4, #20]
 8000f06:	548e      	strb	r6, [r1, r2]
 8000f08:	60a8      	str	r0, [r5, #8]
 8000f0a:	e02f      	b.n	8000f6c <d_expression_1+0xb0>
 8000f0c:	784b      	ldrb	r3, [r1, #1]
 8000f0e:	2b72      	cmp	r3, #114	; 0x72
 8000f10:	d06e      	beq.n	8000ff0 <d_expression_1+0x134>
 8000f12:	2b70      	cmp	r3, #112	; 0x70
 8000f14:	f000 8160 	beq.w	80011d8 <d_expression_1+0x31c>
 8000f18:	4620      	mov	r0, r4
 8000f1a:	f000 fff3 	bl	8001f04 <d_operator_name>
 8000f1e:	4605      	mov	r5, r0
 8000f20:	b3a0      	cbz	r0, 8000f8c <d_expression_1+0xd0>
 8000f22:	7803      	ldrb	r3, [r0, #0]
 8000f24:	2b31      	cmp	r3, #49	; 0x31
 8000f26:	d039      	beq.n	8000f9c <d_expression_1+0xe0>
 8000f28:	2b32      	cmp	r3, #50	; 0x32
 8000f2a:	f000 8127 	beq.w	800117c <d_expression_1+0x2c0>
 8000f2e:	2b33      	cmp	r3, #51	; 0x33
 8000f30:	d12c      	bne.n	8000f8c <d_expression_1+0xd0>
 8000f32:	68e3      	ldr	r3, [r4, #12]
 8000f34:	781a      	ldrb	r2, [r3, #0]
 8000f36:	2a5f      	cmp	r2, #95	; 0x5f
 8000f38:	f000 8176 	beq.w	8001228 <d_expression_1+0x36c>
 8000f3c:	4620      	mov	r0, r4
 8000f3e:	f7ff ffbd 	bl	8000ebc <d_expression_1>
 8000f42:	4603      	mov	r3, r0
 8000f44:	462a      	mov	r2, r5
 8000f46:	4620      	mov	r0, r4
 8000f48:	2136      	movs	r1, #54	; 0x36
 8000f4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f4e:	f7ff b95f 	b.w	8000210 <d_make_comp>
 8000f52:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8000f56:	2a09      	cmp	r2, #9
 8000f58:	d841      	bhi.n	8000fde <d_expression_1+0x122>
 8000f5a:	4620      	mov	r0, r4
 8000f5c:	f001 f97e 	bl	800225c <d_unqualified_name>
 8000f60:	4605      	mov	r5, r0
 8000f62:	b198      	cbz	r0, 8000f8c <d_expression_1+0xd0>
 8000f64:	68e3      	ldr	r3, [r4, #12]
 8000f66:	781a      	ldrb	r2, [r3, #0]
 8000f68:	2a49      	cmp	r2, #73	; 0x49
 8000f6a:	d02b      	beq.n	8000fc4 <d_expression_1+0x108>
 8000f6c:	4628      	mov	r0, r5
 8000f6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f72:	2b74      	cmp	r3, #116	; 0x74
 8000f74:	d1d0      	bne.n	8000f18 <d_expression_1+0x5c>
 8000f76:	784b      	ldrb	r3, [r1, #1]
 8000f78:	2b6c      	cmp	r3, #108	; 0x6c
 8000f7a:	d1cd      	bne.n	8000f18 <d_expression_1+0x5c>
 8000f7c:	f000 fbc8 	bl	8001710 <d_type>
 8000f80:	68e1      	ldr	r1, [r4, #12]
 8000f82:	784b      	ldrb	r3, [r1, #1]
 8000f84:	4605      	mov	r5, r0
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	f040 8190 	bne.w	80012ac <d_expression_1+0x3f0>
 8000f8c:	2500      	movs	r5, #0
 8000f8e:	4628      	mov	r0, r5
 8000f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f94:	f001 bdac 	b.w	8002af0 <d_expr_primary>
 8000f98:	f7ff ba92 	b.w	80004c0 <d_template_param>
 8000f9c:	6887      	ldr	r7, [r0, #8]
 8000f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000fa0:	68ba      	ldr	r2, [r7, #8]
 8000fa2:	683e      	ldr	r6, [r7, #0]
 8000fa4:	49c8      	ldr	r1, [pc, #800]	; (80012c8 <d_expression_1+0x40c>)
 8000fa6:	3a02      	subs	r2, #2
 8000fa8:	4413      	add	r3, r2
 8000faa:	6323      	str	r3, [r4, #48]	; 0x30
 8000fac:	4630      	mov	r0, r6
 8000fae:	f005 feef 	bl	8006d90 <strcmp>
 8000fb2:	2800      	cmp	r0, #0
 8000fb4:	d05b      	beq.n	800106e <d_expression_1+0x1b2>
 8000fb6:	68ff      	ldr	r7, [r7, #12]
 8000fb8:	2f03      	cmp	r7, #3
 8000fba:	d8e7      	bhi.n	8000f8c <d_expression_1+0xd0>
 8000fbc:	e8df f007 	tbb	[pc, r7]
 8000fc0:	64a7385c 	.word	0x64a7385c
 8000fc4:	3301      	adds	r3, #1
 8000fc6:	60e3      	str	r3, [r4, #12]
 8000fc8:	4620      	mov	r0, r4
 8000fca:	f000 f989 	bl	80012e0 <d_template_args_1>
 8000fce:	462a      	mov	r2, r5
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	2104      	movs	r1, #4
 8000fd4:	4620      	mov	r0, r4
 8000fd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fda:	f7ff b919 	b.w	8000210 <d_make_comp>
 8000fde:	2b6f      	cmp	r3, #111	; 0x6f
 8000fe0:	f040 815c 	bne.w	800129c <d_expression_1+0x3e0>
 8000fe4:	784b      	ldrb	r3, [r1, #1]
 8000fe6:	2b6e      	cmp	r3, #110	; 0x6e
 8000fe8:	d196      	bne.n	8000f18 <d_expression_1+0x5c>
 8000fea:	3102      	adds	r1, #2
 8000fec:	60c1      	str	r1, [r0, #12]
 8000fee:	e7b4      	b.n	8000f5a <d_expression_1+0x9e>
 8000ff0:	3102      	adds	r1, #2
 8000ff2:	60c1      	str	r1, [r0, #12]
 8000ff4:	f000 fb8c 	bl	8001710 <d_type>
 8000ff8:	4605      	mov	r5, r0
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	f001 f92e 	bl	800225c <d_unqualified_name>
 8001000:	68e3      	ldr	r3, [r4, #12]
 8001002:	7819      	ldrb	r1, [r3, #0]
 8001004:	2949      	cmp	r1, #73	; 0x49
 8001006:	4606      	mov	r6, r0
 8001008:	f000 80d9 	beq.w	80011be <d_expression_1+0x302>
 800100c:	4603      	mov	r3, r0
 800100e:	462a      	mov	r2, r5
 8001010:	4620      	mov	r0, r4
 8001012:	2101      	movs	r1, #1
 8001014:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001018:	f7ff b8fa 	b.w	8000210 <d_make_comp>
 800101c:	f7ff fa36 	bl	800048c <d_compact_number>
 8001020:	43c3      	mvns	r3, r0
 8001022:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 8001026:	bf18      	it	ne
 8001028:	3001      	addne	r0, #1
 800102a:	f47f af60 	bne.w	8000eee <d_expression_1+0x32>
 800102e:	e7ad      	b.n	8000f8c <d_expression_1+0xd0>
 8001030:	2e00      	cmp	r6, #0
 8001032:	d083      	beq.n	8000f3c <d_expression_1+0x80>
 8001034:	7833      	ldrb	r3, [r6, #0]
 8001036:	2b70      	cmp	r3, #112	; 0x70
 8001038:	f000 80b0 	beq.w	800119c <d_expression_1+0x2e0>
 800103c:	2b6d      	cmp	r3, #109	; 0x6d
 800103e:	f000 80ad 	beq.w	800119c <d_expression_1+0x2e0>
 8001042:	2700      	movs	r7, #0
 8001044:	4630      	mov	r0, r6
 8001046:	49a1      	ldr	r1, [pc, #644]	; (80012cc <d_expression_1+0x410>)
 8001048:	f005 fea2 	bl	8006d90 <strcmp>
 800104c:	2800      	cmp	r0, #0
 800104e:	f040 80b1 	bne.w	80011b4 <d_expression_1+0x2f8>
 8001052:	4620      	mov	r0, r4
 8001054:	f000 f944 	bl	80012e0 <d_template_args_1>
 8001058:	4603      	mov	r3, r0
 800105a:	2f00      	cmp	r7, #0
 800105c:	f43f af72 	beq.w	8000f44 <d_expression_1+0x88>
 8001060:	461a      	mov	r2, r3
 8001062:	2138      	movs	r1, #56	; 0x38
 8001064:	4620      	mov	r0, r4
 8001066:	f7ff f8d3 	bl	8000210 <d_make_comp>
 800106a:	4603      	mov	r3, r0
 800106c:	e76a      	b.n	8000f44 <d_expression_1+0x88>
 800106e:	4620      	mov	r0, r4
 8001070:	f000 fb4e 	bl	8001710 <d_type>
 8001074:	4603      	mov	r3, r0
 8001076:	e765      	b.n	8000f44 <d_expression_1+0x88>
 8001078:	462a      	mov	r2, r5
 800107a:	4620      	mov	r0, r4
 800107c:	2300      	movs	r3, #0
 800107e:	2135      	movs	r1, #53	; 0x35
 8001080:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001084:	f7ff b8c4 	b.w	8000210 <d_make_comp>
 8001088:	4991      	ldr	r1, [pc, #580]	; (80012d0 <d_expression_1+0x414>)
 800108a:	4630      	mov	r0, r6
 800108c:	f005 fe80 	bl	8006d90 <strcmp>
 8001090:	2800      	cmp	r0, #0
 8001092:	f000 80d1 	beq.w	8001238 <d_expression_1+0x37c>
 8001096:	7833      	ldrb	r3, [r6, #0]
 8001098:	2b66      	cmp	r3, #102	; 0x66
 800109a:	f000 80f6 	beq.w	800128a <d_expression_1+0x3ce>
 800109e:	2b6e      	cmp	r3, #110	; 0x6e
 80010a0:	f47f af74 	bne.w	8000f8c <d_expression_1+0xd0>
 80010a4:	7873      	ldrb	r3, [r6, #1]
 80010a6:	2b77      	cmp	r3, #119	; 0x77
 80010a8:	d002      	beq.n	80010b0 <d_expression_1+0x1f4>
 80010aa:	2b61      	cmp	r3, #97	; 0x61
 80010ac:	f47f af6e 	bne.w	8000f8c <d_expression_1+0xd0>
 80010b0:	215f      	movs	r1, #95	; 0x5f
 80010b2:	4620      	mov	r0, r4
 80010b4:	f7ff fc94 	bl	80009e0 <d_exprlist>
 80010b8:	4606      	mov	r6, r0
 80010ba:	4620      	mov	r0, r4
 80010bc:	f000 fb28 	bl	8001710 <d_type>
 80010c0:	68e3      	ldr	r3, [r4, #12]
 80010c2:	7819      	ldrb	r1, [r3, #0]
 80010c4:	2945      	cmp	r1, #69	; 0x45
 80010c6:	4607      	mov	r7, r0
 80010c8:	f000 80aa 	beq.w	8001220 <d_expression_1+0x364>
 80010cc:	2970      	cmp	r1, #112	; 0x70
 80010ce:	f000 80d0 	beq.w	8001272 <d_expression_1+0x3b6>
 80010d2:	2969      	cmp	r1, #105	; 0x69
 80010d4:	f47f af5a 	bne.w	8000f8c <d_expression_1+0xd0>
 80010d8:	785b      	ldrb	r3, [r3, #1]
 80010da:	2b6c      	cmp	r3, #108	; 0x6c
 80010dc:	f47f af56 	bne.w	8000f8c <d_expression_1+0xd0>
 80010e0:	4620      	mov	r0, r4
 80010e2:	f7ff feeb 	bl	8000ebc <d_expression_1>
 80010e6:	4603      	mov	r3, r0
 80010e8:	463a      	mov	r2, r7
 80010ea:	213b      	movs	r1, #59	; 0x3b
 80010ec:	4620      	mov	r0, r4
 80010ee:	f7ff f88f 	bl	8000210 <d_make_comp>
 80010f2:	4632      	mov	r2, r6
 80010f4:	4603      	mov	r3, r0
 80010f6:	213a      	movs	r1, #58	; 0x3a
 80010f8:	4620      	mov	r0, r4
 80010fa:	f7ff f889 	bl	8000210 <d_make_comp>
 80010fe:	462a      	mov	r2, r5
 8001100:	4603      	mov	r3, r0
 8001102:	2139      	movs	r1, #57	; 0x39
 8001104:	4620      	mov	r0, r4
 8001106:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800110a:	f7ff b881 	b.w	8000210 <d_make_comp>
 800110e:	2e00      	cmp	r6, #0
 8001110:	f43f af3c 	beq.w	8000f8c <d_expression_1+0xd0>
 8001114:	68ab      	ldr	r3, [r5, #8]
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	785a      	ldrb	r2, [r3, #1]
 800111a:	2a63      	cmp	r2, #99	; 0x63
 800111c:	d068      	beq.n	80011f0 <d_expression_1+0x334>
 800111e:	7833      	ldrb	r3, [r6, #0]
 8001120:	2b66      	cmp	r3, #102	; 0x66
 8001122:	d178      	bne.n	8001216 <d_expression_1+0x35a>
 8001124:	4620      	mov	r0, r4
 8001126:	f000 feed 	bl	8001f04 <d_operator_name>
 800112a:	4607      	mov	r7, r0
 800112c:	4969      	ldr	r1, [pc, #420]	; (80012d4 <d_expression_1+0x418>)
 800112e:	4630      	mov	r0, r6
 8001130:	f005 fe2e 	bl	8006d90 <strcmp>
 8001134:	2800      	cmp	r0, #0
 8001136:	d068      	beq.n	800120a <d_expression_1+0x34e>
 8001138:	4967      	ldr	r1, [pc, #412]	; (80012d8 <d_expression_1+0x41c>)
 800113a:	4630      	mov	r0, r6
 800113c:	f005 fe28 	bl	8006d90 <strcmp>
 8001140:	b130      	cbz	r0, 8001150 <d_expression_1+0x294>
 8001142:	4630      	mov	r0, r6
 8001144:	4965      	ldr	r1, [pc, #404]	; (80012dc <d_expression_1+0x420>)
 8001146:	f005 fe23 	bl	8006d90 <strcmp>
 800114a:	2800      	cmp	r0, #0
 800114c:	f040 80a1 	bne.w	8001292 <d_expression_1+0x3d6>
 8001150:	4620      	mov	r0, r4
 8001152:	f001 f883 	bl	800225c <d_unqualified_name>
 8001156:	68e3      	ldr	r3, [r4, #12]
 8001158:	781a      	ldrb	r2, [r3, #0]
 800115a:	2a49      	cmp	r2, #73	; 0x49
 800115c:	4606      	mov	r6, r0
 800115e:	d07b      	beq.n	8001258 <d_expression_1+0x39c>
 8001160:	4633      	mov	r3, r6
 8001162:	463a      	mov	r2, r7
 8001164:	2138      	movs	r1, #56	; 0x38
 8001166:	4620      	mov	r0, r4
 8001168:	f7ff f852 	bl	8000210 <d_make_comp>
 800116c:	462a      	mov	r2, r5
 800116e:	4603      	mov	r3, r0
 8001170:	2137      	movs	r1, #55	; 0x37
 8001172:	4620      	mov	r0, r4
 8001174:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001178:	f7ff b84a 	b.w	8000210 <d_make_comp>
 800117c:	6883      	ldr	r3, [r0, #8]
 800117e:	2b03      	cmp	r3, #3
 8001180:	f63f af04 	bhi.w	8000f8c <d_expression_1+0xd0>
 8001184:	a201      	add	r2, pc, #4	; (adr r2, 800118c <d_expression_1+0x2d0>)
 8001186:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800118a:	bf00      	nop
 800118c:	08001079 	.word	0x08001079
 8001190:	08000f3d 	.word	0x08000f3d
 8001194:	08000f8d 	.word	0x08000f8d
 8001198:	08000f8d 	.word	0x08000f8d
 800119c:	7872      	ldrb	r2, [r6, #1]
 800119e:	429a      	cmp	r2, r3
 80011a0:	f47f af4f 	bne.w	8001042 <d_expression_1+0x186>
 80011a4:	68e3      	ldr	r3, [r4, #12]
 80011a6:	781a      	ldrb	r2, [r3, #0]
 80011a8:	2a5f      	cmp	r2, #95	; 0x5f
 80011aa:	f47f af4b 	bne.w	8001044 <d_expression_1+0x188>
 80011ae:	3301      	adds	r3, #1
 80011b0:	60e3      	str	r3, [r4, #12]
 80011b2:	e746      	b.n	8001042 <d_expression_1+0x186>
 80011b4:	4620      	mov	r0, r4
 80011b6:	f7ff fe81 	bl	8000ebc <d_expression_1>
 80011ba:	4603      	mov	r3, r0
 80011bc:	e74d      	b.n	800105a <d_expression_1+0x19e>
 80011be:	3301      	adds	r3, #1
 80011c0:	60e3      	str	r3, [r4, #12]
 80011c2:	4620      	mov	r0, r4
 80011c4:	f000 f88c 	bl	80012e0 <d_template_args_1>
 80011c8:	4632      	mov	r2, r6
 80011ca:	4603      	mov	r3, r0
 80011cc:	2104      	movs	r1, #4
 80011ce:	4620      	mov	r0, r4
 80011d0:	f7ff f81e 	bl	8000210 <d_make_comp>
 80011d4:	4603      	mov	r3, r0
 80011d6:	e71a      	b.n	800100e <d_expression_1+0x152>
 80011d8:	3102      	adds	r1, #2
 80011da:	60e1      	str	r1, [r4, #12]
 80011dc:	f7ff fe6e 	bl	8000ebc <d_expression_1>
 80011e0:	2300      	movs	r3, #0
 80011e2:	4602      	mov	r2, r0
 80011e4:	214a      	movs	r1, #74	; 0x4a
 80011e6:	4620      	mov	r0, r4
 80011e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011ec:	f7ff b810 	b.w	8000210 <d_make_comp>
 80011f0:	781b      	ldrb	r3, [r3, #0]
 80011f2:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80011f6:	2a01      	cmp	r2, #1
 80011f8:	d902      	bls.n	8001200 <d_expression_1+0x344>
 80011fa:	3b72      	subs	r3, #114	; 0x72
 80011fc:	2b01      	cmp	r3, #1
 80011fe:	d88e      	bhi.n	800111e <d_expression_1+0x262>
 8001200:	4620      	mov	r0, r4
 8001202:	f000 fa85 	bl	8001710 <d_type>
 8001206:	4607      	mov	r7, r0
 8001208:	e790      	b.n	800112c <d_expression_1+0x270>
 800120a:	2145      	movs	r1, #69	; 0x45
 800120c:	4620      	mov	r0, r4
 800120e:	f7ff fbe7 	bl	80009e0 <d_exprlist>
 8001212:	4606      	mov	r6, r0
 8001214:	e7a4      	b.n	8001160 <d_expression_1+0x2a4>
 8001216:	4620      	mov	r0, r4
 8001218:	f7ff fe50 	bl	8000ebc <d_expression_1>
 800121c:	4607      	mov	r7, r0
 800121e:	e785      	b.n	800112c <d_expression_1+0x270>
 8001220:	3301      	adds	r3, #1
 8001222:	60e3      	str	r3, [r4, #12]
 8001224:	2300      	movs	r3, #0
 8001226:	e75f      	b.n	80010e8 <d_expression_1+0x22c>
 8001228:	3301      	adds	r3, #1
 800122a:	60e3      	str	r3, [r4, #12]
 800122c:	2145      	movs	r1, #69	; 0x45
 800122e:	4620      	mov	r0, r4
 8001230:	f7ff fbd6 	bl	80009e0 <d_exprlist>
 8001234:	4603      	mov	r3, r0
 8001236:	e685      	b.n	8000f44 <d_expression_1+0x88>
 8001238:	4620      	mov	r0, r4
 800123a:	f7ff fe3f 	bl	8000ebc <d_expression_1>
 800123e:	4606      	mov	r6, r0
 8001240:	4620      	mov	r0, r4
 8001242:	f7ff fe3b 	bl	8000ebc <d_expression_1>
 8001246:	4607      	mov	r7, r0
 8001248:	4620      	mov	r0, r4
 800124a:	f7ff fe37 	bl	8000ebc <d_expression_1>
 800124e:	4603      	mov	r3, r0
 8001250:	2800      	cmp	r0, #0
 8001252:	f47f af49 	bne.w	80010e8 <d_expression_1+0x22c>
 8001256:	e699      	b.n	8000f8c <d_expression_1+0xd0>
 8001258:	3301      	adds	r3, #1
 800125a:	60e3      	str	r3, [r4, #12]
 800125c:	4620      	mov	r0, r4
 800125e:	f000 f83f 	bl	80012e0 <d_template_args_1>
 8001262:	4632      	mov	r2, r6
 8001264:	4603      	mov	r3, r0
 8001266:	2104      	movs	r1, #4
 8001268:	4620      	mov	r0, r4
 800126a:	f7fe ffd1 	bl	8000210 <d_make_comp>
 800126e:	4606      	mov	r6, r0
 8001270:	e776      	b.n	8001160 <d_expression_1+0x2a4>
 8001272:	785a      	ldrb	r2, [r3, #1]
 8001274:	2a69      	cmp	r2, #105	; 0x69
 8001276:	f47f ae89 	bne.w	8000f8c <d_expression_1+0xd0>
 800127a:	3302      	adds	r3, #2
 800127c:	60e3      	str	r3, [r4, #12]
 800127e:	2145      	movs	r1, #69	; 0x45
 8001280:	4620      	mov	r0, r4
 8001282:	f7ff fbad 	bl	80009e0 <d_exprlist>
 8001286:	4603      	mov	r3, r0
 8001288:	e72e      	b.n	80010e8 <d_expression_1+0x22c>
 800128a:	4620      	mov	r0, r4
 800128c:	f000 fe3a 	bl	8001f04 <d_operator_name>
 8001290:	e7d5      	b.n	800123e <d_expression_1+0x382>
 8001292:	4620      	mov	r0, r4
 8001294:	f7ff fe12 	bl	8000ebc <d_expression_1>
 8001298:	4606      	mov	r6, r0
 800129a:	e761      	b.n	8001160 <d_expression_1+0x2a4>
 800129c:	2b69      	cmp	r3, #105	; 0x69
 800129e:	f47f ae68 	bne.w	8000f72 <d_expression_1+0xb6>
 80012a2:	784b      	ldrb	r3, [r1, #1]
 80012a4:	2b6c      	cmp	r3, #108	; 0x6c
 80012a6:	f47f ae37 	bne.w	8000f18 <d_expression_1+0x5c>
 80012aa:	2500      	movs	r5, #0
 80012ac:	3102      	adds	r1, #2
 80012ae:	60e1      	str	r1, [r4, #12]
 80012b0:	4620      	mov	r0, r4
 80012b2:	2145      	movs	r1, #69	; 0x45
 80012b4:	f7ff fb94 	bl	80009e0 <d_exprlist>
 80012b8:	462a      	mov	r2, r5
 80012ba:	4603      	mov	r3, r0
 80012bc:	2130      	movs	r1, #48	; 0x30
 80012be:	4620      	mov	r0, r4
 80012c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012c4:	f7fe bfa4 	b.w	8000210 <d_make_comp>
 80012c8:	0801f268 	.word	0x0801f268
 80012cc:	0801ed4c 	.word	0x0801ed4c
 80012d0:	0801ed5c 	.word	0x0801ed5c
 80012d4:	0801ed50 	.word	0x0801ed50
 80012d8:	0801ed54 	.word	0x0801ed54
 80012dc:	0801ed58 	.word	0x0801ed58

080012e0 <d_template_args_1>:
 80012e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012e4:	68c2      	ldr	r2, [r0, #12]
 80012e6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80012e8:	7813      	ldrb	r3, [r2, #0]
 80012ea:	2b45      	cmp	r3, #69	; 0x45
 80012ec:	b082      	sub	sp, #8
 80012ee:	4604      	mov	r4, r0
 80012f0:	d04e      	beq.n	8001390 <d_template_args_1+0xb0>
 80012f2:	ad02      	add	r5, sp, #8
 80012f4:	2100      	movs	r1, #0
 80012f6:	f845 1d04 	str.w	r1, [r5, #-4]!
 80012fa:	2601      	movs	r6, #1
 80012fc:	3b49      	subs	r3, #73	; 0x49
 80012fe:	2b0f      	cmp	r3, #15
 8001300:	d83d      	bhi.n	800137e <d_template_args_1+0x9e>
 8001302:	e8df f003 	tbb	[pc, r3]
 8001306:	3737      	.short	0x3737
 8001308:	3c3c323c 	.word	0x3c3c323c
 800130c:	3c3c3c3c 	.word	0x3c3c3c3c
 8001310:	3c3c3c3c 	.word	0x3c3c3c3c
 8001314:	083c      	.short	0x083c
 8001316:	3201      	adds	r2, #1
 8001318:	f8d4 8034 	ldr.w	r8, [r4, #52]	; 0x34
 800131c:	60e2      	str	r2, [r4, #12]
 800131e:	6366      	str	r6, [r4, #52]	; 0x34
 8001320:	4620      	mov	r0, r4
 8001322:	f7ff fdcb 	bl	8000ebc <d_expression_1>
 8001326:	68e3      	ldr	r3, [r4, #12]
 8001328:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
 800132c:	781a      	ldrb	r2, [r3, #0]
 800132e:	2a45      	cmp	r2, #69	; 0x45
 8001330:	4684      	mov	ip, r0
 8001332:	f103 0301 	add.w	r3, r3, #1
 8001336:	d127      	bne.n	8001388 <d_template_args_1+0xa8>
 8001338:	60e3      	str	r3, [r4, #12]
 800133a:	2300      	movs	r3, #0
 800133c:	212f      	movs	r1, #47	; 0x2f
 800133e:	4662      	mov	r2, ip
 8001340:	4620      	mov	r0, r4
 8001342:	f1bc 0f00 	cmp.w	ip, #0
 8001346:	d01f      	beq.n	8001388 <d_template_args_1+0xa8>
 8001348:	f7fe ff62 	bl	8000210 <d_make_comp>
 800134c:	6028      	str	r0, [r5, #0]
 800134e:	f100 050c 	add.w	r5, r0, #12
 8001352:	b1c8      	cbz	r0, 8001388 <d_template_args_1+0xa8>
 8001354:	68e2      	ldr	r2, [r4, #12]
 8001356:	7813      	ldrb	r3, [r2, #0]
 8001358:	2b45      	cmp	r3, #69	; 0x45
 800135a:	d1cf      	bne.n	80012fc <d_template_args_1+0x1c>
 800135c:	9801      	ldr	r0, [sp, #4]
 800135e:	62e7      	str	r7, [r4, #44]	; 0x2c
 8001360:	3201      	adds	r2, #1
 8001362:	60e2      	str	r2, [r4, #12]
 8001364:	b002      	add	sp, #8
 8001366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800136a:	4620      	mov	r0, r4
 800136c:	f001 fbc0 	bl	8002af0 <d_expr_primary>
 8001370:	4684      	mov	ip, r0
 8001372:	e7e2      	b.n	800133a <d_template_args_1+0x5a>
 8001374:	4620      	mov	r0, r4
 8001376:	f000 f815 	bl	80013a4 <d_template_args>
 800137a:	4684      	mov	ip, r0
 800137c:	e7dd      	b.n	800133a <d_template_args_1+0x5a>
 800137e:	4620      	mov	r0, r4
 8001380:	f000 f9c6 	bl	8001710 <d_type>
 8001384:	4684      	mov	ip, r0
 8001386:	e7d8      	b.n	800133a <d_template_args_1+0x5a>
 8001388:	2000      	movs	r0, #0
 800138a:	b002      	add	sp, #8
 800138c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001390:	3201      	adds	r2, #1
 8001392:	2300      	movs	r3, #0
 8001394:	60c2      	str	r2, [r0, #12]
 8001396:	212f      	movs	r1, #47	; 0x2f
 8001398:	461a      	mov	r2, r3
 800139a:	b002      	add	sp, #8
 800139c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013a0:	f7fe bf36 	b.w	8000210 <d_make_comp>

080013a4 <d_template_args>:
 80013a4:	68c3      	ldr	r3, [r0, #12]
 80013a6:	781a      	ldrb	r2, [r3, #0]
 80013a8:	3a49      	subs	r2, #73	; 0x49
 80013aa:	2a01      	cmp	r2, #1
 80013ac:	d802      	bhi.n	80013b4 <d_template_args+0x10>
 80013ae:	3301      	adds	r3, #1
 80013b0:	60c3      	str	r3, [r0, #12]
 80013b2:	e795      	b.n	80012e0 <d_template_args_1>
 80013b4:	2000      	movs	r0, #0
 80013b6:	4770      	bx	lr

080013b8 <d_name>:
 80013b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013bc:	68c2      	ldr	r2, [r0, #12]
 80013be:	7813      	ldrb	r3, [r2, #0]
 80013c0:	3b4e      	subs	r3, #78	; 0x4e
 80013c2:	b083      	sub	sp, #12
 80013c4:	4604      	mov	r4, r0
 80013c6:	2b0c      	cmp	r3, #12
 80013c8:	d846      	bhi.n	8001458 <d_name+0xa0>
 80013ca:	e8df f003 	tbb	[pc, r3]
 80013ce:	4567      	.short	0x4567
 80013d0:	0e454545 	.word	0x0e454545
 80013d4:	45450745 	.word	0x45450745
 80013d8:	4545      	.short	0x4545
 80013da:	a4          	.byte	0xa4
 80013db:	00          	.byte	0x00
 80013dc:	f000 ff3e 	bl	800225c <d_unqualified_name>
 80013e0:	4605      	mov	r5, r0
 80013e2:	4628      	mov	r0, r5
 80013e4:	b003      	add	sp, #12
 80013e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013ea:	7853      	ldrb	r3, [r2, #1]
 80013ec:	2b74      	cmp	r3, #116	; 0x74
 80013ee:	f040 80d7 	bne.w	80015a0 <d_name+0x1e8>
 80013f2:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 80013f6:	3202      	adds	r2, #2
 80013f8:	428b      	cmp	r3, r1
 80013fa:	60c2      	str	r2, [r0, #12]
 80013fc:	f280 8127 	bge.w	800164e <d_name+0x296>
 8001400:	6901      	ldr	r1, [r0, #16]
 8001402:	48c0      	ldr	r0, [pc, #768]	; (8001704 <d_name+0x34c>)
 8001404:	011a      	lsls	r2, r3, #4
 8001406:	188d      	adds	r5, r1, r2
 8001408:	3301      	adds	r3, #1
 800140a:	6163      	str	r3, [r4, #20]
 800140c:	2300      	movs	r3, #0
 800140e:	606b      	str	r3, [r5, #4]
 8001410:	548b      	strb	r3, [r1, r2]
 8001412:	2303      	movs	r3, #3
 8001414:	e9c5 0302 	strd	r0, r3, [r5, #8]
 8001418:	4620      	mov	r0, r4
 800141a:	f000 ff1f 	bl	800225c <d_unqualified_name>
 800141e:	462a      	mov	r2, r5
 8001420:	4603      	mov	r3, r0
 8001422:	2101      	movs	r1, #1
 8001424:	4620      	mov	r0, r4
 8001426:	f7fe fef3 	bl	8000210 <d_make_comp>
 800142a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800142c:	68e2      	ldr	r2, [r4, #12]
 800142e:	3303      	adds	r3, #3
 8001430:	6323      	str	r3, [r4, #48]	; 0x30
 8001432:	7813      	ldrb	r3, [r2, #0]
 8001434:	2b49      	cmp	r3, #73	; 0x49
 8001436:	4605      	mov	r5, r0
 8001438:	d1d3      	bne.n	80013e2 <d_name+0x2a>
 800143a:	2800      	cmp	r0, #0
 800143c:	f000 80ba 	beq.w	80015b4 <d_name+0x1fc>
 8001440:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001444:	4293      	cmp	r3, r2
 8001446:	f280 80b5 	bge.w	80015b4 <d_name+0x1fc>
 800144a:	69e1      	ldr	r1, [r4, #28]
 800144c:	1c5a      	adds	r2, r3, #1
 800144e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8001452:	6222      	str	r2, [r4, #32]
 8001454:	4620      	mov	r0, r4
 8001456:	e014      	b.n	8001482 <d_name+0xca>
 8001458:	f000 ff00 	bl	800225c <d_unqualified_name>
 800145c:	68e3      	ldr	r3, [r4, #12]
 800145e:	781b      	ldrb	r3, [r3, #0]
 8001460:	2b49      	cmp	r3, #73	; 0x49
 8001462:	4605      	mov	r5, r0
 8001464:	d1bd      	bne.n	80013e2 <d_name+0x2a>
 8001466:	2800      	cmp	r0, #0
 8001468:	f000 80a4 	beq.w	80015b4 <d_name+0x1fc>
 800146c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001470:	4293      	cmp	r3, r2
 8001472:	f280 809f 	bge.w	80015b4 <d_name+0x1fc>
 8001476:	69e1      	ldr	r1, [r4, #28]
 8001478:	1c5a      	adds	r2, r3, #1
 800147a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800147e:	4620      	mov	r0, r4
 8001480:	6222      	str	r2, [r4, #32]
 8001482:	f7ff ff8f 	bl	80013a4 <d_template_args>
 8001486:	462a      	mov	r2, r5
 8001488:	4603      	mov	r3, r0
 800148a:	2104      	movs	r1, #4
 800148c:	4620      	mov	r0, r4
 800148e:	f7fe febf 	bl	8000210 <d_make_comp>
 8001492:	4605      	mov	r5, r0
 8001494:	4628      	mov	r0, r5
 8001496:	b003      	add	sp, #12
 8001498:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800149c:	3201      	adds	r2, #1
 800149e:	60c2      	str	r2, [r0, #12]
 80014a0:	a901      	add	r1, sp, #4
 80014a2:	2201      	movs	r2, #1
 80014a4:	f000 fde6 	bl	8002074 <d_cv_qualifiers>
 80014a8:	4680      	mov	r8, r0
 80014aa:	2800      	cmp	r0, #0
 80014ac:	f000 8082 	beq.w	80015b4 <d_name+0x1fc>
 80014b0:	2100      	movs	r1, #0
 80014b2:	4620      	mov	r0, r4
 80014b4:	f7fe fef4 	bl	80002a0 <d_ref_qualifier>
 80014b8:	68e2      	ldr	r2, [r4, #12]
 80014ba:	4e93      	ldr	r6, [pc, #588]	; (8001708 <d_name+0x350>)
 80014bc:	7815      	ldrb	r5, [r2, #0]
 80014be:	4681      	mov	r9, r0
 80014c0:	2700      	movs	r7, #0
 80014c2:	2d00      	cmp	r5, #0
 80014c4:	f000 80b3 	beq.w	800162e <d_name+0x276>
 80014c8:	2d44      	cmp	r5, #68	; 0x44
 80014ca:	f000 8096 	beq.w	80015fa <d_name+0x242>
 80014ce:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80014d2:	b2db      	uxtb	r3, r3
 80014d4:	2b1c      	cmp	r3, #28
 80014d6:	d96f      	bls.n	80015b8 <d_name+0x200>
 80014d8:	f1a5 0361 	sub.w	r3, r5, #97	; 0x61
 80014dc:	b2db      	uxtb	r3, r3
 80014de:	2b19      	cmp	r3, #25
 80014e0:	d96e      	bls.n	80015c0 <d_name+0x208>
 80014e2:	2d55      	cmp	r5, #85	; 0x55
 80014e4:	f000 80a1 	beq.w	800162a <d_name+0x272>
 80014e8:	2d53      	cmp	r5, #83	; 0x53
 80014ea:	f000 80b2 	beq.w	8001652 <d_name+0x29a>
 80014ee:	2d49      	cmp	r5, #73	; 0x49
 80014f0:	f000 80a4 	beq.w	800163c <d_name+0x284>
 80014f4:	2d54      	cmp	r5, #84	; 0x54
 80014f6:	f000 80e6 	beq.w	80016c6 <d_name+0x30e>
 80014fa:	2d45      	cmp	r5, #69	; 0x45
 80014fc:	f000 80e9 	beq.w	80016d2 <d_name+0x31a>
 8001500:	2d4d      	cmp	r5, #77	; 0x4d
 8001502:	f040 8094 	bne.w	800162e <d_name+0x276>
 8001506:	2f00      	cmp	r7, #0
 8001508:	f000 8091 	beq.w	800162e <d_name+0x276>
 800150c:	1c53      	adds	r3, r2, #1
 800150e:	60e3      	str	r3, [r4, #12]
 8001510:	7855      	ldrb	r5, [r2, #1]
 8001512:	461a      	mov	r2, r3
 8001514:	e7d5      	b.n	80014c2 <d_name+0x10a>
 8001516:	3201      	adds	r2, #1
 8001518:	60c2      	str	r2, [r0, #12]
 800151a:	2100      	movs	r1, #0
 800151c:	f001 f83a 	bl	8002594 <d_encoding>
 8001520:	68e3      	ldr	r3, [r4, #12]
 8001522:	781a      	ldrb	r2, [r3, #0]
 8001524:	2a45      	cmp	r2, #69	; 0x45
 8001526:	4606      	mov	r6, r0
 8001528:	d144      	bne.n	80015b4 <d_name+0x1fc>
 800152a:	1c5a      	adds	r2, r3, #1
 800152c:	60e2      	str	r2, [r4, #12]
 800152e:	785a      	ldrb	r2, [r3, #1]
 8001530:	2a73      	cmp	r2, #115	; 0x73
 8001532:	f000 80b0 	beq.w	8001696 <d_name+0x2de>
 8001536:	2a64      	cmp	r2, #100	; 0x64
 8001538:	f000 8095 	beq.w	8001666 <d_name+0x2ae>
 800153c:	4620      	mov	r0, r4
 800153e:	f7ff ff3b 	bl	80013b8 <d_name>
 8001542:	4605      	mov	r5, r0
 8001544:	b308      	cbz	r0, 800158a <d_name+0x1d2>
 8001546:	7803      	ldrb	r3, [r0, #0]
 8001548:	2b45      	cmp	r3, #69	; 0x45
 800154a:	d01e      	beq.n	800158a <d_name+0x1d2>
 800154c:	2b47      	cmp	r3, #71	; 0x47
 800154e:	d01c      	beq.n	800158a <d_name+0x1d2>
 8001550:	f04f 37ff 	mov.w	r7, #4294967295
 8001554:	4620      	mov	r0, r4
 8001556:	f7ff f903 	bl	8000760 <d_discriminator>
 800155a:	b358      	cbz	r0, 80015b4 <d_name+0x1fc>
 800155c:	1c7b      	adds	r3, r7, #1
 800155e:	d014      	beq.n	800158a <d_name+0x1d2>
 8001560:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001564:	4293      	cmp	r3, r2
 8001566:	f280 8094 	bge.w	8001692 <d_name+0x2da>
 800156a:	6920      	ldr	r0, [r4, #16]
 800156c:	0119      	lsls	r1, r3, #4
 800156e:	1842      	adds	r2, r0, r1
 8001570:	3301      	adds	r3, #1
 8001572:	f04f 0e00 	mov.w	lr, #0
 8001576:	f04f 0c46 	mov.w	ip, #70	; 0x46
 800157a:	f8c2 e004 	str.w	lr, [r2, #4]
 800157e:	6163      	str	r3, [r4, #20]
 8001580:	f800 c001 	strb.w	ip, [r0, r1]
 8001584:	e9c2 5702 	strd	r5, r7, [r2, #8]
 8001588:	4615      	mov	r5, r2
 800158a:	462b      	mov	r3, r5
 800158c:	4632      	mov	r2, r6
 800158e:	4620      	mov	r0, r4
 8001590:	2102      	movs	r1, #2
 8001592:	f7fe fe3d 	bl	8000210 <d_make_comp>
 8001596:	4605      	mov	r5, r0
 8001598:	4628      	mov	r0, r5
 800159a:	b003      	add	sp, #12
 800159c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80015a0:	2100      	movs	r1, #0
 80015a2:	f7ff f825 	bl	80005f0 <d_substitution>
 80015a6:	68e3      	ldr	r3, [r4, #12]
 80015a8:	781b      	ldrb	r3, [r3, #0]
 80015aa:	2b49      	cmp	r3, #73	; 0x49
 80015ac:	4605      	mov	r5, r0
 80015ae:	f47f af18 	bne.w	80013e2 <d_name+0x2a>
 80015b2:	e74f      	b.n	8001454 <d_name+0x9c>
 80015b4:	2500      	movs	r5, #0
 80015b6:	e714      	b.n	80013e2 <d_name+0x2a>
 80015b8:	fa26 f303 	lsr.w	r3, r6, r3
 80015bc:	07d9      	lsls	r1, r3, #31
 80015be:	d58b      	bpl.n	80014d8 <d_name+0x120>
 80015c0:	4620      	mov	r0, r4
 80015c2:	f000 fe4b 	bl	800225c <d_unqualified_name>
 80015c6:	b35f      	cbz	r7, 8001620 <d_name+0x268>
 80015c8:	2101      	movs	r1, #1
 80015ca:	4603      	mov	r3, r0
 80015cc:	463a      	mov	r2, r7
 80015ce:	4620      	mov	r0, r4
 80015d0:	f7fe fe1e 	bl	8000210 <d_make_comp>
 80015d4:	4607      	mov	r7, r0
 80015d6:	68e2      	ldr	r2, [r4, #12]
 80015d8:	2d53      	cmp	r5, #83	; 0x53
 80015da:	7813      	ldrb	r3, [r2, #0]
 80015dc:	d01e      	beq.n	800161c <d_name+0x264>
 80015de:	2b45      	cmp	r3, #69	; 0x45
 80015e0:	d01a      	beq.n	8001618 <d_name+0x260>
 80015e2:	b327      	cbz	r7, 800162e <d_name+0x276>
 80015e4:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
 80015e8:	428b      	cmp	r3, r1
 80015ea:	da20      	bge.n	800162e <d_name+0x276>
 80015ec:	69e1      	ldr	r1, [r4, #28]
 80015ee:	f841 7023 	str.w	r7, [r1, r3, lsl #2]
 80015f2:	3301      	adds	r3, #1
 80015f4:	6223      	str	r3, [r4, #32]
 80015f6:	7815      	ldrb	r5, [r2, #0]
 80015f8:	e763      	b.n	80014c2 <d_name+0x10a>
 80015fa:	7853      	ldrb	r3, [r2, #1]
 80015fc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8001600:	2b54      	cmp	r3, #84	; 0x54
 8001602:	4620      	mov	r0, r4
 8001604:	d00e      	beq.n	8001624 <d_name+0x26c>
 8001606:	f000 fe29 	bl	800225c <d_unqualified_name>
 800160a:	2f00      	cmp	r7, #0
 800160c:	d1dc      	bne.n	80015c8 <d_name+0x210>
 800160e:	68e2      	ldr	r2, [r4, #12]
 8001610:	7813      	ldrb	r3, [r2, #0]
 8001612:	2b45      	cmp	r3, #69	; 0x45
 8001614:	4607      	mov	r7, r0
 8001616:	d1e4      	bne.n	80015e2 <d_name+0x22a>
 8001618:	461d      	mov	r5, r3
 800161a:	e758      	b.n	80014ce <d_name+0x116>
 800161c:	461d      	mov	r5, r3
 800161e:	e750      	b.n	80014c2 <d_name+0x10a>
 8001620:	4607      	mov	r7, r0
 8001622:	e7d8      	b.n	80015d6 <d_name+0x21e>
 8001624:	f000 f874 	bl	8001710 <d_type>
 8001628:	e7ef      	b.n	800160a <d_name+0x252>
 800162a:	4620      	mov	r0, r4
 800162c:	e7eb      	b.n	8001606 <d_name+0x24e>
 800162e:	2500      	movs	r5, #0
 8001630:	4628      	mov	r0, r5
 8001632:	f8c8 5000 	str.w	r5, [r8]
 8001636:	b003      	add	sp, #12
 8001638:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800163c:	2f00      	cmp	r7, #0
 800163e:	d0f6      	beq.n	800162e <d_name+0x276>
 8001640:	3201      	adds	r2, #1
 8001642:	60e2      	str	r2, [r4, #12]
 8001644:	4620      	mov	r0, r4
 8001646:	f7ff fe4b 	bl	80012e0 <d_template_args_1>
 800164a:	2104      	movs	r1, #4
 800164c:	e7bd      	b.n	80015ca <d_name+0x212>
 800164e:	2500      	movs	r5, #0
 8001650:	e6e2      	b.n	8001418 <d_name+0x60>
 8001652:	2101      	movs	r1, #1
 8001654:	4620      	mov	r0, r4
 8001656:	f7fe ffcb 	bl	80005f0 <d_substitution>
 800165a:	2f00      	cmp	r7, #0
 800165c:	d1b4      	bne.n	80015c8 <d_name+0x210>
 800165e:	68e2      	ldr	r2, [r4, #12]
 8001660:	4607      	mov	r7, r0
 8001662:	7815      	ldrb	r5, [r2, #0]
 8001664:	e72d      	b.n	80014c2 <d_name+0x10a>
 8001666:	3302      	adds	r3, #2
 8001668:	60e3      	str	r3, [r4, #12]
 800166a:	4620      	mov	r0, r4
 800166c:	f7fe ff0e 	bl	800048c <d_compact_number>
 8001670:	1e07      	subs	r7, r0, #0
 8001672:	db9f      	blt.n	80015b4 <d_name+0x1fc>
 8001674:	4620      	mov	r0, r4
 8001676:	f7ff fe9f 	bl	80013b8 <d_name>
 800167a:	4605      	mov	r5, r0
 800167c:	2800      	cmp	r0, #0
 800167e:	f43f af6f 	beq.w	8001560 <d_name+0x1a8>
 8001682:	7803      	ldrb	r3, [r0, #0]
 8001684:	2b45      	cmp	r3, #69	; 0x45
 8001686:	f43f af69 	beq.w	800155c <d_name+0x1a4>
 800168a:	2b47      	cmp	r3, #71	; 0x47
 800168c:	f43f af66 	beq.w	800155c <d_name+0x1a4>
 8001690:	e760      	b.n	8001554 <d_name+0x19c>
 8001692:	2500      	movs	r5, #0
 8001694:	e779      	b.n	800158a <d_name+0x1d2>
 8001696:	3302      	adds	r3, #2
 8001698:	60e3      	str	r3, [r4, #12]
 800169a:	4620      	mov	r0, r4
 800169c:	f7ff f860 	bl	8000760 <d_discriminator>
 80016a0:	2800      	cmp	r0, #0
 80016a2:	d087      	beq.n	80015b4 <d_name+0x1fc>
 80016a4:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80016a8:	429a      	cmp	r2, r3
 80016aa:	da10      	bge.n	80016ce <d_name+0x316>
 80016ac:	6920      	ldr	r0, [r4, #16]
 80016ae:	4d17      	ldr	r5, [pc, #92]	; (800170c <d_name+0x354>)
 80016b0:	0111      	lsls	r1, r2, #4
 80016b2:	1843      	adds	r3, r0, r1
 80016b4:	3201      	adds	r2, #1
 80016b6:	6162      	str	r2, [r4, #20]
 80016b8:	2200      	movs	r2, #0
 80016ba:	605a      	str	r2, [r3, #4]
 80016bc:	5442      	strb	r2, [r0, r1]
 80016be:	220e      	movs	r2, #14
 80016c0:	e9c3 5202 	strd	r5, r2, [r3, #8]
 80016c4:	e762      	b.n	800158c <d_name+0x1d4>
 80016c6:	4620      	mov	r0, r4
 80016c8:	f7fe fefa 	bl	80004c0 <d_template_param>
 80016cc:	e79d      	b.n	800160a <d_name+0x252>
 80016ce:	2300      	movs	r3, #0
 80016d0:	e75c      	b.n	800158c <d_name+0x1d4>
 80016d2:	f8c8 7000 	str.w	r7, [r8]
 80016d6:	2f00      	cmp	r7, #0
 80016d8:	f43f af6c 	beq.w	80015b4 <d_name+0x1fc>
 80016dc:	f1b9 0f00 	cmp.w	r9, #0
 80016e0:	d004      	beq.n	80016ec <d_name+0x334>
 80016e2:	9b01      	ldr	r3, [sp, #4]
 80016e4:	f8c9 3008 	str.w	r3, [r9, #8]
 80016e8:	f8cd 9004 	str.w	r9, [sp, #4]
 80016ec:	7813      	ldrb	r3, [r2, #0]
 80016ee:	2b45      	cmp	r3, #69	; 0x45
 80016f0:	f47f af60 	bne.w	80015b4 <d_name+0x1fc>
 80016f4:	9d01      	ldr	r5, [sp, #4]
 80016f6:	3201      	adds	r2, #1
 80016f8:	4628      	mov	r0, r5
 80016fa:	60e2      	str	r2, [r4, #12]
 80016fc:	b003      	add	sp, #12
 80016fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001702:	bf00      	nop
 8001704:	0801ed70 	.word	0x0801ed70
 8001708:	100803ff 	.word	0x100803ff
 800170c:	0801ed60 	.word	0x0801ed60

08001710 <d_type>:
 8001710:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001714:	68c2      	ldr	r2, [r0, #12]
 8001716:	7813      	ldrb	r3, [r2, #0]
 8001718:	2b72      	cmp	r3, #114	; 0x72
 800171a:	b083      	sub	sp, #12
 800171c:	4604      	mov	r4, r0
 800171e:	d05f      	beq.n	80017e0 <d_type+0xd0>
 8001720:	2b56      	cmp	r3, #86	; 0x56
 8001722:	d05d      	beq.n	80017e0 <d_type+0xd0>
 8001724:	2b4b      	cmp	r3, #75	; 0x4b
 8001726:	d05b      	beq.n	80017e0 <d_type+0xd0>
 8001728:	2b44      	cmp	r3, #68	; 0x44
 800172a:	d051      	beq.n	80017d0 <d_type+0xc0>
 800172c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8001730:	294a      	cmp	r1, #74	; 0x4a
 8001732:	f200 809e 	bhi.w	8001872 <d_type+0x162>
 8001736:	e8df f011 	tbh	[pc, r1, lsl #1]
 800173a:	0111      	.short	0x0111
 800173c:	01110111 	.word	0x01110111
 8001740:	01110111 	.word	0x01110111
 8001744:	01110111 	.word	0x01110111
 8001748:	01110111 	.word	0x01110111
 800174c:	009c0111 	.word	0x009c0111
 8001750:	009c009c 	.word	0x009c009c
 8001754:	009c009c 	.word	0x009c009c
 8001758:	009c009c 	.word	0x009c009c
 800175c:	009c021e 	.word	0x009c021e
 8001760:	009c013b 	.word	0x009c013b
 8001764:	0135009c 	.word	0x0135009c
 8001768:	009c0149 	.word	0x009c0149
 800176c:	009c009c 	.word	0x009c009c
 8001770:	009c009c 	.word	0x009c009c
 8001774:	01110206 	.word	0x01110206
 8001778:	01650157 	.word	0x01650157
 800177c:	0173009c 	.word	0x0173009c
 8001780:	01a50181 	.word	0x01a50181
 8001784:	009c01cc 	.word	0x009c01cc
 8001788:	009c009c 	.word	0x009c009c
 800178c:	0111009c 	.word	0x0111009c
 8001790:	009c009c 	.word	0x009c009c
 8001794:	009c009c 	.word	0x009c009c
 8001798:	009c009c 	.word	0x009c009c
 800179c:	01e401e4 	.word	0x01e401e4
 80017a0:	01e401e4 	.word	0x01e401e4
 80017a4:	01e401e4 	.word	0x01e401e4
 80017a8:	01e401e4 	.word	0x01e401e4
 80017ac:	01e401e4 	.word	0x01e401e4
 80017b0:	01e4009c 	.word	0x01e4009c
 80017b4:	01e401e4 	.word	0x01e401e4
 80017b8:	009c01e4 	.word	0x009c01e4
 80017bc:	009c009c 	.word	0x009c009c
 80017c0:	01e401e4 	.word	0x01e401e4
 80017c4:	01e40127 	.word	0x01e40127
 80017c8:	01e401e4 	.word	0x01e401e4
 80017cc:	01e401e4 	.word	0x01e401e4
 80017d0:	7853      	ldrb	r3, [r2, #1]
 80017d2:	f003 01df 	and.w	r1, r3, #223	; 0xdf
 80017d6:	294f      	cmp	r1, #79	; 0x4f
 80017d8:	d002      	beq.n	80017e0 <d_type+0xd0>
 80017da:	3b77      	subs	r3, #119	; 0x77
 80017dc:	2b01      	cmp	r3, #1
 80017de:	d84d      	bhi.n	800187c <d_type+0x16c>
 80017e0:	2200      	movs	r2, #0
 80017e2:	a901      	add	r1, sp, #4
 80017e4:	4620      	mov	r0, r4
 80017e6:	f000 fc45 	bl	8002074 <d_cv_qualifiers>
 80017ea:	4605      	mov	r5, r0
 80017ec:	2800      	cmp	r0, #0
 80017ee:	d040      	beq.n	8001872 <d_type+0x162>
 80017f0:	68e3      	ldr	r3, [r4, #12]
 80017f2:	781b      	ldrb	r3, [r3, #0]
 80017f4:	2b46      	cmp	r3, #70	; 0x46
 80017f6:	4620      	mov	r0, r4
 80017f8:	d119      	bne.n	800182e <d_type+0x11e>
 80017fa:	f000 fd0f 	bl	800221c <d_function_type>
 80017fe:	6028      	str	r0, [r5, #0]
 8001800:	2800      	cmp	r0, #0
 8001802:	d036      	beq.n	8001872 <d_type+0x162>
 8001804:	7803      	ldrb	r3, [r0, #0]
 8001806:	9a01      	ldr	r2, [sp, #4]
 8001808:	3b1f      	subs	r3, #31
 800180a:	2b01      	cmp	r3, #1
 800180c:	d913      	bls.n	8001836 <d_type+0x126>
 800180e:	2a00      	cmp	r2, #0
 8001810:	d02f      	beq.n	8001872 <d_type+0x162>
 8001812:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
 8001816:	428b      	cmp	r3, r1
 8001818:	da2b      	bge.n	8001872 <d_type+0x162>
 800181a:	69e0      	ldr	r0, [r4, #28]
 800181c:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8001820:	1c59      	adds	r1, r3, #1
 8001822:	9d01      	ldr	r5, [sp, #4]
 8001824:	6221      	str	r1, [r4, #32]
 8001826:	4628      	mov	r0, r5
 8001828:	b003      	add	sp, #12
 800182a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800182e:	f7ff ff6f 	bl	8001710 <d_type>
 8001832:	6028      	str	r0, [r5, #0]
 8001834:	e7e4      	b.n	8001800 <d_type+0xf0>
 8001836:	6883      	ldr	r3, [r0, #8]
 8001838:	6082      	str	r2, [r0, #8]
 800183a:	682a      	ldr	r2, [r5, #0]
 800183c:	9201      	str	r2, [sp, #4]
 800183e:	602b      	str	r3, [r5, #0]
 8001840:	9a01      	ldr	r2, [sp, #4]
 8001842:	e7e4      	b.n	800180e <d_type+0xfe>
 8001844:	2301      	movs	r3, #1
 8001846:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8001848:	6343      	str	r3, [r0, #52]	; 0x34
 800184a:	f7ff fb37 	bl	8000ebc <d_expression_1>
 800184e:	6365      	str	r5, [r4, #52]	; 0x34
 8001850:	4602      	mov	r2, r0
 8001852:	2300      	movs	r3, #0
 8001854:	2142      	movs	r1, #66	; 0x42
 8001856:	4620      	mov	r0, r4
 8001858:	f7fe fcda 	bl	8000210 <d_make_comp>
 800185c:	4605      	mov	r5, r0
 800185e:	9001      	str	r0, [sp, #4]
 8001860:	b138      	cbz	r0, 8001872 <d_type+0x162>
 8001862:	68e3      	ldr	r3, [r4, #12]
 8001864:	781a      	ldrb	r2, [r3, #0]
 8001866:	b122      	cbz	r2, 8001872 <d_type+0x162>
 8001868:	1c5a      	adds	r2, r3, #1
 800186a:	60e2      	str	r2, [r4, #12]
 800186c:	781b      	ldrb	r3, [r3, #0]
 800186e:	2b45      	cmp	r3, #69	; 0x45
 8001870:	d07b      	beq.n	800196a <d_type+0x25a>
 8001872:	2500      	movs	r5, #0
 8001874:	4628      	mov	r0, r5
 8001876:	b003      	add	sp, #12
 8001878:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800187c:	1c53      	adds	r3, r2, #1
 800187e:	60c3      	str	r3, [r0, #12]
 8001880:	7853      	ldrb	r3, [r2, #1]
 8001882:	2b00      	cmp	r3, #0
 8001884:	d0f5      	beq.n	8001872 <d_type+0x162>
 8001886:	1c93      	adds	r3, r2, #2
 8001888:	60c3      	str	r3, [r0, #12]
 800188a:	7853      	ldrb	r3, [r2, #1]
 800188c:	3b46      	subs	r3, #70	; 0x46
 800188e:	2b30      	cmp	r3, #48	; 0x30
 8001890:	d8ef      	bhi.n	8001872 <d_type+0x162>
 8001892:	a101      	add	r1, pc, #4	; (adr r1, 8001898 <d_type+0x188>)
 8001894:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001898:	08001d55 	.word	0x08001d55
 800189c:	08001873 	.word	0x08001873
 80018a0:	08001873 	.word	0x08001873
 80018a4:	08001873 	.word	0x08001873
 80018a8:	08001873 	.word	0x08001873
 80018ac:	08001873 	.word	0x08001873
 80018b0:	08001873 	.word	0x08001873
 80018b4:	08001873 	.word	0x08001873
 80018b8:	08001873 	.word	0x08001873
 80018bc:	08001873 	.word	0x08001873
 80018c0:	08001873 	.word	0x08001873
 80018c4:	08001873 	.word	0x08001873
 80018c8:	08001873 	.word	0x08001873
 80018cc:	08001873 	.word	0x08001873
 80018d0:	08001845 	.word	0x08001845
 80018d4:	08001873 	.word	0x08001873
 80018d8:	08001873 	.word	0x08001873
 80018dc:	08001873 	.word	0x08001873
 80018e0:	08001873 	.word	0x08001873
 80018e4:	08001873 	.word	0x08001873
 80018e8:	08001873 	.word	0x08001873
 80018ec:	08001873 	.word	0x08001873
 80018f0:	08001873 	.word	0x08001873
 80018f4:	08001873 	.word	0x08001873
 80018f8:	08001873 	.word	0x08001873
 80018fc:	08001873 	.word	0x08001873
 8001900:	08001873 	.word	0x08001873
 8001904:	08001d31 	.word	0x08001d31
 8001908:	08001873 	.word	0x08001873
 800190c:	08001d0d 	.word	0x08001d0d
 8001910:	08001ce5 	.word	0x08001ce5
 8001914:	08001cbd 	.word	0x08001cbd
 8001918:	08001c95 	.word	0x08001c95
 800191c:	08001873 	.word	0x08001873
 8001920:	08001c6d 	.word	0x08001c6d
 8001924:	08001e09 	.word	0x08001e09
 8001928:	08001873 	.word	0x08001873
 800192c:	08001873 	.word	0x08001873
 8001930:	08001873 	.word	0x08001873
 8001934:	08001873 	.word	0x08001873
 8001938:	08001dbd 	.word	0x08001dbd
 800193c:	08001873 	.word	0x08001873
 8001940:	08001c57 	.word	0x08001c57
 8001944:	08001873 	.word	0x08001873
 8001948:	08001873 	.word	0x08001873
 800194c:	08001c2f 	.word	0x08001c2f
 8001950:	08001845 	.word	0x08001845
 8001954:	08001873 	.word	0x08001873
 8001958:	08001bf5 	.word	0x08001bf5
 800195c:	4620      	mov	r0, r4
 800195e:	f7ff fd2b 	bl	80013b8 <d_name>
 8001962:	4605      	mov	r5, r0
 8001964:	9001      	str	r0, [sp, #4]
 8001966:	2d00      	cmp	r5, #0
 8001968:	d083      	beq.n	8001872 <d_type+0x162>
 800196a:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800196e:	4293      	cmp	r3, r2
 8001970:	f6bf af7f 	bge.w	8001872 <d_type+0x162>
 8001974:	69e1      	ldr	r1, [r4, #28]
 8001976:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 800197a:	9d01      	ldr	r5, [sp, #4]
 800197c:	1c5a      	adds	r2, r3, #1
 800197e:	4628      	mov	r0, r5
 8001980:	6222      	str	r2, [r4, #32]
 8001982:	b003      	add	sp, #12
 8001984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001988:	3201      	adds	r2, #1
 800198a:	60e2      	str	r2, [r4, #12]
 800198c:	4620      	mov	r0, r4
 800198e:	f7fe fdb9 	bl	8000504 <d_source_name>
 8001992:	2300      	movs	r3, #0
 8001994:	4602      	mov	r2, r0
 8001996:	2128      	movs	r1, #40	; 0x28
 8001998:	4620      	mov	r0, r4
 800199a:	f7fe fc39 	bl	8000210 <d_make_comp>
 800199e:	4605      	mov	r5, r0
 80019a0:	9001      	str	r0, [sp, #4]
 80019a2:	e7e0      	b.n	8001966 <d_type+0x256>
 80019a4:	4620      	mov	r0, r4
 80019a6:	f000 fc39 	bl	800221c <d_function_type>
 80019aa:	4605      	mov	r5, r0
 80019ac:	9001      	str	r0, [sp, #4]
 80019ae:	e7da      	b.n	8001966 <d_type+0x256>
 80019b0:	3201      	adds	r2, #1
 80019b2:	60e2      	str	r2, [r4, #12]
 80019b4:	4620      	mov	r0, r4
 80019b6:	f7ff feab 	bl	8001710 <d_type>
 80019ba:	2300      	movs	r3, #0
 80019bc:	4602      	mov	r2, r0
 80019be:	2125      	movs	r1, #37	; 0x25
 80019c0:	4620      	mov	r0, r4
 80019c2:	f7fe fc25 	bl	8000210 <d_make_comp>
 80019c6:	4605      	mov	r5, r0
 80019c8:	9001      	str	r0, [sp, #4]
 80019ca:	e7cc      	b.n	8001966 <d_type+0x256>
 80019cc:	3201      	adds	r2, #1
 80019ce:	60e2      	str	r2, [r4, #12]
 80019d0:	4620      	mov	r0, r4
 80019d2:	f7ff fe9d 	bl	8001710 <d_type>
 80019d6:	2300      	movs	r3, #0
 80019d8:	4602      	mov	r2, r0
 80019da:	2126      	movs	r1, #38	; 0x26
 80019dc:	4620      	mov	r0, r4
 80019de:	f7fe fc17 	bl	8000210 <d_make_comp>
 80019e2:	4605      	mov	r5, r0
 80019e4:	9001      	str	r0, [sp, #4]
 80019e6:	e7be      	b.n	8001966 <d_type+0x256>
 80019e8:	3201      	adds	r2, #1
 80019ea:	60e2      	str	r2, [r4, #12]
 80019ec:	4620      	mov	r0, r4
 80019ee:	f7ff fe8f 	bl	8001710 <d_type>
 80019f2:	2300      	movs	r3, #0
 80019f4:	4602      	mov	r2, r0
 80019f6:	2124      	movs	r1, #36	; 0x24
 80019f8:	4620      	mov	r0, r4
 80019fa:	f7fe fc09 	bl	8000210 <d_make_comp>
 80019fe:	4605      	mov	r5, r0
 8001a00:	9001      	str	r0, [sp, #4]
 8001a02:	e7b0      	b.n	8001966 <d_type+0x256>
 8001a04:	3201      	adds	r2, #1
 8001a06:	60e2      	str	r2, [r4, #12]
 8001a08:	4620      	mov	r0, r4
 8001a0a:	f7ff fe81 	bl	8001710 <d_type>
 8001a0e:	2300      	movs	r3, #0
 8001a10:	4602      	mov	r2, r0
 8001a12:	2122      	movs	r1, #34	; 0x22
 8001a14:	4620      	mov	r0, r4
 8001a16:	f7fe fbfb 	bl	8000210 <d_make_comp>
 8001a1a:	4605      	mov	r5, r0
 8001a1c:	9001      	str	r0, [sp, #4]
 8001a1e:	e7a2      	b.n	8001966 <d_type+0x256>
 8001a20:	3201      	adds	r2, #1
 8001a22:	60e2      	str	r2, [r4, #12]
 8001a24:	4620      	mov	r0, r4
 8001a26:	f7ff fe73 	bl	8001710 <d_type>
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	4602      	mov	r2, r0
 8001a2e:	2123      	movs	r1, #35	; 0x23
 8001a30:	4620      	mov	r0, r4
 8001a32:	f7fe fbed 	bl	8000210 <d_make_comp>
 8001a36:	4605      	mov	r5, r0
 8001a38:	9001      	str	r0, [sp, #4]
 8001a3a:	e794      	b.n	8001966 <d_type+0x256>
 8001a3c:	7853      	ldrb	r3, [r2, #1]
 8001a3e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001a42:	2a09      	cmp	r2, #9
 8001a44:	d905      	bls.n	8001a52 <d_type+0x342>
 8001a46:	2b5f      	cmp	r3, #95	; 0x5f
 8001a48:	d003      	beq.n	8001a52 <d_type+0x342>
 8001a4a:	3b41      	subs	r3, #65	; 0x41
 8001a4c:	2b19      	cmp	r3, #25
 8001a4e:	f200 820f 	bhi.w	8001e70 <d_type+0x760>
 8001a52:	2100      	movs	r1, #0
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7fe fdcb 	bl	80005f0 <d_substitution>
 8001a5a:	68e3      	ldr	r3, [r4, #12]
 8001a5c:	9001      	str	r0, [sp, #4]
 8001a5e:	781a      	ldrb	r2, [r3, #0]
 8001a60:	2a49      	cmp	r2, #73	; 0x49
 8001a62:	4605      	mov	r5, r0
 8001a64:	f47f aedf 	bne.w	8001826 <d_type+0x116>
 8001a68:	3301      	adds	r3, #1
 8001a6a:	60e3      	str	r3, [r4, #12]
 8001a6c:	4620      	mov	r0, r4
 8001a6e:	f7ff fc37 	bl	80012e0 <d_template_args_1>
 8001a72:	4603      	mov	r3, r0
 8001a74:	462a      	mov	r2, r5
 8001a76:	2104      	movs	r1, #4
 8001a78:	4620      	mov	r0, r4
 8001a7a:	f7fe fbc9 	bl	8000210 <d_make_comp>
 8001a7e:	4605      	mov	r5, r0
 8001a80:	9001      	str	r0, [sp, #4]
 8001a82:	e770      	b.n	8001966 <d_type+0x256>
 8001a84:	4620      	mov	r0, r4
 8001a86:	f7fe fd1b 	bl	80004c0 <d_template_param>
 8001a8a:	68e6      	ldr	r6, [r4, #12]
 8001a8c:	9001      	str	r0, [sp, #4]
 8001a8e:	7833      	ldrb	r3, [r6, #0]
 8001a90:	2b49      	cmp	r3, #73	; 0x49
 8001a92:	4605      	mov	r5, r0
 8001a94:	f47f af67 	bne.w	8001966 <d_type+0x256>
 8001a98:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	f040 81f5 	bne.w	8001e8a <d_type+0x77a>
 8001aa0:	2800      	cmp	r0, #0
 8001aa2:	f43f aee6 	beq.w	8001872 <d_type+0x162>
 8001aa6:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 8001aaa:	428a      	cmp	r2, r1
 8001aac:	f6bf aee1 	bge.w	8001872 <d_type+0x162>
 8001ab0:	69e1      	ldr	r1, [r4, #28]
 8001ab2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8001ab6:	3201      	adds	r2, #1
 8001ab8:	6222      	str	r2, [r4, #32]
 8001aba:	7831      	ldrb	r1, [r6, #0]
 8001abc:	9d01      	ldr	r5, [sp, #4]
 8001abe:	3949      	subs	r1, #73	; 0x49
 8001ac0:	2901      	cmp	r1, #1
 8001ac2:	d8d7      	bhi.n	8001a74 <d_type+0x364>
 8001ac4:	3601      	adds	r6, #1
 8001ac6:	60e6      	str	r6, [r4, #12]
 8001ac8:	4620      	mov	r0, r4
 8001aca:	f7ff fc09 	bl	80012e0 <d_template_args_1>
 8001ace:	4603      	mov	r3, r0
 8001ad0:	e7d0      	b.n	8001a74 <d_type+0x364>
 8001ad2:	3201      	adds	r2, #1
 8001ad4:	60e2      	str	r2, [r4, #12]
 8001ad6:	4620      	mov	r0, r4
 8001ad8:	f7fe fd14 	bl	8000504 <d_source_name>
 8001adc:	68e3      	ldr	r3, [r4, #12]
 8001ade:	9001      	str	r0, [sp, #4]
 8001ae0:	781a      	ldrb	r2, [r3, #0]
 8001ae2:	2a49      	cmp	r2, #73	; 0x49
 8001ae4:	4605      	mov	r5, r0
 8001ae6:	f000 81a8 	beq.w	8001e3a <d_type+0x72a>
 8001aea:	4620      	mov	r0, r4
 8001aec:	f7ff fe10 	bl	8001710 <d_type>
 8001af0:	9b01      	ldr	r3, [sp, #4]
 8001af2:	4602      	mov	r2, r0
 8001af4:	2121      	movs	r1, #33	; 0x21
 8001af6:	4620      	mov	r0, r4
 8001af8:	f7fe fb8a 	bl	8000210 <d_make_comp>
 8001afc:	4605      	mov	r5, r0
 8001afe:	9001      	str	r0, [sp, #4]
 8001b00:	e731      	b.n	8001966 <d_type+0x256>
 8001b02:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
 8001b06:	3b61      	subs	r3, #97	; 0x61
 8001b08:	4db6      	ldr	r5, [pc, #728]	; (8001de4 <d_type+0x6d4>)
 8001b0a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001b0e:	4281      	cmp	r1, r0
 8001b10:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8001b14:	f280 818b 	bge.w	8001e2e <d_type+0x71e>
 8001b18:	6858      	ldr	r0, [r3, #4]
 8001b1a:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8001b1c:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8001b20:	010f      	lsls	r7, r1, #4
 8001b22:	eb0c 0507 	add.w	r5, ip, r7
 8001b26:	4406      	add	r6, r0
 8001b28:	4630      	mov	r0, r6
 8001b2a:	3201      	adds	r2, #1
 8001b2c:	3101      	adds	r1, #1
 8001b2e:	f04f 0e00 	mov.w	lr, #0
 8001b32:	2627      	movs	r6, #39	; 0x27
 8001b34:	f8c5 e004 	str.w	lr, [r5, #4]
 8001b38:	6161      	str	r1, [r4, #20]
 8001b3a:	f80c 6007 	strb.w	r6, [ip, r7]
 8001b3e:	60ab      	str	r3, [r5, #8]
 8001b40:	60e2      	str	r2, [r4, #12]
 8001b42:	6320      	str	r0, [r4, #48]	; 0x30
 8001b44:	e66f      	b.n	8001826 <d_type+0x116>
 8001b46:	3201      	adds	r2, #1
 8001b48:	60e2      	str	r2, [r4, #12]
 8001b4a:	4620      	mov	r0, r4
 8001b4c:	f7ff fde0 	bl	8001710 <d_type>
 8001b50:	4605      	mov	r5, r0
 8001b52:	2800      	cmp	r0, #0
 8001b54:	f43f ae8d 	beq.w	8001872 <d_type+0x162>
 8001b58:	4620      	mov	r0, r4
 8001b5a:	f7ff fdd9 	bl	8001710 <d_type>
 8001b5e:	4603      	mov	r3, r0
 8001b60:	2800      	cmp	r0, #0
 8001b62:	f43f ae86 	beq.w	8001872 <d_type+0x162>
 8001b66:	462a      	mov	r2, r5
 8001b68:	212b      	movs	r1, #43	; 0x2b
 8001b6a:	4620      	mov	r0, r4
 8001b6c:	f7fe fb50 	bl	8000210 <d_make_comp>
 8001b70:	4605      	mov	r5, r0
 8001b72:	9001      	str	r0, [sp, #4]
 8001b74:	e6f7      	b.n	8001966 <d_type+0x256>
 8001b76:	1c55      	adds	r5, r2, #1
 8001b78:	60e5      	str	r5, [r4, #12]
 8001b7a:	7853      	ldrb	r3, [r2, #1]
 8001b7c:	2b5f      	cmp	r3, #95	; 0x5f
 8001b7e:	f000 815a 	beq.w	8001e36 <d_type+0x726>
 8001b82:	3b30      	subs	r3, #48	; 0x30
 8001b84:	2b09      	cmp	r3, #9
 8001b86:	f200 8165 	bhi.w	8001e54 <d_type+0x744>
 8001b8a:	4628      	mov	r0, r5
 8001b8c:	e000      	b.n	8001b90 <d_type+0x480>
 8001b8e:	4608      	mov	r0, r1
 8001b90:	1c41      	adds	r1, r0, #1
 8001b92:	60e1      	str	r1, [r4, #12]
 8001b94:	7843      	ldrb	r3, [r0, #1]
 8001b96:	3b30      	subs	r3, #48	; 0x30
 8001b98:	2b09      	cmp	r3, #9
 8001b9a:	d9f8      	bls.n	8001b8e <d_type+0x47e>
 8001b9c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001ba0:	4293      	cmp	r3, r2
 8001ba2:	eba1 0705 	sub.w	r7, r1, r5
 8001ba6:	f6bf ae64 	bge.w	8001872 <d_type+0x162>
 8001baa:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8001bae:	ea4f 1c03 	mov.w	ip, r3, lsl #4
 8001bb2:	eb0e 060c 	add.w	r6, lr, ip
 8001bb6:	3301      	adds	r3, #1
 8001bb8:	2200      	movs	r2, #0
 8001bba:	6072      	str	r2, [r6, #4]
 8001bbc:	6163      	str	r3, [r4, #20]
 8001bbe:	2f00      	cmp	r7, #0
 8001bc0:	f43f ae57 	beq.w	8001872 <d_type+0x162>
 8001bc4:	6072      	str	r2, [r6, #4]
 8001bc6:	f80e 200c 	strb.w	r2, [lr, ip]
 8001bca:	e9c6 5702 	strd	r5, r7, [r6, #8]
 8001bce:	7843      	ldrb	r3, [r0, #1]
 8001bd0:	460d      	mov	r5, r1
 8001bd2:	2b5f      	cmp	r3, #95	; 0x5f
 8001bd4:	f47f ae4d 	bne.w	8001872 <d_type+0x162>
 8001bd8:	3501      	adds	r5, #1
 8001bda:	60e5      	str	r5, [r4, #12]
 8001bdc:	4620      	mov	r0, r4
 8001bde:	f7ff fd97 	bl	8001710 <d_type>
 8001be2:	4632      	mov	r2, r6
 8001be4:	4603      	mov	r3, r0
 8001be6:	212a      	movs	r1, #42	; 0x2a
 8001be8:	4620      	mov	r0, r4
 8001bea:	f7fe fb11 	bl	8000210 <d_make_comp>
 8001bee:	4605      	mov	r5, r0
 8001bf0:	9001      	str	r0, [sp, #4]
 8001bf2:	e6b8      	b.n	8001966 <d_type+0x256>
 8001bf4:	7893      	ldrb	r3, [r2, #2]
 8001bf6:	2b5f      	cmp	r3, #95	; 0x5f
 8001bf8:	f000 8178 	beq.w	8001eec <d_type+0x7dc>
 8001bfc:	f7fe fc2e 	bl	800045c <d_number_component>
 8001c00:	4605      	mov	r5, r0
 8001c02:	2d00      	cmp	r5, #0
 8001c04:	f43f ae35 	beq.w	8001872 <d_type+0x162>
 8001c08:	68e3      	ldr	r3, [r4, #12]
 8001c0a:	781a      	ldrb	r2, [r3, #0]
 8001c0c:	2a5f      	cmp	r2, #95	; 0x5f
 8001c0e:	f47f ae30 	bne.w	8001872 <d_type+0x162>
 8001c12:	3301      	adds	r3, #1
 8001c14:	60e3      	str	r3, [r4, #12]
 8001c16:	4620      	mov	r0, r4
 8001c18:	f7ff fd7a 	bl	8001710 <d_type>
 8001c1c:	462a      	mov	r2, r5
 8001c1e:	4603      	mov	r3, r0
 8001c20:	212d      	movs	r1, #45	; 0x2d
 8001c22:	4620      	mov	r0, r4
 8001c24:	f7fe faf4 	bl	8000210 <d_make_comp>
 8001c28:	4605      	mov	r5, r0
 8001c2a:	9001      	str	r0, [sp, #4]
 8001c2c:	e69b      	b.n	8001966 <d_type+0x256>
 8001c2e:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c32:	4293      	cmp	r3, r2
 8001c34:	f280 80fb 	bge.w	8001e2e <d_type+0x71e>
 8001c38:	6900      	ldr	r0, [r0, #16]
 8001c3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c3c:	0119      	lsls	r1, r3, #4
 8001c3e:	1845      	adds	r5, r0, r1
 8001c40:	3301      	adds	r3, #1
 8001c42:	2600      	movs	r6, #0
 8001c44:	606e      	str	r6, [r5, #4]
 8001c46:	3208      	adds	r2, #8
 8001c48:	6163      	str	r3, [r4, #20]
 8001c4a:	2627      	movs	r6, #39	; 0x27
 8001c4c:	4b66      	ldr	r3, [pc, #408]	; (8001de8 <d_type+0x6d8>)
 8001c4e:	5446      	strb	r6, [r0, r1]
 8001c50:	60ab      	str	r3, [r5, #8]
 8001c52:	6322      	str	r2, [r4, #48]	; 0x30
 8001c54:	e5e7      	b.n	8001826 <d_type+0x116>
 8001c56:	f7ff fd5b 	bl	8001710 <d_type>
 8001c5a:	2300      	movs	r3, #0
 8001c5c:	4602      	mov	r2, r0
 8001c5e:	214a      	movs	r1, #74	; 0x4a
 8001c60:	4620      	mov	r0, r4
 8001c62:	f7fe fad5 	bl	8000210 <d_make_comp>
 8001c66:	4605      	mov	r5, r0
 8001c68:	9001      	str	r0, [sp, #4]
 8001c6a:	e67c      	b.n	8001966 <d_type+0x256>
 8001c6c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c70:	4293      	cmp	r3, r2
 8001c72:	f280 80dc 	bge.w	8001e2e <d_type+0x71e>
 8001c76:	6900      	ldr	r0, [r0, #16]
 8001c78:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c7a:	0119      	lsls	r1, r3, #4
 8001c7c:	1845      	adds	r5, r0, r1
 8001c7e:	3301      	adds	r3, #1
 8001c80:	2600      	movs	r6, #0
 8001c82:	606e      	str	r6, [r5, #4]
 8001c84:	3204      	adds	r2, #4
 8001c86:	6163      	str	r3, [r4, #20]
 8001c88:	2627      	movs	r6, #39	; 0x27
 8001c8a:	4b58      	ldr	r3, [pc, #352]	; (8001dec <d_type+0x6dc>)
 8001c8c:	5446      	strb	r6, [r0, r1]
 8001c8e:	60ab      	str	r3, [r5, #8]
 8001c90:	6322      	str	r2, [r4, #48]	; 0x30
 8001c92:	e5c8      	b.n	8001826 <d_type+0x116>
 8001c94:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c98:	4293      	cmp	r3, r2
 8001c9a:	f280 80c8 	bge.w	8001e2e <d_type+0x71e>
 8001c9e:	6900      	ldr	r0, [r0, #16]
 8001ca0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001ca2:	0119      	lsls	r1, r3, #4
 8001ca4:	1845      	adds	r5, r0, r1
 8001ca6:	3301      	adds	r3, #1
 8001ca8:	2600      	movs	r6, #0
 8001caa:	606e      	str	r6, [r5, #4]
 8001cac:	3209      	adds	r2, #9
 8001cae:	6163      	str	r3, [r4, #20]
 8001cb0:	2627      	movs	r6, #39	; 0x27
 8001cb2:	4b4f      	ldr	r3, [pc, #316]	; (8001df0 <d_type+0x6e0>)
 8001cb4:	5446      	strb	r6, [r0, r1]
 8001cb6:	60ab      	str	r3, [r5, #8]
 8001cb8:	6322      	str	r2, [r4, #48]	; 0x30
 8001cba:	e5b4      	b.n	8001826 <d_type+0x116>
 8001cbc:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001cc0:	4293      	cmp	r3, r2
 8001cc2:	f280 80b4 	bge.w	8001e2e <d_type+0x71e>
 8001cc6:	6900      	ldr	r0, [r0, #16]
 8001cc8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001cca:	0119      	lsls	r1, r3, #4
 8001ccc:	1845      	adds	r5, r0, r1
 8001cce:	3301      	adds	r3, #1
 8001cd0:	2600      	movs	r6, #0
 8001cd2:	606e      	str	r6, [r5, #4]
 8001cd4:	320a      	adds	r2, #10
 8001cd6:	6163      	str	r3, [r4, #20]
 8001cd8:	2627      	movs	r6, #39	; 0x27
 8001cda:	4b46      	ldr	r3, [pc, #280]	; (8001df4 <d_type+0x6e4>)
 8001cdc:	5446      	strb	r6, [r0, r1]
 8001cde:	60ab      	str	r3, [r5, #8]
 8001ce0:	6322      	str	r2, [r4, #48]	; 0x30
 8001ce2:	e5a0      	b.n	8001826 <d_type+0x116>
 8001ce4:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001ce8:	4293      	cmp	r3, r2
 8001cea:	f280 80a0 	bge.w	8001e2e <d_type+0x71e>
 8001cee:	6900      	ldr	r0, [r0, #16]
 8001cf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001cf2:	0119      	lsls	r1, r3, #4
 8001cf4:	1845      	adds	r5, r0, r1
 8001cf6:	3301      	adds	r3, #1
 8001cf8:	2600      	movs	r6, #0
 8001cfa:	606e      	str	r6, [r5, #4]
 8001cfc:	3209      	adds	r2, #9
 8001cfe:	6163      	str	r3, [r4, #20]
 8001d00:	2627      	movs	r6, #39	; 0x27
 8001d02:	4b3d      	ldr	r3, [pc, #244]	; (8001df8 <d_type+0x6e8>)
 8001d04:	5446      	strb	r6, [r0, r1]
 8001d06:	60ab      	str	r3, [r5, #8]
 8001d08:	6322      	str	r2, [r4, #48]	; 0x30
 8001d0a:	e58c      	b.n	8001826 <d_type+0x116>
 8001d0c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001d10:	4293      	cmp	r3, r2
 8001d12:	f6bf adae 	bge.w	8001872 <d_type+0x162>
 8001d16:	6901      	ldr	r1, [r0, #16]
 8001d18:	4e38      	ldr	r6, [pc, #224]	; (8001dfc <d_type+0x6ec>)
 8001d1a:	011a      	lsls	r2, r3, #4
 8001d1c:	188d      	adds	r5, r1, r2
 8001d1e:	3301      	adds	r3, #1
 8001d20:	6143      	str	r3, [r0, #20]
 8001d22:	2300      	movs	r3, #0
 8001d24:	200e      	movs	r0, #14
 8001d26:	606b      	str	r3, [r5, #4]
 8001d28:	548b      	strb	r3, [r1, r2]
 8001d2a:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001d2e:	e57a      	b.n	8001826 <d_type+0x116>
 8001d30:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001d34:	4293      	cmp	r3, r2
 8001d36:	f6bf ad9c 	bge.w	8001872 <d_type+0x162>
 8001d3a:	6901      	ldr	r1, [r0, #16]
 8001d3c:	4e30      	ldr	r6, [pc, #192]	; (8001e00 <d_type+0x6f0>)
 8001d3e:	011a      	lsls	r2, r3, #4
 8001d40:	188d      	adds	r5, r1, r2
 8001d42:	3301      	adds	r3, #1
 8001d44:	6143      	str	r3, [r0, #20]
 8001d46:	2300      	movs	r3, #0
 8001d48:	2004      	movs	r0, #4
 8001d4a:	606b      	str	r3, [r5, #4]
 8001d4c:	548b      	strb	r3, [r1, r2]
 8001d4e:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001d52:	e568      	b.n	8001826 <d_type+0x116>
 8001d54:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8001d58:	428b      	cmp	r3, r1
 8001d5a:	f280 80af 	bge.w	8001ebc <d_type+0x7ac>
 8001d5e:	6905      	ldr	r5, [r0, #16]
 8001d60:	0118      	lsls	r0, r3, #4
 8001d62:	1829      	adds	r1, r5, r0
 8001d64:	3301      	adds	r3, #1
 8001d66:	2700      	movs	r7, #0
 8001d68:	262c      	movs	r6, #44	; 0x2c
 8001d6a:	604f      	str	r7, [r1, #4]
 8001d6c:	9101      	str	r1, [sp, #4]
 8001d6e:	6163      	str	r3, [r4, #20]
 8001d70:	542e      	strb	r6, [r5, r0]
 8001d72:	7893      	ldrb	r3, [r2, #2]
 8001d74:	3b30      	subs	r3, #48	; 0x30
 8001d76:	b2db      	uxtb	r3, r3
 8001d78:	2b09      	cmp	r3, #9
 8001d7a:	bf94      	ite	ls
 8001d7c:	2301      	movls	r3, #1
 8001d7e:	463b      	movhi	r3, r7
 8001d80:	818b      	strh	r3, [r1, #12]
 8001d82:	f240 80ae 	bls.w	8001ee2 <d_type+0x7d2>
 8001d86:	4620      	mov	r0, r4
 8001d88:	9d01      	ldr	r5, [sp, #4]
 8001d8a:	f7ff fcc1 	bl	8001710 <d_type>
 8001d8e:	9b01      	ldr	r3, [sp, #4]
 8001d90:	60a8      	str	r0, [r5, #8]
 8001d92:	689b      	ldr	r3, [r3, #8]
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	f43f ad6c 	beq.w	8001872 <d_type+0x162>
 8001d9a:	f104 000c 	add.w	r0, r4, #12
 8001d9e:	f7fe fb31 	bl	8000404 <d_number.isra.1>
 8001da2:	68e2      	ldr	r2, [r4, #12]
 8001da4:	7813      	ldrb	r3, [r2, #0]
 8001da6:	b113      	cbz	r3, 8001dae <d_type+0x69e>
 8001da8:	1c53      	adds	r3, r2, #1
 8001daa:	60e3      	str	r3, [r4, #12]
 8001dac:	7813      	ldrb	r3, [r2, #0]
 8001dae:	9d01      	ldr	r5, [sp, #4]
 8001db0:	f1a3 0273 	sub.w	r2, r3, #115	; 0x73
 8001db4:	4253      	negs	r3, r2
 8001db6:	4153      	adcs	r3, r2
 8001db8:	81eb      	strh	r3, [r5, #14]
 8001dba:	e534      	b.n	8001826 <d_type+0x116>
 8001dbc:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001dc0:	4293      	cmp	r3, r2
 8001dc2:	da34      	bge.n	8001e2e <d_type+0x71e>
 8001dc4:	6900      	ldr	r0, [r0, #16]
 8001dc6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001dc8:	0119      	lsls	r1, r3, #4
 8001dca:	1845      	adds	r5, r0, r1
 8001dcc:	3301      	adds	r3, #1
 8001dce:	2600      	movs	r6, #0
 8001dd0:	606e      	str	r6, [r5, #4]
 8001dd2:	3211      	adds	r2, #17
 8001dd4:	6163      	str	r3, [r4, #20]
 8001dd6:	2627      	movs	r6, #39	; 0x27
 8001dd8:	4b0a      	ldr	r3, [pc, #40]	; (8001e04 <d_type+0x6f4>)
 8001dda:	5446      	strb	r6, [r0, r1]
 8001ddc:	60ab      	str	r3, [r5, #8]
 8001dde:	6322      	str	r2, [r4, #48]	; 0x30
 8001de0:	e521      	b.n	8001826 <d_type+0x116>
 8001de2:	bf00      	nop
 8001de4:	08011884 	.word	0x08011884
 8001de8:	08011adc 	.word	0x08011adc
 8001dec:	08011ac8 	.word	0x08011ac8
 8001df0:	08011a8c 	.word	0x08011a8c
 8001df4:	08011ab4 	.word	0x08011ab4
 8001df8:	08011aa0 	.word	0x08011aa0
 8001dfc:	0801ed7c 	.word	0x0801ed7c
 8001e00:	0801ed74 	.word	0x0801ed74
 8001e04:	08011b04 	.word	0x08011b04
 8001e08:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001e0c:	4293      	cmp	r3, r2
 8001e0e:	da0e      	bge.n	8001e2e <d_type+0x71e>
 8001e10:	6900      	ldr	r0, [r0, #16]
 8001e12:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001e14:	0119      	lsls	r1, r3, #4
 8001e16:	1845      	adds	r5, r0, r1
 8001e18:	3301      	adds	r3, #1
 8001e1a:	2600      	movs	r6, #0
 8001e1c:	606e      	str	r6, [r5, #4]
 8001e1e:	3208      	adds	r2, #8
 8001e20:	6163      	str	r3, [r4, #20]
 8001e22:	2627      	movs	r6, #39	; 0x27
 8001e24:	4b36      	ldr	r3, [pc, #216]	; (8001f00 <d_type+0x7f0>)
 8001e26:	5446      	strb	r6, [r0, r1]
 8001e28:	60ab      	str	r3, [r5, #8]
 8001e2a:	6322      	str	r2, [r4, #48]	; 0x30
 8001e2c:	e4fb      	b.n	8001826 <d_type+0x116>
 8001e2e:	2300      	movs	r3, #0
 8001e30:	9301      	str	r3, [sp, #4]
 8001e32:	689b      	ldr	r3, [r3, #8]
 8001e34:	deff      	udf	#255	; 0xff
 8001e36:	2600      	movs	r6, #0
 8001e38:	e6ce      	b.n	8001bd8 <d_type+0x4c8>
 8001e3a:	3301      	adds	r3, #1
 8001e3c:	60e3      	str	r3, [r4, #12]
 8001e3e:	4620      	mov	r0, r4
 8001e40:	f7ff fa4e 	bl	80012e0 <d_template_args_1>
 8001e44:	462a      	mov	r2, r5
 8001e46:	4603      	mov	r3, r0
 8001e48:	2104      	movs	r1, #4
 8001e4a:	4620      	mov	r0, r4
 8001e4c:	f7fe f9e0 	bl	8000210 <d_make_comp>
 8001e50:	9001      	str	r0, [sp, #4]
 8001e52:	e64a      	b.n	8001aea <d_type+0x3da>
 8001e54:	2301      	movs	r3, #1
 8001e56:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8001e58:	6363      	str	r3, [r4, #52]	; 0x34
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	f7ff f82e 	bl	8000ebc <d_expression_1>
 8001e60:	6365      	str	r5, [r4, #52]	; 0x34
 8001e62:	4606      	mov	r6, r0
 8001e64:	2800      	cmp	r0, #0
 8001e66:	f43f ad04 	beq.w	8001872 <d_type+0x162>
 8001e6a:	68e5      	ldr	r5, [r4, #12]
 8001e6c:	782b      	ldrb	r3, [r5, #0]
 8001e6e:	e6b0      	b.n	8001bd2 <d_type+0x4c2>
 8001e70:	4620      	mov	r0, r4
 8001e72:	f7ff faa1 	bl	80013b8 <d_name>
 8001e76:	4605      	mov	r5, r0
 8001e78:	9001      	str	r0, [sp, #4]
 8001e7a:	2800      	cmp	r0, #0
 8001e7c:	f43f acf9 	beq.w	8001872 <d_type+0x162>
 8001e80:	7803      	ldrb	r3, [r0, #0]
 8001e82:	2b18      	cmp	r3, #24
 8001e84:	f47f ad71 	bne.w	800196a <d_type+0x25a>
 8001e88:	e4cd      	b.n	8001826 <d_type+0x116>
 8001e8a:	1c73      	adds	r3, r6, #1
 8001e8c:	60e3      	str	r3, [r4, #12]
 8001e8e:	4620      	mov	r0, r4
 8001e90:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8001e94:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8001e98:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8001e9a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8001e9c:	f7ff fa20 	bl	80012e0 <d_template_args_1>
 8001ea0:	68e2      	ldr	r2, [r4, #12]
 8001ea2:	7812      	ldrb	r2, [r2, #0]
 8001ea4:	2a49      	cmp	r2, #73	; 0x49
 8001ea6:	4603      	mov	r3, r0
 8001ea8:	d00b      	beq.n	8001ec2 <d_type+0x7b2>
 8001eaa:	6325      	str	r5, [r4, #48]	; 0x30
 8001eac:	60e6      	str	r6, [r4, #12]
 8001eae:	f8c4 9014 	str.w	r9, [r4, #20]
 8001eb2:	f8c4 8020 	str.w	r8, [r4, #32]
 8001eb6:	62a7      	str	r7, [r4, #40]	; 0x28
 8001eb8:	9d01      	ldr	r5, [sp, #4]
 8001eba:	e554      	b.n	8001966 <d_type+0x256>
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	701b      	strb	r3, [r3, #0]
 8001ec0:	deff      	udf	#255	; 0xff
 8001ec2:	9901      	ldr	r1, [sp, #4]
 8001ec4:	2900      	cmp	r1, #0
 8001ec6:	f43f acd4 	beq.w	8001872 <d_type+0x162>
 8001eca:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
 8001ece:	4282      	cmp	r2, r0
 8001ed0:	f6bf accf 	bge.w	8001872 <d_type+0x162>
 8001ed4:	69e0      	ldr	r0, [r4, #28]
 8001ed6:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8001eda:	3201      	adds	r2, #1
 8001edc:	6222      	str	r2, [r4, #32]
 8001ede:	9a01      	ldr	r2, [sp, #4]
 8001ee0:	e5c9      	b.n	8001a76 <d_type+0x366>
 8001ee2:	f104 000c 	add.w	r0, r4, #12
 8001ee6:	f7fe fa8d 	bl	8000404 <d_number.isra.1>
 8001eea:	e74c      	b.n	8001d86 <d_type+0x676>
 8001eec:	3203      	adds	r2, #3
 8001eee:	2301      	movs	r3, #1
 8001ef0:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8001ef2:	60c2      	str	r2, [r0, #12]
 8001ef4:	6343      	str	r3, [r0, #52]	; 0x34
 8001ef6:	f7fe ffe1 	bl	8000ebc <d_expression_1>
 8001efa:	6366      	str	r6, [r4, #52]	; 0x34
 8001efc:	4605      	mov	r5, r0
 8001efe:	e680      	b.n	8001c02 <d_type+0x4f2>
 8001f00:	08011af0 	.word	0x08011af0

08001f04 <d_operator_name>:
 8001f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f06:	68c3      	ldr	r3, [r0, #12]
 8001f08:	781e      	ldrb	r6, [r3, #0]
 8001f0a:	4686      	mov	lr, r0
 8001f0c:	b336      	cbz	r6, 8001f5c <d_operator_name+0x58>
 8001f0e:	1c5a      	adds	r2, r3, #1
 8001f10:	60c2      	str	r2, [r0, #12]
 8001f12:	785a      	ldrb	r2, [r3, #1]
 8001f14:	781e      	ldrb	r6, [r3, #0]
 8001f16:	2a00      	cmp	r2, #0
 8001f18:	d04a      	beq.n	8001fb0 <d_operator_name+0xac>
 8001f1a:	1c9a      	adds	r2, r3, #2
 8001f1c:	60c2      	str	r2, [r0, #12]
 8001f1e:	2e76      	cmp	r6, #118	; 0x76
 8001f20:	4604      	mov	r4, r0
 8001f22:	f893 c001 	ldrb.w	ip, [r3, #1]
 8001f26:	d145      	bne.n	8001fb4 <d_operator_name+0xb0>
 8001f28:	f1ac 0530 	sub.w	r5, ip, #48	; 0x30
 8001f2c:	b2eb      	uxtb	r3, r5
 8001f2e:	2b09      	cmp	r3, #9
 8001f30:	d815      	bhi.n	8001f5e <d_operator_name+0x5a>
 8001f32:	f7fe fae7 	bl	8000504 <d_source_name>
 8001f36:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8001f3a:	428b      	cmp	r3, r1
 8001f3c:	4602      	mov	r2, r0
 8001f3e:	da21      	bge.n	8001f84 <d_operator_name+0x80>
 8001f40:	6926      	ldr	r6, [r4, #16]
 8001f42:	0119      	lsls	r1, r3, #4
 8001f44:	1870      	adds	r0, r6, r1
 8001f46:	3301      	adds	r3, #1
 8001f48:	2700      	movs	r7, #0
 8001f4a:	6047      	str	r7, [r0, #4]
 8001f4c:	6163      	str	r3, [r4, #20]
 8001f4e:	b1ca      	cbz	r2, 8001f84 <d_operator_name+0x80>
 8001f50:	2332      	movs	r3, #50	; 0x32
 8001f52:	6047      	str	r7, [r0, #4]
 8001f54:	5473      	strb	r3, [r6, r1]
 8001f56:	e9c0 5202 	strd	r5, r2, [r0, #8]
 8001f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f5c:	46b4      	mov	ip, r6
 8001f5e:	4c23      	ldr	r4, [pc, #140]	; (8001fec <d_operator_name+0xe8>)
 8001f60:	2043      	movs	r0, #67	; 0x43
 8001f62:	2200      	movs	r2, #0
 8001f64:	1a83      	subs	r3, r0, r2
 8001f66:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8001f6a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8001f6e:	0119      	lsls	r1, r3, #4
 8001f70:	1867      	adds	r7, r4, r1
 8001f72:	5861      	ldr	r1, [r4, r1]
 8001f74:	780d      	ldrb	r5, [r1, #0]
 8001f76:	42b5      	cmp	r5, r6
 8001f78:	d006      	beq.n	8001f88 <d_operator_name+0x84>
 8001f7a:	bf94      	ite	ls
 8001f7c:	1c5a      	addls	r2, r3, #1
 8001f7e:	4618      	movhi	r0, r3
 8001f80:	4282      	cmp	r2, r0
 8001f82:	d1ef      	bne.n	8001f64 <d_operator_name+0x60>
 8001f84:	2000      	movs	r0, #0
 8001f86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f88:	7849      	ldrb	r1, [r1, #1]
 8001f8a:	4561      	cmp	r1, ip
 8001f8c:	d1f5      	bne.n	8001f7a <d_operator_name+0x76>
 8001f8e:	e9de 3205 	ldrd	r3, r2, [lr, #20]
 8001f92:	4293      	cmp	r3, r2
 8001f94:	daf6      	bge.n	8001f84 <d_operator_name+0x80>
 8001f96:	f8de 1010 	ldr.w	r1, [lr, #16]
 8001f9a:	011a      	lsls	r2, r3, #4
 8001f9c:	1888      	adds	r0, r1, r2
 8001f9e:	3301      	adds	r3, #1
 8001fa0:	2500      	movs	r5, #0
 8001fa2:	2431      	movs	r4, #49	; 0x31
 8001fa4:	6045      	str	r5, [r0, #4]
 8001fa6:	f8ce 3014 	str.w	r3, [lr, #20]
 8001faa:	548c      	strb	r4, [r1, r2]
 8001fac:	6087      	str	r7, [r0, #8]
 8001fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fb0:	4694      	mov	ip, r2
 8001fb2:	e7d4      	b.n	8001f5e <d_operator_name+0x5a>
 8001fb4:	2e63      	cmp	r6, #99	; 0x63
 8001fb6:	d1d2      	bne.n	8001f5e <d_operator_name+0x5a>
 8001fb8:	f1bc 0f76 	cmp.w	ip, #118	; 0x76
 8001fbc:	d1cf      	bne.n	8001f5e <d_operator_name+0x5a>
 8001fbe:	e9d0 350d 	ldrd	r3, r5, [r0, #52]	; 0x34
 8001fc2:	fab3 f383 	clz	r3, r3
 8001fc6:	095b      	lsrs	r3, r3, #5
 8001fc8:	6383      	str	r3, [r0, #56]	; 0x38
 8001fca:	f7ff fba1 	bl	8001710 <d_type>
 8001fce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001fd0:	4602      	mov	r2, r0
 8001fd2:	b92b      	cbnz	r3, 8001fe0 <d_operator_name+0xdc>
 8001fd4:	2133      	movs	r1, #51	; 0x33
 8001fd6:	4620      	mov	r0, r4
 8001fd8:	f7fe f91a 	bl	8000210 <d_make_comp>
 8001fdc:	63a5      	str	r5, [r4, #56]	; 0x38
 8001fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	2134      	movs	r1, #52	; 0x34
 8001fe4:	4620      	mov	r0, r4
 8001fe6:	f7fe f913 	bl	8000210 <d_make_comp>
 8001fea:	e7f7      	b.n	8001fdc <d_operator_name+0xd8>
 8001fec:	08011b18 	.word	0x08011b18

08001ff0 <d_parmlist>:
 8001ff0:	b530      	push	{r4, r5, lr}
 8001ff2:	68c2      	ldr	r2, [r0, #12]
 8001ff4:	b083      	sub	sp, #12
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	9301      	str	r3, [sp, #4]
 8001ffa:	7813      	ldrb	r3, [r2, #0]
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d036      	beq.n	800206e <d_parmlist+0x7e>
 8002000:	2b45      	cmp	r3, #69	; 0x45
 8002002:	d034      	beq.n	800206e <d_parmlist+0x7e>
 8002004:	2b2e      	cmp	r3, #46	; 0x2e
 8002006:	d032      	beq.n	800206e <d_parmlist+0x7e>
 8002008:	4604      	mov	r4, r0
 800200a:	ad01      	add	r5, sp, #4
 800200c:	e015      	b.n	800203a <d_parmlist+0x4a>
 800200e:	2b4f      	cmp	r3, #79	; 0x4f
 8002010:	d016      	beq.n	8002040 <d_parmlist+0x50>
 8002012:	f7ff fb7d 	bl	8001710 <d_type>
 8002016:	2300      	movs	r3, #0
 8002018:	4602      	mov	r2, r0
 800201a:	212e      	movs	r1, #46	; 0x2e
 800201c:	b338      	cbz	r0, 800206e <d_parmlist+0x7e>
 800201e:	4620      	mov	r0, r4
 8002020:	f7fe f8f6 	bl	8000210 <d_make_comp>
 8002024:	6028      	str	r0, [r5, #0]
 8002026:	b310      	cbz	r0, 800206e <d_parmlist+0x7e>
 8002028:	68e2      	ldr	r2, [r4, #12]
 800202a:	7813      	ldrb	r3, [r2, #0]
 800202c:	f100 050c 	add.w	r5, r0, #12
 8002030:	b14b      	cbz	r3, 8002046 <d_parmlist+0x56>
 8002032:	2b45      	cmp	r3, #69	; 0x45
 8002034:	d007      	beq.n	8002046 <d_parmlist+0x56>
 8002036:	2b2e      	cmp	r3, #46	; 0x2e
 8002038:	d005      	beq.n	8002046 <d_parmlist+0x56>
 800203a:	2b52      	cmp	r3, #82	; 0x52
 800203c:	4620      	mov	r0, r4
 800203e:	d1e6      	bne.n	800200e <d_parmlist+0x1e>
 8002040:	7853      	ldrb	r3, [r2, #1]
 8002042:	2b45      	cmp	r3, #69	; 0x45
 8002044:	d1e5      	bne.n	8002012 <d_parmlist+0x22>
 8002046:	9801      	ldr	r0, [sp, #4]
 8002048:	b188      	cbz	r0, 800206e <d_parmlist+0x7e>
 800204a:	68c3      	ldr	r3, [r0, #12]
 800204c:	b10b      	cbz	r3, 8002052 <d_parmlist+0x62>
 800204e:	b003      	add	sp, #12
 8002050:	bd30      	pop	{r4, r5, pc}
 8002052:	6882      	ldr	r2, [r0, #8]
 8002054:	7811      	ldrb	r1, [r2, #0]
 8002056:	2927      	cmp	r1, #39	; 0x27
 8002058:	d1f9      	bne.n	800204e <d_parmlist+0x5e>
 800205a:	6892      	ldr	r2, [r2, #8]
 800205c:	7c11      	ldrb	r1, [r2, #16]
 800205e:	2909      	cmp	r1, #9
 8002060:	d1f5      	bne.n	800204e <d_parmlist+0x5e>
 8002062:	6851      	ldr	r1, [r2, #4]
 8002064:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8002066:	1a52      	subs	r2, r2, r1
 8002068:	6322      	str	r2, [r4, #48]	; 0x30
 800206a:	6083      	str	r3, [r0, #8]
 800206c:	e7ef      	b.n	800204e <d_parmlist+0x5e>
 800206e:	2000      	movs	r0, #0
 8002070:	b003      	add	sp, #12
 8002072:	bd30      	pop	{r4, r5, pc}

08002074 <d_cv_qualifiers>:
 8002074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002078:	4689      	mov	r9, r1
 800207a:	b083      	sub	sp, #12
 800207c:	68c1      	ldr	r1, [r0, #12]
 800207e:	1e13      	subs	r3, r2, #0
 8002080:	9301      	str	r3, [sp, #4]
 8002082:	4604      	mov	r4, r0
 8002084:	780b      	ldrb	r3, [r1, #0]
 8002086:	bf15      	itete	ne
 8002088:	f04f 081e 	movne.w	r8, #30
 800208c:	f04f 081b 	moveq.w	r8, #27
 8002090:	271d      	movne	r7, #29
 8002092:	271a      	moveq	r7, #26
 8002094:	bf14      	ite	ne
 8002096:	261c      	movne	r6, #28
 8002098:	2619      	moveq	r6, #25
 800209a:	464d      	mov	r5, r9
 800209c:	f04f 0a01 	mov.w	sl, #1
 80020a0:	e01c      	b.n	80020dc <d_cv_qualifiers+0x68>
 80020a2:	2b56      	cmp	r3, #86	; 0x56
 80020a4:	d03f      	beq.n	8002126 <d_cv_qualifiers+0xb2>
 80020a6:	2b4b      	cmp	r3, #75	; 0x4b
 80020a8:	d043      	beq.n	8002132 <d_cv_qualifiers+0xbe>
 80020aa:	784b      	ldrb	r3, [r1, #1]
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d035      	beq.n	800211c <d_cv_qualifiers+0xa8>
 80020b0:	1c8b      	adds	r3, r1, #2
 80020b2:	60e3      	str	r3, [r4, #12]
 80020b4:	784b      	ldrb	r3, [r1, #1]
 80020b6:	2b78      	cmp	r3, #120	; 0x78
 80020b8:	d041      	beq.n	800213e <d_cv_qualifiers+0xca>
 80020ba:	2b6f      	cmp	r3, #111	; 0x6f
 80020bc:	d145      	bne.n	800214a <d_cv_qualifiers+0xd6>
 80020be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80020c0:	3309      	adds	r3, #9
 80020c2:	6323      	str	r3, [r4, #48]	; 0x30
 80020c4:	214e      	movs	r1, #78	; 0x4e
 80020c6:	2300      	movs	r3, #0
 80020c8:	2200      	movs	r2, #0
 80020ca:	4620      	mov	r0, r4
 80020cc:	f7fe f8a0 	bl	8000210 <d_make_comp>
 80020d0:	6028      	str	r0, [r5, #0]
 80020d2:	b318      	cbz	r0, 800211c <d_cv_qualifiers+0xa8>
 80020d4:	68e1      	ldr	r1, [r4, #12]
 80020d6:	780b      	ldrb	r3, [r1, #0]
 80020d8:	f100 0508 	add.w	r5, r0, #8
 80020dc:	2b72      	cmp	r3, #114	; 0x72
 80020de:	d00d      	beq.n	80020fc <d_cv_qualifiers+0x88>
 80020e0:	2b56      	cmp	r3, #86	; 0x56
 80020e2:	d00b      	beq.n	80020fc <d_cv_qualifiers+0x88>
 80020e4:	2b4b      	cmp	r3, #75	; 0x4b
 80020e6:	d009      	beq.n	80020fc <d_cv_qualifiers+0x88>
 80020e8:	2b44      	cmp	r3, #68	; 0x44
 80020ea:	d146      	bne.n	800217a <d_cv_qualifiers+0x106>
 80020ec:	784a      	ldrb	r2, [r1, #1]
 80020ee:	f002 00df 	and.w	r0, r2, #223	; 0xdf
 80020f2:	284f      	cmp	r0, #79	; 0x4f
 80020f4:	d002      	beq.n	80020fc <d_cv_qualifiers+0x88>
 80020f6:	3a77      	subs	r2, #119	; 0x77
 80020f8:	2a01      	cmp	r2, #1
 80020fa:	d83e      	bhi.n	800217a <d_cv_qualifiers+0x106>
 80020fc:	1c4a      	adds	r2, r1, #1
 80020fe:	2b72      	cmp	r3, #114	; 0x72
 8002100:	60e2      	str	r2, [r4, #12]
 8002102:	d1ce      	bne.n	80020a2 <d_cv_qualifiers+0x2e>
 8002104:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002106:	3309      	adds	r3, #9
 8002108:	6323      	str	r3, [r4, #48]	; 0x30
 800210a:	4631      	mov	r1, r6
 800210c:	2300      	movs	r3, #0
 800210e:	2200      	movs	r2, #0
 8002110:	4620      	mov	r0, r4
 8002112:	f7fe f87d 	bl	8000210 <d_make_comp>
 8002116:	6028      	str	r0, [r5, #0]
 8002118:	2800      	cmp	r0, #0
 800211a:	d1db      	bne.n	80020d4 <d_cv_qualifiers+0x60>
 800211c:	2500      	movs	r5, #0
 800211e:	4628      	mov	r0, r5
 8002120:	b003      	add	sp, #12
 8002122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002126:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002128:	3309      	adds	r3, #9
 800212a:	6323      	str	r3, [r4, #48]	; 0x30
 800212c:	4639      	mov	r1, r7
 800212e:	2300      	movs	r3, #0
 8002130:	e7ca      	b.n	80020c8 <d_cv_qualifiers+0x54>
 8002132:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002134:	3306      	adds	r3, #6
 8002136:	6323      	str	r3, [r4, #48]	; 0x30
 8002138:	4641      	mov	r1, r8
 800213a:	2300      	movs	r3, #0
 800213c:	e7c4      	b.n	80020c8 <d_cv_qualifiers+0x54>
 800213e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002140:	3311      	adds	r3, #17
 8002142:	6323      	str	r3, [r4, #48]	; 0x30
 8002144:	214c      	movs	r1, #76	; 0x4c
 8002146:	2300      	movs	r3, #0
 8002148:	e7be      	b.n	80020c8 <d_cv_qualifiers+0x54>
 800214a:	2b4f      	cmp	r3, #79	; 0x4f
 800214c:	d132      	bne.n	80021b4 <d_cv_qualifiers+0x140>
 800214e:	e9d4 3b0c 	ldrd	r3, fp, [r4, #48]	; 0x30
 8002152:	3309      	adds	r3, #9
 8002154:	6323      	str	r3, [r4, #48]	; 0x30
 8002156:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
 800215a:	4620      	mov	r0, r4
 800215c:	f7fe feae 	bl	8000ebc <d_expression_1>
 8002160:	f8c4 b034 	str.w	fp, [r4, #52]	; 0x34
 8002164:	4603      	mov	r3, r0
 8002166:	2800      	cmp	r0, #0
 8002168:	d0d8      	beq.n	800211c <d_cv_qualifiers+0xa8>
 800216a:	68e2      	ldr	r2, [r4, #12]
 800216c:	7811      	ldrb	r1, [r2, #0]
 800216e:	2945      	cmp	r1, #69	; 0x45
 8002170:	d1d4      	bne.n	800211c <d_cv_qualifiers+0xa8>
 8002172:	3201      	adds	r2, #1
 8002174:	60e2      	str	r2, [r4, #12]
 8002176:	214e      	movs	r1, #78	; 0x4e
 8002178:	e7a6      	b.n	80020c8 <d_cv_qualifiers+0x54>
 800217a:	9a01      	ldr	r2, [sp, #4]
 800217c:	2a00      	cmp	r2, #0
 800217e:	d1ce      	bne.n	800211e <d_cv_qualifiers+0xaa>
 8002180:	2b46      	cmp	r3, #70	; 0x46
 8002182:	d1cc      	bne.n	800211e <d_cv_qualifiers+0xaa>
 8002184:	454d      	cmp	r5, r9
 8002186:	d0ca      	beq.n	800211e <d_cv_qualifiers+0xaa>
 8002188:	241d      	movs	r4, #29
 800218a:	201e      	movs	r0, #30
 800218c:	211c      	movs	r1, #28
 800218e:	e008      	b.n	80021a2 <d_cv_qualifiers+0x12e>
 8002190:	2a1b      	cmp	r2, #27
 8002192:	d00d      	beq.n	80021b0 <d_cv_qualifiers+0x13c>
 8002194:	2a19      	cmp	r2, #25
 8002196:	d100      	bne.n	800219a <d_cv_qualifiers+0x126>
 8002198:	7019      	strb	r1, [r3, #0]
 800219a:	f103 0908 	add.w	r9, r3, #8
 800219e:	454d      	cmp	r5, r9
 80021a0:	d0bd      	beq.n	800211e <d_cv_qualifiers+0xaa>
 80021a2:	f8d9 3000 	ldr.w	r3, [r9]
 80021a6:	781a      	ldrb	r2, [r3, #0]
 80021a8:	2a1a      	cmp	r2, #26
 80021aa:	d1f1      	bne.n	8002190 <d_cv_qualifiers+0x11c>
 80021ac:	701c      	strb	r4, [r3, #0]
 80021ae:	e7f4      	b.n	800219a <d_cv_qualifiers+0x126>
 80021b0:	7018      	strb	r0, [r3, #0]
 80021b2:	e7f2      	b.n	800219a <d_cv_qualifiers+0x126>
 80021b4:	2b77      	cmp	r3, #119	; 0x77
 80021b6:	d1b1      	bne.n	800211c <d_cv_qualifiers+0xa8>
 80021b8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80021ba:	3306      	adds	r3, #6
 80021bc:	6323      	str	r3, [r4, #48]	; 0x30
 80021be:	4620      	mov	r0, r4
 80021c0:	f7ff ff16 	bl	8001ff0 <d_parmlist>
 80021c4:	4603      	mov	r3, r0
 80021c6:	2800      	cmp	r0, #0
 80021c8:	d0a8      	beq.n	800211c <d_cv_qualifiers+0xa8>
 80021ca:	68e2      	ldr	r2, [r4, #12]
 80021cc:	7811      	ldrb	r1, [r2, #0]
 80021ce:	2945      	cmp	r1, #69	; 0x45
 80021d0:	d1a4      	bne.n	800211c <d_cv_qualifiers+0xa8>
 80021d2:	3201      	adds	r2, #1
 80021d4:	60e2      	str	r2, [r4, #12]
 80021d6:	214f      	movs	r1, #79	; 0x4f
 80021d8:	e776      	b.n	80020c8 <d_cv_qualifiers+0x54>
 80021da:	bf00      	nop

080021dc <d_bare_function_type>:
 80021dc:	b570      	push	{r4, r5, r6, lr}
 80021de:	68c3      	ldr	r3, [r0, #12]
 80021e0:	781a      	ldrb	r2, [r3, #0]
 80021e2:	2a4a      	cmp	r2, #74	; 0x4a
 80021e4:	4604      	mov	r4, r0
 80021e6:	d013      	beq.n	8002210 <d_bare_function_type+0x34>
 80021e8:	b181      	cbz	r1, 800220c <d_bare_function_type+0x30>
 80021ea:	4620      	mov	r0, r4
 80021ec:	f7ff fa90 	bl	8001710 <d_type>
 80021f0:	4605      	mov	r5, r0
 80021f2:	b180      	cbz	r0, 8002216 <d_bare_function_type+0x3a>
 80021f4:	4620      	mov	r0, r4
 80021f6:	f7ff fefb 	bl	8001ff0 <d_parmlist>
 80021fa:	b160      	cbz	r0, 8002216 <d_bare_function_type+0x3a>
 80021fc:	4603      	mov	r3, r0
 80021fe:	462a      	mov	r2, r5
 8002200:	4620      	mov	r0, r4
 8002202:	2129      	movs	r1, #41	; 0x29
 8002204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002208:	f7fe b802 	b.w	8000210 <d_make_comp>
 800220c:	460d      	mov	r5, r1
 800220e:	e7f1      	b.n	80021f4 <d_bare_function_type+0x18>
 8002210:	3301      	adds	r3, #1
 8002212:	60c3      	str	r3, [r0, #12]
 8002214:	e7e9      	b.n	80021ea <d_bare_function_type+0xe>
 8002216:	2000      	movs	r0, #0
 8002218:	bd70      	pop	{r4, r5, r6, pc}
 800221a:	bf00      	nop

0800221c <d_function_type>:
 800221c:	68c3      	ldr	r3, [r0, #12]
 800221e:	781a      	ldrb	r2, [r3, #0]
 8002220:	2a46      	cmp	r2, #70	; 0x46
 8002222:	d118      	bne.n	8002256 <d_function_type+0x3a>
 8002224:	b510      	push	{r4, lr}
 8002226:	1c5a      	adds	r2, r3, #1
 8002228:	60c2      	str	r2, [r0, #12]
 800222a:	785a      	ldrb	r2, [r3, #1]
 800222c:	2a59      	cmp	r2, #89	; 0x59
 800222e:	bf04      	itt	eq
 8002230:	3302      	addeq	r3, #2
 8002232:	60c3      	streq	r3, [r0, #12]
 8002234:	2101      	movs	r1, #1
 8002236:	4604      	mov	r4, r0
 8002238:	f7ff ffd0 	bl	80021dc <d_bare_function_type>
 800223c:	4601      	mov	r1, r0
 800223e:	4620      	mov	r0, r4
 8002240:	f7fe f82e 	bl	80002a0 <d_ref_qualifier>
 8002244:	68e3      	ldr	r3, [r4, #12]
 8002246:	781a      	ldrb	r2, [r3, #0]
 8002248:	2a45      	cmp	r2, #69	; 0x45
 800224a:	d102      	bne.n	8002252 <d_function_type+0x36>
 800224c:	3301      	adds	r3, #1
 800224e:	60e3      	str	r3, [r4, #12]
 8002250:	bd10      	pop	{r4, pc}
 8002252:	2000      	movs	r0, #0
 8002254:	bd10      	pop	{r4, pc}
 8002256:	2000      	movs	r0, #0
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop

0800225c <d_unqualified_name>:
 800225c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002260:	68c1      	ldr	r1, [r0, #12]
 8002262:	780b      	ldrb	r3, [r1, #0]
 8002264:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8002268:	2a09      	cmp	r2, #9
 800226a:	4604      	mov	r4, r0
 800226c:	d93c      	bls.n	80022e8 <d_unqualified_name+0x8c>
 800226e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002272:	2a19      	cmp	r2, #25
 8002274:	d922      	bls.n	80022bc <d_unqualified_name+0x60>
 8002276:	f1a3 0243 	sub.w	r2, r3, #67	; 0x43
 800227a:	2a01      	cmp	r2, #1
 800227c:	d969      	bls.n	8002352 <d_unqualified_name+0xf6>
 800227e:	2b4c      	cmp	r3, #76	; 0x4c
 8002280:	d056      	beq.n	8002330 <d_unqualified_name+0xd4>
 8002282:	2b55      	cmp	r3, #85	; 0x55
 8002284:	d15f      	bne.n	8002346 <d_unqualified_name+0xea>
 8002286:	784b      	ldrb	r3, [r1, #1]
 8002288:	2b6c      	cmp	r3, #108	; 0x6c
 800228a:	f000 80e5 	beq.w	8002458 <d_unqualified_name+0x1fc>
 800228e:	2b74      	cmp	r3, #116	; 0x74
 8002290:	d159      	bne.n	8002346 <d_unqualified_name+0xea>
 8002292:	1c4b      	adds	r3, r1, #1
 8002294:	60c3      	str	r3, [r0, #12]
 8002296:	784b      	ldrb	r3, [r1, #1]
 8002298:	2b74      	cmp	r3, #116	; 0x74
 800229a:	d158      	bne.n	800234e <d_unqualified_name+0xf2>
 800229c:	3102      	adds	r1, #2
 800229e:	60c1      	str	r1, [r0, #12]
 80022a0:	f7fe f8f4 	bl	800048c <d_compact_number>
 80022a4:	2800      	cmp	r0, #0
 80022a6:	f2c0 8155 	blt.w	8002554 <d_unqualified_name+0x2f8>
 80022aa:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80022ae:	4293      	cmp	r3, r2
 80022b0:	68e7      	ldr	r7, [r4, #12]
 80022b2:	f2c0 80f3 	blt.w	800249c <d_unqualified_name+0x240>
 80022b6:	783b      	ldrb	r3, [r7, #0]
 80022b8:	2500      	movs	r5, #0
 80022ba:	e010      	b.n	80022de <d_unqualified_name+0x82>
 80022bc:	2b6f      	cmp	r3, #111	; 0x6f
 80022be:	d104      	bne.n	80022ca <d_unqualified_name+0x6e>
 80022c0:	784b      	ldrb	r3, [r1, #1]
 80022c2:	2b6e      	cmp	r3, #110	; 0x6e
 80022c4:	bf04      	itt	eq
 80022c6:	3102      	addeq	r1, #2
 80022c8:	60c1      	streq	r1, [r0, #12]
 80022ca:	4620      	mov	r0, r4
 80022cc:	f7ff fe1a 	bl	8001f04 <d_operator_name>
 80022d0:	4605      	mov	r5, r0
 80022d2:	b110      	cbz	r0, 80022da <d_unqualified_name+0x7e>
 80022d4:	7803      	ldrb	r3, [r0, #0]
 80022d6:	2b31      	cmp	r3, #49	; 0x31
 80022d8:	d013      	beq.n	8002302 <d_unqualified_name+0xa6>
 80022da:	68e3      	ldr	r3, [r4, #12]
 80022dc:	781b      	ldrb	r3, [r3, #0]
 80022de:	2b42      	cmp	r3, #66	; 0x42
 80022e0:	d009      	beq.n	80022f6 <d_unqualified_name+0x9a>
 80022e2:	4628      	mov	r0, r5
 80022e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80022e8:	f7fe f90c 	bl	8000504 <d_source_name>
 80022ec:	68e3      	ldr	r3, [r4, #12]
 80022ee:	781b      	ldrb	r3, [r3, #0]
 80022f0:	2b42      	cmp	r3, #66	; 0x42
 80022f2:	4605      	mov	r5, r0
 80022f4:	d1f5      	bne.n	80022e2 <d_unqualified_name+0x86>
 80022f6:	4629      	mov	r1, r5
 80022f8:	4620      	mov	r0, r4
 80022fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80022fe:	f7fe b95b 	b.w	80005b8 <d_abi_tags>
 8002302:	6882      	ldr	r2, [r0, #8]
 8002304:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002306:	6896      	ldr	r6, [r2, #8]
 8002308:	6810      	ldr	r0, [r2, #0]
 800230a:	49a1      	ldr	r1, [pc, #644]	; (8002590 <d_unqualified_name+0x334>)
 800230c:	3307      	adds	r3, #7
 800230e:	4433      	add	r3, r6
 8002310:	6323      	str	r3, [r4, #48]	; 0x30
 8002312:	f004 fd3d 	bl	8006d90 <strcmp>
 8002316:	2800      	cmp	r0, #0
 8002318:	d1df      	bne.n	80022da <d_unqualified_name+0x7e>
 800231a:	4620      	mov	r0, r4
 800231c:	f7fe f8f2 	bl	8000504 <d_source_name>
 8002320:	462a      	mov	r2, r5
 8002322:	4603      	mov	r3, r0
 8002324:	2136      	movs	r1, #54	; 0x36
 8002326:	4620      	mov	r0, r4
 8002328:	f7fd ff72 	bl	8000210 <d_make_comp>
 800232c:	4605      	mov	r5, r0
 800232e:	e7d4      	b.n	80022da <d_unqualified_name+0x7e>
 8002330:	3101      	adds	r1, #1
 8002332:	60c1      	str	r1, [r0, #12]
 8002334:	f7fe f8e6 	bl	8000504 <d_source_name>
 8002338:	4605      	mov	r5, r0
 800233a:	b120      	cbz	r0, 8002346 <d_unqualified_name+0xea>
 800233c:	4620      	mov	r0, r4
 800233e:	f7fe fa0f 	bl	8000760 <d_discriminator>
 8002342:	2800      	cmp	r0, #0
 8002344:	d1c9      	bne.n	80022da <d_unqualified_name+0x7e>
 8002346:	2500      	movs	r5, #0
 8002348:	4628      	mov	r0, r5
 800234a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800234e:	2500      	movs	r5, #0
 8002350:	e7c5      	b.n	80022de <d_unqualified_name+0x82>
 8002352:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002354:	b132      	cbz	r2, 8002364 <d_unqualified_name+0x108>
 8002356:	7810      	ldrb	r0, [r2, #0]
 8002358:	b9e0      	cbnz	r0, 8002394 <d_unqualified_name+0x138>
 800235a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800235c:	68d0      	ldr	r0, [r2, #12]
 800235e:	4403      	add	r3, r0
 8002360:	6323      	str	r3, [r4, #48]	; 0x30
 8002362:	780b      	ldrb	r3, [r1, #0]
 8002364:	2b43      	cmp	r3, #67	; 0x43
 8002366:	d018      	beq.n	800239a <d_unqualified_name+0x13e>
 8002368:	2b44      	cmp	r3, #68	; 0x44
 800236a:	d1f0      	bne.n	800234e <d_unqualified_name+0xf2>
 800236c:	784b      	ldrb	r3, [r1, #1]
 800236e:	3b30      	subs	r3, #48	; 0x30
 8002370:	2b05      	cmp	r3, #5
 8002372:	d8e8      	bhi.n	8002346 <d_unqualified_name+0xea>
 8002374:	a001      	add	r0, pc, #4	; (adr r0, 800237c <d_unqualified_name+0x120>)
 8002376:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800237a:	bf00      	nop
 800237c:	080023ed 	.word	0x080023ed
 8002380:	080023b7 	.word	0x080023b7
 8002384:	080023ff 	.word	0x080023ff
 8002388:	08002347 	.word	0x08002347
 800238c:	080023f9 	.word	0x080023f9
 8002390:	080023f3 	.word	0x080023f3
 8002394:	2818      	cmp	r0, #24
 8002396:	d1e5      	bne.n	8002364 <d_unqualified_name+0x108>
 8002398:	e7df      	b.n	800235a <d_unqualified_name+0xfe>
 800239a:	784b      	ldrb	r3, [r1, #1]
 800239c:	2b49      	cmp	r3, #73	; 0x49
 800239e:	f000 80b0 	beq.w	8002502 <d_unqualified_name+0x2a6>
 80023a2:	3b31      	subs	r3, #49	; 0x31
 80023a4:	2b04      	cmp	r3, #4
 80023a6:	d8ce      	bhi.n	8002346 <d_unqualified_name+0xea>
 80023a8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80023ac:	005100ed 	.word	0x005100ed
 80023b0:	0047004c 	.word	0x0047004c
 80023b4:	002c      	.short	0x002c
 80023b6:	f04f 0c02 	mov.w	ip, #2
 80023ba:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80023be:	1c8d      	adds	r5, r1, #2
 80023c0:	4283      	cmp	r3, r0
 80023c2:	60e5      	str	r5, [r4, #12]
 80023c4:	f280 80d0 	bge.w	8002568 <d_unqualified_name+0x30c>
 80023c8:	6926      	ldr	r6, [r4, #16]
 80023ca:	0118      	lsls	r0, r3, #4
 80023cc:	1835      	adds	r5, r6, r0
 80023ce:	3301      	adds	r3, #1
 80023d0:	2700      	movs	r7, #0
 80023d2:	606f      	str	r7, [r5, #4]
 80023d4:	6163      	str	r3, [r4, #20]
 80023d6:	2a00      	cmp	r2, #0
 80023d8:	f000 80cf 	beq.w	800257a <d_unqualified_name+0x31e>
 80023dc:	2308      	movs	r3, #8
 80023de:	606f      	str	r7, [r5, #4]
 80023e0:	5433      	strb	r3, [r6, r0]
 80023e2:	f885 c008 	strb.w	ip, [r5, #8]
 80023e6:	60ea      	str	r2, [r5, #12]
 80023e8:	788b      	ldrb	r3, [r1, #2]
 80023ea:	e778      	b.n	80022de <d_unqualified_name+0x82>
 80023ec:	f04f 0c01 	mov.w	ip, #1
 80023f0:	e7e3      	b.n	80023ba <d_unqualified_name+0x15e>
 80023f2:	f04f 0c05 	mov.w	ip, #5
 80023f6:	e7e0      	b.n	80023ba <d_unqualified_name+0x15e>
 80023f8:	f04f 0c04 	mov.w	ip, #4
 80023fc:	e7dd      	b.n	80023ba <d_unqualified_name+0x15e>
 80023fe:	f04f 0c03 	mov.w	ip, #3
 8002402:	e7da      	b.n	80023ba <d_unqualified_name+0x15e>
 8002404:	3102      	adds	r1, #2
 8002406:	60e1      	str	r1, [r4, #12]
 8002408:	f04f 0805 	mov.w	r8, #5
 800240c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8002410:	4283      	cmp	r3, r0
 8002412:	f280 80ac 	bge.w	800256e <d_unqualified_name+0x312>
 8002416:	6926      	ldr	r6, [r4, #16]
 8002418:	0118      	lsls	r0, r3, #4
 800241a:	1835      	adds	r5, r6, r0
 800241c:	3301      	adds	r3, #1
 800241e:	2700      	movs	r7, #0
 8002420:	606f      	str	r7, [r5, #4]
 8002422:	6163      	str	r3, [r4, #20]
 8002424:	2a00      	cmp	r2, #0
 8002426:	f000 80ab 	beq.w	8002580 <d_unqualified_name+0x324>
 800242a:	2307      	movs	r3, #7
 800242c:	606f      	str	r7, [r5, #4]
 800242e:	5433      	strb	r3, [r6, r0]
 8002430:	f885 8008 	strb.w	r8, [r5, #8]
 8002434:	60ea      	str	r2, [r5, #12]
 8002436:	780b      	ldrb	r3, [r1, #0]
 8002438:	e751      	b.n	80022de <d_unqualified_name+0x82>
 800243a:	3102      	adds	r1, #2
 800243c:	60e1      	str	r1, [r4, #12]
 800243e:	f04f 0804 	mov.w	r8, #4
 8002442:	e7e3      	b.n	800240c <d_unqualified_name+0x1b0>
 8002444:	3102      	adds	r1, #2
 8002446:	60e1      	str	r1, [r4, #12]
 8002448:	f04f 0803 	mov.w	r8, #3
 800244c:	e7de      	b.n	800240c <d_unqualified_name+0x1b0>
 800244e:	3102      	adds	r1, #2
 8002450:	60e1      	str	r1, [r4, #12]
 8002452:	f04f 0802 	mov.w	r8, #2
 8002456:	e7d9      	b.n	800240c <d_unqualified_name+0x1b0>
 8002458:	1c4b      	adds	r3, r1, #1
 800245a:	60c3      	str	r3, [r0, #12]
 800245c:	784b      	ldrb	r3, [r1, #1]
 800245e:	2b6c      	cmp	r3, #108	; 0x6c
 8002460:	f47f af75 	bne.w	800234e <d_unqualified_name+0xf2>
 8002464:	3102      	adds	r1, #2
 8002466:	60c1      	str	r1, [r0, #12]
 8002468:	f7ff fdc2 	bl	8001ff0 <d_parmlist>
 800246c:	4606      	mov	r6, r0
 800246e:	2800      	cmp	r0, #0
 8002470:	d070      	beq.n	8002554 <d_unqualified_name+0x2f8>
 8002472:	68e2      	ldr	r2, [r4, #12]
 8002474:	7813      	ldrb	r3, [r2, #0]
 8002476:	2b45      	cmp	r3, #69	; 0x45
 8002478:	f47f af69 	bne.w	800234e <d_unqualified_name+0xf2>
 800247c:	3201      	adds	r2, #1
 800247e:	60e2      	str	r2, [r4, #12]
 8002480:	4620      	mov	r0, r4
 8002482:	f7fe f803 	bl	800048c <d_compact_number>
 8002486:	f1b0 0e00 	subs.w	lr, r0, #0
 800248a:	db63      	blt.n	8002554 <d_unqualified_name+0x2f8>
 800248c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8002490:	4293      	cmp	r3, r2
 8002492:	68e0      	ldr	r0, [r4, #12]
 8002494:	db1b      	blt.n	80024ce <d_unqualified_name+0x272>
 8002496:	7803      	ldrb	r3, [r0, #0]
 8002498:	2500      	movs	r5, #0
 800249a:	e720      	b.n	80022de <d_unqualified_name+0x82>
 800249c:	6926      	ldr	r6, [r4, #16]
 800249e:	6a22      	ldr	r2, [r4, #32]
 80024a0:	f8d4 e024 	ldr.w	lr, [r4, #36]	; 0x24
 80024a4:	0119      	lsls	r1, r3, #4
 80024a6:	1875      	adds	r5, r6, r1
 80024a8:	3301      	adds	r3, #1
 80024aa:	f04f 0c00 	mov.w	ip, #0
 80024ae:	f8c5 c004 	str.w	ip, [r5, #4]
 80024b2:	4572      	cmp	r2, lr
 80024b4:	6163      	str	r3, [r4, #20]
 80024b6:	f04f 0347 	mov.w	r3, #71	; 0x47
 80024ba:	5473      	strb	r3, [r6, r1]
 80024bc:	60a8      	str	r0, [r5, #8]
 80024be:	da4d      	bge.n	800255c <d_unqualified_name+0x300>
 80024c0:	69e3      	ldr	r3, [r4, #28]
 80024c2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80024c6:	3201      	adds	r2, #1
 80024c8:	6222      	str	r2, [r4, #32]
 80024ca:	783b      	ldrb	r3, [r7, #0]
 80024cc:	e707      	b.n	80022de <d_unqualified_name+0x82>
 80024ce:	6927      	ldr	r7, [r4, #16]
 80024d0:	6a22      	ldr	r2, [r4, #32]
 80024d2:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
 80024d6:	0119      	lsls	r1, r3, #4
 80024d8:	187d      	adds	r5, r7, r1
 80024da:	3301      	adds	r3, #1
 80024dc:	f04f 0c00 	mov.w	ip, #0
 80024e0:	f8c5 c004 	str.w	ip, [r5, #4]
 80024e4:	4542      	cmp	r2, r8
 80024e6:	6163      	str	r3, [r4, #20]
 80024e8:	f04f 0345 	mov.w	r3, #69	; 0x45
 80024ec:	547b      	strb	r3, [r7, r1]
 80024ee:	e9c5 6e02 	strd	r6, lr, [r5, #8]
 80024f2:	da36      	bge.n	8002562 <d_unqualified_name+0x306>
 80024f4:	69e3      	ldr	r3, [r4, #28]
 80024f6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80024fa:	3201      	adds	r2, #1
 80024fc:	6222      	str	r2, [r4, #32]
 80024fe:	7803      	ldrb	r3, [r0, #0]
 8002500:	e6ed      	b.n	80022de <d_unqualified_name+0x82>
 8002502:	1c4b      	adds	r3, r1, #1
 8002504:	60e3      	str	r3, [r4, #12]
 8002506:	788b      	ldrb	r3, [r1, #2]
 8002508:	3b31      	subs	r3, #49	; 0x31
 800250a:	2b04      	cmp	r3, #4
 800250c:	d832      	bhi.n	8002574 <d_unqualified_name+0x318>
 800250e:	e8df f003 	tbb	[pc, r3]
 8002512:	1c03      	.short	0x1c03
 8002514:	1217      	.short	0x1217
 8002516:	0d          	.byte	0x0d
 8002517:	00          	.byte	0x00
 8002518:	3103      	adds	r1, #3
 800251a:	60e1      	str	r1, [r4, #12]
 800251c:	f04f 0801 	mov.w	r8, #1
 8002520:	4620      	mov	r0, r4
 8002522:	f7ff f8f5 	bl	8001710 <d_type>
 8002526:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002528:	68e1      	ldr	r1, [r4, #12]
 800252a:	e76f      	b.n	800240c <d_unqualified_name+0x1b0>
 800252c:	3103      	adds	r1, #3
 800252e:	60e1      	str	r1, [r4, #12]
 8002530:	f04f 0805 	mov.w	r8, #5
 8002534:	e7f4      	b.n	8002520 <d_unqualified_name+0x2c4>
 8002536:	3103      	adds	r1, #3
 8002538:	60e1      	str	r1, [r4, #12]
 800253a:	f04f 0804 	mov.w	r8, #4
 800253e:	e7ef      	b.n	8002520 <d_unqualified_name+0x2c4>
 8002540:	3103      	adds	r1, #3
 8002542:	60e1      	str	r1, [r4, #12]
 8002544:	f04f 0803 	mov.w	r8, #3
 8002548:	e7ea      	b.n	8002520 <d_unqualified_name+0x2c4>
 800254a:	3103      	adds	r1, #3
 800254c:	60e1      	str	r1, [r4, #12]
 800254e:	f04f 0802 	mov.w	r8, #2
 8002552:	e7e5      	b.n	8002520 <d_unqualified_name+0x2c4>
 8002554:	68e3      	ldr	r3, [r4, #12]
 8002556:	2500      	movs	r5, #0
 8002558:	781b      	ldrb	r3, [r3, #0]
 800255a:	e6c0      	b.n	80022de <d_unqualified_name+0x82>
 800255c:	783b      	ldrb	r3, [r7, #0]
 800255e:	4665      	mov	r5, ip
 8002560:	e6bd      	b.n	80022de <d_unqualified_name+0x82>
 8002562:	7803      	ldrb	r3, [r0, #0]
 8002564:	4665      	mov	r5, ip
 8002566:	e6ba      	b.n	80022de <d_unqualified_name+0x82>
 8002568:	788b      	ldrb	r3, [r1, #2]
 800256a:	2500      	movs	r5, #0
 800256c:	e6b7      	b.n	80022de <d_unqualified_name+0x82>
 800256e:	780b      	ldrb	r3, [r1, #0]
 8002570:	2500      	movs	r5, #0
 8002572:	e6b4      	b.n	80022de <d_unqualified_name+0x82>
 8002574:	784b      	ldrb	r3, [r1, #1]
 8002576:	2500      	movs	r5, #0
 8002578:	e6b1      	b.n	80022de <d_unqualified_name+0x82>
 800257a:	788b      	ldrb	r3, [r1, #2]
 800257c:	4615      	mov	r5, r2
 800257e:	e6ae      	b.n	80022de <d_unqualified_name+0x82>
 8002580:	780b      	ldrb	r3, [r1, #0]
 8002582:	4615      	mov	r5, r2
 8002584:	e6ab      	b.n	80022de <d_unqualified_name+0x82>
 8002586:	3102      	adds	r1, #2
 8002588:	60e1      	str	r1, [r4, #12]
 800258a:	f04f 0801 	mov.w	r8, #1
 800258e:	e73d      	b.n	800240c <d_unqualified_name+0x1b0>
 8002590:	0801ed8c 	.word	0x0801ed8c

08002594 <d_encoding>:
 8002594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002598:	68c3      	ldr	r3, [r0, #12]
 800259a:	781a      	ldrb	r2, [r3, #0]
 800259c:	2a47      	cmp	r2, #71	; 0x47
 800259e:	4604      	mov	r4, r0
 80025a0:	d019      	beq.n	80025d6 <d_encoding+0x42>
 80025a2:	2a54      	cmp	r2, #84	; 0x54
 80025a4:	d017      	beq.n	80025d6 <d_encoding+0x42>
 80025a6:	460e      	mov	r6, r1
 80025a8:	f7fe ff06 	bl	80013b8 <d_name>
 80025ac:	4605      	mov	r5, r0
 80025ae:	2800      	cmp	r0, #0
 80025b0:	d07d      	beq.n	80026ae <d_encoding+0x11a>
 80025b2:	2e00      	cmp	r6, #0
 80025b4:	d057      	beq.n	8002666 <d_encoding+0xd2>
 80025b6:	68a3      	ldr	r3, [r4, #8]
 80025b8:	07db      	lsls	r3, r3, #31
 80025ba:	d454      	bmi.n	8002666 <d_encoding+0xd2>
 80025bc:	e000      	b.n	80025c0 <d_encoding+0x2c>
 80025be:	68ad      	ldr	r5, [r5, #8]
 80025c0:	782b      	ldrb	r3, [r5, #0]
 80025c2:	f1a3 021c 	sub.w	r2, r3, #28
 80025c6:	2a04      	cmp	r2, #4
 80025c8:	d9f9      	bls.n	80025be <d_encoding+0x2a>
 80025ca:	2b02      	cmp	r3, #2
 80025cc:	f000 8186 	beq.w	80028dc <d_encoding+0x348>
 80025d0:	4628      	mov	r0, r5
 80025d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80025d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80025d8:	f101 0214 	add.w	r2, r1, #20
 80025dc:	6322      	str	r2, [r4, #48]	; 0x30
 80025de:	781a      	ldrb	r2, [r3, #0]
 80025e0:	2a54      	cmp	r2, #84	; 0x54
 80025e2:	d068      	beq.n	80026b6 <d_encoding+0x122>
 80025e4:	2a47      	cmp	r2, #71	; 0x47
 80025e6:	d162      	bne.n	80026ae <d_encoding+0x11a>
 80025e8:	1c5a      	adds	r2, r3, #1
 80025ea:	60e2      	str	r2, [r4, #12]
 80025ec:	785a      	ldrb	r2, [r3, #1]
 80025ee:	2a00      	cmp	r2, #0
 80025f0:	d05d      	beq.n	80026ae <d_encoding+0x11a>
 80025f2:	1c9a      	adds	r2, r3, #2
 80025f4:	60e2      	str	r2, [r4, #12]
 80025f6:	785a      	ldrb	r2, [r3, #1]
 80025f8:	3a41      	subs	r2, #65	; 0x41
 80025fa:	2a31      	cmp	r2, #49	; 0x31
 80025fc:	d857      	bhi.n	80026ae <d_encoding+0x11a>
 80025fe:	e8df f012 	tbh	[pc, r2, lsl #1]
 8002602:	013e      	.short	0x013e
 8002604:	00560056 	.word	0x00560056
 8002608:	00560056 	.word	0x00560056
 800260c:	00560056 	.word	0x00560056
 8002610:	00560056 	.word	0x00560056
 8002614:	00560056 	.word	0x00560056
 8002618:	00560056 	.word	0x00560056
 800261c:	00560056 	.word	0x00560056
 8002620:	00560056 	.word	0x00560056
 8002624:	0056014a 	.word	0x0056014a
 8002628:	00560159 	.word	0x00560159
 800262c:	005600e0 	.word	0x005600e0
 8002630:	00560056 	.word	0x00560056
 8002634:	00560056 	.word	0x00560056
 8002638:	00560056 	.word	0x00560056
 800263c:	00560056 	.word	0x00560056
 8002640:	00560056 	.word	0x00560056
 8002644:	00560056 	.word	0x00560056
 8002648:	00560056 	.word	0x00560056
 800264c:	00560056 	.word	0x00560056
 8002650:	00560056 	.word	0x00560056
 8002654:	00560056 	.word	0x00560056
 8002658:	00560056 	.word	0x00560056
 800265c:	00560056 	.word	0x00560056
 8002660:	00560056 	.word	0x00560056
 8002664:	00eb      	.short	0x00eb
 8002666:	68e3      	ldr	r3, [r4, #12]
 8002668:	781b      	ldrb	r3, [r3, #0]
 800266a:	2b00      	cmp	r3, #0
 800266c:	d0b0      	beq.n	80025d0 <d_encoding+0x3c>
 800266e:	2b45      	cmp	r3, #69	; 0x45
 8002670:	d0ae      	beq.n	80025d0 <d_encoding+0x3c>
 8002672:	4629      	mov	r1, r5
 8002674:	780b      	ldrb	r3, [r1, #0]
 8002676:	2b20      	cmp	r3, #32
 8002678:	f200 8218 	bhi.w	8002aac <d_encoding+0x518>
 800267c:	2b1c      	cmp	r3, #28
 800267e:	f080 821e 	bcs.w	8002abe <d_encoding+0x52a>
 8002682:	2b04      	cmp	r3, #4
 8002684:	f040 8091 	bne.w	80027aa <d_encoding+0x216>
 8002688:	688a      	ldr	r2, [r1, #8]
 800268a:	b16a      	cbz	r2, 80026a8 <d_encoding+0x114>
 800268c:	7813      	ldrb	r3, [r2, #0]
 800268e:	2b08      	cmp	r3, #8
 8002690:	f103 31ff 	add.w	r1, r3, #4294967295
 8002694:	f200 8086 	bhi.w	80027a4 <d_encoding+0x210>
 8002698:	2b07      	cmp	r3, #7
 800269a:	f080 8086 	bcs.w	80027aa <d_encoding+0x216>
 800269e:	2901      	cmp	r1, #1
 80026a0:	d802      	bhi.n	80026a8 <d_encoding+0x114>
 80026a2:	68d2      	ldr	r2, [r2, #12]
 80026a4:	2a00      	cmp	r2, #0
 80026a6:	d1f1      	bne.n	800268c <d_encoding+0xf8>
 80026a8:	2101      	movs	r1, #1
 80026aa:	e07f      	b.n	80027ac <d_encoding+0x218>
 80026ac:	60e7      	str	r7, [r4, #12]
 80026ae:	2500      	movs	r5, #0
 80026b0:	4628      	mov	r0, r5
 80026b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80026b6:	1c5a      	adds	r2, r3, #1
 80026b8:	60e2      	str	r2, [r4, #12]
 80026ba:	785a      	ldrb	r2, [r3, #1]
 80026bc:	2a00      	cmp	r2, #0
 80026be:	d0f6      	beq.n	80026ae <d_encoding+0x11a>
 80026c0:	1c9a      	adds	r2, r3, #2
 80026c2:	60e2      	str	r2, [r4, #12]
 80026c4:	785b      	ldrb	r3, [r3, #1]
 80026c6:	3b43      	subs	r3, #67	; 0x43
 80026c8:	2b33      	cmp	r3, #51	; 0x33
 80026ca:	d8f0      	bhi.n	80026ae <d_encoding+0x11a>
 80026cc:	a201      	add	r2, pc, #4	; (adr r2, 80026d4 <d_encoding+0x140>)
 80026ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026d2:	bf00      	nop
 80026d4:	08002a29 	.word	0x08002a29
 80026d8:	080026af 	.word	0x080026af
 80026dc:	080026af 	.word	0x080026af
 80026e0:	08002a13 	.word	0x08002a13
 80026e4:	080026af 	.word	0x080026af
 80026e8:	080029fd 	.word	0x080029fd
 80026ec:	080029e7 	.word	0x080029e7
 80026f0:	080029d1 	.word	0x080029d1
 80026f4:	080026af 	.word	0x080026af
 80026f8:	080026af 	.word	0x080026af
 80026fc:	080026af 	.word	0x080026af
 8002700:	080026af 	.word	0x080026af
 8002704:	080026af 	.word	0x080026af
 8002708:	080026af 	.word	0x080026af
 800270c:	080026af 	.word	0x080026af
 8002710:	080026af 	.word	0x080026af
 8002714:	080029bb 	.word	0x080029bb
 8002718:	080029a1 	.word	0x080029a1
 800271c:	080026af 	.word	0x080026af
 8002720:	08002987 	.word	0x08002987
 8002724:	08002971 	.word	0x08002971
 8002728:	080026af 	.word	0x080026af
 800272c:	080026af 	.word	0x080026af
 8002730:	080026af 	.word	0x080026af
 8002734:	080026af 	.word	0x080026af
 8002738:	080026af 	.word	0x080026af
 800273c:	080026af 	.word	0x080026af
 8002740:	080026af 	.word	0x080026af
 8002744:	080026af 	.word	0x080026af
 8002748:	080026af 	.word	0x080026af
 800274c:	080026af 	.word	0x080026af
 8002750:	080026af 	.word	0x080026af
 8002754:	0800293d 	.word	0x0800293d
 8002758:	080026af 	.word	0x080026af
 800275c:	080026af 	.word	0x080026af
 8002760:	080026af 	.word	0x080026af
 8002764:	080026af 	.word	0x080026af
 8002768:	08002917 	.word	0x08002917
 800276c:	080026af 	.word	0x080026af
 8002770:	080026af 	.word	0x080026af
 8002774:	080026af 	.word	0x080026af
 8002778:	080026af 	.word	0x080026af
 800277c:	080026af 	.word	0x080026af
 8002780:	080026af 	.word	0x080026af
 8002784:	080026af 	.word	0x080026af
 8002788:	080026af 	.word	0x080026af
 800278c:	080026af 	.word	0x080026af
 8002790:	080026af 	.word	0x080026af
 8002794:	080026af 	.word	0x080026af
 8002798:	080026af 	.word	0x080026af
 800279c:	080026af 	.word	0x080026af
 80027a0:	080028f1 	.word	0x080028f1
 80027a4:	2b34      	cmp	r3, #52	; 0x34
 80027a6:	f47f af7f 	bne.w	80026a8 <d_encoding+0x114>
 80027aa:	2100      	movs	r1, #0
 80027ac:	4620      	mov	r0, r4
 80027ae:	f7ff fd15 	bl	80021dc <d_bare_function_type>
 80027b2:	462a      	mov	r2, r5
 80027b4:	4603      	mov	r3, r0
 80027b6:	2103      	movs	r1, #3
 80027b8:	4620      	mov	r0, r4
 80027ba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027be:	f7fd bd27 	b.w	8000210 <d_make_comp>
 80027c2:	4620      	mov	r0, r4
 80027c4:	f7fe fdf8 	bl	80013b8 <d_name>
 80027c8:	2300      	movs	r3, #0
 80027ca:	4602      	mov	r2, r0
 80027cc:	2113      	movs	r1, #19
 80027ce:	4620      	mov	r0, r4
 80027d0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027d4:	f7fd bd1c 	b.w	8000210 <d_make_comp>
 80027d8:	f104 000c 	add.w	r0, r4, #12
 80027dc:	f7fd fe12 	bl	8000404 <d_number.isra.1>
 80027e0:	2801      	cmp	r0, #1
 80027e2:	f77f af64 	ble.w	80026ae <d_encoding+0x11a>
 80027e6:	68e3      	ldr	r3, [r4, #12]
 80027e8:	781a      	ldrb	r2, [r3, #0]
 80027ea:	2a00      	cmp	r2, #0
 80027ec:	f43f af5f 	beq.w	80026ae <d_encoding+0x11a>
 80027f0:	1c5f      	adds	r7, r3, #1
 80027f2:	60e7      	str	r7, [r4, #12]
 80027f4:	781b      	ldrb	r3, [r3, #0]
 80027f6:	2b5f      	cmp	r3, #95	; 0x5f
 80027f8:	f47f af59 	bne.w	80026ae <d_encoding+0x11a>
 80027fc:	2200      	movs	r2, #0
 80027fe:	1e45      	subs	r5, r0, #1
 8002800:	4690      	mov	r8, r2
 8002802:	f04f 0940 	mov.w	r9, #64	; 0x40
 8002806:	783b      	ldrb	r3, [r7, #0]
 8002808:	2b00      	cmp	r3, #0
 800280a:	f43f af50 	beq.w	80026ae <d_encoding+0x11a>
 800280e:	2b24      	cmp	r3, #36	; 0x24
 8002810:	f040 812a 	bne.w	8002a68 <d_encoding+0x4d4>
 8002814:	787b      	ldrb	r3, [r7, #1]
 8002816:	2b53      	cmp	r3, #83	; 0x53
 8002818:	f000 8156 	beq.w	8002ac8 <d_encoding+0x534>
 800281c:	2b5f      	cmp	r3, #95	; 0x5f
 800281e:	f000 8155 	beq.w	8002acc <d_encoding+0x538>
 8002822:	2b24      	cmp	r3, #36	; 0x24
 8002824:	f47f af43 	bne.w	80026ae <d_encoding+0x11a>
 8002828:	4619      	mov	r1, r3
 800282a:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 800282e:	68e7      	ldr	r7, [r4, #12]
 8002830:	4298      	cmp	r0, r3
 8002832:	f107 0702 	add.w	r7, r7, #2
 8002836:	f6bf af39 	bge.w	80026ac <d_encoding+0x118>
 800283a:	f8d4 c010 	ldr.w	ip, [r4, #16]
 800283e:	0106      	lsls	r6, r0, #4
 8002840:	eb0c 0306 	add.w	r3, ip, r6
 8002844:	3001      	adds	r0, #1
 8002846:	f8c3 8004 	str.w	r8, [r3, #4]
 800284a:	3d02      	subs	r5, #2
 800284c:	6160      	str	r0, [r4, #20]
 800284e:	f80c 9006 	strb.w	r9, [ip, r6]
 8002852:	6099      	str	r1, [r3, #8]
 8002854:	60e7      	str	r7, [r4, #12]
 8002856:	2a00      	cmp	r2, #0
 8002858:	f000 8126 	beq.w	8002aa8 <d_encoding+0x514>
 800285c:	213f      	movs	r1, #63	; 0x3f
 800285e:	4620      	mov	r0, r4
 8002860:	f7fd fcd6 	bl	8000210 <d_make_comp>
 8002864:	4602      	mov	r2, r0
 8002866:	2800      	cmp	r0, #0
 8002868:	f43f af21 	beq.w	80026ae <d_encoding+0x11a>
 800286c:	2d00      	cmp	r5, #0
 800286e:	dcca      	bgt.n	8002806 <d_encoding+0x272>
 8002870:	4620      	mov	r0, r4
 8002872:	2300      	movs	r3, #0
 8002874:	213e      	movs	r1, #62	; 0x3e
 8002876:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800287a:	f7fd bcc9 	b.w	8000210 <d_make_comp>
 800287e:	2100      	movs	r1, #0
 8002880:	4620      	mov	r0, r4
 8002882:	f7ff fe87 	bl	8002594 <d_encoding>
 8002886:	2300      	movs	r3, #0
 8002888:	4602      	mov	r2, r0
 800288a:	2117      	movs	r1, #23
 800288c:	4620      	mov	r0, r4
 800288e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002892:	f7fd bcbd 	b.w	8000210 <d_make_comp>
 8002896:	4620      	mov	r0, r4
 8002898:	f7fe fd8e 	bl	80013b8 <d_name>
 800289c:	4605      	mov	r5, r0
 800289e:	4620      	mov	r0, r4
 80028a0:	f7fd fddc 	bl	800045c <d_number_component>
 80028a4:	462a      	mov	r2, r5
 80028a6:	4603      	mov	r3, r0
 80028a8:	2116      	movs	r1, #22
 80028aa:	4620      	mov	r0, r4
 80028ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028b0:	f7fd bcae 	b.w	8000210 <d_make_comp>
 80028b4:	789a      	ldrb	r2, [r3, #2]
 80028b6:	2100      	movs	r1, #0
 80028b8:	4620      	mov	r0, r4
 80028ba:	b12a      	cbz	r2, 80028c8 <d_encoding+0x334>
 80028bc:	1cda      	adds	r2, r3, #3
 80028be:	60e2      	str	r2, [r4, #12]
 80028c0:	789b      	ldrb	r3, [r3, #2]
 80028c2:	2b6e      	cmp	r3, #110	; 0x6e
 80028c4:	f000 8109 	beq.w	8002ada <d_encoding+0x546>
 80028c8:	f7ff fe64 	bl	8002594 <d_encoding>
 80028cc:	2300      	movs	r3, #0
 80028ce:	4602      	mov	r2, r0
 80028d0:	2148      	movs	r1, #72	; 0x48
 80028d2:	4620      	mov	r0, r4
 80028d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028d8:	f7fd bc9a 	b.w	8000210 <d_make_comp>
 80028dc:	68ea      	ldr	r2, [r5, #12]
 80028de:	e000      	b.n	80028e2 <d_encoding+0x34e>
 80028e0:	6892      	ldr	r2, [r2, #8]
 80028e2:	7810      	ldrb	r0, [r2, #0]
 80028e4:	f7fd fd80 	bl	80003e8 <is_fnqual_component_type>
 80028e8:	2800      	cmp	r0, #0
 80028ea:	d1f9      	bne.n	80028e0 <d_encoding+0x34c>
 80028ec:	60ea      	str	r2, [r5, #12]
 80028ee:	e66f      	b.n	80025d0 <d_encoding+0x3c>
 80028f0:	2176      	movs	r1, #118	; 0x76
 80028f2:	4620      	mov	r0, r4
 80028f4:	f7fe f80a 	bl	800090c <d_call_offset>
 80028f8:	2800      	cmp	r0, #0
 80028fa:	f43f aed8 	beq.w	80026ae <d_encoding+0x11a>
 80028fe:	2100      	movs	r1, #0
 8002900:	4620      	mov	r0, r4
 8002902:	f7ff fe47 	bl	8002594 <d_encoding>
 8002906:	2300      	movs	r3, #0
 8002908:	4602      	mov	r2, r0
 800290a:	2110      	movs	r1, #16
 800290c:	4620      	mov	r0, r4
 800290e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002912:	f7fd bc7d 	b.w	8000210 <d_make_comp>
 8002916:	2168      	movs	r1, #104	; 0x68
 8002918:	4620      	mov	r0, r4
 800291a:	f7fd fff7 	bl	800090c <d_call_offset>
 800291e:	2800      	cmp	r0, #0
 8002920:	f43f aec5 	beq.w	80026ae <d_encoding+0x11a>
 8002924:	2100      	movs	r1, #0
 8002926:	4620      	mov	r0, r4
 8002928:	f7ff fe34 	bl	8002594 <d_encoding>
 800292c:	2300      	movs	r3, #0
 800292e:	4602      	mov	r2, r0
 8002930:	210f      	movs	r1, #15
 8002932:	4620      	mov	r0, r4
 8002934:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002938:	f7fd bc6a 	b.w	8000210 <d_make_comp>
 800293c:	2100      	movs	r1, #0
 800293e:	4620      	mov	r0, r4
 8002940:	f7fd ffe4 	bl	800090c <d_call_offset>
 8002944:	2800      	cmp	r0, #0
 8002946:	f43f aeb2 	beq.w	80026ae <d_encoding+0x11a>
 800294a:	2100      	movs	r1, #0
 800294c:	4620      	mov	r0, r4
 800294e:	f7fd ffdd 	bl	800090c <d_call_offset>
 8002952:	2800      	cmp	r0, #0
 8002954:	f43f aeab 	beq.w	80026ae <d_encoding+0x11a>
 8002958:	2100      	movs	r1, #0
 800295a:	4620      	mov	r0, r4
 800295c:	f7ff fe1a 	bl	8002594 <d_encoding>
 8002960:	2300      	movs	r3, #0
 8002962:	4602      	mov	r2, r0
 8002964:	2111      	movs	r1, #17
 8002966:	4620      	mov	r0, r4
 8002968:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800296c:	f7fd bc50 	b.w	8000210 <d_make_comp>
 8002970:	4620      	mov	r0, r4
 8002972:	f7fe fd21 	bl	80013b8 <d_name>
 8002976:	2300      	movs	r3, #0
 8002978:	4602      	mov	r2, r0
 800297a:	2115      	movs	r1, #21
 800297c:	4620      	mov	r0, r4
 800297e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002982:	f7fd bc45 	b.w	8000210 <d_make_comp>
 8002986:	310f      	adds	r1, #15
 8002988:	6321      	str	r1, [r4, #48]	; 0x30
 800298a:	4620      	mov	r0, r4
 800298c:	f7fe fec0 	bl	8001710 <d_type>
 8002990:	2300      	movs	r3, #0
 8002992:	4602      	mov	r2, r0
 8002994:	2109      	movs	r1, #9
 8002996:	4620      	mov	r0, r4
 8002998:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800299c:	f7fd bc38 	b.w	8000210 <d_make_comp>
 80029a0:	310a      	adds	r1, #10
 80029a2:	6321      	str	r1, [r4, #48]	; 0x30
 80029a4:	4620      	mov	r0, r4
 80029a6:	f7fe feb3 	bl	8001710 <d_type>
 80029aa:	2300      	movs	r3, #0
 80029ac:	4602      	mov	r2, r0
 80029ae:	210a      	movs	r1, #10
 80029b0:	4620      	mov	r0, r4
 80029b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029b6:	f7fd bc2b 	b.w	8000210 <d_make_comp>
 80029ba:	4620      	mov	r0, r4
 80029bc:	f7fe fea8 	bl	8001710 <d_type>
 80029c0:	2300      	movs	r3, #0
 80029c2:	4602      	mov	r2, r0
 80029c4:	210d      	movs	r1, #13
 80029c6:	4620      	mov	r0, r4
 80029c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029cc:	f7fd bc20 	b.w	8000210 <d_make_comp>
 80029d0:	4620      	mov	r0, r4
 80029d2:	f7fe fe9d 	bl	8001710 <d_type>
 80029d6:	2300      	movs	r3, #0
 80029d8:	4602      	mov	r2, r0
 80029da:	2112      	movs	r1, #18
 80029dc:	4620      	mov	r0, r4
 80029de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029e2:	f7fd bc15 	b.w	8000210 <d_make_comp>
 80029e6:	4620      	mov	r0, r4
 80029e8:	f7fe fe92 	bl	8001710 <d_type>
 80029ec:	2300      	movs	r3, #0
 80029ee:	4602      	mov	r2, r0
 80029f0:	210c      	movs	r1, #12
 80029f2:	4620      	mov	r0, r4
 80029f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029f8:	f7fd bc0a 	b.w	8000210 <d_make_comp>
 80029fc:	4620      	mov	r0, r4
 80029fe:	f7fe fcdb 	bl	80013b8 <d_name>
 8002a02:	2300      	movs	r3, #0
 8002a04:	4602      	mov	r2, r0
 8002a06:	2114      	movs	r1, #20
 8002a08:	4620      	mov	r0, r4
 8002a0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a0e:	f7fd bbff 	b.w	8000210 <d_make_comp>
 8002a12:	4620      	mov	r0, r4
 8002a14:	f7fe fe7c 	bl	8001710 <d_type>
 8002a18:	2300      	movs	r3, #0
 8002a1a:	4602      	mov	r2, r0
 8002a1c:	210e      	movs	r1, #14
 8002a1e:	4620      	mov	r0, r4
 8002a20:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a24:	f7fd bbf4 	b.w	8000210 <d_make_comp>
 8002a28:	4620      	mov	r0, r4
 8002a2a:	f7fe fe71 	bl	8001710 <d_type>
 8002a2e:	4605      	mov	r5, r0
 8002a30:	f104 000c 	add.w	r0, r4, #12
 8002a34:	f7fd fce6 	bl	8000404 <d_number.isra.1>
 8002a38:	2800      	cmp	r0, #0
 8002a3a:	f6ff ae38 	blt.w	80026ae <d_encoding+0x11a>
 8002a3e:	68e3      	ldr	r3, [r4, #12]
 8002a40:	781a      	ldrb	r2, [r3, #0]
 8002a42:	2a5f      	cmp	r2, #95	; 0x5f
 8002a44:	f47f ae33 	bne.w	80026ae <d_encoding+0x11a>
 8002a48:	3301      	adds	r3, #1
 8002a4a:	60e3      	str	r3, [r4, #12]
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	f7fe fe5f 	bl	8001710 <d_type>
 8002a52:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002a54:	1d59      	adds	r1, r3, #5
 8002a56:	6321      	str	r1, [r4, #48]	; 0x30
 8002a58:	4602      	mov	r2, r0
 8002a5a:	462b      	mov	r3, r5
 8002a5c:	4620      	mov	r0, r4
 8002a5e:	210b      	movs	r1, #11
 8002a60:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a64:	f7fd bbd4 	b.w	8000210 <d_make_comp>
 8002a68:	463e      	mov	r6, r7
 8002a6a:	2100      	movs	r1, #0
 8002a6c:	e004      	b.n	8002a78 <d_encoding+0x4e4>
 8002a6e:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 8002a72:	b123      	cbz	r3, 8002a7e <d_encoding+0x4ea>
 8002a74:	2b24      	cmp	r3, #36	; 0x24
 8002a76:	d002      	beq.n	8002a7e <d_encoding+0x4ea>
 8002a78:	3101      	adds	r1, #1
 8002a7a:	42a9      	cmp	r1, r5
 8002a7c:	dbf7      	blt.n	8002a6e <d_encoding+0x4da>
 8002a7e:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8002a82:	4283      	cmp	r3, r0
 8002a84:	da24      	bge.n	8002ad0 <d_encoding+0x53c>
 8002a86:	e9d4 c603 	ldrd	ip, r6, [r4, #12]
 8002a8a:	0118      	lsls	r0, r3, #4
 8002a8c:	3301      	adds	r3, #1
 8002a8e:	6163      	str	r3, [r4, #20]
 8002a90:	1833      	adds	r3, r6, r0
 8002a92:	1a6d      	subs	r5, r5, r1
 8002a94:	f8c3 8004 	str.w	r8, [r3, #4]
 8002a98:	f806 8000 	strb.w	r8, [r6, r0]
 8002a9c:	609f      	str	r7, [r3, #8]
 8002a9e:	eb0c 0701 	add.w	r7, ip, r1
 8002aa2:	60d9      	str	r1, [r3, #12]
 8002aa4:	60e7      	str	r7, [r4, #12]
 8002aa6:	e6d6      	b.n	8002856 <d_encoding+0x2c2>
 8002aa8:	461a      	mov	r2, r3
 8002aaa:	e6df      	b.n	800286c <d_encoding+0x2d8>
 8002aac:	2b4c      	cmp	r3, #76	; 0x4c
 8002aae:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 8002ab2:	d004      	beq.n	8002abe <d_encoding+0x52a>
 8002ab4:	f4ff ae79 	bcc.w	80027aa <d_encoding+0x216>
 8002ab8:	2a01      	cmp	r2, #1
 8002aba:	f63f ae76 	bhi.w	80027aa <d_encoding+0x216>
 8002abe:	6889      	ldr	r1, [r1, #8]
 8002ac0:	2900      	cmp	r1, #0
 8002ac2:	f47f add7 	bne.w	8002674 <d_encoding+0xe0>
 8002ac6:	e671      	b.n	80027ac <d_encoding+0x218>
 8002ac8:	212f      	movs	r1, #47	; 0x2f
 8002aca:	e6ae      	b.n	800282a <d_encoding+0x296>
 8002acc:	212e      	movs	r1, #46	; 0x2e
 8002ace:	e6ac      	b.n	800282a <d_encoding+0x296>
 8002ad0:	68e3      	ldr	r3, [r4, #12]
 8002ad2:	440b      	add	r3, r1
 8002ad4:	60e3      	str	r3, [r4, #12]
 8002ad6:	2500      	movs	r5, #0
 8002ad8:	e57a      	b.n	80025d0 <d_encoding+0x3c>
 8002ada:	f7ff fd5b 	bl	8002594 <d_encoding>
 8002ade:	2300      	movs	r3, #0
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	2149      	movs	r1, #73	; 0x49
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002aea:	f7fd bb91 	b.w	8000210 <d_make_comp>
 8002aee:	bf00      	nop

08002af0 <d_expr_primary>:
 8002af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002af2:	68c2      	ldr	r2, [r0, #12]
 8002af4:	7813      	ldrb	r3, [r2, #0]
 8002af6:	2b4c      	cmp	r3, #76	; 0x4c
 8002af8:	d144      	bne.n	8002b84 <d_expr_primary+0x94>
 8002afa:	1c53      	adds	r3, r2, #1
 8002afc:	60c3      	str	r3, [r0, #12]
 8002afe:	7851      	ldrb	r1, [r2, #1]
 8002b00:	295f      	cmp	r1, #95	; 0x5f
 8002b02:	4604      	mov	r4, r0
 8002b04:	d040      	beq.n	8002b88 <d_expr_primary+0x98>
 8002b06:	295a      	cmp	r1, #90	; 0x5a
 8002b08:	d10c      	bne.n	8002b24 <d_expr_primary+0x34>
 8002b0a:	3301      	adds	r3, #1
 8002b0c:	60e3      	str	r3, [r4, #12]
 8002b0e:	2100      	movs	r1, #0
 8002b10:	4620      	mov	r0, r4
 8002b12:	f7ff fd3f 	bl	8002594 <d_encoding>
 8002b16:	68e3      	ldr	r3, [r4, #12]
 8002b18:	781a      	ldrb	r2, [r3, #0]
 8002b1a:	2a45      	cmp	r2, #69	; 0x45
 8002b1c:	d132      	bne.n	8002b84 <d_expr_primary+0x94>
 8002b1e:	3301      	adds	r3, #1
 8002b20:	60e3      	str	r3, [r4, #12]
 8002b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b24:	f7fe fdf4 	bl	8001710 <d_type>
 8002b28:	b360      	cbz	r0, 8002b84 <d_expr_primary+0x94>
 8002b2a:	7803      	ldrb	r3, [r0, #0]
 8002b2c:	2b27      	cmp	r3, #39	; 0x27
 8002b2e:	d032      	beq.n	8002b96 <d_expr_primary+0xa6>
 8002b30:	68e6      	ldr	r6, [r4, #12]
 8002b32:	7833      	ldrb	r3, [r6, #0]
 8002b34:	2b6e      	cmp	r3, #110	; 0x6e
 8002b36:	d037      	beq.n	8002ba8 <d_expr_primary+0xb8>
 8002b38:	213c      	movs	r1, #60	; 0x3c
 8002b3a:	2b45      	cmp	r3, #69	; 0x45
 8002b3c:	d040      	beq.n	8002bc0 <d_expr_primary+0xd0>
 8002b3e:	b30b      	cbz	r3, 8002b84 <d_expr_primary+0x94>
 8002b40:	4633      	mov	r3, r6
 8002b42:	e000      	b.n	8002b46 <d_expr_primary+0x56>
 8002b44:	b1f5      	cbz	r5, 8002b84 <d_expr_primary+0x94>
 8002b46:	3301      	adds	r3, #1
 8002b48:	60e3      	str	r3, [r4, #12]
 8002b4a:	781d      	ldrb	r5, [r3, #0]
 8002b4c:	2d45      	cmp	r5, #69	; 0x45
 8002b4e:	d1f9      	bne.n	8002b44 <d_expr_primary+0x54>
 8002b50:	1b9d      	subs	r5, r3, r6
 8002b52:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8002b56:	429a      	cmp	r2, r3
 8002b58:	da0b      	bge.n	8002b72 <d_expr_primary+0x82>
 8002b5a:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8002b5e:	ea4f 1c02 	mov.w	ip, r2, lsl #4
 8002b62:	eb0e 030c 	add.w	r3, lr, ip
 8002b66:	3201      	adds	r2, #1
 8002b68:	2700      	movs	r7, #0
 8002b6a:	605f      	str	r7, [r3, #4]
 8002b6c:	6162      	str	r2, [r4, #20]
 8002b6e:	b106      	cbz	r6, 8002b72 <d_expr_primary+0x82>
 8002b70:	bb05      	cbnz	r5, 8002bb4 <d_expr_primary+0xc4>
 8002b72:	2300      	movs	r3, #0
 8002b74:	4602      	mov	r2, r0
 8002b76:	4620      	mov	r0, r4
 8002b78:	f7fd fb4a 	bl	8000210 <d_make_comp>
 8002b7c:	68e3      	ldr	r3, [r4, #12]
 8002b7e:	781a      	ldrb	r2, [r3, #0]
 8002b80:	2a45      	cmp	r2, #69	; 0x45
 8002b82:	d0cc      	beq.n	8002b1e <d_expr_primary+0x2e>
 8002b84:	2000      	movs	r0, #0
 8002b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b88:	1c93      	adds	r3, r2, #2
 8002b8a:	60c3      	str	r3, [r0, #12]
 8002b8c:	7892      	ldrb	r2, [r2, #2]
 8002b8e:	2a5a      	cmp	r2, #90	; 0x5a
 8002b90:	d0bb      	beq.n	8002b0a <d_expr_primary+0x1a>
 8002b92:	2000      	movs	r0, #0
 8002b94:	e7c1      	b.n	8002b1a <d_expr_primary+0x2a>
 8002b96:	6883      	ldr	r3, [r0, #8]
 8002b98:	7c1a      	ldrb	r2, [r3, #16]
 8002b9a:	2a00      	cmp	r2, #0
 8002b9c:	d0c8      	beq.n	8002b30 <d_expr_primary+0x40>
 8002b9e:	685a      	ldr	r2, [r3, #4]
 8002ba0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002ba2:	1a9b      	subs	r3, r3, r2
 8002ba4:	6323      	str	r3, [r4, #48]	; 0x30
 8002ba6:	e7c3      	b.n	8002b30 <d_expr_primary+0x40>
 8002ba8:	1c72      	adds	r2, r6, #1
 8002baa:	60e2      	str	r2, [r4, #12]
 8002bac:	7873      	ldrb	r3, [r6, #1]
 8002bae:	213d      	movs	r1, #61	; 0x3d
 8002bb0:	4616      	mov	r6, r2
 8002bb2:	e7c2      	b.n	8002b3a <d_expr_primary+0x4a>
 8002bb4:	605f      	str	r7, [r3, #4]
 8002bb6:	f80e 700c 	strb.w	r7, [lr, ip]
 8002bba:	e9c3 6502 	strd	r6, r5, [r3, #8]
 8002bbe:	e7d9      	b.n	8002b74 <d_expr_primary+0x84>
 8002bc0:	2500      	movs	r5, #0
 8002bc2:	e7c6      	b.n	8002b52 <d_expr_primary+0x62>

08002bc4 <d_print_comp>:
 8002bc4:	b112      	cbz	r2, 8002bcc <d_print_comp+0x8>
 8002bc6:	6853      	ldr	r3, [r2, #4]
 8002bc8:	2b01      	cmp	r3, #1
 8002bca:	dd03      	ble.n	8002bd4 <d_print_comp+0x10>
 8002bcc:	2301      	movs	r3, #1
 8002bce:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8002bd2:	4770      	bx	lr
 8002bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bd8:	4615      	mov	r5, r2
 8002bda:	1c5a      	adds	r2, r3, #1
 8002bdc:	606a      	str	r2, [r5, #4]
 8002bde:	b099      	sub	sp, #100	; 0x64
 8002be0:	f8d0 7118 	ldr.w	r7, [r0, #280]	; 0x118
 8002be4:	9504      	str	r5, [sp, #16]
 8002be6:	460e      	mov	r6, r1
 8002be8:	ab04      	add	r3, sp, #16
 8002bea:	f8d0 1128 	ldr.w	r1, [r0, #296]	; 0x128
 8002bee:	9105      	str	r1, [sp, #20]
 8002bf0:	4604      	mov	r4, r0
 8002bf2:	f8c0 3128 	str.w	r3, [r0, #296]	; 0x128
 8002bf6:	2f00      	cmp	r7, #0
 8002bf8:	f040 80d7 	bne.w	8002daa <d_print_comp+0x1e6>
 8002bfc:	7828      	ldrb	r0, [r5, #0]
 8002bfe:	284f      	cmp	r0, #79	; 0x4f
 8002c00:	f201 82ef 	bhi.w	80041e2 <d_print_comp+0x161e>
 8002c04:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002c08:	0ab80a87 	.word	0x0ab80a87
 8002c0c:	0a4f0ab8 	.word	0x0a4f0ab8
 8002c10:	079407c6 	.word	0x079407c6
 8002c14:	075e0767 	.word	0x075e0767
 8002c18:	070f0737 	.word	0x070f0737
 8002c1c:	06bf06e7 	.word	0x06bf06e7
 8002c20:	066f0697 	.word	0x066f0697
 8002c24:	061f0647 	.word	0x061f0647
 8002c28:	091f0947 	.word	0x091f0947
 8002c2c:	08cf08f7 	.word	0x08cf08f7
 8002c30:	087f08a7 	.word	0x087f08a7
 8002c34:	082f0857 	.word	0x082f0857
 8002c38:	09bf09d6 	.word	0x09bf09d6
 8002c3c:	09bf09bf 	.word	0x09bf09bf
 8002c40:	09990999 	.word	0x09990999
 8002c44:	09990999 	.word	0x09990999
 8002c48:	09990999 	.word	0x09990999
 8002c4c:	096f0999 	.word	0x096f0999
 8002c50:	0999096f 	.word	0x0999096f
 8002c54:	0a1d0999 	.word	0x0a1d0999
 8002c58:	06060a14 	.word	0x06060a14
 8002c5c:	05720592 	.word	0x05720592
 8002c60:	0572051b 	.word	0x0572051b
 8002c64:	04d304d3 	.word	0x04d304d3
 8002c68:	045c0488 	.word	0x045c0488
 8002c6c:	0aed0434 	.word	0x0aed0434
 8002c70:	0404040c 	.word	0x0404040c
 8002c74:	039c03b0 	.word	0x039c03b0
 8002c78:	038d0397 	.word	0x038d0397
 8002c7c:	03880388 	.word	0x03880388
 8002c80:	03330333 	.word	0x03330333
 8002c84:	02fe030b 	.word	0x02fe030b
 8002c88:	02aa02dc 	.word	0x02aa02dc
 8002c8c:	025a0282 	.word	0x025a0282
 8002c90:	01f80232 	.word	0x01f80232
 8002c94:	01d00aed 	.word	0x01d00aed
 8002c98:	015301a8 	.word	0x015301a8
 8002c9c:	017b0105 	.word	0x017b0105
 8002ca0:	00d80999 	.word	0x00d80999
 8002ca4:	09990999 	.word	0x09990999
 8002ca8:	68aa      	ldr	r2, [r5, #8]
 8002caa:	6893      	ldr	r3, [r2, #8]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	7859      	ldrb	r1, [r3, #1]
 8002cb0:	2963      	cmp	r1, #99	; 0x63
 8002cb2:	d109      	bne.n	8002cc8 <d_print_comp+0x104>
 8002cb4:	781b      	ldrb	r3, [r3, #0]
 8002cb6:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
 8002cba:	2901      	cmp	r1, #1
 8002cbc:	f242 8319 	bls.w	80052f2 <d_print_comp+0x272e>
 8002cc0:	3b72      	subs	r3, #114	; 0x72
 8002cc2:	2b01      	cmp	r3, #1
 8002cc4:	f242 8315 	bls.w	80052f2 <d_print_comp+0x272e>
 8002cc8:	f105 030c 	add.w	r3, r5, #12
 8002ccc:	4631      	mov	r1, r6
 8002cce:	4620      	mov	r0, r4
 8002cd0:	f003 fcd2 	bl	8006678 <d_maybe_print_fold_expression.isra.20>
 8002cd4:	4680      	mov	r8, r0
 8002cd6:	2800      	cmp	r0, #0
 8002cd8:	f042 8400 	bne.w	80054dc <d_print_comp+0x2918>
 8002cdc:	68ab      	ldr	r3, [r5, #8]
 8002cde:	781a      	ldrb	r2, [r3, #0]
 8002ce0:	2a31      	cmp	r2, #49	; 0x31
 8002ce2:	f002 8592 	beq.w	800580a <d_print_comp+0x2c46>
 8002ce6:	689b      	ldr	r3, [r3, #8]
 8002ce8:	49d7      	ldr	r1, [pc, #860]	; (8003048 <d_print_comp+0x484>)
 8002cea:	6818      	ldr	r0, [r3, #0]
 8002cec:	f004 f850 	bl	8006d90 <strcmp>
 8002cf0:	68eb      	ldr	r3, [r5, #12]
 8002cf2:	689a      	ldr	r2, [r3, #8]
 8002cf4:	b918      	cbnz	r0, 8002cfe <d_print_comp+0x13a>
 8002cf6:	7813      	ldrb	r3, [r2, #0]
 8002cf8:	2b03      	cmp	r3, #3
 8002cfa:	f002 85d4 	beq.w	80058a6 <d_print_comp+0x2ce2>
 8002cfe:	4631      	mov	r1, r6
 8002d00:	4620      	mov	r0, r4
 8002d02:	f003 fc67 	bl	80065d4 <d_print_subexpr>
 8002d06:	68af      	ldr	r7, [r5, #8]
 8002d08:	49d0      	ldr	r1, [pc, #832]	; (800304c <d_print_comp+0x488>)
 8002d0a:	68bb      	ldr	r3, [r7, #8]
 8002d0c:	f8d3 8000 	ldr.w	r8, [r3]
 8002d10:	4640      	mov	r0, r8
 8002d12:	f004 f83d 	bl	8006d90 <strcmp>
 8002d16:	4681      	mov	r9, r0
 8002d18:	2800      	cmp	r0, #0
 8002d1a:	f042 83d0 	bne.w	80054be <d_print_comp+0x28fa>
 8002d1e:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8002d22:	2fff      	cmp	r7, #255	; 0xff
 8002d24:	d110      	bne.n	8002d48 <d_print_comp+0x184>
 8002d26:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8002d2a:	4639      	mov	r1, r7
 8002d2c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d34:	4620      	mov	r0, r4
 8002d36:	4798      	blx	r3
 8002d38:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002d3c:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8002d40:	3301      	adds	r3, #1
 8002d42:	464f      	mov	r7, r9
 8002d44:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002d48:	1c7a      	adds	r2, r7, #1
 8002d4a:	235b      	movs	r3, #91	; 0x5b
 8002d4c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002d50:	55e3      	strb	r3, [r4, r7]
 8002d52:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002d56:	68eb      	ldr	r3, [r5, #12]
 8002d58:	4631      	mov	r1, r6
 8002d5a:	68da      	ldr	r2, [r3, #12]
 8002d5c:	4620      	mov	r0, r4
 8002d5e:	f7ff ff31 	bl	8002bc4 <d_print_comp>
 8002d62:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8002d66:	2fff      	cmp	r7, #255	; 0xff
 8002d68:	d111      	bne.n	8002d8e <d_print_comp+0x1ca>
 8002d6a:	2600      	movs	r6, #0
 8002d6c:	4639      	mov	r1, r7
 8002d6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d72:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002d76:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d7a:	4620      	mov	r0, r4
 8002d7c:	4798      	blx	r3
 8002d7e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002d82:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8002d86:	3301      	adds	r3, #1
 8002d88:	4637      	mov	r7, r6
 8002d8a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002d8e:	235d      	movs	r3, #93	; 0x5d
 8002d90:	1c7a      	adds	r2, r7, #1
 8002d92:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002d96:	55e3      	strb	r3, [r4, r7]
 8002d98:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002d9c:	68ab      	ldr	r3, [r5, #8]
 8002d9e:	781a      	ldrb	r2, [r3, #0]
 8002da0:	2a31      	cmp	r2, #49	; 0x31
 8002da2:	f002 83ad 	beq.w	8005500 <d_print_comp+0x293c>
 8002da6:	9905      	ldr	r1, [sp, #20]
 8002da8:	686a      	ldr	r2, [r5, #4]
 8002daa:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8002dae:	3a01      	subs	r2, #1
 8002db0:	606a      	str	r2, [r5, #4]
 8002db2:	b019      	add	sp, #100	; 0x64
 8002db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002db8:	4fa5      	ldr	r7, [pc, #660]	; (8003050 <d_print_comp+0x48c>)
 8002dba:	68aa      	ldr	r2, [r5, #8]
 8002dbc:	4631      	mov	r1, r6
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	f7ff ff00 	bl	8002bc4 <d_print_comp>
 8002dc4:	f107 0808 	add.w	r8, r7, #8
 8002dc8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002dcc:	f04f 0900 	mov.w	r9, #0
 8002dd0:	e016      	b.n	8002e00 <d_print_comp+0x23c>
 8002dd2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002dd6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002dda:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002dde:	4798      	blx	r3
 8002de0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002de4:	3301      	adds	r3, #1
 8002de6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002dea:	2200      	movs	r2, #0
 8002dec:	2301      	movs	r3, #1
 8002dee:	45b8      	cmp	r8, r7
 8002df0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002df4:	f804 a002 	strb.w	sl, [r4, r2]
 8002df8:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002dfc:	f001 82f9 	beq.w	80043f2 <d_print_comp+0x182e>
 8002e00:	2bff      	cmp	r3, #255	; 0xff
 8002e02:	4619      	mov	r1, r3
 8002e04:	4620      	mov	r0, r4
 8002e06:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002e0a:	d0e2      	beq.n	8002dd2 <d_print_comp+0x20e>
 8002e0c:	461a      	mov	r2, r3
 8002e0e:	3301      	adds	r3, #1
 8002e10:	e7ed      	b.n	8002dee <d_print_comp+0x22a>
 8002e12:	68a9      	ldr	r1, [r5, #8]
 8002e14:	4620      	mov	r0, r4
 8002e16:	f7fd fcef 	bl	80007f8 <d_find_pack>
 8002e1a:	2800      	cmp	r0, #0
 8002e1c:	f002 81e1 	beq.w	80051e2 <d_print_comp+0x261e>
 8002e20:	2300      	movs	r3, #0
 8002e22:	7802      	ldrb	r2, [r0, #0]
 8002e24:	2a2f      	cmp	r2, #47	; 0x2f
 8002e26:	f041 85df 	bne.w	80049e8 <d_print_comp+0x1e24>
 8002e2a:	6882      	ldr	r2, [r0, #8]
 8002e2c:	2a00      	cmp	r2, #0
 8002e2e:	f001 85db 	beq.w	80049e8 <d_print_comp+0x1e24>
 8002e32:	68c0      	ldr	r0, [r0, #12]
 8002e34:	3301      	adds	r3, #1
 8002e36:	2800      	cmp	r0, #0
 8002e38:	d1f3      	bne.n	8002e22 <d_print_comp+0x25e>
 8002e3a:	4619      	mov	r1, r3
 8002e3c:	68ab      	ldr	r3, [r5, #8]
 8002e3e:	9301      	str	r3, [sp, #4]
 8002e40:	1e4a      	subs	r2, r1, #1
 8002e42:	9202      	str	r2, [sp, #8]
 8002e44:	f04f 0a00 	mov.w	sl, #0
 8002e48:	4689      	mov	r9, r1
 8002e4a:	9503      	str	r5, [sp, #12]
 8002e4c:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 8002e50:	9a01      	ldr	r2, [sp, #4]
 8002e52:	4631      	mov	r1, r6
 8002e54:	4620      	mov	r0, r4
 8002e56:	f7ff feb5 	bl	8002bc4 <d_print_comp>
 8002e5a:	9b02      	ldr	r3, [sp, #8]
 8002e5c:	429f      	cmp	r7, r3
 8002e5e:	f281 81c6 	bge.w	80041ee <d_print_comp+0x162a>
 8002e62:	4d7c      	ldr	r5, [pc, #496]	; (8003054 <d_print_comp+0x490>)
 8002e64:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002e68:	f105 0802 	add.w	r8, r5, #2
 8002e6c:	e016      	b.n	8002e9c <d_print_comp+0x2d8>
 8002e6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e76:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8002e7a:	4798      	blx	r3
 8002e7c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002e80:	3301      	adds	r3, #1
 8002e82:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002e86:	2200      	movs	r2, #0
 8002e88:	2301      	movs	r3, #1
 8002e8a:	45a8      	cmp	r8, r5
 8002e8c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002e90:	f804 b002 	strb.w	fp, [r4, r2]
 8002e94:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 8002e98:	f001 81a9 	beq.w	80041ee <d_print_comp+0x162a>
 8002e9c:	2bff      	cmp	r3, #255	; 0xff
 8002e9e:	4619      	mov	r1, r3
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	f815 bb01 	ldrb.w	fp, [r5], #1
 8002ea6:	d0e2      	beq.n	8002e6e <d_print_comp+0x2aa>
 8002ea8:	461a      	mov	r2, r3
 8002eaa:	3301      	adds	r3, #1
 8002eac:	e7ed      	b.n	8002e8a <d_print_comp+0x2c6>
 8002eae:	4f6a      	ldr	r7, [pc, #424]	; (8003058 <d_print_comp+0x494>)
 8002eb0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002eb4:	f107 081a 	add.w	r8, r7, #26
 8002eb8:	f04f 0900 	mov.w	r9, #0
 8002ebc:	e016      	b.n	8002eec <d_print_comp+0x328>
 8002ebe:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ec2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ec6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002eca:	4798      	blx	r3
 8002ecc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002ed0:	3301      	adds	r3, #1
 8002ed2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002ed6:	2200      	movs	r2, #0
 8002ed8:	2301      	movs	r3, #1
 8002eda:	45b8      	cmp	r8, r7
 8002edc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002ee0:	f804 a002 	strb.w	sl, [r4, r2]
 8002ee4:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002ee8:	f001 82f1 	beq.w	80044ce <d_print_comp+0x190a>
 8002eec:	2bff      	cmp	r3, #255	; 0xff
 8002eee:	4619      	mov	r1, r3
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002ef6:	d0e2      	beq.n	8002ebe <d_print_comp+0x2fa>
 8002ef8:	461a      	mov	r2, r3
 8002efa:	3301      	adds	r3, #1
 8002efc:	e7ed      	b.n	8002eda <d_print_comp+0x316>
 8002efe:	4f57      	ldr	r7, [pc, #348]	; (800305c <d_print_comp+0x498>)
 8002f00:	68aa      	ldr	r2, [r5, #8]
 8002f02:	4631      	mov	r1, r6
 8002f04:	4620      	mov	r0, r4
 8002f06:	f7ff fe5d 	bl	8002bc4 <d_print_comp>
 8002f0a:	f107 0805 	add.w	r8, r7, #5
 8002f0e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002f12:	f04f 0900 	mov.w	r9, #0
 8002f16:	e016      	b.n	8002f46 <d_print_comp+0x382>
 8002f18:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f1c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f20:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002f24:	4798      	blx	r3
 8002f26:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002f2a:	3301      	adds	r3, #1
 8002f2c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002f30:	2200      	movs	r2, #0
 8002f32:	2301      	movs	r3, #1
 8002f34:	45b8      	cmp	r8, r7
 8002f36:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002f3a:	f804 a002 	strb.w	sl, [r4, r2]
 8002f3e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002f42:	f001 827c 	beq.w	800443e <d_print_comp+0x187a>
 8002f46:	2bff      	cmp	r3, #255	; 0xff
 8002f48:	4619      	mov	r1, r3
 8002f4a:	4620      	mov	r0, r4
 8002f4c:	f817 ab01 	ldrb.w	sl, [r7], #1
 8002f50:	d0e2      	beq.n	8002f18 <d_print_comp+0x354>
 8002f52:	461a      	mov	r2, r3
 8002f54:	3301      	adds	r3, #1
 8002f56:	e7ed      	b.n	8002f34 <d_print_comp+0x370>
 8002f58:	4f41      	ldr	r7, [pc, #260]	; (8003060 <d_print_comp+0x49c>)
 8002f5a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002f5e:	f107 0816 	add.w	r8, r7, #22
 8002f62:	f04f 0900 	mov.w	r9, #0
 8002f66:	e016      	b.n	8002f96 <d_print_comp+0x3d2>
 8002f68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f6c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f70:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002f74:	4798      	blx	r3
 8002f76:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002f7a:	3301      	adds	r3, #1
 8002f7c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002f80:	2200      	movs	r2, #0
 8002f82:	2301      	movs	r3, #1
 8002f84:	45b8      	cmp	r8, r7
 8002f86:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002f8a:	f804 a002 	strb.w	sl, [r4, r2]
 8002f8e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002f92:	f001 81f4 	beq.w	800437e <d_print_comp+0x17ba>
 8002f96:	2bff      	cmp	r3, #255	; 0xff
 8002f98:	4619      	mov	r1, r3
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002fa0:	d0e2      	beq.n	8002f68 <d_print_comp+0x3a4>
 8002fa2:	461a      	mov	r2, r3
 8002fa4:	3301      	adds	r3, #1
 8002fa6:	e7ed      	b.n	8002f84 <d_print_comp+0x3c0>
 8002fa8:	4e2e      	ldr	r6, [pc, #184]	; (8003064 <d_print_comp+0x4a0>)
 8002faa:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002fae:	f106 070e 	add.w	r7, r6, #14
 8002fb2:	f04f 0800 	mov.w	r8, #0
 8002fb6:	e016      	b.n	8002fe6 <d_print_comp+0x422>
 8002fb8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002fbc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002fc0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002fc4:	4798      	blx	r3
 8002fc6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002fca:	3301      	adds	r3, #1
 8002fcc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	2301      	movs	r3, #1
 8002fd4:	42b7      	cmp	r7, r6
 8002fd6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002fda:	f804 9002 	strb.w	r9, [r4, r2]
 8002fde:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8002fe2:	f001 81d5 	beq.w	8004390 <d_print_comp+0x17cc>
 8002fe6:	2bff      	cmp	r3, #255	; 0xff
 8002fe8:	4619      	mov	r1, r3
 8002fea:	4620      	mov	r0, r4
 8002fec:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 8002ff0:	d0e2      	beq.n	8002fb8 <d_print_comp+0x3f4>
 8002ff2:	461a      	mov	r2, r3
 8002ff4:	3301      	adds	r3, #1
 8002ff6:	e7ed      	b.n	8002fd4 <d_print_comp+0x410>
 8002ff8:	4f1b      	ldr	r7, [pc, #108]	; (8003068 <d_print_comp+0x4a4>)
 8002ffa:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002ffe:	f107 0808 	add.w	r8, r7, #8
 8003002:	f04f 0900 	mov.w	r9, #0
 8003006:	e016      	b.n	8003036 <d_print_comp+0x472>
 8003008:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800300c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003010:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003014:	4798      	blx	r3
 8003016:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800301a:	3301      	adds	r3, #1
 800301c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003020:	2200      	movs	r2, #0
 8003022:	2301      	movs	r3, #1
 8003024:	45b8      	cmp	r8, r7
 8003026:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800302a:	f804 a002 	strb.w	sl, [r4, r2]
 800302e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003032:	f001 8114 	beq.w	800425e <d_print_comp+0x169a>
 8003036:	2bff      	cmp	r3, #255	; 0xff
 8003038:	4619      	mov	r1, r3
 800303a:	4620      	mov	r0, r4
 800303c:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003040:	d0e2      	beq.n	8003008 <d_print_comp+0x444>
 8003042:	461a      	mov	r2, r3
 8003044:	3301      	adds	r3, #1
 8003046:	e7ed      	b.n	8003024 <d_print_comp+0x460>
 8003048:	0801ed50 	.word	0x0801ed50
 800304c:	0801ef50 	.word	0x0801ef50
 8003050:	0801f00b 	.word	0x0801f00b
 8003054:	0801ef24 	.word	0x0801ef24
 8003058:	0801eeef 	.word	0x0801eeef
 800305c:	0801ed90 	.word	0x0801ed90
 8003060:	0801eef3 	.word	0x0801eef3
 8003064:	0801effb 	.word	0x0801effb
 8003068:	0801efeb 	.word	0x0801efeb
 800306c:	4fb9      	ldr	r7, [pc, #740]	; (8003354 <d_print_comp+0x790>)
 800306e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003072:	f107 081c 	add.w	r8, r7, #28
 8003076:	f04f 0900 	mov.w	r9, #0
 800307a:	e016      	b.n	80030aa <d_print_comp+0x4e6>
 800307c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003080:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003084:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003088:	4798      	blx	r3
 800308a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800308e:	3301      	adds	r3, #1
 8003090:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003094:	2200      	movs	r2, #0
 8003096:	2301      	movs	r3, #1
 8003098:	45b8      	cmp	r8, r7
 800309a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800309e:	f804 a002 	strb.w	sl, [r4, r2]
 80030a2:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80030a6:	f001 810f 	beq.w	80042c8 <d_print_comp+0x1704>
 80030aa:	2bff      	cmp	r3, #255	; 0xff
 80030ac:	4619      	mov	r1, r3
 80030ae:	4620      	mov	r0, r4
 80030b0:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80030b4:	d0e2      	beq.n	800307c <d_print_comp+0x4b8>
 80030b6:	461a      	mov	r2, r3
 80030b8:	3301      	adds	r3, #1
 80030ba:	e7ed      	b.n	8003098 <d_print_comp+0x4d4>
 80030bc:	4fa6      	ldr	r7, [pc, #664]	; (8003358 <d_print_comp+0x794>)
 80030be:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80030c2:	f107 081d 	add.w	r8, r7, #29
 80030c6:	f04f 0900 	mov.w	r9, #0
 80030ca:	e016      	b.n	80030fa <d_print_comp+0x536>
 80030cc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80030d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80030d4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80030d8:	4798      	blx	r3
 80030da:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80030de:	3301      	adds	r3, #1
 80030e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80030e4:	2200      	movs	r2, #0
 80030e6:	2301      	movs	r3, #1
 80030e8:	4547      	cmp	r7, r8
 80030ea:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80030ee:	f804 a002 	strb.w	sl, [r4, r2]
 80030f2:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80030f6:	f001 8083 	beq.w	8004200 <d_print_comp+0x163c>
 80030fa:	2bff      	cmp	r3, #255	; 0xff
 80030fc:	4619      	mov	r1, r3
 80030fe:	4620      	mov	r0, r4
 8003100:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003104:	d0e2      	beq.n	80030cc <d_print_comp+0x508>
 8003106:	461a      	mov	r2, r3
 8003108:	3301      	adds	r3, #1
 800310a:	e7ed      	b.n	80030e8 <d_print_comp+0x524>
 800310c:	4f93      	ldr	r7, [pc, #588]	; (800335c <d_print_comp+0x798>)
 800310e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003112:	f107 080a 	add.w	r8, r7, #10
 8003116:	f04f 0900 	mov.w	r9, #0
 800311a:	e016      	b.n	800314a <d_print_comp+0x586>
 800311c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003120:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003124:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003128:	4798      	blx	r3
 800312a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800312e:	3301      	adds	r3, #1
 8003130:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003134:	2200      	movs	r2, #0
 8003136:	2301      	movs	r3, #1
 8003138:	45b8      	cmp	r8, r7
 800313a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800313e:	f804 a002 	strb.w	sl, [r4, r2]
 8003142:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003146:	f001 8064 	beq.w	8004212 <d_print_comp+0x164e>
 800314a:	2bff      	cmp	r3, #255	; 0xff
 800314c:	4619      	mov	r1, r3
 800314e:	4620      	mov	r0, r4
 8003150:	f817 ab01 	ldrb.w	sl, [r7], #1
 8003154:	d0e2      	beq.n	800311c <d_print_comp+0x558>
 8003156:	461a      	mov	r2, r3
 8003158:	3301      	adds	r3, #1
 800315a:	e7ed      	b.n	8003138 <d_print_comp+0x574>
 800315c:	a808      	add	r0, sp, #32
 800315e:	68aa      	ldr	r2, [r5, #8]
 8003160:	497f      	ldr	r1, [pc, #508]	; (8003360 <d_print_comp+0x79c>)
 8003162:	f00b f9c5 	bl	800e4f0 <sprintf>
 8003166:	a808      	add	r0, sp, #32
 8003168:	f003 fe1c 	bl	8006da4 <strlen>
 800316c:	2800      	cmp	r0, #0
 800316e:	f001 81b7 	beq.w	80044e0 <d_print_comp+0x191c>
 8003172:	ae08      	add	r6, sp, #32
 8003174:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003178:	1837      	adds	r7, r6, r0
 800317a:	f04f 0800 	mov.w	r8, #0
 800317e:	e016      	b.n	80031ae <d_print_comp+0x5ea>
 8003180:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003184:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003188:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800318c:	4798      	blx	r3
 800318e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003192:	3301      	adds	r3, #1
 8003194:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003198:	2200      	movs	r2, #0
 800319a:	2301      	movs	r3, #1
 800319c:	42be      	cmp	r6, r7
 800319e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80031a2:	f804 9002 	strb.w	r9, [r4, r2]
 80031a6:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80031aa:	f001 8199 	beq.w	80044e0 <d_print_comp+0x191c>
 80031ae:	2bff      	cmp	r3, #255	; 0xff
 80031b0:	4619      	mov	r1, r3
 80031b2:	4620      	mov	r0, r4
 80031b4:	f816 9b01 	ldrb.w	r9, [r6], #1
 80031b8:	d0e2      	beq.n	8003180 <d_print_comp+0x5bc>
 80031ba:	461a      	mov	r2, r3
 80031bc:	3301      	adds	r3, #1
 80031be:	e7ed      	b.n	800319c <d_print_comp+0x5d8>
 80031c0:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80031c4:	f895 8008 	ldrb.w	r8, [r5, #8]
 80031c8:	2fff      	cmp	r7, #255	; 0xff
 80031ca:	d111      	bne.n	80031f0 <d_print_comp+0x62c>
 80031cc:	2600      	movs	r6, #0
 80031ce:	4639      	mov	r1, r7
 80031d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80031d4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80031d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80031dc:	4620      	mov	r0, r4
 80031de:	4798      	blx	r3
 80031e0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80031e4:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80031e8:	3301      	adds	r3, #1
 80031ea:	4637      	mov	r7, r6
 80031ec:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80031f0:	1c7b      	adds	r3, r7, #1
 80031f2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80031f6:	f804 8007 	strb.w	r8, [r4, r7]
 80031fa:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80031fe:	686a      	ldr	r2, [r5, #4]
 8003200:	9905      	ldr	r1, [sp, #20]
 8003202:	e5d2      	b.n	8002daa <d_print_comp+0x1e6>
 8003204:	68aa      	ldr	r2, [r5, #8]
 8003206:	4631      	mov	r1, r6
 8003208:	4620      	mov	r0, r4
 800320a:	f7ff fcdb 	bl	8002bc4 <d_print_comp>
 800320e:	4631      	mov	r1, r6
 8003210:	68ea      	ldr	r2, [r5, #12]
 8003212:	4620      	mov	r0, r4
 8003214:	f7ff fcd6 	bl	8002bc4 <d_print_comp>
 8003218:	9905      	ldr	r1, [sp, #20]
 800321a:	686a      	ldr	r2, [r5, #4]
 800321c:	e5c5      	b.n	8002daa <d_print_comp+0x1e6>
 800321e:	4f51      	ldr	r7, [pc, #324]	; (8003364 <d_print_comp+0x7a0>)
 8003220:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003224:	f107 080e 	add.w	r8, r7, #14
 8003228:	f04f 0900 	mov.w	r9, #0
 800322c:	e016      	b.n	800325c <d_print_comp+0x698>
 800322e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003232:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003236:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800323a:	4798      	blx	r3
 800323c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003240:	3301      	adds	r3, #1
 8003242:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003246:	2200      	movs	r2, #0
 8003248:	2301      	movs	r3, #1
 800324a:	45b8      	cmp	r8, r7
 800324c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003250:	f804 a002 	strb.w	sl, [r4, r2]
 8003254:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003258:	f001 8146 	beq.w	80044e8 <d_print_comp+0x1924>
 800325c:	2bff      	cmp	r3, #255	; 0xff
 800325e:	4619      	mov	r1, r3
 8003260:	4620      	mov	r0, r4
 8003262:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003266:	d0e2      	beq.n	800322e <d_print_comp+0x66a>
 8003268:	461a      	mov	r2, r3
 800326a:	3301      	adds	r3, #1
 800326c:	e7ed      	b.n	800324a <d_print_comp+0x686>
 800326e:	68ab      	ldr	r3, [r5, #8]
 8003270:	781a      	ldrb	r2, [r3, #0]
 8003272:	2a27      	cmp	r2, #39	; 0x27
 8003274:	f001 8572 	beq.w	8004d5c <d_print_comp+0x2198>
 8003278:	f04f 0800 	mov.w	r8, #0
 800327c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003280:	2fff      	cmp	r7, #255	; 0xff
 8003282:	d112      	bne.n	80032aa <d_print_comp+0x6e6>
 8003284:	f04f 0900 	mov.w	r9, #0
 8003288:	4639      	mov	r1, r7
 800328a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800328e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003292:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003296:	4620      	mov	r0, r4
 8003298:	4798      	blx	r3
 800329a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800329e:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80032a2:	3301      	adds	r3, #1
 80032a4:	464f      	mov	r7, r9
 80032a6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80032aa:	2328      	movs	r3, #40	; 0x28
 80032ac:	1c7a      	adds	r2, r7, #1
 80032ae:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80032b2:	55e3      	strb	r3, [r4, r7]
 80032b4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80032b8:	68aa      	ldr	r2, [r5, #8]
 80032ba:	4631      	mov	r1, r6
 80032bc:	4620      	mov	r0, r4
 80032be:	f7ff fc81 	bl	8002bc4 <d_print_comp>
 80032c2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80032c6:	2bff      	cmp	r3, #255	; 0xff
 80032c8:	f041 85b8 	bne.w	8004e3c <d_print_comp+0x2278>
 80032cc:	2200      	movs	r2, #0
 80032ce:	4619      	mov	r1, r3
 80032d0:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 80032d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80032d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80032dc:	4620      	mov	r0, r4
 80032de:	4798      	blx	r3
 80032e0:	2329      	movs	r3, #41	; 0x29
 80032e2:	7023      	strb	r3, [r4, #0]
 80032e4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80032e8:	782a      	ldrb	r2, [r5, #0]
 80032ea:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80032ee:	2101      	movs	r1, #1
 80032f0:	3301      	adds	r3, #1
 80032f2:	2a3d      	cmp	r2, #61	; 0x3d
 80032f4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80032f8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032fc:	f001 85bb 	beq.w	8004e76 <d_print_comp+0x22b2>
 8003300:	f1b8 0f08 	cmp.w	r8, #8
 8003304:	f001 8556 	beq.w	8004db4 <d_print_comp+0x21f0>
 8003308:	4631      	mov	r1, r6
 800330a:	68ea      	ldr	r2, [r5, #12]
 800330c:	4620      	mov	r0, r4
 800330e:	f7ff fc59 	bl	8002bc4 <d_print_comp>
 8003312:	9905      	ldr	r1, [sp, #20]
 8003314:	686a      	ldr	r2, [r5, #4]
 8003316:	e548      	b.n	8002daa <d_print_comp+0x1e6>
 8003318:	2301      	movs	r3, #1
 800331a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800331e:	686a      	ldr	r2, [r5, #4]
 8003320:	e543      	b.n	8002daa <d_print_comp+0x1e6>
 8003322:	68eb      	ldr	r3, [r5, #12]
 8003324:	781a      	ldrb	r2, [r3, #0]
 8003326:	2a3a      	cmp	r2, #58	; 0x3a
 8003328:	f001 8405 	beq.w	8004b36 <d_print_comp+0x1f72>
 800332c:	2301      	movs	r3, #1
 800332e:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003332:	686a      	ldr	r2, [r5, #4]
 8003334:	e539      	b.n	8002daa <d_print_comp+0x1e6>
 8003336:	2301      	movs	r3, #1
 8003338:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800333c:	686a      	ldr	r2, [r5, #4]
 800333e:	e534      	b.n	8002daa <d_print_comp+0x1e6>
 8003340:	68eb      	ldr	r3, [r5, #12]
 8003342:	781b      	ldrb	r3, [r3, #0]
 8003344:	2b38      	cmp	r3, #56	; 0x38
 8003346:	f43f acaf 	beq.w	8002ca8 <d_print_comp+0xe4>
 800334a:	2301      	movs	r3, #1
 800334c:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003350:	686a      	ldr	r2, [r5, #4]
 8003352:	e52a      	b.n	8002daa <d_print_comp+0x1e6>
 8003354:	0801efcb 	.word	0x0801efcb
 8003358:	0801efab 	.word	0x0801efab
 800335c:	0801ef8c 	.word	0x0801ef8c
 8003360:	0801ed48 	.word	0x0801ed48
 8003364:	0801ef7b 	.word	0x0801ef7b
 8003368:	e9d5 9802 	ldrd	r9, r8, [r5, #8]
 800336c:	f899 3000 	ldrb.w	r3, [r9]
 8003370:	2b31      	cmp	r3, #49	; 0x31
 8003372:	f001 843a 	beq.w	8004bea <d_print_comp+0x2026>
 8003376:	2b33      	cmp	r3, #51	; 0x33
 8003378:	f042 8192 	bne.w	80056a0 <d_print_comp+0x2adc>
 800337c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003380:	2fff      	cmp	r7, #255	; 0xff
 8003382:	d112      	bne.n	80033aa <d_print_comp+0x7e6>
 8003384:	f04f 0a00 	mov.w	sl, #0
 8003388:	4639      	mov	r1, r7
 800338a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800338e:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003392:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003396:	4620      	mov	r0, r4
 8003398:	4798      	blx	r3
 800339a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800339e:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 80033a2:	3301      	adds	r3, #1
 80033a4:	4657      	mov	r7, sl
 80033a6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80033aa:	1c7a      	adds	r2, r7, #1
 80033ac:	2328      	movs	r3, #40	; 0x28
 80033ae:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80033b2:	55e3      	strb	r3, [r4, r7]
 80033b4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80033b8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80033bc:	4631      	mov	r1, r6
 80033be:	4620      	mov	r0, r4
 80033c0:	f7ff fc00 	bl	8002bc4 <d_print_comp>
 80033c4:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80033c8:	2fff      	cmp	r7, #255	; 0xff
 80033ca:	d112      	bne.n	80033f2 <d_print_comp+0x82e>
 80033cc:	f04f 0900 	mov.w	r9, #0
 80033d0:	4639      	mov	r1, r7
 80033d2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80033d6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80033da:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80033de:	4620      	mov	r0, r4
 80033e0:	4798      	blx	r3
 80033e2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80033e6:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80033ea:	3301      	adds	r3, #1
 80033ec:	464f      	mov	r7, r9
 80033ee:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80033f2:	2329      	movs	r3, #41	; 0x29
 80033f4:	1c7a      	adds	r2, r7, #1
 80033f6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80033fa:	55e3      	strb	r3, [r4, r7]
 80033fc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003400:	4642      	mov	r2, r8
 8003402:	4631      	mov	r1, r6
 8003404:	4620      	mov	r0, r4
 8003406:	f003 f8e5 	bl	80065d4 <d_print_subexpr>
 800340a:	9905      	ldr	r1, [sp, #20]
 800340c:	686a      	ldr	r2, [r5, #4]
 800340e:	e4cc      	b.n	8002daa <d_print_comp+0x1e6>
 8003410:	4631      	mov	r1, r6
 8003412:	68aa      	ldr	r2, [r5, #8]
 8003414:	4620      	mov	r0, r4
 8003416:	f003 f89d 	bl	8006554 <d_print_expr_op>
 800341a:	9905      	ldr	r1, [sp, #20]
 800341c:	686a      	ldr	r2, [r5, #4]
 800341e:	e4c4      	b.n	8002daa <d_print_comp+0x1e6>
 8003420:	4fd2      	ldr	r7, [pc, #840]	; (800376c <d_print_comp+0xba8>)
 8003422:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003426:	f107 0809 	add.w	r8, r7, #9
 800342a:	f04f 0900 	mov.w	r9, #0
 800342e:	e016      	b.n	800345e <d_print_comp+0x89a>
 8003430:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003434:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003438:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800343c:	4798      	blx	r3
 800343e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003442:	3301      	adds	r3, #1
 8003444:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003448:	2200      	movs	r2, #0
 800344a:	2301      	movs	r3, #1
 800344c:	45b8      	cmp	r8, r7
 800344e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003452:	f804 a002 	strb.w	sl, [r4, r2]
 8003456:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800345a:	f001 8057 	beq.w	800450c <d_print_comp+0x1948>
 800345e:	2bff      	cmp	r3, #255	; 0xff
 8003460:	4619      	mov	r1, r3
 8003462:	4620      	mov	r0, r4
 8003464:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003468:	d0e2      	beq.n	8003430 <d_print_comp+0x86c>
 800346a:	461a      	mov	r2, r3
 800346c:	3301      	adds	r3, #1
 800346e:	e7ed      	b.n	800344c <d_print_comp+0x888>
 8003470:	4fbe      	ldr	r7, [pc, #760]	; (800376c <d_print_comp+0xba8>)
 8003472:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003476:	f107 0809 	add.w	r8, r7, #9
 800347a:	f04f 0900 	mov.w	r9, #0
 800347e:	e016      	b.n	80034ae <d_print_comp+0x8ea>
 8003480:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003484:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003488:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800348c:	4798      	blx	r3
 800348e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003492:	3301      	adds	r3, #1
 8003494:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003498:	2200      	movs	r2, #0
 800349a:	2301      	movs	r3, #1
 800349c:	45b8      	cmp	r8, r7
 800349e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80034a2:	f804 a002 	strb.w	sl, [r4, r2]
 80034a6:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80034aa:	f001 8026 	beq.w	80044fa <d_print_comp+0x1936>
 80034ae:	2bff      	cmp	r3, #255	; 0xff
 80034b0:	4619      	mov	r1, r3
 80034b2:	4620      	mov	r0, r4
 80034b4:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80034b8:	d0e2      	beq.n	8003480 <d_print_comp+0x8bc>
 80034ba:	461a      	mov	r2, r3
 80034bc:	3301      	adds	r3, #1
 80034be:	e7ed      	b.n	800349c <d_print_comp+0x8d8>
 80034c0:	f8d5 a008 	ldr.w	sl, [r5, #8]
 80034c4:	4eaa      	ldr	r6, [pc, #680]	; (8003770 <d_print_comp+0xbac>)
 80034c6:	f8da 7008 	ldr.w	r7, [sl, #8]
 80034ca:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80034ce:	f106 0808 	add.w	r8, r6, #8
 80034d2:	f04f 0900 	mov.w	r9, #0
 80034d6:	e016      	b.n	8003506 <d_print_comp+0x942>
 80034d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80034dc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80034e0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80034e4:	4798      	blx	r3
 80034e6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80034ea:	3301      	adds	r3, #1
 80034ec:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80034f0:	2200      	movs	r2, #0
 80034f2:	2301      	movs	r3, #1
 80034f4:	4546      	cmp	r6, r8
 80034f6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80034fa:	f804 b002 	strb.w	fp, [r4, r2]
 80034fe:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 8003502:	f001 8021 	beq.w	8004548 <d_print_comp+0x1984>
 8003506:	2bff      	cmp	r3, #255	; 0xff
 8003508:	4619      	mov	r1, r3
 800350a:	4620      	mov	r0, r4
 800350c:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 8003510:	d0e2      	beq.n	80034d8 <d_print_comp+0x914>
 8003512:	461a      	mov	r2, r3
 8003514:	3301      	adds	r3, #1
 8003516:	e7ed      	b.n	80034f4 <d_print_comp+0x930>
 8003518:	e9d5 2802 	ldrd	r2, r8, [r5, #8]
 800351c:	b11a      	cbz	r2, 8003526 <d_print_comp+0x962>
 800351e:	4631      	mov	r1, r6
 8003520:	4620      	mov	r0, r4
 8003522:	f7ff fb4f 	bl	8002bc4 <d_print_comp>
 8003526:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800352a:	2fff      	cmp	r7, #255	; 0xff
 800352c:	d112      	bne.n	8003554 <d_print_comp+0x990>
 800352e:	f04f 0900 	mov.w	r9, #0
 8003532:	4639      	mov	r1, r7
 8003534:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003538:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800353c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003540:	4620      	mov	r0, r4
 8003542:	4798      	blx	r3
 8003544:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003548:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 800354c:	3301      	adds	r3, #1
 800354e:	464f      	mov	r7, r9
 8003550:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003554:	1c78      	adds	r0, r7, #1
 8003556:	237b      	movs	r3, #123	; 0x7b
 8003558:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 800355c:	4642      	mov	r2, r8
 800355e:	55e3      	strb	r3, [r4, r7]
 8003560:	4631      	mov	r1, r6
 8003562:	4620      	mov	r0, r4
 8003564:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003568:	f7ff fb2c 	bl	8002bc4 <d_print_comp>
 800356c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003570:	2fff      	cmp	r7, #255	; 0xff
 8003572:	d111      	bne.n	8003598 <d_print_comp+0x9d4>
 8003574:	2600      	movs	r6, #0
 8003576:	4639      	mov	r1, r7
 8003578:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800357c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003580:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003584:	4620      	mov	r0, r4
 8003586:	4798      	blx	r3
 8003588:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800358c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8003590:	3301      	adds	r3, #1
 8003592:	4637      	mov	r7, r6
 8003594:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003598:	1c7a      	adds	r2, r7, #1
 800359a:	237d      	movs	r3, #125	; 0x7d
 800359c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80035a0:	55e3      	strb	r3, [r4, r7]
 80035a2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80035a6:	686a      	ldr	r2, [r5, #4]
 80035a8:	9905      	ldr	r1, [sp, #20]
 80035aa:	f7ff bbfe 	b.w	8002daa <d_print_comp+0x1e6>
 80035ae:	68aa      	ldr	r2, [r5, #8]
 80035b0:	b11a      	cbz	r2, 80035ba <d_print_comp+0x9f6>
 80035b2:	4631      	mov	r1, r6
 80035b4:	4620      	mov	r0, r4
 80035b6:	f7ff fb05 	bl	8002bc4 <d_print_comp>
 80035ba:	68eb      	ldr	r3, [r5, #12]
 80035bc:	2b00      	cmp	r3, #0
 80035be:	f001 853d 	beq.w	800503c <d_print_comp+0x2478>
 80035c2:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80035c6:	2ffd      	cmp	r7, #253	; 0xfd
 80035c8:	d912      	bls.n	80035f0 <d_print_comp+0xa2c>
 80035ca:	f04f 0800 	mov.w	r8, #0
 80035ce:	f804 8007 	strb.w	r8, [r4, r7]
 80035d2:	4639      	mov	r1, r7
 80035d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80035d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80035dc:	4620      	mov	r0, r4
 80035de:	4798      	blx	r3
 80035e0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80035e4:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80035e8:	3301      	adds	r3, #1
 80035ea:	4647      	mov	r7, r8
 80035ec:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80035f0:	f8df 8188 	ldr.w	r8, [pc, #392]	; 800377c <d_print_comp+0xbb8>
 80035f4:	f04f 0a00 	mov.w	sl, #0
 80035f8:	f108 0b02 	add.w	fp, r8, #2
 80035fc:	e016      	b.n	800362c <d_print_comp+0xa68>
 80035fe:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003602:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003606:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800360a:	4798      	blx	r3
 800360c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003610:	3301      	adds	r3, #1
 8003612:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003616:	2701      	movs	r7, #1
 8003618:	2300      	movs	r3, #0
 800361a:	45c3      	cmp	fp, r8
 800361c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8003620:	f804 9003 	strb.w	r9, [r4, r3]
 8003624:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8003628:	f001 80cf 	beq.w	80047ca <d_print_comp+0x1c06>
 800362c:	2fff      	cmp	r7, #255	; 0xff
 800362e:	4639      	mov	r1, r7
 8003630:	4620      	mov	r0, r4
 8003632:	f818 9b01 	ldrb.w	r9, [r8], #1
 8003636:	d0e2      	beq.n	80035fe <d_print_comp+0xa3a>
 8003638:	463b      	mov	r3, r7
 800363a:	3701      	adds	r7, #1
 800363c:	e7ed      	b.n	800361a <d_print_comp+0xa56>
 800363e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003642:	2b00      	cmp	r3, #0
 8003644:	f041 84a0 	bne.w	8004f88 <d_print_comp+0x23c4>
 8003648:	68aa      	ldr	r2, [r5, #8]
 800364a:	4b4a      	ldr	r3, [pc, #296]	; (8003774 <d_print_comp+0xbb0>)
 800364c:	6891      	ldr	r1, [r2, #8]
 800364e:	4299      	cmp	r1, r3
 8003650:	d020      	beq.n	8003694 <d_print_comp+0xad0>
 8003652:	4631      	mov	r1, r6
 8003654:	4620      	mov	r0, r4
 8003656:	f7ff fab5 	bl	8002bc4 <d_print_comp>
 800365a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800365e:	2fff      	cmp	r7, #255	; 0xff
 8003660:	d111      	bne.n	8003686 <d_print_comp+0xac2>
 8003662:	2600      	movs	r6, #0
 8003664:	4639      	mov	r1, r7
 8003666:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800366a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800366e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003672:	4620      	mov	r0, r4
 8003674:	4798      	blx	r3
 8003676:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800367a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800367e:	3301      	adds	r3, #1
 8003680:	4637      	mov	r7, r6
 8003682:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003686:	2320      	movs	r3, #32
 8003688:	1c7a      	adds	r2, r7, #1
 800368a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800368e:	55e3      	strb	r3, [r4, r7]
 8003690:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003694:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
 8003698:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800369c:	2a00      	cmp	r2, #0
 800369e:	f001 80a6 	beq.w	80047ee <d_print_comp+0x1c2a>
 80036a2:	4e35      	ldr	r6, [pc, #212]	; (8003778 <d_print_comp+0xbb4>)
 80036a4:	f04f 0800 	mov.w	r8, #0
 80036a8:	f106 0906 	add.w	r9, r6, #6
 80036ac:	e015      	b.n	80036da <d_print_comp+0xb16>
 80036ae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80036b2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80036b6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80036ba:	4798      	blx	r3
 80036bc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80036c0:	3301      	adds	r3, #1
 80036c2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80036c6:	2200      	movs	r2, #0
 80036c8:	2301      	movs	r3, #1
 80036ca:	45b1      	cmp	r9, r6
 80036cc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80036d0:	54a7      	strb	r7, [r4, r2]
 80036d2:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80036d6:	f001 8183 	beq.w	80049e0 <d_print_comp+0x1e1c>
 80036da:	2bff      	cmp	r3, #255	; 0xff
 80036dc:	4619      	mov	r1, r3
 80036de:	4620      	mov	r0, r4
 80036e0:	f816 7b01 	ldrb.w	r7, [r6], #1
 80036e4:	d0e3      	beq.n	80036ae <d_print_comp+0xaea>
 80036e6:	461a      	mov	r2, r3
 80036e8:	3301      	adds	r3, #1
 80036ea:	e7ee      	b.n	80036ca <d_print_comp+0xb06>
 80036ec:	ab18      	add	r3, sp, #96	; 0x60
 80036ee:	f8d4 2114 	ldr.w	r2, [r4, #276]	; 0x114
 80036f2:	f843 2d40 	str.w	r2, [r3, #-64]!
 80036f6:	2000      	movs	r0, #0
 80036f8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80036fc:	900a      	str	r0, [sp, #40]	; 0x28
 80036fe:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8003702:	68ea      	ldr	r2, [r5, #12]
 8003704:	930b      	str	r3, [sp, #44]	; 0x2c
 8003706:	4631      	mov	r1, r6
 8003708:	4620      	mov	r0, r4
 800370a:	9509      	str	r5, [sp, #36]	; 0x24
 800370c:	f7ff fa5a 	bl	8002bc4 <d_print_comp>
 8003710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003712:	b923      	cbnz	r3, 800371e <d_print_comp+0xb5a>
 8003714:	4631      	mov	r1, r6
 8003716:	462a      	mov	r2, r5
 8003718:	4620      	mov	r0, r4
 800371a:	f002 f8e9 	bl	80058f0 <d_print_mod>
 800371e:	9b08      	ldr	r3, [sp, #32]
 8003720:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003724:	9905      	ldr	r1, [sp, #20]
 8003726:	686a      	ldr	r2, [r5, #4]
 8003728:	f7ff bb3f 	b.w	8002daa <d_print_comp+0x1e6>
 800372c:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 8003730:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003734:	f849 cd40 	str.w	ip, [r9, #-64]!
 8003738:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800373c:	f8cd c004 	str.w	ip, [sp, #4]
 8003740:	2200      	movs	r2, #0
 8003742:	4667      	mov	r7, ip
 8003744:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003748:	9509      	str	r5, [sp, #36]	; 0x24
 800374a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800374e:	2f00      	cmp	r7, #0
 8003750:	f001 852f 	beq.w	80051b2 <d_print_comp+0x25ee>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	781b      	ldrb	r3, [r3, #0]
 8003758:	3b19      	subs	r3, #25
 800375a:	2b02      	cmp	r3, #2
 800375c:	f201 8529 	bhi.w	80051b2 <d_print_comp+0x25ee>
 8003760:	4623      	mov	r3, r4
 8003762:	f04f 0801 	mov.w	r8, #1
 8003766:	464c      	mov	r4, r9
 8003768:	469c      	mov	ip, r3
 800376a:	e00e      	b.n	800378a <d_print_comp+0xbc6>
 800376c:	0801ef33 	.word	0x0801ef33
 8003770:	0801ef27 	.word	0x0801ef27
 8003774:	08011924 	.word	0x08011924
 8003778:	0801ef14 	.word	0x0801ef14
 800377c:	0801ef24 	.word	0x0801ef24
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	781b      	ldrb	r3, [r3, #0]
 8003784:	3b19      	subs	r3, #25
 8003786:	2b02      	cmp	r3, #2
 8003788:	d81d      	bhi.n	80037c6 <d_print_comp+0xc02>
 800378a:	68bb      	ldr	r3, [r7, #8]
 800378c:	ea4f 1e08 	mov.w	lr, r8, lsl #4
 8003790:	aa18      	add	r2, sp, #96	; 0x60
 8003792:	eb02 0b0e 	add.w	fp, r2, lr
 8003796:	b99b      	cbnz	r3, 80037c0 <d_print_comp+0xbfc>
 8003798:	f1b8 0f03 	cmp.w	r8, #3
 800379c:	f201 8517 	bhi.w	80051ce <d_print_comp+0x260a>
 80037a0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80037a4:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
 80037a8:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 80037ac:	f84b 4c40 	str.w	r4, [fp, #-64]
 80037b0:	2301      	movs	r3, #1
 80037b2:	eb09 040e 	add.w	r4, r9, lr
 80037b6:	f8cc 4114 	str.w	r4, [ip, #276]	; 0x114
 80037ba:	f108 0801 	add.w	r8, r8, #1
 80037be:	60bb      	str	r3, [r7, #8]
 80037c0:	683f      	ldr	r7, [r7, #0]
 80037c2:	2f00      	cmp	r7, #0
 80037c4:	d1dc      	bne.n	8003780 <d_print_comp+0xbbc>
 80037c6:	68ea      	ldr	r2, [r5, #12]
 80037c8:	4631      	mov	r1, r6
 80037ca:	4660      	mov	r0, ip
 80037cc:	4664      	mov	r4, ip
 80037ce:	f7ff f9f9 	bl	8002bc4 <d_print_comp>
 80037d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037d4:	9a01      	ldr	r2, [sp, #4]
 80037d6:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80037da:	b9bb      	cbnz	r3, 800380c <d_print_comp+0xc48>
 80037dc:	f1b8 0f01 	cmp.w	r8, #1
 80037e0:	d00c      	beq.n	80037fc <d_print_comp+0xc38>
 80037e2:	eb09 1808 	add.w	r8, r9, r8, lsl #4
 80037e6:	af0c      	add	r7, sp, #48	; 0x30
 80037e8:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 80037ec:	4631      	mov	r1, r6
 80037ee:	f1a8 0810 	sub.w	r8, r8, #16
 80037f2:	4620      	mov	r0, r4
 80037f4:	f002 f87c 	bl	80058f0 <d_print_mod>
 80037f8:	4547      	cmp	r7, r8
 80037fa:	d1f5      	bne.n	80037e8 <d_print_comp+0xc24>
 80037fc:	4631      	mov	r1, r6
 80037fe:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003802:	f105 0208 	add.w	r2, r5, #8
 8003806:	4620      	mov	r0, r4
 8003808:	f002 fdca 	bl	80063a0 <d_print_array_type.isra.14>
 800380c:	9905      	ldr	r1, [sp, #20]
 800380e:	686a      	ldr	r2, [r5, #4]
 8003810:	f7ff bacb 	b.w	8002daa <d_print_comp+0x1e6>
 8003814:	06b2      	lsls	r2, r6, #26
 8003816:	f026 0860 	bic.w	r8, r6, #96	; 0x60
 800381a:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800381e:	f101 825a 	bmi.w	8004cd6 <d_print_comp+0x2112>
 8003822:	68aa      	ldr	r2, [r5, #8]
 8003824:	b11a      	cbz	r2, 800382e <d_print_comp+0xc6a>
 8003826:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 800382a:	f001 85c3 	beq.w	80053b4 <d_print_comp+0x27f0>
 800382e:	4641      	mov	r1, r8
 8003830:	f105 020c 	add.w	r2, r5, #12
 8003834:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003838:	4620      	mov	r0, r4
 800383a:	f002 fb87 	bl	8005f4c <d_print_function_type.isra.15>
 800383e:	9905      	ldr	r1, [sp, #20]
 8003840:	686a      	ldr	r2, [r5, #4]
 8003842:	f7ff bab2 	b.w	8002daa <d_print_comp+0x1e6>
 8003846:	4fcb      	ldr	r7, [pc, #812]	; (8003b74 <d_print_comp+0xfb0>)
 8003848:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800384c:	f107 0815 	add.w	r8, r7, #21
 8003850:	f04f 0900 	mov.w	r9, #0
 8003854:	e016      	b.n	8003884 <d_print_comp+0xcc0>
 8003856:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800385a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800385e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003862:	4798      	blx	r3
 8003864:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003868:	3301      	adds	r3, #1
 800386a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800386e:	2200      	movs	r2, #0
 8003870:	2301      	movs	r3, #1
 8003872:	45b8      	cmp	r8, r7
 8003874:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003878:	f804 a002 	strb.w	sl, [r4, r2]
 800387c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003880:	f000 8789 	beq.w	8004796 <d_print_comp+0x1bd2>
 8003884:	2bff      	cmp	r3, #255	; 0xff
 8003886:	4619      	mov	r1, r3
 8003888:	4620      	mov	r0, r4
 800388a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 800388e:	d0e2      	beq.n	8003856 <d_print_comp+0xc92>
 8003890:	461a      	mov	r2, r3
 8003892:	3301      	adds	r3, #1
 8003894:	e7ed      	b.n	8003872 <d_print_comp+0xcae>
 8003896:	4fb8      	ldr	r7, [pc, #736]	; (8003b78 <d_print_comp+0xfb4>)
 8003898:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800389c:	f107 0810 	add.w	r8, r7, #16
 80038a0:	f04f 0900 	mov.w	r9, #0
 80038a4:	e016      	b.n	80038d4 <d_print_comp+0xd10>
 80038a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80038aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80038ae:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80038b2:	4798      	blx	r3
 80038b4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80038b8:	3301      	adds	r3, #1
 80038ba:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80038be:	2200      	movs	r2, #0
 80038c0:	2301      	movs	r3, #1
 80038c2:	45b8      	cmp	r8, r7
 80038c4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80038c8:	f804 a002 	strb.w	sl, [r4, r2]
 80038cc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80038d0:	f000 876a 	beq.w	80047a8 <d_print_comp+0x1be4>
 80038d4:	2bff      	cmp	r3, #255	; 0xff
 80038d6:	4619      	mov	r1, r3
 80038d8:	4620      	mov	r0, r4
 80038da:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80038de:	d0e2      	beq.n	80038a6 <d_print_comp+0xce2>
 80038e0:	461a      	mov	r2, r3
 80038e2:	3301      	adds	r3, #1
 80038e4:	e7ed      	b.n	80038c2 <d_print_comp+0xcfe>
 80038e6:	4fa5      	ldr	r7, [pc, #660]	; (8003b7c <d_print_comp+0xfb8>)
 80038e8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80038ec:	f107 0812 	add.w	r8, r7, #18
 80038f0:	f04f 0900 	mov.w	r9, #0
 80038f4:	e016      	b.n	8003924 <d_print_comp+0xd60>
 80038f6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80038fa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80038fe:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003902:	4798      	blx	r3
 8003904:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003908:	3301      	adds	r3, #1
 800390a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800390e:	2200      	movs	r2, #0
 8003910:	2301      	movs	r3, #1
 8003912:	45b8      	cmp	r8, r7
 8003914:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003918:	f804 a002 	strb.w	sl, [r4, r2]
 800391c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003920:	f000 8727 	beq.w	8004772 <d_print_comp+0x1bae>
 8003924:	2bff      	cmp	r3, #255	; 0xff
 8003926:	4619      	mov	r1, r3
 8003928:	4620      	mov	r0, r4
 800392a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 800392e:	d0e2      	beq.n	80038f6 <d_print_comp+0xd32>
 8003930:	461a      	mov	r2, r3
 8003932:	3301      	adds	r3, #1
 8003934:	e7ed      	b.n	8003912 <d_print_comp+0xd4e>
 8003936:	4f92      	ldr	r7, [pc, #584]	; (8003b80 <d_print_comp+0xfbc>)
 8003938:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800393c:	f107 080d 	add.w	r8, r7, #13
 8003940:	f04f 0900 	mov.w	r9, #0
 8003944:	e016      	b.n	8003974 <d_print_comp+0xdb0>
 8003946:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800394a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800394e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003952:	4798      	blx	r3
 8003954:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003958:	3301      	adds	r3, #1
 800395a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800395e:	2200      	movs	r2, #0
 8003960:	2301      	movs	r3, #1
 8003962:	45b8      	cmp	r8, r7
 8003964:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003968:	f804 a002 	strb.w	sl, [r4, r2]
 800396c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003970:	f000 8708 	beq.w	8004784 <d_print_comp+0x1bc0>
 8003974:	2bff      	cmp	r3, #255	; 0xff
 8003976:	4619      	mov	r1, r3
 8003978:	4620      	mov	r0, r4
 800397a:	f817 ab01 	ldrb.w	sl, [r7], #1
 800397e:	d0e2      	beq.n	8003946 <d_print_comp+0xd82>
 8003980:	461a      	mov	r2, r3
 8003982:	3301      	adds	r3, #1
 8003984:	e7ed      	b.n	8003962 <d_print_comp+0xd9e>
 8003986:	4f7f      	ldr	r7, [pc, #508]	; (8003b84 <d_print_comp+0xfc0>)
 8003988:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800398c:	f107 0818 	add.w	r8, r7, #24
 8003990:	f04f 0900 	mov.w	r9, #0
 8003994:	e016      	b.n	80039c4 <d_print_comp+0xe00>
 8003996:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800399a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800399e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80039a2:	4798      	blx	r3
 80039a4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80039a8:	3301      	adds	r3, #1
 80039aa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80039ae:	2200      	movs	r2, #0
 80039b0:	2301      	movs	r3, #1
 80039b2:	45b8      	cmp	r8, r7
 80039b4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80039b8:	f804 a002 	strb.w	sl, [r4, r2]
 80039bc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80039c0:	f000 8699 	beq.w	80046f6 <d_print_comp+0x1b32>
 80039c4:	2bff      	cmp	r3, #255	; 0xff
 80039c6:	4619      	mov	r1, r3
 80039c8:	4620      	mov	r0, r4
 80039ca:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80039ce:	d0e2      	beq.n	8003996 <d_print_comp+0xdd2>
 80039d0:	461a      	mov	r2, r3
 80039d2:	3301      	adds	r3, #1
 80039d4:	e7ed      	b.n	80039b2 <d_print_comp+0xdee>
 80039d6:	4f6c      	ldr	r7, [pc, #432]	; (8003b88 <d_print_comp+0xfc4>)
 80039d8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80039dc:	f107 0808 	add.w	r8, r7, #8
 80039e0:	f04f 0900 	mov.w	r9, #0
 80039e4:	e016      	b.n	8003a14 <d_print_comp+0xe50>
 80039e6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039ea:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039ee:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80039f2:	4798      	blx	r3
 80039f4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80039f8:	3301      	adds	r3, #1
 80039fa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80039fe:	2200      	movs	r2, #0
 8003a00:	2301      	movs	r3, #1
 8003a02:	45b8      	cmp	r8, r7
 8003a04:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003a08:	f804 a002 	strb.w	sl, [r4, r2]
 8003a0c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003a10:	f000 86a6 	beq.w	8004760 <d_print_comp+0x1b9c>
 8003a14:	2bff      	cmp	r3, #255	; 0xff
 8003a16:	4619      	mov	r1, r3
 8003a18:	4620      	mov	r0, r4
 8003a1a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003a1e:	d0e2      	beq.n	80039e6 <d_print_comp+0xe22>
 8003a20:	461a      	mov	r2, r3
 8003a22:	3301      	adds	r3, #1
 8003a24:	e7ed      	b.n	8003a02 <d_print_comp+0xe3e>
 8003a26:	4f59      	ldr	r7, [pc, #356]	; (8003b8c <d_print_comp+0xfc8>)
 8003a28:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003a2c:	f107 080b 	add.w	r8, r7, #11
 8003a30:	f04f 0900 	mov.w	r9, #0
 8003a34:	e016      	b.n	8003a64 <d_print_comp+0xea0>
 8003a36:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a3a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a3e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003a42:	4798      	blx	r3
 8003a44:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003a48:	3301      	adds	r3, #1
 8003a4a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003a4e:	2200      	movs	r2, #0
 8003a50:	2301      	movs	r3, #1
 8003a52:	45b8      	cmp	r8, r7
 8003a54:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003a58:	f804 a002 	strb.w	sl, [r4, r2]
 8003a5c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003a60:	f000 85cc 	beq.w	80045fc <d_print_comp+0x1a38>
 8003a64:	2bff      	cmp	r3, #255	; 0xff
 8003a66:	4619      	mov	r1, r3
 8003a68:	4620      	mov	r0, r4
 8003a6a:	f817 ab01 	ldrb.w	sl, [r7], #1
 8003a6e:	d0e2      	beq.n	8003a36 <d_print_comp+0xe72>
 8003a70:	461a      	mov	r2, r3
 8003a72:	3301      	adds	r3, #1
 8003a74:	e7ed      	b.n	8003a52 <d_print_comp+0xe8e>
 8003a76:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003a7a:	2fff      	cmp	r7, #255	; 0xff
 8003a7c:	d112      	bne.n	8003aa4 <d_print_comp+0xee0>
 8003a7e:	f04f 0800 	mov.w	r8, #0
 8003a82:	4639      	mov	r1, r7
 8003a84:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a88:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a8c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a90:	4620      	mov	r0, r4
 8003a92:	4798      	blx	r3
 8003a94:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003a98:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8003a9c:	3301      	adds	r3, #1
 8003a9e:	4647      	mov	r7, r8
 8003aa0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003aa4:	237e      	movs	r3, #126	; 0x7e
 8003aa6:	1c7a      	adds	r2, r7, #1
 8003aa8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003aac:	55e3      	strb	r3, [r4, r7]
 8003aae:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003ab2:	4631      	mov	r1, r6
 8003ab4:	68ea      	ldr	r2, [r5, #12]
 8003ab6:	4620      	mov	r0, r4
 8003ab8:	f7ff f884 	bl	8002bc4 <d_print_comp>
 8003abc:	9905      	ldr	r1, [sp, #20]
 8003abe:	686a      	ldr	r2, [r5, #4]
 8003ac0:	f7ff b973 	b.w	8002daa <d_print_comp+0x1e6>
 8003ac4:	4631      	mov	r1, r6
 8003ac6:	68ea      	ldr	r2, [r5, #12]
 8003ac8:	4620      	mov	r0, r4
 8003aca:	f7ff f87b 	bl	8002bc4 <d_print_comp>
 8003ace:	9905      	ldr	r1, [sp, #20]
 8003ad0:	686a      	ldr	r2, [r5, #4]
 8003ad2:	f7ff b96a 	b.w	8002daa <d_print_comp+0x1e6>
 8003ad6:	f8d5 8008 	ldr.w	r8, [r5, #8]
 8003ada:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003ade:	f1b8 0f00 	cmp.w	r8, #0
 8003ae2:	f000 878b 	beq.w	80049fc <d_print_comp+0x1e38>
 8003ae6:	4e2a      	ldr	r6, [pc, #168]	; (8003b90 <d_print_comp+0xfcc>)
 8003ae8:	f04f 0900 	mov.w	r9, #0
 8003aec:	f106 0a06 	add.w	sl, r6, #6
 8003af0:	e015      	b.n	8003b1e <d_print_comp+0xf5a>
 8003af2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003af6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003afa:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003afe:	4798      	blx	r3
 8003b00:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003b04:	3301      	adds	r3, #1
 8003b06:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	2301      	movs	r3, #1
 8003b0e:	45b2      	cmp	sl, r6
 8003b10:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003b14:	54a7      	strb	r7, [r4, r2]
 8003b16:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003b1a:	f000 868f 	beq.w	800483c <d_print_comp+0x1c78>
 8003b1e:	2bff      	cmp	r3, #255	; 0xff
 8003b20:	4619      	mov	r1, r3
 8003b22:	4620      	mov	r0, r4
 8003b24:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003b28:	d0e3      	beq.n	8003af2 <d_print_comp+0xf2e>
 8003b2a:	461a      	mov	r2, r3
 8003b2c:	3301      	adds	r3, #1
 8003b2e:	e7ee      	b.n	8003b0e <d_print_comp+0xf4a>
 8003b30:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	f040 86d1 	bne.w	80048dc <d_print_comp+0x1d18>
 8003b3a:	f105 0108 	add.w	r1, r5, #8
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f7fc fe4a 	bl	80007d8 <d_lookup_template_argument.isra.10>
 8003b44:	4602      	mov	r2, r0
 8003b46:	2800      	cmp	r0, #0
 8003b48:	f001 8271 	beq.w	800502e <d_print_comp+0x246a>
 8003b4c:	7803      	ldrb	r3, [r0, #0]
 8003b4e:	2b2f      	cmp	r3, #47	; 0x2f
 8003b50:	f001 8262 	beq.w	8005018 <d_print_comp+0x2454>
 8003b54:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 8003b58:	683b      	ldr	r3, [r7, #0]
 8003b5a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003b5e:	4631      	mov	r1, r6
 8003b60:	4620      	mov	r0, r4
 8003b62:	f7ff f82f 	bl	8002bc4 <d_print_comp>
 8003b66:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
 8003b6a:	9905      	ldr	r1, [sp, #20]
 8003b6c:	686a      	ldr	r2, [r5, #4]
 8003b6e:	f7ff b91c 	b.w	8002daa <d_print_comp+0x1e6>
 8003b72:	bf00      	nop
 8003b74:	0801ee37 	.word	0x0801ee37
 8003b78:	0801ee23 	.word	0x0801ee23
 8003b7c:	0801ee0f 	.word	0x0801ee0f
 8003b80:	0801ee00 	.word	0x0801ee00
 8003b84:	0801eddb 	.word	0x0801eddb
 8003b88:	0801edcf 	.word	0x0801edcf
 8003b8c:	0801edc4 	.word	0x0801edc4
 8003b90:	0801efa4 	.word	0x0801efa4
 8003b94:	2300      	movs	r3, #0
 8003b96:	0771      	lsls	r1, r6, #29
 8003b98:	f8d4 9114 	ldr.w	r9, [r4, #276]	; 0x114
 8003b9c:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 8003ba0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003ba4:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 8003ba8:	68af      	ldr	r7, [r5, #8]
 8003baa:	d505      	bpl.n	8003bb8 <d_print_comp+0xff4>
 8003bac:	783b      	ldrb	r3, [r7, #0]
 8003bae:	b91b      	cbnz	r3, 8003bb8 <d_print_comp+0xff4>
 8003bb0:	68fa      	ldr	r2, [r7, #12]
 8003bb2:	2a06      	cmp	r2, #6
 8003bb4:	f001 8433 	beq.w	800541e <d_print_comp+0x285a>
 8003bb8:	463a      	mov	r2, r7
 8003bba:	4631      	mov	r1, r6
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	f7ff f801 	bl	8002bc4 <d_print_comp>
 8003bc2:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003bc6:	2b3c      	cmp	r3, #60	; 0x3c
 8003bc8:	f001 8206 	beq.w	8004fd8 <d_print_comp+0x2414>
 8003bcc:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003bd0:	2fff      	cmp	r7, #255	; 0xff
 8003bd2:	d112      	bne.n	8003bfa <d_print_comp+0x1036>
 8003bd4:	f04f 0a00 	mov.w	sl, #0
 8003bd8:	4639      	mov	r1, r7
 8003bda:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003bde:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003be2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003be6:	4620      	mov	r0, r4
 8003be8:	4798      	blx	r3
 8003bea:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003bee:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 8003bf2:	3301      	adds	r3, #1
 8003bf4:	4657      	mov	r7, sl
 8003bf6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003bfa:	233c      	movs	r3, #60	; 0x3c
 8003bfc:	1c7a      	adds	r2, r7, #1
 8003bfe:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c02:	55e3      	strb	r3, [r4, r7]
 8003c04:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c08:	4631      	mov	r1, r6
 8003c0a:	68ea      	ldr	r2, [r5, #12]
 8003c0c:	4620      	mov	r0, r4
 8003c0e:	f7fe ffd9 	bl	8002bc4 <d_print_comp>
 8003c12:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003c16:	2b3e      	cmp	r3, #62	; 0x3e
 8003c18:	f001 806f 	beq.w	8004cfa <d_print_comp+0x2136>
 8003c1c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003c20:	2fff      	cmp	r7, #255	; 0xff
 8003c22:	d111      	bne.n	8003c48 <d_print_comp+0x1084>
 8003c24:	2600      	movs	r6, #0
 8003c26:	4639      	mov	r1, r7
 8003c28:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c2c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003c30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c34:	4620      	mov	r0, r4
 8003c36:	4798      	blx	r3
 8003c38:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003c3c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8003c40:	3301      	adds	r3, #1
 8003c42:	4637      	mov	r7, r6
 8003c44:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003c48:	233e      	movs	r3, #62	; 0x3e
 8003c4a:	1c7a      	adds	r2, r7, #1
 8003c4c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c50:	55e3      	strb	r3, [r4, r7]
 8003c52:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c56:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003c5a:	f8c4 8144 	str.w	r8, [r4, #324]	; 0x144
 8003c5e:	9905      	ldr	r1, [sp, #20]
 8003c60:	686a      	ldr	r2, [r5, #4]
 8003c62:	f7ff b8a2 	b.w	8002daa <d_print_comp+0x1e6>
 8003c66:	4fda      	ldr	r7, [pc, #872]	; (8003fd0 <d_print_comp+0x140c>)
 8003c68:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003c6c:	f107 0811 	add.w	r8, r7, #17
 8003c70:	f04f 0900 	mov.w	r9, #0
 8003c74:	e016      	b.n	8003ca4 <d_print_comp+0x10e0>
 8003c76:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c7a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c7e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003c82:	4798      	blx	r3
 8003c84:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003c88:	3301      	adds	r3, #1
 8003c8a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003c8e:	2200      	movs	r2, #0
 8003c90:	2301      	movs	r3, #1
 8003c92:	45b8      	cmp	r8, r7
 8003c94:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003c98:	f804 a002 	strb.w	sl, [r4, r2]
 8003c9c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003ca0:	f000 84eb 	beq.w	800467a <d_print_comp+0x1ab6>
 8003ca4:	2bff      	cmp	r3, #255	; 0xff
 8003ca6:	4619      	mov	r1, r3
 8003ca8:	4620      	mov	r0, r4
 8003caa:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003cae:	d0e2      	beq.n	8003c76 <d_print_comp+0x10b2>
 8003cb0:	461a      	mov	r2, r3
 8003cb2:	3301      	adds	r3, #1
 8003cb4:	e7ed      	b.n	8003c92 <d_print_comp+0x10ce>
 8003cb6:	4fc7      	ldr	r7, [pc, #796]	; (8003fd4 <d_print_comp+0x1410>)
 8003cb8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003cbc:	f107 0815 	add.w	r8, r7, #21
 8003cc0:	f04f 0900 	mov.w	r9, #0
 8003cc4:	e016      	b.n	8003cf4 <d_print_comp+0x1130>
 8003cc6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003cca:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003cce:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003cd2:	4798      	blx	r3
 8003cd4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003cd8:	3301      	adds	r3, #1
 8003cda:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003cde:	2200      	movs	r2, #0
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	45b8      	cmp	r8, r7
 8003ce4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003ce8:	f804 a002 	strb.w	sl, [r4, r2]
 8003cec:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003cf0:	f000 84cc 	beq.w	800468c <d_print_comp+0x1ac8>
 8003cf4:	2bff      	cmp	r3, #255	; 0xff
 8003cf6:	4619      	mov	r1, r3
 8003cf8:	4620      	mov	r0, r4
 8003cfa:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003cfe:	d0e2      	beq.n	8003cc6 <d_print_comp+0x1102>
 8003d00:	461a      	mov	r2, r3
 8003d02:	3301      	adds	r3, #1
 8003d04:	e7ed      	b.n	8003ce2 <d_print_comp+0x111e>
 8003d06:	4fb4      	ldr	r7, [pc, #720]	; (8003fd8 <d_print_comp+0x1414>)
 8003d08:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003d0c:	f107 0819 	add.w	r8, r7, #25
 8003d10:	f04f 0900 	mov.w	r9, #0
 8003d14:	e016      	b.n	8003d44 <d_print_comp+0x1180>
 8003d16:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d1a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d1e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d22:	4798      	blx	r3
 8003d24:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003d28:	3301      	adds	r3, #1
 8003d2a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003d2e:	2200      	movs	r2, #0
 8003d30:	2301      	movs	r3, #1
 8003d32:	45b8      	cmp	r8, r7
 8003d34:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003d38:	f804 a002 	strb.w	sl, [r4, r2]
 8003d3c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003d40:	f000 8489 	beq.w	8004656 <d_print_comp+0x1a92>
 8003d44:	2bff      	cmp	r3, #255	; 0xff
 8003d46:	4619      	mov	r1, r3
 8003d48:	4620      	mov	r0, r4
 8003d4a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003d4e:	d0e2      	beq.n	8003d16 <d_print_comp+0x1152>
 8003d50:	461a      	mov	r2, r3
 8003d52:	3301      	adds	r3, #1
 8003d54:	e7ed      	b.n	8003d32 <d_print_comp+0x116e>
 8003d56:	4fa1      	ldr	r7, [pc, #644]	; (8003fdc <d_print_comp+0x1418>)
 8003d58:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003d5c:	f107 0816 	add.w	r8, r7, #22
 8003d60:	f04f 0900 	mov.w	r9, #0
 8003d64:	e016      	b.n	8003d94 <d_print_comp+0x11d0>
 8003d66:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d6a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d6e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d72:	4798      	blx	r3
 8003d74:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003d78:	3301      	adds	r3, #1
 8003d7a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003d7e:	2200      	movs	r2, #0
 8003d80:	2301      	movs	r3, #1
 8003d82:	45b8      	cmp	r8, r7
 8003d84:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003d88:	f804 a002 	strb.w	sl, [r4, r2]
 8003d8c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003d90:	f000 846a 	beq.w	8004668 <d_print_comp+0x1aa4>
 8003d94:	2bff      	cmp	r3, #255	; 0xff
 8003d96:	4619      	mov	r1, r3
 8003d98:	4620      	mov	r0, r4
 8003d9a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003d9e:	d0e2      	beq.n	8003d66 <d_print_comp+0x11a2>
 8003da0:	461a      	mov	r2, r3
 8003da2:	3301      	adds	r3, #1
 8003da4:	e7ed      	b.n	8003d82 <d_print_comp+0x11be>
 8003da6:	4f8e      	ldr	r7, [pc, #568]	; (8003fe0 <d_print_comp+0x141c>)
 8003da8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003dac:	f107 0813 	add.w	r8, r7, #19
 8003db0:	f04f 0900 	mov.w	r9, #0
 8003db4:	e016      	b.n	8003de4 <d_print_comp+0x1220>
 8003db6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003dba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003dbe:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003dc2:	4798      	blx	r3
 8003dc4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003dc8:	3301      	adds	r3, #1
 8003dca:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003dce:	2200      	movs	r2, #0
 8003dd0:	2301      	movs	r3, #1
 8003dd2:	45b8      	cmp	r8, r7
 8003dd4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003dd8:	f804 a002 	strb.w	sl, [r4, r2]
 8003ddc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003de0:	f000 8427 	beq.w	8004632 <d_print_comp+0x1a6e>
 8003de4:	2bff      	cmp	r3, #255	; 0xff
 8003de6:	4619      	mov	r1, r3
 8003de8:	4620      	mov	r0, r4
 8003dea:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003dee:	d0e2      	beq.n	8003db6 <d_print_comp+0x11f2>
 8003df0:	461a      	mov	r2, r3
 8003df2:	3301      	adds	r3, #1
 8003df4:	e7ed      	b.n	8003dd2 <d_print_comp+0x120e>
 8003df6:	4f7b      	ldr	r7, [pc, #492]	; (8003fe4 <d_print_comp+0x1420>)
 8003df8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003dfc:	f107 080f 	add.w	r8, r7, #15
 8003e00:	f04f 0900 	mov.w	r9, #0
 8003e04:	e016      	b.n	8003e34 <d_print_comp+0x1270>
 8003e06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e0e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e12:	4798      	blx	r3
 8003e14:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003e18:	3301      	adds	r3, #1
 8003e1a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003e1e:	2200      	movs	r2, #0
 8003e20:	2301      	movs	r3, #1
 8003e22:	45b8      	cmp	r8, r7
 8003e24:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003e28:	f804 a002 	strb.w	sl, [r4, r2]
 8003e2c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003e30:	f000 8408 	beq.w	8004644 <d_print_comp+0x1a80>
 8003e34:	2bff      	cmp	r3, #255	; 0xff
 8003e36:	4619      	mov	r1, r3
 8003e38:	4620      	mov	r0, r4
 8003e3a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003e3e:	d0e2      	beq.n	8003e06 <d_print_comp+0x1242>
 8003e40:	461a      	mov	r2, r3
 8003e42:	3301      	adds	r3, #1
 8003e44:	e7ed      	b.n	8003e22 <d_print_comp+0x125e>
 8003e46:	4f68      	ldr	r7, [pc, #416]	; (8003fe8 <d_print_comp+0x1424>)
 8003e48:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003e4c:	f107 081a 	add.w	r8, r7, #26
 8003e50:	f04f 0900 	mov.w	r9, #0
 8003e54:	e016      	b.n	8003e84 <d_print_comp+0x12c0>
 8003e56:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e5a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e5e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e62:	4798      	blx	r3
 8003e64:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003e68:	3301      	adds	r3, #1
 8003e6a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003e6e:	2200      	movs	r2, #0
 8003e70:	2301      	movs	r3, #1
 8003e72:	45b8      	cmp	r8, r7
 8003e74:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003e78:	f804 a002 	strb.w	sl, [r4, r2]
 8003e7c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003e80:	f000 83c5 	beq.w	800460e <d_print_comp+0x1a4a>
 8003e84:	2bff      	cmp	r3, #255	; 0xff
 8003e86:	4619      	mov	r1, r3
 8003e88:	4620      	mov	r0, r4
 8003e8a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003e8e:	d0e2      	beq.n	8003e56 <d_print_comp+0x1292>
 8003e90:	461a      	mov	r2, r3
 8003e92:	3301      	adds	r3, #1
 8003e94:	e7ed      	b.n	8003e72 <d_print_comp+0x12ae>
 8003e96:	4f55      	ldr	r7, [pc, #340]	; (8003fec <d_print_comp+0x1428>)
 8003e98:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003e9c:	f107 0811 	add.w	r8, r7, #17
 8003ea0:	f04f 0900 	mov.w	r9, #0
 8003ea4:	e016      	b.n	8003ed4 <d_print_comp+0x1310>
 8003ea6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003eaa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003eae:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003eb2:	4798      	blx	r3
 8003eb4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003eb8:	3301      	adds	r3, #1
 8003eba:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003ebe:	2200      	movs	r2, #0
 8003ec0:	2301      	movs	r3, #1
 8003ec2:	45b8      	cmp	r8, r7
 8003ec4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003ec8:	f804 a002 	strb.w	sl, [r4, r2]
 8003ecc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003ed0:	f000 83a6 	beq.w	8004620 <d_print_comp+0x1a5c>
 8003ed4:	2bff      	cmp	r3, #255	; 0xff
 8003ed6:	4619      	mov	r1, r3
 8003ed8:	4620      	mov	r0, r4
 8003eda:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003ede:	d0e2      	beq.n	8003ea6 <d_print_comp+0x12e2>
 8003ee0:	461a      	mov	r2, r3
 8003ee2:	3301      	adds	r3, #1
 8003ee4:	e7ed      	b.n	8003ec2 <d_print_comp+0x12fe>
 8003ee6:	f8d4 711c 	ldr.w	r7, [r4, #284]	; 0x11c
 8003eea:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003eee:	2f00      	cmp	r7, #0
 8003ef0:	f040 85ae 	bne.w	8004a50 <d_print_comp+0x1e8c>
 8003ef4:	f899 2000 	ldrb.w	r2, [r9]
 8003ef8:	2a05      	cmp	r2, #5
 8003efa:	f001 8180 	beq.w	80051fe <d_print_comp+0x263a>
 8003efe:	f899 3000 	ldrb.w	r3, [r9]
 8003f02:	2b23      	cmp	r3, #35	; 0x23
 8003f04:	f000 85a0 	beq.w	8004a48 <d_print_comp+0x1e84>
 8003f08:	782a      	ldrb	r2, [r5, #0]
 8003f0a:	429a      	cmp	r2, r3
 8003f0c:	f000 859c 	beq.w	8004a48 <d_print_comp+0x1e84>
 8003f10:	2b24      	cmp	r3, #36	; 0x24
 8003f12:	f001 8162 	beq.w	80051da <d_print_comp+0x2616>
 8003f16:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003f1a:	46a9      	mov	r9, r5
 8003f1c:	ab18      	add	r3, sp, #96	; 0x60
 8003f1e:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 8003f22:	f843 cd40 	str.w	ip, [r3, #-64]!
 8003f26:	2100      	movs	r1, #0
 8003f28:	e9cd 120a 	strd	r1, r2, [sp, #40]	; 0x28
 8003f2c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003f30:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f34:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8003f38:	e010      	b.n	8003f5c <d_print_comp+0x1398>
 8003f3a:	2200      	movs	r2, #0
 8003f3c:	ab18      	add	r3, sp, #96	; 0x60
 8003f3e:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
 8003f42:	f843 1d40 	str.w	r1, [r3, #-64]!
 8003f46:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 8003f4a:	9509      	str	r5, [sp, #36]	; 0x24
 8003f4c:	2000      	movs	r0, #0
 8003f4e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f52:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003f56:	46a9      	mov	r9, r5
 8003f58:	2a00      	cmp	r2, #0
 8003f5a:	d0eb      	beq.n	8003f34 <d_print_comp+0x1370>
 8003f5c:	4631      	mov	r1, r6
 8003f5e:	4620      	mov	r0, r4
 8003f60:	f7fe fe30 	bl	8002bc4 <d_print_comp>
 8003f64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f66:	b923      	cbnz	r3, 8003f72 <d_print_comp+0x13ae>
 8003f68:	464a      	mov	r2, r9
 8003f6a:	4631      	mov	r1, r6
 8003f6c:	4620      	mov	r0, r4
 8003f6e:	f001 fcbf 	bl	80058f0 <d_print_mod>
 8003f72:	9b08      	ldr	r3, [sp, #32]
 8003f74:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f78:	b10f      	cbz	r7, 8003f7e <d_print_comp+0x13ba>
 8003f7a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8003f7e:	9905      	ldr	r1, [sp, #20]
 8003f80:	686a      	ldr	r2, [r5, #4]
 8003f82:	f7fe bf12 	b.w	8002daa <d_print_comp+0x1e6>
 8003f86:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003f8a:	4663      	mov	r3, ip
 8003f8c:	f1bc 0f00 	cmp.w	ip, #0
 8003f90:	d0c3      	beq.n	8003f1a <d_print_comp+0x1356>
 8003f92:	6899      	ldr	r1, [r3, #8]
 8003f94:	b951      	cbnz	r1, 8003fac <d_print_comp+0x13e8>
 8003f96:	685a      	ldr	r2, [r3, #4]
 8003f98:	7812      	ldrb	r2, [r2, #0]
 8003f9a:	f1a2 0e19 	sub.w	lr, r2, #25
 8003f9e:	f1be 0f02 	cmp.w	lr, #2
 8003fa2:	f201 80fc 	bhi.w	800519e <d_print_comp+0x25da>
 8003fa6:	4290      	cmp	r0, r2
 8003fa8:	f001 80f0 	beq.w	800518c <d_print_comp+0x25c8>
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d1ef      	bne.n	8003f92 <d_print_comp+0x13ce>
 8003fb2:	e7b2      	b.n	8003f1a <d_print_comp+0x1356>
 8003fb4:	e9d5 6702 	ldrd	r6, r7, [r5, #8]
 8003fb8:	2f00      	cmp	r7, #0
 8003fba:	f43e aef6 	beq.w	8002daa <d_print_comp+0x1e6>
 8003fbe:	4437      	add	r7, r6
 8003fc0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003fc4:	3f01      	subs	r7, #1
 8003fc6:	3e01      	subs	r6, #1
 8003fc8:	f04f 0800 	mov.w	r8, #0
 8003fcc:	e027      	b.n	800401e <d_print_comp+0x145a>
 8003fce:	bf00      	nop
 8003fd0:	0801eedb 	.word	0x0801eedb
 8003fd4:	0801eec3 	.word	0x0801eec3
 8003fd8:	0801eea7 	.word	0x0801eea7
 8003fdc:	0801ee8f 	.word	0x0801ee8f
 8003fe0:	0801ee7b 	.word	0x0801ee7b
 8003fe4:	0801ee6b 	.word	0x0801ee6b
 8003fe8:	0801ee4f 	.word	0x0801ee4f
 8003fec:	0801ee3b 	.word	0x0801ee3b
 8003ff0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ff4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ff8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003ffc:	4798      	blx	r3
 8003ffe:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004002:	3301      	adds	r3, #1
 8004004:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004008:	2200      	movs	r2, #0
 800400a:	2301      	movs	r3, #1
 800400c:	42b7      	cmp	r7, r6
 800400e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004012:	f804 9002 	strb.w	r9, [r4, r2]
 8004016:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800401a:	f000 83ce 	beq.w	80047ba <d_print_comp+0x1bf6>
 800401e:	2bff      	cmp	r3, #255	; 0xff
 8004020:	4619      	mov	r1, r3
 8004022:	4620      	mov	r0, r4
 8004024:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 8004028:	d0e2      	beq.n	8003ff0 <d_print_comp+0x142c>
 800402a:	461a      	mov	r2, r3
 800402c:	3301      	adds	r3, #1
 800402e:	e7ed      	b.n	800400c <d_print_comp+0x1448>
 8004030:	4631      	mov	r1, r6
 8004032:	68aa      	ldr	r2, [r5, #8]
 8004034:	4620      	mov	r0, r4
 8004036:	f7fe fdc5 	bl	8002bc4 <d_print_comp>
 800403a:	9905      	ldr	r1, [sp, #20]
 800403c:	686a      	ldr	r2, [r5, #4]
 800403e:	f7fe beb4 	b.w	8002daa <d_print_comp+0x1e6>
 8004042:	f016 0604 	ands.w	r6, r6, #4
 8004046:	68a8      	ldr	r0, [r5, #8]
 8004048:	f040 8505 	bne.w	8004a56 <d_print_comp+0x1e92>
 800404c:	e9d0 7300 	ldrd	r7, r3, [r0]
 8004050:	2b00      	cmp	r3, #0
 8004052:	f43e aeaa 	beq.w	8002daa <d_print_comp+0x1e6>
 8004056:	eb07 0803 	add.w	r8, r7, r3
 800405a:	f108 38ff 	add.w	r8, r8, #4294967295
 800405e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004062:	3f01      	subs	r7, #1
 8004064:	46b1      	mov	r9, r6
 8004066:	e015      	b.n	8004094 <d_print_comp+0x14d0>
 8004068:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800406c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004070:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004074:	4798      	blx	r3
 8004076:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800407a:	3301      	adds	r3, #1
 800407c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004080:	2200      	movs	r2, #0
 8004082:	2301      	movs	r3, #1
 8004084:	45b8      	cmp	r8, r7
 8004086:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800408a:	54a6      	strb	r6, [r4, r2]
 800408c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004090:	f000 8545 	beq.w	8004b1e <d_print_comp+0x1f5a>
 8004094:	2bff      	cmp	r3, #255	; 0xff
 8004096:	4619      	mov	r1, r3
 8004098:	4620      	mov	r0, r4
 800409a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800409e:	d0e3      	beq.n	8004068 <d_print_comp+0x14a4>
 80040a0:	461a      	mov	r2, r3
 80040a2:	3301      	adds	r3, #1
 80040a4:	e7ee      	b.n	8004084 <d_print_comp+0x14c0>
 80040a6:	f8d5 8008 	ldr.w	r8, [r5, #8]
 80040aa:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80040ae:	9302      	str	r3, [sp, #8]
 80040b0:	2200      	movs	r2, #0
 80040b2:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80040b6:	f1b8 0f00 	cmp.w	r8, #0
 80040ba:	d025      	beq.n	8004108 <d_print_comp+0x1544>
 80040bc:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80040c0:	9301      	str	r3, [sp, #4]
 80040c2:	f10d 0920 	add.w	r9, sp, #32
 80040c6:	4623      	mov	r3, r4
 80040c8:	4617      	mov	r7, r2
 80040ca:	4644      	mov	r4, r8
 80040cc:	4692      	mov	sl, r2
 80040ce:	4649      	mov	r1, r9
 80040d0:	46ab      	mov	fp, r5
 80040d2:	4698      	mov	r8, r3
 80040d4:	7825      	ldrb	r5, [r4, #0]
 80040d6:	9b01      	ldr	r3, [sp, #4]
 80040d8:	600a      	str	r2, [r1, #0]
 80040da:	4628      	mov	r0, r5
 80040dc:	e9c1 4a01 	strd	r4, sl, [r1, #4]
 80040e0:	60cb      	str	r3, [r1, #12]
 80040e2:	3701      	adds	r7, #1
 80040e4:	460a      	mov	r2, r1
 80040e6:	f7fc f97f 	bl	80003e8 <is_fnqual_component_type>
 80040ea:	2800      	cmp	r0, #0
 80040ec:	f000 87c8 	beq.w	8005080 <d_print_comp+0x24bc>
 80040f0:	68a4      	ldr	r4, [r4, #8]
 80040f2:	2c00      	cmp	r4, #0
 80040f4:	f001 8057 	beq.w	80051a6 <d_print_comp+0x25e2>
 80040f8:	2f04      	cmp	r7, #4
 80040fa:	f101 0110 	add.w	r1, r1, #16
 80040fe:	d1e9      	bne.n	80040d4 <d_print_comp+0x1510>
 8004100:	4644      	mov	r4, r8
 8004102:	465d      	mov	r5, fp
 8004104:	f8c8 2114 	str.w	r2, [r8, #276]	; 0x114
 8004108:	2301      	movs	r3, #1
 800410a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800410e:	9905      	ldr	r1, [sp, #20]
 8004110:	686a      	ldr	r2, [r5, #4]
 8004112:	f7fe be4a 	b.w	8002daa <d_print_comp+0x1e6>
 8004116:	f016 0604 	ands.w	r6, r6, #4
 800411a:	68af      	ldr	r7, [r5, #8]
 800411c:	f040 8405 	bne.w	800492a <d_print_comp+0x1d66>
 8004120:	68eb      	ldr	r3, [r5, #12]
 8004122:	2b00      	cmp	r3, #0
 8004124:	f43e ae41 	beq.w	8002daa <d_print_comp+0x1e6>
 8004128:	eb07 0803 	add.w	r8, r7, r3
 800412c:	f108 38ff 	add.w	r8, r8, #4294967295
 8004130:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004134:	3f01      	subs	r7, #1
 8004136:	46b1      	mov	r9, r6
 8004138:	e015      	b.n	8004166 <d_print_comp+0x15a2>
 800413a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800413e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004142:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004146:	4798      	blx	r3
 8004148:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800414c:	3301      	adds	r3, #1
 800414e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004152:	2200      	movs	r2, #0
 8004154:	2301      	movs	r3, #1
 8004156:	45b8      	cmp	r8, r7
 8004158:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800415c:	54a6      	strb	r6, [r4, r2]
 800415e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004162:	f000 84e0 	beq.w	8004b26 <d_print_comp+0x1f62>
 8004166:	2bff      	cmp	r3, #255	; 0xff
 8004168:	4619      	mov	r1, r3
 800416a:	4620      	mov	r0, r4
 800416c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004170:	d0e3      	beq.n	800413a <d_print_comp+0x1576>
 8004172:	461a      	mov	r2, r3
 8004174:	3301      	adds	r3, #1
 8004176:	e7ee      	b.n	8004156 <d_print_comp+0x1592>
 8004178:	68aa      	ldr	r2, [r5, #8]
 800417a:	4631      	mov	r1, r6
 800417c:	4620      	mov	r0, r4
 800417e:	f7fe fd21 	bl	8002bc4 <d_print_comp>
 8004182:	f016 0904 	ands.w	r9, r6, #4
 8004186:	f000 8681 	beq.w	8004e8c <d_print_comp+0x22c8>
 800418a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800418e:	2fff      	cmp	r7, #255	; 0xff
 8004190:	d112      	bne.n	80041b8 <d_print_comp+0x15f4>
 8004192:	f04f 0800 	mov.w	r8, #0
 8004196:	4639      	mov	r1, r7
 8004198:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800419c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80041a0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80041a4:	4620      	mov	r0, r4
 80041a6:	4798      	blx	r3
 80041a8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80041ac:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80041b0:	3301      	adds	r3, #1
 80041b2:	4647      	mov	r7, r8
 80041b4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80041b8:	232e      	movs	r3, #46	; 0x2e
 80041ba:	1c7a      	adds	r2, r7, #1
 80041bc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80041c0:	55e3      	strb	r3, [r4, r7]
 80041c2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80041c6:	68ef      	ldr	r7, [r5, #12]
 80041c8:	783b      	ldrb	r3, [r7, #0]
 80041ca:	2b46      	cmp	r3, #70	; 0x46
 80041cc:	f000 873a 	beq.w	8005044 <d_print_comp+0x2480>
 80041d0:	463a      	mov	r2, r7
 80041d2:	4631      	mov	r1, r6
 80041d4:	4620      	mov	r0, r4
 80041d6:	f7fe fcf5 	bl	8002bc4 <d_print_comp>
 80041da:	9905      	ldr	r1, [sp, #20]
 80041dc:	686a      	ldr	r2, [r5, #4]
 80041de:	f7fe bde4 	b.w	8002daa <d_print_comp+0x1e6>
 80041e2:	2301      	movs	r3, #1
 80041e4:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80041e8:	686a      	ldr	r2, [r5, #4]
 80041ea:	f7fe bdde 	b.w	8002daa <d_print_comp+0x1e6>
 80041ee:	3701      	adds	r7, #1
 80041f0:	454f      	cmp	r7, r9
 80041f2:	f47e ae2b 	bne.w	8002e4c <d_print_comp+0x288>
 80041f6:	9d03      	ldr	r5, [sp, #12]
 80041f8:	9905      	ldr	r1, [sp, #20]
 80041fa:	686a      	ldr	r2, [r5, #4]
 80041fc:	f7fe bdd5 	b.w	8002daa <d_print_comp+0x1e6>
 8004200:	4631      	mov	r1, r6
 8004202:	68aa      	ldr	r2, [r5, #8]
 8004204:	4620      	mov	r0, r4
 8004206:	f7fe fcdd 	bl	8002bc4 <d_print_comp>
 800420a:	9905      	ldr	r1, [sp, #20]
 800420c:	686a      	ldr	r2, [r5, #4]
 800420e:	f7fe bdcc 	b.w	8002daa <d_print_comp+0x1e6>
 8004212:	4631      	mov	r1, r6
 8004214:	68aa      	ldr	r2, [r5, #8]
 8004216:	4620      	mov	r0, r4
 8004218:	f7fe fcd4 	bl	8002bc4 <d_print_comp>
 800421c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004220:	2fff      	cmp	r7, #255	; 0xff
 8004222:	d111      	bne.n	8004248 <d_print_comp+0x1684>
 8004224:	2600      	movs	r6, #0
 8004226:	4639      	mov	r1, r7
 8004228:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800422c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004230:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004234:	4620      	mov	r0, r4
 8004236:	4798      	blx	r3
 8004238:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800423c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004240:	3301      	adds	r3, #1
 8004242:	4637      	mov	r7, r6
 8004244:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004248:	1c7a      	adds	r2, r7, #1
 800424a:	2329      	movs	r3, #41	; 0x29
 800424c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004250:	55e3      	strb	r3, [r4, r7]
 8004252:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004256:	686a      	ldr	r2, [r5, #4]
 8004258:	9905      	ldr	r1, [sp, #20]
 800425a:	f7fe bda6 	b.w	8002daa <d_print_comp+0x1e6>
 800425e:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8004262:	68aa      	ldr	r2, [r5, #8]
 8004264:	4fd3      	ldr	r7, [pc, #844]	; (80045b4 <d_print_comp+0x19f0>)
 8004266:	3301      	adds	r3, #1
 8004268:	4631      	mov	r1, r6
 800426a:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 800426e:	4620      	mov	r0, r4
 8004270:	f7fe fca8 	bl	8002bc4 <d_print_comp>
 8004274:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004278:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800427c:	3a01      	subs	r2, #1
 800427e:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 8004282:	1cbe      	adds	r6, r7, #2
 8004284:	f04f 0800 	mov.w	r8, #0
 8004288:	e015      	b.n	80042b6 <d_print_comp+0x16f2>
 800428a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800428e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004292:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004296:	4798      	blx	r3
 8004298:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800429c:	3301      	adds	r3, #1
 800429e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80042a2:	2200      	movs	r2, #0
 80042a4:	2301      	movs	r3, #1
 80042a6:	42b7      	cmp	r7, r6
 80042a8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80042ac:	f804 9002 	strb.w	r9, [r4, r2]
 80042b0:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80042b4:	d011      	beq.n	80042da <d_print_comp+0x1716>
 80042b6:	2bff      	cmp	r3, #255	; 0xff
 80042b8:	4619      	mov	r1, r3
 80042ba:	4620      	mov	r0, r4
 80042bc:	f817 9b01 	ldrb.w	r9, [r7], #1
 80042c0:	d0e3      	beq.n	800428a <d_print_comp+0x16c6>
 80042c2:	461a      	mov	r2, r3
 80042c4:	3301      	adds	r3, #1
 80042c6:	e7ee      	b.n	80042a6 <d_print_comp+0x16e2>
 80042c8:	4631      	mov	r1, r6
 80042ca:	68aa      	ldr	r2, [r5, #8]
 80042cc:	4620      	mov	r0, r4
 80042ce:	f7fe fc79 	bl	8002bc4 <d_print_comp>
 80042d2:	9905      	ldr	r1, [sp, #20]
 80042d4:	686a      	ldr	r2, [r5, #4]
 80042d6:	f7fe bd68 	b.w	8002daa <d_print_comp+0x1e6>
 80042da:	68ea      	ldr	r2, [r5, #12]
 80042dc:	49b6      	ldr	r1, [pc, #728]	; (80045b8 <d_print_comp+0x19f4>)
 80042de:	3201      	adds	r2, #1
 80042e0:	a808      	add	r0, sp, #32
 80042e2:	f00a f905 	bl	800e4f0 <sprintf>
 80042e6:	a808      	add	r0, sp, #32
 80042e8:	f002 fd5c 	bl	8006da4 <strlen>
 80042ec:	b328      	cbz	r0, 800433a <d_print_comp+0x1776>
 80042ee:	ae08      	add	r6, sp, #32
 80042f0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80042f4:	1837      	adds	r7, r6, r0
 80042f6:	f04f 0800 	mov.w	r8, #0
 80042fa:	e015      	b.n	8004328 <d_print_comp+0x1764>
 80042fc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004300:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004304:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004308:	4798      	blx	r3
 800430a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800430e:	3301      	adds	r3, #1
 8004310:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004314:	2200      	movs	r2, #0
 8004316:	2301      	movs	r3, #1
 8004318:	42be      	cmp	r6, r7
 800431a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800431e:	f804 9002 	strb.w	r9, [r4, r2]
 8004322:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004326:	d00a      	beq.n	800433e <d_print_comp+0x177a>
 8004328:	2bff      	cmp	r3, #255	; 0xff
 800432a:	4619      	mov	r1, r3
 800432c:	4620      	mov	r0, r4
 800432e:	f816 9b01 	ldrb.w	r9, [r6], #1
 8004332:	d0e3      	beq.n	80042fc <d_print_comp+0x1738>
 8004334:	461a      	mov	r2, r3
 8004336:	3301      	adds	r3, #1
 8004338:	e7ee      	b.n	8004318 <d_print_comp+0x1754>
 800433a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800433e:	2bff      	cmp	r3, #255	; 0xff
 8004340:	d110      	bne.n	8004364 <d_print_comp+0x17a0>
 8004342:	2600      	movs	r6, #0
 8004344:	4619      	mov	r1, r3
 8004346:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800434a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800434e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004352:	4620      	mov	r0, r4
 8004354:	4798      	blx	r3
 8004356:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800435a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800435e:	3301      	adds	r3, #1
 8004360:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004364:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004368:	9905      	ldr	r1, [sp, #20]
 800436a:	1c50      	adds	r0, r2, #1
 800436c:	237d      	movs	r3, #125	; 0x7d
 800436e:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004372:	54a3      	strb	r3, [r4, r2]
 8004374:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004378:	686a      	ldr	r2, [r5, #4]
 800437a:	f7fe bd16 	b.w	8002daa <d_print_comp+0x1e6>
 800437e:	4631      	mov	r1, r6
 8004380:	68aa      	ldr	r2, [r5, #8]
 8004382:	4620      	mov	r0, r4
 8004384:	f7fe fc1e 	bl	8002bc4 <d_print_comp>
 8004388:	9905      	ldr	r1, [sp, #20]
 800438a:	686a      	ldr	r2, [r5, #4]
 800438c:	f7fe bd0d 	b.w	8002daa <d_print_comp+0x1e6>
 8004390:	68aa      	ldr	r2, [r5, #8]
 8004392:	4989      	ldr	r1, [pc, #548]	; (80045b8 <d_print_comp+0x19f4>)
 8004394:	3201      	adds	r2, #1
 8004396:	a808      	add	r0, sp, #32
 8004398:	f00a f8aa 	bl	800e4f0 <sprintf>
 800439c:	a808      	add	r0, sp, #32
 800439e:	f002 fd01 	bl	8006da4 <strlen>
 80043a2:	2800      	cmp	r0, #0
 80043a4:	d071      	beq.n	800448a <d_print_comp+0x18c6>
 80043a6:	ae08      	add	r6, sp, #32
 80043a8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80043ac:	1837      	adds	r7, r6, r0
 80043ae:	f04f 0800 	mov.w	r8, #0
 80043b2:	e015      	b.n	80043e0 <d_print_comp+0x181c>
 80043b4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80043b8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80043bc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80043c0:	4798      	blx	r3
 80043c2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80043c6:	3301      	adds	r3, #1
 80043c8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80043cc:	2200      	movs	r2, #0
 80043ce:	2301      	movs	r3, #1
 80043d0:	42b7      	cmp	r7, r6
 80043d2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80043d6:	f804 9002 	strb.w	r9, [r4, r2]
 80043da:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80043de:	d056      	beq.n	800448e <d_print_comp+0x18ca>
 80043e0:	2bff      	cmp	r3, #255	; 0xff
 80043e2:	4619      	mov	r1, r3
 80043e4:	4620      	mov	r0, r4
 80043e6:	f816 9b01 	ldrb.w	r9, [r6], #1
 80043ea:	d0e3      	beq.n	80043b4 <d_print_comp+0x17f0>
 80043ec:	461a      	mov	r2, r3
 80043ee:	3301      	adds	r3, #1
 80043f0:	e7ee      	b.n	80043d0 <d_print_comp+0x180c>
 80043f2:	4631      	mov	r1, r6
 80043f4:	68ea      	ldr	r2, [r5, #12]
 80043f6:	4620      	mov	r0, r4
 80043f8:	f7fe fbe4 	bl	8002bc4 <d_print_comp>
 80043fc:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004400:	2fff      	cmp	r7, #255	; 0xff
 8004402:	d111      	bne.n	8004428 <d_print_comp+0x1864>
 8004404:	2600      	movs	r6, #0
 8004406:	4639      	mov	r1, r7
 8004408:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800440c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004410:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004414:	4620      	mov	r0, r4
 8004416:	4798      	blx	r3
 8004418:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800441c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004420:	3301      	adds	r3, #1
 8004422:	4637      	mov	r7, r6
 8004424:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004428:	1c7a      	adds	r2, r7, #1
 800442a:	235d      	movs	r3, #93	; 0x5d
 800442c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004430:	55e3      	strb	r3, [r4, r7]
 8004432:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004436:	686a      	ldr	r2, [r5, #4]
 8004438:	9905      	ldr	r1, [sp, #20]
 800443a:	f7fe bcb6 	b.w	8002daa <d_print_comp+0x1e6>
 800443e:	4631      	mov	r1, r6
 8004440:	68ea      	ldr	r2, [r5, #12]
 8004442:	4620      	mov	r0, r4
 8004444:	f7fe fbbe 	bl	8002bc4 <d_print_comp>
 8004448:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800444c:	2fff      	cmp	r7, #255	; 0xff
 800444e:	d111      	bne.n	8004474 <d_print_comp+0x18b0>
 8004450:	2600      	movs	r6, #0
 8004452:	4639      	mov	r1, r7
 8004454:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004458:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800445c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004460:	4620      	mov	r0, r4
 8004462:	4798      	blx	r3
 8004464:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004468:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800446c:	3301      	adds	r3, #1
 800446e:	4637      	mov	r7, r6
 8004470:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004474:	1c7a      	adds	r2, r7, #1
 8004476:	235d      	movs	r3, #93	; 0x5d
 8004478:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800447c:	55e3      	strb	r3, [r4, r7]
 800447e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004482:	686a      	ldr	r2, [r5, #4]
 8004484:	9905      	ldr	r1, [sp, #20]
 8004486:	f7fe bc90 	b.w	8002daa <d_print_comp+0x1e6>
 800448a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800448e:	2bff      	cmp	r3, #255	; 0xff
 8004490:	d110      	bne.n	80044b4 <d_print_comp+0x18f0>
 8004492:	2600      	movs	r6, #0
 8004494:	4619      	mov	r1, r3
 8004496:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800449a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800449e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80044a2:	4620      	mov	r0, r4
 80044a4:	4798      	blx	r3
 80044a6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80044aa:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80044ae:	3301      	adds	r3, #1
 80044b0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80044b4:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 80044b8:	9905      	ldr	r1, [sp, #20]
 80044ba:	1c50      	adds	r0, r2, #1
 80044bc:	237d      	movs	r3, #125	; 0x7d
 80044be:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 80044c2:	54a3      	strb	r3, [r4, r2]
 80044c4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80044c8:	686a      	ldr	r2, [r5, #4]
 80044ca:	f7fe bc6e 	b.w	8002daa <d_print_comp+0x1e6>
 80044ce:	4631      	mov	r1, r6
 80044d0:	68aa      	ldr	r2, [r5, #8]
 80044d2:	4620      	mov	r0, r4
 80044d4:	f7fe fb76 	bl	8002bc4 <d_print_comp>
 80044d8:	9905      	ldr	r1, [sp, #20]
 80044da:	686a      	ldr	r2, [r5, #4]
 80044dc:	f7fe bc65 	b.w	8002daa <d_print_comp+0x1e6>
 80044e0:	9905      	ldr	r1, [sp, #20]
 80044e2:	686a      	ldr	r2, [r5, #4]
 80044e4:	f7fe bc61 	b.w	8002daa <d_print_comp+0x1e6>
 80044e8:	4631      	mov	r1, r6
 80044ea:	68aa      	ldr	r2, [r5, #8]
 80044ec:	4620      	mov	r0, r4
 80044ee:	f7fe fb69 	bl	8002bc4 <d_print_comp>
 80044f2:	9905      	ldr	r1, [sp, #20]
 80044f4:	686a      	ldr	r2, [r5, #4]
 80044f6:	f7fe bc58 	b.w	8002daa <d_print_comp+0x1e6>
 80044fa:	4631      	mov	r1, r6
 80044fc:	68ea      	ldr	r2, [r5, #12]
 80044fe:	4620      	mov	r0, r4
 8004500:	f7fe fb60 	bl	8002bc4 <d_print_comp>
 8004504:	9905      	ldr	r1, [sp, #20]
 8004506:	686a      	ldr	r2, [r5, #4]
 8004508:	f7fe bc4f 	b.w	8002daa <d_print_comp+0x1e6>
 800450c:	f8d4 2144 	ldr.w	r2, [r4, #324]	; 0x144
 8004510:	b13a      	cbz	r2, 8004522 <d_print_comp+0x195e>
 8004512:	ab18      	add	r3, sp, #96	; 0x60
 8004514:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 8004518:	f843 1d40 	str.w	r1, [r3, #-64]!
 800451c:	9209      	str	r2, [sp, #36]	; 0x24
 800451e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004522:	68aa      	ldr	r2, [r5, #8]
 8004524:	7813      	ldrb	r3, [r2, #0]
 8004526:	2b04      	cmp	r3, #4
 8004528:	f000 84d6 	beq.w	8004ed8 <d_print_comp+0x2314>
 800452c:	4631      	mov	r1, r6
 800452e:	4620      	mov	r0, r4
 8004530:	f7fe fb48 	bl	8002bc4 <d_print_comp>
 8004534:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8004538:	b113      	cbz	r3, 8004540 <d_print_comp+0x197c>
 800453a:	9b08      	ldr	r3, [sp, #32]
 800453c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004540:	9905      	ldr	r1, [sp, #20]
 8004542:	686a      	ldr	r2, [r5, #4]
 8004544:	f7fe bc31 	b.w	8002daa <d_print_comp+0x1e6>
 8004548:	f8da 6004 	ldr.w	r6, [sl, #4]
 800454c:	7832      	ldrb	r2, [r6, #0]
 800454e:	3a61      	subs	r2, #97	; 0x61
 8004550:	2a19      	cmp	r2, #25
 8004552:	d81d      	bhi.n	8004590 <d_print_comp+0x19cc>
 8004554:	2bff      	cmp	r3, #255	; 0xff
 8004556:	d110      	bne.n	800457a <d_print_comp+0x19b6>
 8004558:	2600      	movs	r6, #0
 800455a:	4619      	mov	r1, r3
 800455c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004560:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004564:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004568:	4620      	mov	r0, r4
 800456a:	4798      	blx	r3
 800456c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004570:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004574:	3301      	adds	r3, #1
 8004576:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800457a:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 800457e:	2320      	movs	r3, #32
 8004580:	1c51      	adds	r1, r2, #1
 8004582:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004586:	54a3      	strb	r3, [r4, r2]
 8004588:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800458c:	f8da 6004 	ldr.w	r6, [sl, #4]
 8004590:	19f3      	adds	r3, r6, r7
 8004592:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004596:	2b20      	cmp	r3, #32
 8004598:	bf08      	it	eq
 800459a:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800459e:	2f00      	cmp	r7, #0
 80045a0:	f000 86fb 	beq.w	800539a <d_print_comp+0x27d6>
 80045a4:	3e01      	subs	r6, #1
 80045a6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80045aa:	4437      	add	r7, r6
 80045ac:	f04f 0800 	mov.w	r8, #0
 80045b0:	e01b      	b.n	80045ea <d_print_comp+0x1a26>
 80045b2:	bf00      	nop
 80045b4:	0801eff8 	.word	0x0801eff8
 80045b8:	0801ed48 	.word	0x0801ed48
 80045bc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80045c0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80045c4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80045c8:	4798      	blx	r3
 80045ca:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80045ce:	3301      	adds	r3, #1
 80045d0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80045d4:	2200      	movs	r2, #0
 80045d6:	2301      	movs	r3, #1
 80045d8:	42be      	cmp	r6, r7
 80045da:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80045de:	f804 9002 	strb.w	r9, [r4, r2]
 80045e2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80045e6:	f000 80ec 	beq.w	80047c2 <d_print_comp+0x1bfe>
 80045ea:	2bff      	cmp	r3, #255	; 0xff
 80045ec:	4619      	mov	r1, r3
 80045ee:	4620      	mov	r0, r4
 80045f0:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 80045f4:	d0e2      	beq.n	80045bc <d_print_comp+0x19f8>
 80045f6:	461a      	mov	r2, r3
 80045f8:	3301      	adds	r3, #1
 80045fa:	e7ed      	b.n	80045d8 <d_print_comp+0x1a14>
 80045fc:	4631      	mov	r1, r6
 80045fe:	68aa      	ldr	r2, [r5, #8]
 8004600:	4620      	mov	r0, r4
 8004602:	f7fe fadf 	bl	8002bc4 <d_print_comp>
 8004606:	9905      	ldr	r1, [sp, #20]
 8004608:	686a      	ldr	r2, [r5, #4]
 800460a:	f7fe bbce 	b.w	8002daa <d_print_comp+0x1e6>
 800460e:	4631      	mov	r1, r6
 8004610:	68aa      	ldr	r2, [r5, #8]
 8004612:	4620      	mov	r0, r4
 8004614:	f7fe fad6 	bl	8002bc4 <d_print_comp>
 8004618:	9905      	ldr	r1, [sp, #20]
 800461a:	686a      	ldr	r2, [r5, #4]
 800461c:	f7fe bbc5 	b.w	8002daa <d_print_comp+0x1e6>
 8004620:	4631      	mov	r1, r6
 8004622:	68aa      	ldr	r2, [r5, #8]
 8004624:	4620      	mov	r0, r4
 8004626:	f7fe facd 	bl	8002bc4 <d_print_comp>
 800462a:	9905      	ldr	r1, [sp, #20]
 800462c:	686a      	ldr	r2, [r5, #4]
 800462e:	f7fe bbbc 	b.w	8002daa <d_print_comp+0x1e6>
 8004632:	4631      	mov	r1, r6
 8004634:	68aa      	ldr	r2, [r5, #8]
 8004636:	4620      	mov	r0, r4
 8004638:	f7fe fac4 	bl	8002bc4 <d_print_comp>
 800463c:	9905      	ldr	r1, [sp, #20]
 800463e:	686a      	ldr	r2, [r5, #4]
 8004640:	f7fe bbb3 	b.w	8002daa <d_print_comp+0x1e6>
 8004644:	4631      	mov	r1, r6
 8004646:	68aa      	ldr	r2, [r5, #8]
 8004648:	4620      	mov	r0, r4
 800464a:	f7fe fabb 	bl	8002bc4 <d_print_comp>
 800464e:	9905      	ldr	r1, [sp, #20]
 8004650:	686a      	ldr	r2, [r5, #4]
 8004652:	f7fe bbaa 	b.w	8002daa <d_print_comp+0x1e6>
 8004656:	4631      	mov	r1, r6
 8004658:	68aa      	ldr	r2, [r5, #8]
 800465a:	4620      	mov	r0, r4
 800465c:	f7fe fab2 	bl	8002bc4 <d_print_comp>
 8004660:	9905      	ldr	r1, [sp, #20]
 8004662:	686a      	ldr	r2, [r5, #4]
 8004664:	f7fe bba1 	b.w	8002daa <d_print_comp+0x1e6>
 8004668:	4631      	mov	r1, r6
 800466a:	68aa      	ldr	r2, [r5, #8]
 800466c:	4620      	mov	r0, r4
 800466e:	f7fe faa9 	bl	8002bc4 <d_print_comp>
 8004672:	9905      	ldr	r1, [sp, #20]
 8004674:	686a      	ldr	r2, [r5, #4]
 8004676:	f7fe bb98 	b.w	8002daa <d_print_comp+0x1e6>
 800467a:	4631      	mov	r1, r6
 800467c:	68aa      	ldr	r2, [r5, #8]
 800467e:	4620      	mov	r0, r4
 8004680:	f7fe faa0 	bl	8002bc4 <d_print_comp>
 8004684:	9905      	ldr	r1, [sp, #20]
 8004686:	686a      	ldr	r2, [r5, #4]
 8004688:	f7fe bb8f 	b.w	8002daa <d_print_comp+0x1e6>
 800468c:	4fcf      	ldr	r7, [pc, #828]	; (80049cc <d_print_comp+0x1e08>)
 800468e:	68ea      	ldr	r2, [r5, #12]
 8004690:	4631      	mov	r1, r6
 8004692:	4620      	mov	r0, r4
 8004694:	f7fe fa96 	bl	8002bc4 <d_print_comp>
 8004698:	f107 0805 	add.w	r8, r7, #5
 800469c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80046a0:	f04f 0900 	mov.w	r9, #0
 80046a4:	e015      	b.n	80046d2 <d_print_comp+0x1b0e>
 80046a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80046aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80046ae:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80046b2:	4798      	blx	r3
 80046b4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80046b8:	3301      	adds	r3, #1
 80046ba:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80046be:	2200      	movs	r2, #0
 80046c0:	2301      	movs	r3, #1
 80046c2:	4547      	cmp	r7, r8
 80046c4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80046c8:	f804 a002 	strb.w	sl, [r4, r2]
 80046cc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80046d0:	d008      	beq.n	80046e4 <d_print_comp+0x1b20>
 80046d2:	2bff      	cmp	r3, #255	; 0xff
 80046d4:	4619      	mov	r1, r3
 80046d6:	4620      	mov	r0, r4
 80046d8:	f817 ab01 	ldrb.w	sl, [r7], #1
 80046dc:	d0e3      	beq.n	80046a6 <d_print_comp+0x1ae2>
 80046de:	461a      	mov	r2, r3
 80046e0:	3301      	adds	r3, #1
 80046e2:	e7ee      	b.n	80046c2 <d_print_comp+0x1afe>
 80046e4:	4631      	mov	r1, r6
 80046e6:	68aa      	ldr	r2, [r5, #8]
 80046e8:	4620      	mov	r0, r4
 80046ea:	f7fe fa6b 	bl	8002bc4 <d_print_comp>
 80046ee:	9905      	ldr	r1, [sp, #20]
 80046f0:	686a      	ldr	r2, [r5, #4]
 80046f2:	f7fe bb5a 	b.w	8002daa <d_print_comp+0x1e6>
 80046f6:	4fb6      	ldr	r7, [pc, #728]	; (80049d0 <d_print_comp+0x1e0c>)
 80046f8:	68aa      	ldr	r2, [r5, #8]
 80046fa:	4631      	mov	r1, r6
 80046fc:	4620      	mov	r0, r4
 80046fe:	f7fe fa61 	bl	8002bc4 <d_print_comp>
 8004702:	f107 0804 	add.w	r8, r7, #4
 8004706:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800470a:	f04f 0900 	mov.w	r9, #0
 800470e:	e015      	b.n	800473c <d_print_comp+0x1b78>
 8004710:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004714:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004718:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800471c:	4798      	blx	r3
 800471e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004722:	3301      	adds	r3, #1
 8004724:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004728:	2200      	movs	r2, #0
 800472a:	2301      	movs	r3, #1
 800472c:	45b8      	cmp	r8, r7
 800472e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004732:	f804 a002 	strb.w	sl, [r4, r2]
 8004736:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800473a:	d008      	beq.n	800474e <d_print_comp+0x1b8a>
 800473c:	2bff      	cmp	r3, #255	; 0xff
 800473e:	4619      	mov	r1, r3
 8004740:	4620      	mov	r0, r4
 8004742:	f817 ab01 	ldrb.w	sl, [r7], #1
 8004746:	d0e3      	beq.n	8004710 <d_print_comp+0x1b4c>
 8004748:	461a      	mov	r2, r3
 800474a:	3301      	adds	r3, #1
 800474c:	e7ee      	b.n	800472c <d_print_comp+0x1b68>
 800474e:	4631      	mov	r1, r6
 8004750:	68ea      	ldr	r2, [r5, #12]
 8004752:	4620      	mov	r0, r4
 8004754:	f7fe fa36 	bl	8002bc4 <d_print_comp>
 8004758:	9905      	ldr	r1, [sp, #20]
 800475a:	686a      	ldr	r2, [r5, #4]
 800475c:	f7fe bb25 	b.w	8002daa <d_print_comp+0x1e6>
 8004760:	4631      	mov	r1, r6
 8004762:	68aa      	ldr	r2, [r5, #8]
 8004764:	4620      	mov	r0, r4
 8004766:	f7fe fa2d 	bl	8002bc4 <d_print_comp>
 800476a:	9905      	ldr	r1, [sp, #20]
 800476c:	686a      	ldr	r2, [r5, #4]
 800476e:	f7fe bb1c 	b.w	8002daa <d_print_comp+0x1e6>
 8004772:	4631      	mov	r1, r6
 8004774:	68aa      	ldr	r2, [r5, #8]
 8004776:	4620      	mov	r0, r4
 8004778:	f7fe fa24 	bl	8002bc4 <d_print_comp>
 800477c:	9905      	ldr	r1, [sp, #20]
 800477e:	686a      	ldr	r2, [r5, #4]
 8004780:	f7fe bb13 	b.w	8002daa <d_print_comp+0x1e6>
 8004784:	4631      	mov	r1, r6
 8004786:	68aa      	ldr	r2, [r5, #8]
 8004788:	4620      	mov	r0, r4
 800478a:	f7fe fa1b 	bl	8002bc4 <d_print_comp>
 800478e:	9905      	ldr	r1, [sp, #20]
 8004790:	686a      	ldr	r2, [r5, #4]
 8004792:	f7fe bb0a 	b.w	8002daa <d_print_comp+0x1e6>
 8004796:	4631      	mov	r1, r6
 8004798:	68aa      	ldr	r2, [r5, #8]
 800479a:	4620      	mov	r0, r4
 800479c:	f7fe fa12 	bl	8002bc4 <d_print_comp>
 80047a0:	9905      	ldr	r1, [sp, #20]
 80047a2:	686a      	ldr	r2, [r5, #4]
 80047a4:	f7fe bb01 	b.w	8002daa <d_print_comp+0x1e6>
 80047a8:	4631      	mov	r1, r6
 80047aa:	68aa      	ldr	r2, [r5, #8]
 80047ac:	4620      	mov	r0, r4
 80047ae:	f7fe fa09 	bl	8002bc4 <d_print_comp>
 80047b2:	9905      	ldr	r1, [sp, #20]
 80047b4:	686a      	ldr	r2, [r5, #4]
 80047b6:	f7fe baf8 	b.w	8002daa <d_print_comp+0x1e6>
 80047ba:	9905      	ldr	r1, [sp, #20]
 80047bc:	686a      	ldr	r2, [r5, #4]
 80047be:	f7fe baf4 	b.w	8002daa <d_print_comp+0x1e6>
 80047c2:	9905      	ldr	r1, [sp, #20]
 80047c4:	686a      	ldr	r2, [r5, #4]
 80047c6:	f7fe baf0 	b.w	8002daa <d_print_comp+0x1e6>
 80047ca:	4631      	mov	r1, r6
 80047cc:	68ea      	ldr	r2, [r5, #12]
 80047ce:	9301      	str	r3, [sp, #4]
 80047d0:	4620      	mov	r0, r4
 80047d2:	f8d4 6124 	ldr.w	r6, [r4, #292]	; 0x124
 80047d6:	f7fe f9f5 	bl	8002bc4 <d_print_comp>
 80047da:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80047de:	9b01      	ldr	r3, [sp, #4]
 80047e0:	4296      	cmp	r6, r2
 80047e2:	f000 8441 	beq.w	8005068 <d_print_comp+0x24a4>
 80047e6:	9905      	ldr	r1, [sp, #20]
 80047e8:	686a      	ldr	r2, [r5, #4]
 80047ea:	f7fe bade 	b.w	8002daa <d_print_comp+0x1e6>
 80047ee:	4e79      	ldr	r6, [pc, #484]	; (80049d4 <d_print_comp+0x1e10>)
 80047f0:	4690      	mov	r8, r2
 80047f2:	f106 0906 	add.w	r9, r6, #6
 80047f6:	e014      	b.n	8004822 <d_print_comp+0x1c5e>
 80047f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80047fc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004800:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004804:	4798      	blx	r3
 8004806:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800480a:	3301      	adds	r3, #1
 800480c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004810:	2200      	movs	r2, #0
 8004812:	2301      	movs	r3, #1
 8004814:	45b1      	cmp	r9, r6
 8004816:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800481a:	54a7      	strb	r7, [r4, r2]
 800481c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004820:	d008      	beq.n	8004834 <d_print_comp+0x1c70>
 8004822:	2bff      	cmp	r3, #255	; 0xff
 8004824:	4619      	mov	r1, r3
 8004826:	4620      	mov	r0, r4
 8004828:	f816 7b01 	ldrb.w	r7, [r6], #1
 800482c:	d0e4      	beq.n	80047f8 <d_print_comp+0x1c34>
 800482e:	461a      	mov	r2, r3
 8004830:	3301      	adds	r3, #1
 8004832:	e7ef      	b.n	8004814 <d_print_comp+0x1c50>
 8004834:	9905      	ldr	r1, [sp, #20]
 8004836:	686a      	ldr	r2, [r5, #4]
 8004838:	f7fe bab7 	b.w	8002daa <d_print_comp+0x1e6>
 800483c:	4642      	mov	r2, r8
 800483e:	a808      	add	r0, sp, #32
 8004840:	4965      	ldr	r1, [pc, #404]	; (80049d8 <d_print_comp+0x1e14>)
 8004842:	f009 fe55 	bl	800e4f0 <sprintf>
 8004846:	a808      	add	r0, sp, #32
 8004848:	f002 faac 	bl	8006da4 <strlen>
 800484c:	b328      	cbz	r0, 800489a <d_print_comp+0x1cd6>
 800484e:	ae08      	add	r6, sp, #32
 8004850:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004854:	eb06 0900 	add.w	r9, r6, r0
 8004858:	f04f 0800 	mov.w	r8, #0
 800485c:	e014      	b.n	8004888 <d_print_comp+0x1cc4>
 800485e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004862:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004866:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800486a:	4798      	blx	r3
 800486c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004870:	3301      	adds	r3, #1
 8004872:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004876:	2200      	movs	r2, #0
 8004878:	2301      	movs	r3, #1
 800487a:	45b1      	cmp	r9, r6
 800487c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004880:	54a7      	strb	r7, [r4, r2]
 8004882:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004886:	d008      	beq.n	800489a <d_print_comp+0x1cd6>
 8004888:	2bff      	cmp	r3, #255	; 0xff
 800488a:	4619      	mov	r1, r3
 800488c:	4620      	mov	r0, r4
 800488e:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004892:	d0e4      	beq.n	800485e <d_print_comp+0x1c9a>
 8004894:	461a      	mov	r2, r3
 8004896:	3301      	adds	r3, #1
 8004898:	e7ef      	b.n	800487a <d_print_comp+0x1cb6>
 800489a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800489e:	2fff      	cmp	r7, #255	; 0xff
 80048a0:	d111      	bne.n	80048c6 <d_print_comp+0x1d02>
 80048a2:	2600      	movs	r6, #0
 80048a4:	4639      	mov	r1, r7
 80048a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048aa:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80048ae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048b2:	4620      	mov	r0, r4
 80048b4:	4798      	blx	r3
 80048b6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80048ba:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80048be:	3301      	adds	r3, #1
 80048c0:	4637      	mov	r7, r6
 80048c2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80048c6:	1c7a      	adds	r2, r7, #1
 80048c8:	237d      	movs	r3, #125	; 0x7d
 80048ca:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80048ce:	55e3      	strb	r3, [r4, r7]
 80048d0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80048d4:	686a      	ldr	r2, [r5, #4]
 80048d6:	9905      	ldr	r1, [sp, #20]
 80048d8:	f7fe ba67 	b.w	8002daa <d_print_comp+0x1e6>
 80048dc:	4e3f      	ldr	r6, [pc, #252]	; (80049dc <d_print_comp+0x1e18>)
 80048de:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80048e2:	f106 0905 	add.w	r9, r6, #5
 80048e6:	f04f 0800 	mov.w	r8, #0
 80048ea:	e015      	b.n	8004918 <d_print_comp+0x1d54>
 80048ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048f4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80048f8:	4798      	blx	r3
 80048fa:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80048fe:	3301      	adds	r3, #1
 8004900:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004904:	2200      	movs	r2, #0
 8004906:	2301      	movs	r3, #1
 8004908:	45b1      	cmp	r9, r6
 800490a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800490e:	54a7      	strb	r7, [r4, r2]
 8004910:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004914:	f000 80cf 	beq.w	8004ab6 <d_print_comp+0x1ef2>
 8004918:	2bff      	cmp	r3, #255	; 0xff
 800491a:	4619      	mov	r1, r3
 800491c:	4620      	mov	r0, r4
 800491e:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004922:	d0e3      	beq.n	80048ec <d_print_comp+0x1d28>
 8004924:	461a      	mov	r2, r3
 8004926:	3301      	adds	r3, #1
 8004928:	e7ee      	b.n	8004908 <d_print_comp+0x1d44>
 800492a:	68ee      	ldr	r6, [r5, #12]
 800492c:	443e      	add	r6, r7
 800492e:	42be      	cmp	r6, r7
 8004930:	f67e aa3b 	bls.w	8002daa <d_print_comp+0x1e6>
 8004934:	f04f 0800 	mov.w	r8, #0
 8004938:	e018      	b.n	800496c <d_print_comp+0x1da8>
 800493a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800493e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004942:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004946:	4620      	mov	r0, r4
 8004948:	4798      	blx	r3
 800494a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800494e:	3301      	adds	r3, #1
 8004950:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004954:	2100      	movs	r1, #0
 8004956:	2301      	movs	r3, #1
 8004958:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800495c:	f804 9001 	strb.w	r9, [r4, r1]
 8004960:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004964:	3701      	adds	r7, #1
 8004966:	42be      	cmp	r6, r7
 8004968:	f240 80e1 	bls.w	8004b2e <d_print_comp+0x1f6a>
 800496c:	1bf3      	subs	r3, r6, r7
 800496e:	2b03      	cmp	r3, #3
 8004970:	f897 9000 	ldrb.w	r9, [r7]
 8004974:	dd02      	ble.n	800497c <d_print_comp+0x1db8>
 8004976:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 800497a:	d005      	beq.n	8004988 <d_print_comp+0x1dc4>
 800497c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004980:	29ff      	cmp	r1, #255	; 0xff
 8004982:	d0da      	beq.n	800493a <d_print_comp+0x1d76>
 8004984:	1c4b      	adds	r3, r1, #1
 8004986:	e7e7      	b.n	8004958 <d_print_comp+0x1d94>
 8004988:	787b      	ldrb	r3, [r7, #1]
 800498a:	2b5f      	cmp	r3, #95	; 0x5f
 800498c:	d1f6      	bne.n	800497c <d_print_comp+0x1db8>
 800498e:	78bb      	ldrb	r3, [r7, #2]
 8004990:	2b55      	cmp	r3, #85	; 0x55
 8004992:	d1f3      	bne.n	800497c <d_print_comp+0x1db8>
 8004994:	1cf9      	adds	r1, r7, #3
 8004996:	2000      	movs	r0, #0
 8004998:	e002      	b.n	80049a0 <d_print_comp+0x1ddc>
 800499a:	4613      	mov	r3, r2
 800499c:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80049a0:	428e      	cmp	r6, r1
 80049a2:	468a      	mov	sl, r1
 80049a4:	d9ea      	bls.n	800497c <d_print_comp+0x1db8>
 80049a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80049aa:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80049ae:	fa5f fe82 	uxtb.w	lr, r2
 80049b2:	f1be 0f09 	cmp.w	lr, #9
 80049b6:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 80049ba:	d9ee      	bls.n	800499a <d_print_comp+0x1dd6>
 80049bc:	f1bc 0f05 	cmp.w	ip, #5
 80049c0:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80049c4:	f200 85c7 	bhi.w	8005556 <d_print_comp+0x2992>
 80049c8:	3b37      	subs	r3, #55	; 0x37
 80049ca:	e7e7      	b.n	800499c <d_print_comp+0x1dd8>
 80049cc:	0801eebc 	.word	0x0801eebc
 80049d0:	0801edf8 	.word	0x0801edf8
 80049d4:	0801ef1c 	.word	0x0801ef1c
 80049d8:	0801ed48 	.word	0x0801ed48
 80049dc:	0801edbc 	.word	0x0801edbc
 80049e0:	9905      	ldr	r1, [sp, #20]
 80049e2:	686a      	ldr	r2, [r5, #4]
 80049e4:	f7fe b9e1 	b.w	8002daa <d_print_comp+0x1e6>
 80049e8:	68aa      	ldr	r2, [r5, #8]
 80049ea:	9201      	str	r2, [sp, #4]
 80049ec:	4619      	mov	r1, r3
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	f47e aa26 	bne.w	8002e40 <d_print_comp+0x27c>
 80049f4:	9905      	ldr	r1, [sp, #20]
 80049f6:	686a      	ldr	r2, [r5, #4]
 80049f8:	f7fe b9d7 	b.w	8002daa <d_print_comp+0x1e6>
 80049fc:	4ece      	ldr	r6, [pc, #824]	; (8004d38 <d_print_comp+0x2174>)
 80049fe:	f106 0904 	add.w	r9, r6, #4
 8004a02:	e014      	b.n	8004a2e <d_print_comp+0x1e6a>
 8004a04:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004a08:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004a0c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004a10:	4798      	blx	r3
 8004a12:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004a16:	3301      	adds	r3, #1
 8004a18:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004a1c:	2200      	movs	r2, #0
 8004a1e:	2301      	movs	r3, #1
 8004a20:	45b1      	cmp	r9, r6
 8004a22:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004a26:	54a7      	strb	r7, [r4, r2]
 8004a28:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004a2c:	d008      	beq.n	8004a40 <d_print_comp+0x1e7c>
 8004a2e:	2bff      	cmp	r3, #255	; 0xff
 8004a30:	4619      	mov	r1, r3
 8004a32:	4620      	mov	r0, r4
 8004a34:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004a38:	d0e4      	beq.n	8004a04 <d_print_comp+0x1e40>
 8004a3a:	461a      	mov	r2, r3
 8004a3c:	3301      	adds	r3, #1
 8004a3e:	e7ef      	b.n	8004a20 <d_print_comp+0x1e5c>
 8004a40:	9905      	ldr	r1, [sp, #20]
 8004a42:	686a      	ldr	r2, [r5, #4]
 8004a44:	f7fe b9b1 	b.w	8002daa <d_print_comp+0x1e6>
 8004a48:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8004a4c:	f7ff ba66 	b.w	8003f1c <d_print_comp+0x1358>
 8004a50:	2700      	movs	r7, #0
 8004a52:	f7ff ba54 	b.w	8003efe <d_print_comp+0x133a>
 8004a56:	e9d0 6702 	ldrd	r6, r7, [r0, #8]
 8004a5a:	2f00      	cmp	r7, #0
 8004a5c:	f43e a9a5 	beq.w	8002daa <d_print_comp+0x1e6>
 8004a60:	4437      	add	r7, r6
 8004a62:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004a66:	3f01      	subs	r7, #1
 8004a68:	3e01      	subs	r6, #1
 8004a6a:	f04f 0900 	mov.w	r9, #0
 8004a6e:	e015      	b.n	8004a9c <d_print_comp+0x1ed8>
 8004a70:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004a74:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004a78:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004a7c:	4798      	blx	r3
 8004a7e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004a82:	3301      	adds	r3, #1
 8004a84:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004a88:	2200      	movs	r2, #0
 8004a8a:	2301      	movs	r3, #1
 8004a8c:	42b7      	cmp	r7, r6
 8004a8e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004a92:	f804 8002 	strb.w	r8, [r4, r2]
 8004a96:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004a9a:	d008      	beq.n	8004aae <d_print_comp+0x1eea>
 8004a9c:	2bff      	cmp	r3, #255	; 0xff
 8004a9e:	4619      	mov	r1, r3
 8004aa0:	4620      	mov	r0, r4
 8004aa2:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8004aa6:	d0e3      	beq.n	8004a70 <d_print_comp+0x1eac>
 8004aa8:	461a      	mov	r2, r3
 8004aaa:	3301      	adds	r3, #1
 8004aac:	e7ee      	b.n	8004a8c <d_print_comp+0x1ec8>
 8004aae:	9905      	ldr	r1, [sp, #20]
 8004ab0:	686a      	ldr	r2, [r5, #4]
 8004ab2:	f7fe b97a 	b.w	8002daa <d_print_comp+0x1e6>
 8004ab6:	68aa      	ldr	r2, [r5, #8]
 8004ab8:	49a0      	ldr	r1, [pc, #640]	; (8004d3c <d_print_comp+0x2178>)
 8004aba:	3201      	adds	r2, #1
 8004abc:	a808      	add	r0, sp, #32
 8004abe:	f009 fd17 	bl	800e4f0 <sprintf>
 8004ac2:	a808      	add	r0, sp, #32
 8004ac4:	f002 f96e 	bl	8006da4 <strlen>
 8004ac8:	b328      	cbz	r0, 8004b16 <d_print_comp+0x1f52>
 8004aca:	ae08      	add	r6, sp, #32
 8004acc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004ad0:	eb06 0900 	add.w	r9, r6, r0
 8004ad4:	f04f 0800 	mov.w	r8, #0
 8004ad8:	e014      	b.n	8004b04 <d_print_comp+0x1f40>
 8004ada:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004ade:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ae2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004ae6:	4798      	blx	r3
 8004ae8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004aec:	3301      	adds	r3, #1
 8004aee:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004af2:	2200      	movs	r2, #0
 8004af4:	2301      	movs	r3, #1
 8004af6:	45b1      	cmp	r9, r6
 8004af8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004afc:	54a7      	strb	r7, [r4, r2]
 8004afe:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004b02:	d008      	beq.n	8004b16 <d_print_comp+0x1f52>
 8004b04:	2bff      	cmp	r3, #255	; 0xff
 8004b06:	4619      	mov	r1, r3
 8004b08:	4620      	mov	r0, r4
 8004b0a:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004b0e:	d0e4      	beq.n	8004ada <d_print_comp+0x1f16>
 8004b10:	461a      	mov	r2, r3
 8004b12:	3301      	adds	r3, #1
 8004b14:	e7ef      	b.n	8004af6 <d_print_comp+0x1f32>
 8004b16:	9905      	ldr	r1, [sp, #20]
 8004b18:	686a      	ldr	r2, [r5, #4]
 8004b1a:	f7fe b946 	b.w	8002daa <d_print_comp+0x1e6>
 8004b1e:	9905      	ldr	r1, [sp, #20]
 8004b20:	686a      	ldr	r2, [r5, #4]
 8004b22:	f7fe b942 	b.w	8002daa <d_print_comp+0x1e6>
 8004b26:	9905      	ldr	r1, [sp, #20]
 8004b28:	686a      	ldr	r2, [r5, #4]
 8004b2a:	f7fe b93e 	b.w	8002daa <d_print_comp+0x1e6>
 8004b2e:	9905      	ldr	r1, [sp, #20]
 8004b30:	686a      	ldr	r2, [r5, #4]
 8004b32:	f7fe b93a 	b.w	8002daa <d_print_comp+0x1e6>
 8004b36:	68db      	ldr	r3, [r3, #12]
 8004b38:	781b      	ldrb	r3, [r3, #0]
 8004b3a:	2b3b      	cmp	r3, #59	; 0x3b
 8004b3c:	f47e abf6 	bne.w	800332c <d_print_comp+0x768>
 8004b40:	f105 030c 	add.w	r3, r5, #12
 8004b44:	68aa      	ldr	r2, [r5, #8]
 8004b46:	4631      	mov	r1, r6
 8004b48:	4620      	mov	r0, r4
 8004b4a:	f001 fd95 	bl	8006678 <d_maybe_print_fold_expression.isra.20>
 8004b4e:	4680      	mov	r8, r0
 8004b50:	2800      	cmp	r0, #0
 8004b52:	f040 86a0 	bne.w	8005896 <d_print_comp+0x2cd2>
 8004b56:	e9d5 7202 	ldrd	r7, r2, [r5, #8]
 8004b5a:	68b9      	ldr	r1, [r7, #8]
 8004b5c:	68d3      	ldr	r3, [r2, #12]
 8004b5e:	6808      	ldr	r0, [r1, #0]
 8004b60:	4977      	ldr	r1, [pc, #476]	; (8004d40 <d_print_comp+0x217c>)
 8004b62:	f8d2 b008 	ldr.w	fp, [r2, #8]
 8004b66:	e9d3 a902 	ldrd	sl, r9, [r3, #8]
 8004b6a:	f002 f911 	bl	8006d90 <strcmp>
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	f000 8674 	beq.w	800585c <d_print_comp+0x2c98>
 8004b74:	2204      	movs	r2, #4
 8004b76:	4973      	ldr	r1, [pc, #460]	; (8004d44 <d_print_comp+0x2180>)
 8004b78:	4620      	mov	r0, r4
 8004b7a:	f7fb fbff 	bl	800037c <d_append_buffer>
 8004b7e:	f8db 3008 	ldr.w	r3, [fp, #8]
 8004b82:	b303      	cbz	r3, 8004bc6 <d_print_comp+0x2002>
 8004b84:	465a      	mov	r2, fp
 8004b86:	4631      	mov	r1, r6
 8004b88:	4620      	mov	r0, r4
 8004b8a:	f001 fd23 	bl	80065d4 <d_print_subexpr>
 8004b8e:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004b92:	2fff      	cmp	r7, #255	; 0xff
 8004b94:	d110      	bne.n	8004bb8 <d_print_comp+0x1ff4>
 8004b96:	4639      	mov	r1, r7
 8004b98:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004b9c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004ba0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ba4:	4620      	mov	r0, r4
 8004ba6:	4798      	blx	r3
 8004ba8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004bac:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004bb0:	3301      	adds	r3, #1
 8004bb2:	4647      	mov	r7, r8
 8004bb4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004bb8:	2320      	movs	r3, #32
 8004bba:	1c7a      	adds	r2, r7, #1
 8004bbc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004bc0:	55e3      	strb	r3, [r4, r7]
 8004bc2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004bc6:	4652      	mov	r2, sl
 8004bc8:	4631      	mov	r1, r6
 8004bca:	4620      	mov	r0, r4
 8004bcc:	f7fd fffa 	bl	8002bc4 <d_print_comp>
 8004bd0:	f1b9 0f00 	cmp.w	r9, #0
 8004bd4:	f000 8663 	beq.w	800589e <d_print_comp+0x2cda>
 8004bd8:	464a      	mov	r2, r9
 8004bda:	4631      	mov	r1, r6
 8004bdc:	4620      	mov	r0, r4
 8004bde:	f001 fcf9 	bl	80065d4 <d_print_subexpr>
 8004be2:	9905      	ldr	r1, [sp, #20]
 8004be4:	686a      	ldr	r2, [r5, #4]
 8004be6:	f7fe b8e0 	b.w	8002daa <d_print_comp+0x1e6>
 8004bea:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004bee:	4956      	ldr	r1, [pc, #344]	; (8004d48 <d_print_comp+0x2184>)
 8004bf0:	f8d3 a000 	ldr.w	sl, [r3]
 8004bf4:	4650      	mov	r0, sl
 8004bf6:	f002 f8cb 	bl	8006d90 <strcmp>
 8004bfa:	f898 3000 	ldrb.w	r3, [r8]
 8004bfe:	b910      	cbnz	r0, 8004c06 <d_print_comp+0x2042>
 8004c00:	2b03      	cmp	r3, #3
 8004c02:	f000 852b 	beq.w	800565c <d_print_comp+0x2a98>
 8004c06:	2b38      	cmp	r3, #56	; 0x38
 8004c08:	f000 850c 	beq.w	8005624 <d_print_comp+0x2a60>
 8004c0c:	494f      	ldr	r1, [pc, #316]	; (8004d4c <d_print_comp+0x2188>)
 8004c0e:	4650      	mov	r0, sl
 8004c10:	f002 f8be 	bl	8006d90 <strcmp>
 8004c14:	4607      	mov	r7, r0
 8004c16:	2800      	cmp	r0, #0
 8004c18:	f000 8513 	beq.w	8005642 <d_print_comp+0x2a7e>
 8004c1c:	494c      	ldr	r1, [pc, #304]	; (8004d50 <d_print_comp+0x218c>)
 8004c1e:	4650      	mov	r0, sl
 8004c20:	f002 f8b6 	bl	8006d90 <strcmp>
 8004c24:	2800      	cmp	r0, #0
 8004c26:	f000 8333 	beq.w	8005290 <d_print_comp+0x26cc>
 8004c2a:	4631      	mov	r1, r6
 8004c2c:	4620      	mov	r0, r4
 8004c2e:	464a      	mov	r2, r9
 8004c30:	f001 fc90 	bl	8006554 <d_print_expr_op>
 8004c34:	4947      	ldr	r1, [pc, #284]	; (8004d54 <d_print_comp+0x2190>)
 8004c36:	4650      	mov	r0, sl
 8004c38:	f002 f8aa 	bl	8006d90 <strcmp>
 8004c3c:	2800      	cmp	r0, #0
 8004c3e:	f000 83b0 	beq.w	80053a2 <d_print_comp+0x27de>
 8004c42:	4650      	mov	r0, sl
 8004c44:	4944      	ldr	r1, [pc, #272]	; (8004d58 <d_print_comp+0x2194>)
 8004c46:	f002 f8a3 	bl	8006d90 <strcmp>
 8004c4a:	4681      	mov	r9, r0
 8004c4c:	2800      	cmp	r0, #0
 8004c4e:	f47e abd7 	bne.w	8003400 <d_print_comp+0x83c>
 8004c52:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004c56:	2fff      	cmp	r7, #255	; 0xff
 8004c58:	d110      	bne.n	8004c7c <d_print_comp+0x20b8>
 8004c5a:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8004c5e:	4639      	mov	r1, r7
 8004c60:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c64:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c68:	4620      	mov	r0, r4
 8004c6a:	4798      	blx	r3
 8004c6c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c70:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8004c74:	3301      	adds	r3, #1
 8004c76:	464f      	mov	r7, r9
 8004c78:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c7c:	1c78      	adds	r0, r7, #1
 8004c7e:	2328      	movs	r3, #40	; 0x28
 8004c80:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004c84:	4642      	mov	r2, r8
 8004c86:	55e3      	strb	r3, [r4, r7]
 8004c88:	4631      	mov	r1, r6
 8004c8a:	4620      	mov	r0, r4
 8004c8c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004c90:	f7fd ff98 	bl	8002bc4 <d_print_comp>
 8004c94:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004c98:	2fff      	cmp	r7, #255	; 0xff
 8004c9a:	d111      	bne.n	8004cc0 <d_print_comp+0x20fc>
 8004c9c:	2600      	movs	r6, #0
 8004c9e:	4639      	mov	r1, r7
 8004ca0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004ca4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004ca8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004cac:	4620      	mov	r0, r4
 8004cae:	4798      	blx	r3
 8004cb0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004cb4:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004cb8:	3301      	adds	r3, #1
 8004cba:	4637      	mov	r7, r6
 8004cbc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004cc0:	1c7a      	adds	r2, r7, #1
 8004cc2:	2329      	movs	r3, #41	; 0x29
 8004cc4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004cc8:	55e3      	strb	r3, [r4, r7]
 8004cca:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004cce:	686a      	ldr	r2, [r5, #4]
 8004cd0:	9905      	ldr	r1, [sp, #20]
 8004cd2:	f7fe b86a 	b.w	8002daa <d_print_comp+0x1e6>
 8004cd6:	f105 020c 	add.w	r2, r5, #12
 8004cda:	4641      	mov	r1, r8
 8004cdc:	4620      	mov	r0, r4
 8004cde:	f001 f935 	bl	8005f4c <d_print_function_type.isra.15>
 8004ce2:	68aa      	ldr	r2, [r5, #8]
 8004ce4:	2a00      	cmp	r2, #0
 8004ce6:	f000 83fd 	beq.w	80054e4 <d_print_comp+0x2920>
 8004cea:	4641      	mov	r1, r8
 8004cec:	4620      	mov	r0, r4
 8004cee:	f7fd ff69 	bl	8002bc4 <d_print_comp>
 8004cf2:	9905      	ldr	r1, [sp, #20]
 8004cf4:	686a      	ldr	r2, [r5, #4]
 8004cf6:	f7fe b858 	b.w	8002daa <d_print_comp+0x1e6>
 8004cfa:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004cfe:	2fff      	cmp	r7, #255	; 0xff
 8004d00:	d111      	bne.n	8004d26 <d_print_comp+0x2162>
 8004d02:	2600      	movs	r6, #0
 8004d04:	4639      	mov	r1, r7
 8004d06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004d0a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004d0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004d12:	4620      	mov	r0, r4
 8004d14:	4798      	blx	r3
 8004d16:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004d1a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004d1e:	3301      	adds	r3, #1
 8004d20:	4637      	mov	r7, r6
 8004d22:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004d26:	2320      	movs	r3, #32
 8004d28:	1c7a      	adds	r2, r7, #1
 8004d2a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004d2e:	55e3      	strb	r3, [r4, r7]
 8004d30:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004d34:	f7fe bf72 	b.w	8003c1c <d_print_comp+0x1058>
 8004d38:	0801ef9c 	.word	0x0801ef9c
 8004d3c:	0801ed48 	.word	0x0801ed48
 8004d40:	0801ed5c 	.word	0x0801ed5c
 8004d44:	0801ef58 	.word	0x0801ef58
 8004d48:	0801ef40 	.word	0x0801ef40
 8004d4c:	0801ef44 	.word	0x0801ef44
 8004d50:	0801ed4c 	.word	0x0801ed4c
 8004d54:	0801ef48 	.word	0x0801ef48
 8004d58:	0801f268 	.word	0x0801f268
 8004d5c:	689b      	ldr	r3, [r3, #8]
 8004d5e:	f893 8010 	ldrb.w	r8, [r3, #16]
 8004d62:	f1b8 0f00 	cmp.w	r8, #0
 8004d66:	f43e aa89 	beq.w	800327c <d_print_comp+0x6b8>
 8004d6a:	f1b8 0f06 	cmp.w	r8, #6
 8004d6e:	f240 843f 	bls.w	80055f0 <d_print_comp+0x2a2c>
 8004d72:	f1b8 0f07 	cmp.w	r8, #7
 8004d76:	f47e aa81 	bne.w	800327c <d_print_comp+0x6b8>
 8004d7a:	68eb      	ldr	r3, [r5, #12]
 8004d7c:	781a      	ldrb	r2, [r3, #0]
 8004d7e:	2a00      	cmp	r2, #0
 8004d80:	f47e aa7c 	bne.w	800327c <d_print_comp+0x6b8>
 8004d84:	68da      	ldr	r2, [r3, #12]
 8004d86:	2a01      	cmp	r2, #1
 8004d88:	f47e aa78 	bne.w	800327c <d_print_comp+0x6b8>
 8004d8c:	283c      	cmp	r0, #60	; 0x3c
 8004d8e:	f47e aa75 	bne.w	800327c <d_print_comp+0x6b8>
 8004d92:	689b      	ldr	r3, [r3, #8]
 8004d94:	781b      	ldrb	r3, [r3, #0]
 8004d96:	2b30      	cmp	r3, #48	; 0x30
 8004d98:	f000 84b6 	beq.w	8005708 <d_print_comp+0x2b44>
 8004d9c:	2b31      	cmp	r3, #49	; 0x31
 8004d9e:	f47e aa6d 	bne.w	800327c <d_print_comp+0x6b8>
 8004da2:	2204      	movs	r2, #4
 8004da4:	49c3      	ldr	r1, [pc, #780]	; (80050b4 <d_print_comp+0x24f0>)
 8004da6:	4620      	mov	r0, r4
 8004da8:	f7fb fae8 	bl	800037c <d_append_buffer>
 8004dac:	9905      	ldr	r1, [sp, #20]
 8004dae:	686a      	ldr	r2, [r5, #4]
 8004db0:	f7fd bffb 	b.w	8002daa <d_print_comp+0x1e6>
 8004db4:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004db8:	2fff      	cmp	r7, #255	; 0xff
 8004dba:	d112      	bne.n	8004de2 <d_print_comp+0x221e>
 8004dbc:	f04f 0800 	mov.w	r8, #0
 8004dc0:	4639      	mov	r1, r7
 8004dc2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004dc6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004dca:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004dce:	4620      	mov	r0, r4
 8004dd0:	4798      	blx	r3
 8004dd2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004dd6:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004dda:	3301      	adds	r3, #1
 8004ddc:	4647      	mov	r7, r8
 8004dde:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004de2:	1c7a      	adds	r2, r7, #1
 8004de4:	235b      	movs	r3, #91	; 0x5b
 8004de6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dea:	55e3      	strb	r3, [r4, r7]
 8004dec:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004df0:	4631      	mov	r1, r6
 8004df2:	68ea      	ldr	r2, [r5, #12]
 8004df4:	4620      	mov	r0, r4
 8004df6:	f7fd fee5 	bl	8002bc4 <d_print_comp>
 8004dfa:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004dfe:	2fff      	cmp	r7, #255	; 0xff
 8004e00:	d111      	bne.n	8004e26 <d_print_comp+0x2262>
 8004e02:	2600      	movs	r6, #0
 8004e04:	4639      	mov	r1, r7
 8004e06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e0a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004e0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e12:	4620      	mov	r0, r4
 8004e14:	4798      	blx	r3
 8004e16:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004e1a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004e1e:	3301      	adds	r3, #1
 8004e20:	4637      	mov	r7, r6
 8004e22:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004e26:	1c7a      	adds	r2, r7, #1
 8004e28:	235d      	movs	r3, #93	; 0x5d
 8004e2a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004e2e:	55e3      	strb	r3, [r4, r7]
 8004e30:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e34:	686a      	ldr	r2, [r5, #4]
 8004e36:	9905      	ldr	r1, [sp, #20]
 8004e38:	f7fd bfb7 	b.w	8002daa <d_print_comp+0x1e6>
 8004e3c:	1c59      	adds	r1, r3, #1
 8004e3e:	2229      	movs	r2, #41	; 0x29
 8004e40:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e44:	54e2      	strb	r2, [r4, r3]
 8004e46:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004e4a:	782b      	ldrb	r3, [r5, #0]
 8004e4c:	2b3d      	cmp	r3, #61	; 0x3d
 8004e4e:	f47e aa57 	bne.w	8003300 <d_print_comp+0x73c>
 8004e52:	29ff      	cmp	r1, #255	; 0xff
 8004e54:	d10f      	bne.n	8004e76 <d_print_comp+0x22b2>
 8004e56:	2700      	movs	r7, #0
 8004e58:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e5c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004e60:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e64:	4620      	mov	r0, r4
 8004e66:	4798      	blx	r3
 8004e68:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004e6c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004e70:	3301      	adds	r3, #1
 8004e72:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004e76:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004e7a:	232d      	movs	r3, #45	; 0x2d
 8004e7c:	1c51      	adds	r1, r2, #1
 8004e7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e82:	54a3      	strb	r3, [r4, r2]
 8004e84:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e88:	f7fe ba3a 	b.w	8003300 <d_print_comp+0x73c>
 8004e8c:	4f8a      	ldr	r7, [pc, #552]	; (80050b8 <d_print_comp+0x24f4>)
 8004e8e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004e92:	f107 0a02 	add.w	sl, r7, #2
 8004e96:	e016      	b.n	8004ec6 <d_print_comp+0x2302>
 8004e98:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e9c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ea0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004ea4:	4798      	blx	r3
 8004ea6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004eaa:	3301      	adds	r3, #1
 8004eac:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004eb0:	2200      	movs	r2, #0
 8004eb2:	2301      	movs	r3, #1
 8004eb4:	45ba      	cmp	sl, r7
 8004eb6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004eba:	f804 8002 	strb.w	r8, [r4, r2]
 8004ebe:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004ec2:	f43f a980 	beq.w	80041c6 <d_print_comp+0x1602>
 8004ec6:	2bff      	cmp	r3, #255	; 0xff
 8004ec8:	4619      	mov	r1, r3
 8004eca:	4620      	mov	r0, r4
 8004ecc:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004ed0:	d0e2      	beq.n	8004e98 <d_print_comp+0x22d4>
 8004ed2:	461a      	mov	r2, r3
 8004ed4:	3301      	adds	r3, #1
 8004ed6:	e7ed      	b.n	8004eb4 <d_print_comp+0x22f0>
 8004ed8:	6892      	ldr	r2, [r2, #8]
 8004eda:	4631      	mov	r1, r6
 8004edc:	4620      	mov	r0, r4
 8004ede:	f7fd fe71 	bl	8002bc4 <d_print_comp>
 8004ee2:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8004ee6:	b113      	cbz	r3, 8004eee <d_print_comp+0x232a>
 8004ee8:	9b08      	ldr	r3, [sp, #32]
 8004eea:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004eee:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004ef2:	2b3c      	cmp	r3, #60	; 0x3c
 8004ef4:	f000 82c4 	beq.w	8005480 <d_print_comp+0x28bc>
 8004ef8:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004efc:	2fff      	cmp	r7, #255	; 0xff
 8004efe:	d112      	bne.n	8004f26 <d_print_comp+0x2362>
 8004f00:	f04f 0800 	mov.w	r8, #0
 8004f04:	4639      	mov	r1, r7
 8004f06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f0a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004f0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f12:	4620      	mov	r0, r4
 8004f14:	4798      	blx	r3
 8004f16:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f1a:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004f1e:	3301      	adds	r3, #1
 8004f20:	4647      	mov	r7, r8
 8004f22:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f26:	233c      	movs	r3, #60	; 0x3c
 8004f28:	1c7a      	adds	r2, r7, #1
 8004f2a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004f2e:	55e3      	strb	r3, [r4, r7]
 8004f30:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004f34:	68ab      	ldr	r3, [r5, #8]
 8004f36:	4631      	mov	r1, r6
 8004f38:	68da      	ldr	r2, [r3, #12]
 8004f3a:	4620      	mov	r0, r4
 8004f3c:	f7fd fe42 	bl	8002bc4 <d_print_comp>
 8004f40:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004f44:	2b3e      	cmp	r3, #62	; 0x3e
 8004f46:	f000 827d 	beq.w	8005444 <d_print_comp+0x2880>
 8004f4a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004f4e:	2fff      	cmp	r7, #255	; 0xff
 8004f50:	d111      	bne.n	8004f76 <d_print_comp+0x23b2>
 8004f52:	2600      	movs	r6, #0
 8004f54:	4639      	mov	r1, r7
 8004f56:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f5a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004f5e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f62:	4620      	mov	r0, r4
 8004f64:	4798      	blx	r3
 8004f66:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f6a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004f6e:	3301      	adds	r3, #1
 8004f70:	4637      	mov	r7, r6
 8004f72:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f76:	233e      	movs	r3, #62	; 0x3e
 8004f78:	1c7a      	adds	r2, r7, #1
 8004f7a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004f7e:	55e3      	strb	r3, [r4, r7]
 8004f80:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004f84:	f7ff badc 	b.w	8004540 <d_print_comp+0x197c>
 8004f88:	4f4c      	ldr	r7, [pc, #304]	; (80050bc <d_print_comp+0x24f8>)
 8004f8a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004f8e:	f107 0905 	add.w	r9, r7, #5
 8004f92:	f04f 0a00 	mov.w	sl, #0
 8004f96:	e016      	b.n	8004fc6 <d_print_comp+0x2402>
 8004f98:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f9c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004fa0:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004fa4:	4798      	blx	r3
 8004fa6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004faa:	3301      	adds	r3, #1
 8004fac:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	45b9      	cmp	r9, r7
 8004fb6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004fba:	f804 8002 	strb.w	r8, [r4, r2]
 8004fbe:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004fc2:	f43e ab41 	beq.w	8003648 <d_print_comp+0xa84>
 8004fc6:	2bff      	cmp	r3, #255	; 0xff
 8004fc8:	4619      	mov	r1, r3
 8004fca:	4620      	mov	r0, r4
 8004fcc:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004fd0:	d0e2      	beq.n	8004f98 <d_print_comp+0x23d4>
 8004fd2:	461a      	mov	r2, r3
 8004fd4:	3301      	adds	r3, #1
 8004fd6:	e7ed      	b.n	8004fb4 <d_print_comp+0x23f0>
 8004fd8:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004fdc:	2fff      	cmp	r7, #255	; 0xff
 8004fde:	d112      	bne.n	8005006 <d_print_comp+0x2442>
 8004fe0:	f04f 0a00 	mov.w	sl, #0
 8004fe4:	4639      	mov	r1, r7
 8004fe6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004fea:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004fee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ff2:	4620      	mov	r0, r4
 8004ff4:	4798      	blx	r3
 8004ff6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004ffa:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 8004ffe:	3301      	adds	r3, #1
 8005000:	4657      	mov	r7, sl
 8005002:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005006:	2320      	movs	r3, #32
 8005008:	1c7a      	adds	r2, r7, #1
 800500a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800500e:	55e3      	strb	r3, [r4, r7]
 8005010:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005014:	f7fe bdda 	b.w	8003bcc <d_print_comp+0x1008>
 8005018:	f8d4 1120 	ldr.w	r1, [r4, #288]	; 0x120
 800501c:	2900      	cmp	r1, #0
 800501e:	f6fe ad99 	blt.w	8003b54 <d_print_comp+0xf90>
 8005022:	f7fb fbc3 	bl	80007ac <d_index_template_argument.part.9>
 8005026:	4602      	mov	r2, r0
 8005028:	2800      	cmp	r0, #0
 800502a:	f47e ad93 	bne.w	8003b54 <d_print_comp+0xf90>
 800502e:	2301      	movs	r3, #1
 8005030:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005034:	686a      	ldr	r2, [r5, #4]
 8005036:	9905      	ldr	r1, [sp, #20]
 8005038:	f7fd beb7 	b.w	8002daa <d_print_comp+0x1e6>
 800503c:	9905      	ldr	r1, [sp, #20]
 800503e:	686a      	ldr	r2, [r5, #4]
 8005040:	f7fd beb3 	b.w	8002daa <d_print_comp+0x1e6>
 8005044:	220d      	movs	r2, #13
 8005046:	491e      	ldr	r1, [pc, #120]	; (80050c0 <d_print_comp+0x24fc>)
 8005048:	4620      	mov	r0, r4
 800504a:	f7fb f997 	bl	800037c <d_append_buffer>
 800504e:	68f9      	ldr	r1, [r7, #12]
 8005050:	4620      	mov	r0, r4
 8005052:	3101      	adds	r1, #1
 8005054:	f7fb fc84 	bl	8000960 <d_append_num>
 8005058:	2203      	movs	r2, #3
 800505a:	491a      	ldr	r1, [pc, #104]	; (80050c4 <d_print_comp+0x2500>)
 800505c:	4620      	mov	r0, r4
 800505e:	f7fb f98d 	bl	800037c <d_append_buffer>
 8005062:	68bf      	ldr	r7, [r7, #8]
 8005064:	f7ff b8b4 	b.w	80041d0 <d_print_comp+0x160c>
 8005068:	f8d4 0100 	ldr.w	r0, [r4, #256]	; 0x100
 800506c:	9905      	ldr	r1, [sp, #20]
 800506e:	686a      	ldr	r2, [r5, #4]
 8005070:	42b8      	cmp	r0, r7
 8005072:	f47d ae9a 	bne.w	8002daa <d_print_comp+0x1e6>
 8005076:	3b01      	subs	r3, #1
 8005078:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800507c:	f7fd be95 	b.w	8002daa <d_print_comp+0x1e6>
 8005080:	4642      	mov	r2, r8
 8005082:	465b      	mov	r3, fp
 8005084:	46ab      	mov	fp, r5
 8005086:	f1bb 0f04 	cmp.w	fp, #4
 800508a:	46a0      	mov	r8, r4
 800508c:	461d      	mov	r5, r3
 800508e:	4614      	mov	r4, r2
 8005090:	f8c2 1114 	str.w	r1, [r2, #276]	; 0x114
 8005094:	f000 82a3 	beq.w	80055de <d_print_comp+0x2a1a>
 8005098:	f1bb 0f02 	cmp.w	fp, #2
 800509c:	d137      	bne.n	800510e <d_print_comp+0x254a>
 800509e:	f8d8 a00c 	ldr.w	sl, [r8, #12]
 80050a2:	f89a 3000 	ldrb.w	r3, [sl]
 80050a6:	2b46      	cmp	r3, #70	; 0x46
 80050a8:	f000 8327 	beq.w	80056fa <d_print_comp+0x2b36>
 80050ac:	eb09 1207 	add.w	r2, r9, r7, lsl #4
 80050b0:	3a0c      	subs	r2, #12
 80050b2:	e020      	b.n	80050f6 <d_print_comp+0x2532>
 80050b4:	0801ef74 	.word	0x0801ef74
 80050b8:	0801ed98 	.word	0x0801ed98
 80050bc:	0801ef0c 	.word	0x0801ef0c
 80050c0:	0801ed9c 	.word	0x0801ed9c
 80050c4:	0801edac 	.word	0x0801edac
 80050c8:	2f04      	cmp	r7, #4
 80050ca:	f43f a81d 	beq.w	8004108 <d_print_comp+0x1544>
 80050ce:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 80050d2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 80050d6:	2300      	movs	r3, #0
 80050d8:	f84e 3c0c 	str.w	r3, [lr, #-12]
 80050dc:	f84e ac10 	str.w	sl, [lr, #-16]
 80050e0:	9b01      	ldr	r3, [sp, #4]
 80050e2:	f8da a008 	ldr.w	sl, [sl, #8]
 80050e6:	f8c4 c114 	str.w	ip, [r4, #276]	; 0x114
 80050ea:	3701      	adds	r7, #1
 80050ec:	f84e bc04 	str.w	fp, [lr, #-4]
 80050f0:	f84e 3c08 	str.w	r3, [lr, #-8]
 80050f4:	4672      	mov	r2, lr
 80050f6:	f89a 0000 	ldrb.w	r0, [sl]
 80050fa:	f7fb f975 	bl	80003e8 <is_fnqual_component_type>
 80050fe:	f1a2 0b04 	sub.w	fp, r2, #4
 8005102:	f102 0e10 	add.w	lr, r2, #16
 8005106:	f102 0c0c 	add.w	ip, r2, #12
 800510a:	2800      	cmp	r0, #0
 800510c:	d1dc      	bne.n	80050c8 <d_print_comp+0x2504>
 800510e:	68ea      	ldr	r2, [r5, #12]
 8005110:	4631      	mov	r1, r6
 8005112:	4620      	mov	r0, r4
 8005114:	f7fd fd56 	bl	8002bc4 <d_print_comp>
 8005118:	f898 3000 	ldrb.w	r3, [r8]
 800511c:	2b04      	cmp	r3, #4
 800511e:	bf04      	itt	eq
 8005120:	9b06      	ldreq	r3, [sp, #24]
 8005122:	f8c4 3110 	streq.w	r3, [r4, #272]	; 0x110
 8005126:	013f      	lsls	r7, r7, #4
 8005128:	f04f 0a20 	mov.w	sl, #32
 800512c:	46a8      	mov	r8, r5
 800512e:	eb09 0b07 	add.w	fp, r9, r7
 8005132:	f85b 5c08 	ldr.w	r5, [fp, #-8]
 8005136:	bb0d      	cbnz	r5, 800517c <d_print_comp+0x25b8>
 8005138:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800513c:	2bff      	cmp	r3, #255	; 0xff
 800513e:	4620      	mov	r0, r4
 8005140:	4619      	mov	r1, r3
 8005142:	d10e      	bne.n	8005162 <d_print_comp+0x259e>
 8005144:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005148:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800514c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005150:	4798      	blx	r3
 8005152:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005156:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800515a:	1c5a      	adds	r2, r3, #1
 800515c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005160:	462b      	mov	r3, r5
 8005162:	1c59      	adds	r1, r3, #1
 8005164:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005168:	f85b 2c0c 	ldr.w	r2, [fp, #-12]
 800516c:	f804 a003 	strb.w	sl, [r4, r3]
 8005170:	4631      	mov	r1, r6
 8005172:	4620      	mov	r0, r4
 8005174:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005178:	f000 fbba 	bl	80058f0 <d_print_mod>
 800517c:	3f10      	subs	r7, #16
 800517e:	d1d6      	bne.n	800512e <d_print_comp+0x256a>
 8005180:	9b02      	ldr	r3, [sp, #8]
 8005182:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005186:	4645      	mov	r5, r8
 8005188:	f7fe bfc1 	b.w	800410e <d_print_comp+0x154a>
 800518c:	4631      	mov	r1, r6
 800518e:	68aa      	ldr	r2, [r5, #8]
 8005190:	4620      	mov	r0, r4
 8005192:	f7fd fd17 	bl	8002bc4 <d_print_comp>
 8005196:	9905      	ldr	r1, [sp, #20]
 8005198:	686a      	ldr	r2, [r5, #4]
 800519a:	f7fd be06 	b.w	8002daa <d_print_comp+0x1e6>
 800519e:	460f      	mov	r7, r1
 80051a0:	46a9      	mov	r9, r5
 80051a2:	f7fe bebb 	b.w	8003f1c <d_print_comp+0x1358>
 80051a6:	4644      	mov	r4, r8
 80051a8:	465d      	mov	r5, fp
 80051aa:	f8c8 1114 	str.w	r1, [r8, #276]	; 0x114
 80051ae:	f7fe bfab 	b.w	8004108 <d_print_comp+0x1544>
 80051b2:	68ea      	ldr	r2, [r5, #12]
 80051b4:	4631      	mov	r1, r6
 80051b6:	4620      	mov	r0, r4
 80051b8:	f7fd fd04 	bl	8002bc4 <d_print_comp>
 80051bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051be:	9a01      	ldr	r2, [sp, #4]
 80051c0:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80051c4:	2b00      	cmp	r3, #0
 80051c6:	f43e ab19 	beq.w	80037fc <d_print_comp+0xc38>
 80051ca:	f7fe bb1f 	b.w	800380c <d_print_comp+0xc48>
 80051ce:	2301      	movs	r3, #1
 80051d0:	4664      	mov	r4, ip
 80051d2:	f8cc 3118 	str.w	r3, [ip, #280]	; 0x118
 80051d6:	f7fe bb19 	b.w	800380c <d_print_comp+0xc48>
 80051da:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80051de:	f7fe bead 	b.w	8003f3c <d_print_comp+0x1378>
 80051e2:	4631      	mov	r1, r6
 80051e4:	68aa      	ldr	r2, [r5, #8]
 80051e6:	4620      	mov	r0, r4
 80051e8:	f001 f9f4 	bl	80065d4 <d_print_subexpr>
 80051ec:	2203      	movs	r2, #3
 80051ee:	49bf      	ldr	r1, [pc, #764]	; (80054ec <d_print_comp+0x2928>)
 80051f0:	4620      	mov	r0, r4
 80051f2:	f7fb f8c3 	bl	800037c <d_append_buffer>
 80051f6:	9905      	ldr	r1, [sp, #20]
 80051f8:	686a      	ldr	r2, [r5, #4]
 80051fa:	f7fd bdd6 	b.w	8002daa <d_print_comp+0x1e6>
 80051fe:	f8d4 e130 	ldr.w	lr, [r4, #304]	; 0x130
 8005202:	f8d4 212c 	ldr.w	r2, [r4, #300]	; 0x12c
 8005206:	f1be 0f00 	cmp.w	lr, #0
 800520a:	dd17      	ble.n	800523c <d_print_comp+0x2678>
 800520c:	6810      	ldr	r0, [r2, #0]
 800520e:	4581      	cmp	r9, r0
 8005210:	f000 81a7 	beq.w	8005562 <d_print_comp+0x299e>
 8005214:	f102 0b08 	add.w	fp, r2, #8
 8005218:	46bc      	mov	ip, r7
 800521a:	9101      	str	r1, [sp, #4]
 800521c:	4670      	mov	r0, lr
 800521e:	e004      	b.n	800522a <d_print_comp+0x2666>
 8005220:	f852 103c 	ldr.w	r1, [r2, ip, lsl #3]
 8005224:	4589      	cmp	r9, r1
 8005226:	f000 819d 	beq.w	8005564 <d_print_comp+0x29a0>
 800522a:	f10c 0c01 	add.w	ip, ip, #1
 800522e:	4560      	cmp	r0, ip
 8005230:	46da      	mov	sl, fp
 8005232:	f10b 0b08 	add.w	fp, fp, #8
 8005236:	d1f3      	bne.n	8005220 <d_print_comp+0x265c>
 8005238:	9901      	ldr	r1, [sp, #4]
 800523a:	4686      	mov	lr, r0
 800523c:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8005240:	459e      	cmp	lr, r3
 8005242:	f280 8344 	bge.w	80058ce <d_print_comp+0x2d0a>
 8005246:	f10e 0301 	add.w	r3, lr, #1
 800524a:	eb02 0cce 	add.w	ip, r2, lr, lsl #3
 800524e:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
 8005252:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8005256:	f842 903e 	str.w	r9, [r2, lr, lsl #3]
 800525a:	f10c 0c04 	add.w	ip, ip, #4
 800525e:	2800      	cmp	r0, #0
 8005260:	f000 825b 	beq.w	800571a <d_print_comp+0x2b56>
 8005264:	f8d4 213c 	ldr.w	r2, [r4, #316]	; 0x13c
 8005268:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800526c:	429a      	cmp	r2, r3
 800526e:	f102 0e01 	add.w	lr, r2, #1
 8005272:	f280 832c 	bge.w	80058ce <d_print_comp+0x2d0a>
 8005276:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800527a:	f8c4 e13c 	str.w	lr, [r4, #316]	; 0x13c
 800527e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005282:	6842      	ldr	r2, [r0, #4]
 8005284:	605a      	str	r2, [r3, #4]
 8005286:	f8cc 3000 	str.w	r3, [ip]
 800528a:	6800      	ldr	r0, [r0, #0]
 800528c:	469c      	mov	ip, r3
 800528e:	e7e6      	b.n	800525e <d_print_comp+0x269a>
 8005290:	4606      	mov	r6, r0
 8005292:	4647      	mov	r7, r8
 8005294:	e001      	b.n	800529a <d_print_comp+0x26d6>
 8005296:	68ff      	ldr	r7, [r7, #12]
 8005298:	b31f      	cbz	r7, 80052e2 <d_print_comp+0x271e>
 800529a:	783b      	ldrb	r3, [r7, #0]
 800529c:	2b2f      	cmp	r3, #47	; 0x2f
 800529e:	d120      	bne.n	80052e2 <d_print_comp+0x271e>
 80052a0:	68bb      	ldr	r3, [r7, #8]
 80052a2:	b1f3      	cbz	r3, 80052e2 <d_print_comp+0x271e>
 80052a4:	781a      	ldrb	r2, [r3, #0]
 80052a6:	2a4a      	cmp	r2, #74	; 0x4a
 80052a8:	bf18      	it	ne
 80052aa:	3601      	addne	r6, #1
 80052ac:	d1f3      	bne.n	8005296 <d_print_comp+0x26d2>
 80052ae:	6899      	ldr	r1, [r3, #8]
 80052b0:	4620      	mov	r0, r4
 80052b2:	f7fb faa1 	bl	80007f8 <d_find_pack>
 80052b6:	2800      	cmp	r0, #0
 80052b8:	f000 81ef 	beq.w	800569a <d_print_comp+0x2ad6>
 80052bc:	7803      	ldrb	r3, [r0, #0]
 80052be:	2b2f      	cmp	r3, #47	; 0x2f
 80052c0:	f040 81eb 	bne.w	800569a <d_print_comp+0x2ad6>
 80052c4:	6883      	ldr	r3, [r0, #8]
 80052c6:	b153      	cbz	r3, 80052de <d_print_comp+0x271a>
 80052c8:	2300      	movs	r3, #0
 80052ca:	e004      	b.n	80052d6 <d_print_comp+0x2712>
 80052cc:	7802      	ldrb	r2, [r0, #0]
 80052ce:	2a2f      	cmp	r2, #47	; 0x2f
 80052d0:	d105      	bne.n	80052de <d_print_comp+0x271a>
 80052d2:	6882      	ldr	r2, [r0, #8]
 80052d4:	b11a      	cbz	r2, 80052de <d_print_comp+0x271a>
 80052d6:	68c0      	ldr	r0, [r0, #12]
 80052d8:	3301      	adds	r3, #1
 80052da:	2800      	cmp	r0, #0
 80052dc:	d1f6      	bne.n	80052cc <d_print_comp+0x2708>
 80052de:	441e      	add	r6, r3
 80052e0:	e7d9      	b.n	8005296 <d_print_comp+0x26d2>
 80052e2:	4631      	mov	r1, r6
 80052e4:	4620      	mov	r0, r4
 80052e6:	f7fb fb3b 	bl	8000960 <d_append_num>
 80052ea:	9905      	ldr	r1, [sp, #20]
 80052ec:	686a      	ldr	r2, [r5, #4]
 80052ee:	f7fd bd5c 	b.w	8002daa <d_print_comp+0x1e6>
 80052f2:	4631      	mov	r1, r6
 80052f4:	4620      	mov	r0, r4
 80052f6:	f001 f92d 	bl	8006554 <d_print_expr_op>
 80052fa:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80052fe:	2fff      	cmp	r7, #255	; 0xff
 8005300:	d112      	bne.n	8005328 <d_print_comp+0x2764>
 8005302:	f04f 0800 	mov.w	r8, #0
 8005306:	4639      	mov	r1, r7
 8005308:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800530c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005310:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005314:	4620      	mov	r0, r4
 8005316:	4798      	blx	r3
 8005318:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800531c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005320:	3301      	adds	r3, #1
 8005322:	4647      	mov	r7, r8
 8005324:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005328:	1c7a      	adds	r2, r7, #1
 800532a:	233c      	movs	r3, #60	; 0x3c
 800532c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005330:	55e3      	strb	r3, [r4, r7]
 8005332:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005336:	68eb      	ldr	r3, [r5, #12]
 8005338:	4631      	mov	r1, r6
 800533a:	689a      	ldr	r2, [r3, #8]
 800533c:	4620      	mov	r0, r4
 800533e:	f7fd fc41 	bl	8002bc4 <d_print_comp>
 8005342:	2202      	movs	r2, #2
 8005344:	496a      	ldr	r1, [pc, #424]	; (80054f0 <d_print_comp+0x292c>)
 8005346:	4620      	mov	r0, r4
 8005348:	f7fb f818 	bl	800037c <d_append_buffer>
 800534c:	68eb      	ldr	r3, [r5, #12]
 800534e:	4631      	mov	r1, r6
 8005350:	68da      	ldr	r2, [r3, #12]
 8005352:	4620      	mov	r0, r4
 8005354:	f7fd fc36 	bl	8002bc4 <d_print_comp>
 8005358:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800535c:	2fff      	cmp	r7, #255	; 0xff
 800535e:	d111      	bne.n	8005384 <d_print_comp+0x27c0>
 8005360:	2600      	movs	r6, #0
 8005362:	4639      	mov	r1, r7
 8005364:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005368:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800536c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005370:	4620      	mov	r0, r4
 8005372:	4798      	blx	r3
 8005374:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005378:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800537c:	3301      	adds	r3, #1
 800537e:	4637      	mov	r7, r6
 8005380:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005384:	1c7a      	adds	r2, r7, #1
 8005386:	2329      	movs	r3, #41	; 0x29
 8005388:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800538c:	55e3      	strb	r3, [r4, r7]
 800538e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005392:	686a      	ldr	r2, [r5, #4]
 8005394:	9905      	ldr	r1, [sp, #20]
 8005396:	f7fd bd08 	b.w	8002daa <d_print_comp+0x1e6>
 800539a:	9905      	ldr	r1, [sp, #20]
 800539c:	686a      	ldr	r2, [r5, #4]
 800539e:	f7fd bd04 	b.w	8002daa <d_print_comp+0x1e6>
 80053a2:	4642      	mov	r2, r8
 80053a4:	4631      	mov	r1, r6
 80053a6:	4620      	mov	r0, r4
 80053a8:	f7fd fc0c 	bl	8002bc4 <d_print_comp>
 80053ac:	9905      	ldr	r1, [sp, #20]
 80053ae:	686a      	ldr	r2, [r5, #4]
 80053b0:	f7fd bcfb 	b.w	8002daa <d_print_comp+0x1e6>
 80053b4:	a918      	add	r1, sp, #96	; 0x60
 80053b6:	4620      	mov	r0, r4
 80053b8:	f841 3d40 	str.w	r3, [r1, #-64]!
 80053bc:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80053c0:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 80053c4:	4641      	mov	r1, r8
 80053c6:	960a      	str	r6, [sp, #40]	; 0x28
 80053c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80053ca:	9509      	str	r5, [sp, #36]	; 0x24
 80053cc:	f7fd fbfa 	bl	8002bc4 <d_print_comp>
 80053d0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80053d2:	9b08      	ldr	r3, [sp, #32]
 80053d4:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80053d8:	b9ee      	cbnz	r6, 8005416 <d_print_comp+0x2852>
 80053da:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80053de:	2fff      	cmp	r7, #255	; 0xff
 80053e0:	d110      	bne.n	8005404 <d_print_comp+0x2840>
 80053e2:	4639      	mov	r1, r7
 80053e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80053e8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80053ec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80053f0:	4620      	mov	r0, r4
 80053f2:	4798      	blx	r3
 80053f4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80053f8:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80053fc:	3301      	adds	r3, #1
 80053fe:	4637      	mov	r7, r6
 8005400:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005404:	2320      	movs	r3, #32
 8005406:	1c7a      	adds	r2, r7, #1
 8005408:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800540c:	55e3      	strb	r3, [r4, r7]
 800540e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005412:	f7fe ba0c 	b.w	800382e <d_print_comp+0xc6a>
 8005416:	9905      	ldr	r1, [sp, #20]
 8005418:	686a      	ldr	r2, [r5, #4]
 800541a:	f7fd bcc6 	b.w	8002daa <d_print_comp+0x1e6>
 800541e:	4935      	ldr	r1, [pc, #212]	; (80054f4 <d_print_comp+0x2930>)
 8005420:	68b8      	ldr	r0, [r7, #8]
 8005422:	f009 f885 	bl	800e530 <strncmp>
 8005426:	2800      	cmp	r0, #0
 8005428:	f47e abc6 	bne.w	8003bb8 <d_print_comp+0xff4>
 800542c:	4631      	mov	r1, r6
 800542e:	68ea      	ldr	r2, [r5, #12]
 8005430:	4620      	mov	r0, r4
 8005432:	f7fd fbc7 	bl	8002bc4 <d_print_comp>
 8005436:	2202      	movs	r2, #2
 8005438:	492f      	ldr	r1, [pc, #188]	; (80054f8 <d_print_comp+0x2934>)
 800543a:	4620      	mov	r0, r4
 800543c:	f7fa ff9e 	bl	800037c <d_append_buffer>
 8005440:	f7fe bc09 	b.w	8003c56 <d_print_comp+0x1092>
 8005444:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005448:	2fff      	cmp	r7, #255	; 0xff
 800544a:	d111      	bne.n	8005470 <d_print_comp+0x28ac>
 800544c:	2600      	movs	r6, #0
 800544e:	4639      	mov	r1, r7
 8005450:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005454:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005458:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800545c:	4620      	mov	r0, r4
 800545e:	4798      	blx	r3
 8005460:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005464:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005468:	3301      	adds	r3, #1
 800546a:	4637      	mov	r7, r6
 800546c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005470:	2320      	movs	r3, #32
 8005472:	1c7a      	adds	r2, r7, #1
 8005474:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005478:	55e3      	strb	r3, [r4, r7]
 800547a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800547e:	e564      	b.n	8004f4a <d_print_comp+0x2386>
 8005480:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005484:	2fff      	cmp	r7, #255	; 0xff
 8005486:	d112      	bne.n	80054ae <d_print_comp+0x28ea>
 8005488:	f04f 0800 	mov.w	r8, #0
 800548c:	4639      	mov	r1, r7
 800548e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005492:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005496:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800549a:	4620      	mov	r0, r4
 800549c:	4798      	blx	r3
 800549e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80054a2:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80054a6:	3301      	adds	r3, #1
 80054a8:	4647      	mov	r7, r8
 80054aa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80054ae:	2320      	movs	r3, #32
 80054b0:	1c7a      	adds	r2, r7, #1
 80054b2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80054b6:	55e3      	strb	r3, [r4, r7]
 80054b8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80054bc:	e51c      	b.n	8004ef8 <d_print_comp+0x2334>
 80054be:	4640      	mov	r0, r8
 80054c0:	490e      	ldr	r1, [pc, #56]	; (80054fc <d_print_comp+0x2938>)
 80054c2:	f001 fc65 	bl	8006d90 <strcmp>
 80054c6:	2800      	cmp	r0, #0
 80054c8:	f040 81fb 	bne.w	80058c2 <d_print_comp+0x2cfe>
 80054cc:	68eb      	ldr	r3, [r5, #12]
 80054ce:	4631      	mov	r1, r6
 80054d0:	68da      	ldr	r2, [r3, #12]
 80054d2:	4620      	mov	r0, r4
 80054d4:	f001 f87e 	bl	80065d4 <d_print_subexpr>
 80054d8:	f7fd bc60 	b.w	8002d9c <d_print_comp+0x1d8>
 80054dc:	9905      	ldr	r1, [sp, #20]
 80054de:	686a      	ldr	r2, [r5, #4]
 80054e0:	f7fd bc63 	b.w	8002daa <d_print_comp+0x1e6>
 80054e4:	9905      	ldr	r1, [sp, #20]
 80054e6:	686a      	ldr	r2, [r5, #4]
 80054e8:	f7fd bc5f 	b.w	8002daa <d_print_comp+0x1e6>
 80054ec:	0801ef98 	.word	0x0801ef98
 80054f0:	0801ef4c 	.word	0x0801ef4c
 80054f4:	0801edb0 	.word	0x0801edb0
 80054f8:	0801edb8 	.word	0x0801edb8
 80054fc:	0801ed50 	.word	0x0801ed50
 8005500:	689b      	ldr	r3, [r3, #8]
 8005502:	689a      	ldr	r2, [r3, #8]
 8005504:	2a01      	cmp	r2, #1
 8005506:	f47d ac4e 	bne.w	8002da6 <d_print_comp+0x1e2>
 800550a:	685b      	ldr	r3, [r3, #4]
 800550c:	781b      	ldrb	r3, [r3, #0]
 800550e:	2b3e      	cmp	r3, #62	; 0x3e
 8005510:	f47d ac49 	bne.w	8002da6 <d_print_comp+0x1e2>
 8005514:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005518:	2fff      	cmp	r7, #255	; 0xff
 800551a:	d111      	bne.n	8005540 <d_print_comp+0x297c>
 800551c:	2600      	movs	r6, #0
 800551e:	4639      	mov	r1, r7
 8005520:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005524:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005528:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800552c:	4620      	mov	r0, r4
 800552e:	4798      	blx	r3
 8005530:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005534:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005538:	3301      	adds	r3, #1
 800553a:	4637      	mov	r7, r6
 800553c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005540:	1c7a      	adds	r2, r7, #1
 8005542:	2329      	movs	r3, #41	; 0x29
 8005544:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005548:	55e3      	strb	r3, [r4, r7]
 800554a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800554e:	686a      	ldr	r2, [r5, #4]
 8005550:	9905      	ldr	r1, [sp, #20]
 8005552:	f7fd bc2a 	b.w	8002daa <d_print_comp+0x1e6>
 8005556:	2a05      	cmp	r2, #5
 8005558:	f200 80a9 	bhi.w	80056ae <d_print_comp+0x2aea>
 800555c:	3b57      	subs	r3, #87	; 0x57
 800555e:	f7ff ba1d 	b.w	800499c <d_print_comp+0x1dd8>
 8005562:	4692      	mov	sl, r2
 8005564:	461a      	mov	r2, r3
 8005566:	e001      	b.n	800556c <d_print_comp+0x29a8>
 8005568:	6852      	ldr	r2, [r2, #4]
 800556a:	b342      	cbz	r2, 80055be <d_print_comp+0x29fa>
 800556c:	6811      	ldr	r1, [r2, #0]
 800556e:	4589      	cmp	r9, r1
 8005570:	d003      	beq.n	800557a <d_print_comp+0x29b6>
 8005572:	428d      	cmp	r5, r1
 8005574:	d1f8      	bne.n	8005568 <d_print_comp+0x29a4>
 8005576:	429a      	cmp	r2, r3
 8005578:	d0f6      	beq.n	8005568 <d_print_comp+0x29a4>
 800557a:	f109 0108 	add.w	r1, r9, #8
 800557e:	4620      	mov	r0, r4
 8005580:	f7fb f92a 	bl	80007d8 <d_lookup_template_argument.isra.10>
 8005584:	4681      	mov	r9, r0
 8005586:	b198      	cbz	r0, 80055b0 <d_print_comp+0x29ec>
 8005588:	f899 3000 	ldrb.w	r3, [r9]
 800558c:	2b2f      	cmp	r3, #47	; 0x2f
 800558e:	f47e acb6 	bne.w	8003efe <d_print_comp+0x133a>
 8005592:	f8d4 1120 	ldr.w	r1, [r4, #288]	; 0x120
 8005596:	2900      	cmp	r1, #0
 8005598:	f6fe acb6 	blt.w	8003f08 <d_print_comp+0x1344>
 800559c:	4648      	mov	r0, r9
 800559e:	f7fb f905 	bl	80007ac <d_index_template_argument.part.9>
 80055a2:	4681      	mov	r9, r0
 80055a4:	2800      	cmp	r0, #0
 80055a6:	f47e acaa 	bne.w	8003efe <d_print_comp+0x133a>
 80055aa:	b10f      	cbz	r7, 80055b0 <d_print_comp+0x29ec>
 80055ac:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 80055b0:	2301      	movs	r3, #1
 80055b2:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80055b6:	686a      	ldr	r2, [r5, #4]
 80055b8:	9905      	ldr	r1, [sp, #20]
 80055ba:	f7fd bbf6 	b.w	8002daa <d_print_comp+0x1e6>
 80055be:	f8da 3004 	ldr.w	r3, [sl, #4]
 80055c2:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 80055c6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80055ca:	f109 0108 	add.w	r1, r9, #8
 80055ce:	4620      	mov	r0, r4
 80055d0:	f7fb f902 	bl	80007d8 <d_lookup_template_argument.isra.10>
 80055d4:	2701      	movs	r7, #1
 80055d6:	4681      	mov	r9, r0
 80055d8:	2800      	cmp	r0, #0
 80055da:	d1d5      	bne.n	8005588 <d_print_comp+0x29c4>
 80055dc:	e7e6      	b.n	80055ac <d_print_comp+0x29e8>
 80055de:	ab18      	add	r3, sp, #96	; 0x60
 80055e0:	9a01      	ldr	r2, [sp, #4]
 80055e2:	f843 2d48 	str.w	r2, [r3, #-72]!
 80055e6:	f8cd 801c 	str.w	r8, [sp, #28]
 80055ea:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80055ee:	e58e      	b.n	800510e <d_print_comp+0x254a>
 80055f0:	68eb      	ldr	r3, [r5, #12]
 80055f2:	f893 9000 	ldrb.w	r9, [r3]
 80055f6:	f1b9 0f00 	cmp.w	r9, #0
 80055fa:	f47d ae3f 	bne.w	800327c <d_print_comp+0x6b8>
 80055fe:	283d      	cmp	r0, #61	; 0x3d
 8005600:	f000 80e6 	beq.w	80057d0 <d_print_comp+0x2c0c>
 8005604:	4631      	mov	r1, r6
 8005606:	68ea      	ldr	r2, [r5, #12]
 8005608:	4620      	mov	r0, r4
 800560a:	f1a8 0802 	sub.w	r8, r8, #2
 800560e:	f7fd fad9 	bl	8002bc4 <d_print_comp>
 8005612:	f1b8 0f04 	cmp.w	r8, #4
 8005616:	f200 80d7 	bhi.w	80057c8 <d_print_comp+0x2c04>
 800561a:	e8df f008 	tbb	[pc, r8]
 800561e:	93b4      	.short	0x93b4
 8005620:	818a      	.short	0x818a
 8005622:	35          	.byte	0x35
 8005623:	00          	.byte	0x00
 8005624:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8005628:	4631      	mov	r1, r6
 800562a:	4620      	mov	r0, r4
 800562c:	f000 ffd2 	bl	80065d4 <d_print_subexpr>
 8005630:	464a      	mov	r2, r9
 8005632:	4631      	mov	r1, r6
 8005634:	4620      	mov	r0, r4
 8005636:	f000 ff8d 	bl	8006554 <d_print_expr_op>
 800563a:	9905      	ldr	r1, [sp, #20]
 800563c:	686a      	ldr	r2, [r5, #4]
 800563e:	f7fd bbb4 	b.w	8002daa <d_print_comp+0x1e6>
 8005642:	4641      	mov	r1, r8
 8005644:	4620      	mov	r0, r4
 8005646:	f7fb f8d7 	bl	80007f8 <d_find_pack>
 800564a:	b1a8      	cbz	r0, 8005678 <d_print_comp+0x2ab4>
 800564c:	7803      	ldrb	r3, [r0, #0]
 800564e:	2b2f      	cmp	r3, #47	; 0x2f
 8005650:	d112      	bne.n	8005678 <d_print_comp+0x2ab4>
 8005652:	6883      	ldr	r3, [r0, #8]
 8005654:	b183      	cbz	r3, 8005678 <d_print_comp+0x2ab4>
 8005656:	68c0      	ldr	r0, [r0, #12]
 8005658:	3701      	adds	r7, #1
 800565a:	e7f6      	b.n	800564a <d_print_comp+0x2a86>
 800565c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005660:	781a      	ldrb	r2, [r3, #0]
 8005662:	2a01      	cmp	r2, #1
 8005664:	f47f aad2 	bne.w	8004c0c <d_print_comp+0x2048>
 8005668:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800566c:	7812      	ldrb	r2, [r2, #0]
 800566e:	2a29      	cmp	r2, #41	; 0x29
 8005670:	bf08      	it	eq
 8005672:	4698      	moveq	r8, r3
 8005674:	f7ff baca 	b.w	8004c0c <d_print_comp+0x2048>
 8005678:	4639      	mov	r1, r7
 800567a:	4620      	mov	r0, r4
 800567c:	f7fb f970 	bl	8000960 <d_append_num>
 8005680:	9905      	ldr	r1, [sp, #20]
 8005682:	686a      	ldr	r2, [r5, #4]
 8005684:	f7fd bb91 	b.w	8002daa <d_print_comp+0x1e6>
 8005688:	2203      	movs	r2, #3
 800568a:	4994      	ldr	r1, [pc, #592]	; (80058dc <d_print_comp+0x2d18>)
 800568c:	4620      	mov	r0, r4
 800568e:	f7fa fe75 	bl	800037c <d_append_buffer>
 8005692:	9905      	ldr	r1, [sp, #20]
 8005694:	686a      	ldr	r2, [r5, #4]
 8005696:	f7fd bb88 	b.w	8002daa <d_print_comp+0x1e6>
 800569a:	2300      	movs	r3, #0
 800569c:	441e      	add	r6, r3
 800569e:	e5fa      	b.n	8005296 <d_print_comp+0x26d2>
 80056a0:	464a      	mov	r2, r9
 80056a2:	4631      	mov	r1, r6
 80056a4:	4620      	mov	r0, r4
 80056a6:	f000 ff55 	bl	8006554 <d_print_expr_op>
 80056aa:	f7fd bea9 	b.w	8003400 <d_print_comp+0x83c>
 80056ae:	2b5f      	cmp	r3, #95	; 0x5f
 80056b0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80056b4:	f47f a964 	bne.w	8004980 <d_print_comp+0x1dbc>
 80056b8:	28ff      	cmp	r0, #255	; 0xff
 80056ba:	f63f a961 	bhi.w	8004980 <d_print_comp+0x1dbc>
 80056be:	29ff      	cmp	r1, #255	; 0xff
 80056c0:	fa5f f980 	uxtb.w	r9, r0
 80056c4:	d10f      	bne.n	80056e6 <d_print_comp+0x2b22>
 80056c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80056ca:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80056ce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80056d2:	4620      	mov	r0, r4
 80056d4:	4798      	blx	r3
 80056d6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80056da:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80056de:	3301      	adds	r3, #1
 80056e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80056e4:	2100      	movs	r1, #0
 80056e6:	1c4b      	adds	r3, r1, #1
 80056e8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80056ec:	4657      	mov	r7, sl
 80056ee:	f804 9001 	strb.w	r9, [r4, r1]
 80056f2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80056f6:	f7ff b935 	b.w	8004964 <d_print_comp+0x1da0>
 80056fa:	f8da a008 	ldr.w	sl, [sl, #8]
 80056fe:	f1ba 0f00 	cmp.w	sl, #0
 8005702:	f43e ad01 	beq.w	8004108 <d_print_comp+0x1544>
 8005706:	e4d1      	b.n	80050ac <d_print_comp+0x24e8>
 8005708:	2205      	movs	r2, #5
 800570a:	4975      	ldr	r1, [pc, #468]	; (80058e0 <d_print_comp+0x2d1c>)
 800570c:	4620      	mov	r0, r4
 800570e:	f7fa fe35 	bl	800037c <d_append_buffer>
 8005712:	9905      	ldr	r1, [sp, #20]
 8005714:	686a      	ldr	r2, [r5, #4]
 8005716:	f7fd bb48 	b.w	8002daa <d_print_comp+0x1e6>
 800571a:	f8cc 0000 	str.w	r0, [ip]
 800571e:	e72c      	b.n	800557a <d_print_comp+0x29b6>
 8005720:	2202      	movs	r2, #2
 8005722:	4970      	ldr	r1, [pc, #448]	; (80058e4 <d_print_comp+0x2d20>)
 8005724:	4620      	mov	r0, r4
 8005726:	f7fa fe29 	bl	800037c <d_append_buffer>
 800572a:	9905      	ldr	r1, [sp, #20]
 800572c:	686a      	ldr	r2, [r5, #4]
 800572e:	f7fd bb3c 	b.w	8002daa <d_print_comp+0x1e6>
 8005732:	2202      	movs	r2, #2
 8005734:	496c      	ldr	r1, [pc, #432]	; (80058e8 <d_print_comp+0x2d24>)
 8005736:	4620      	mov	r0, r4
 8005738:	f7fa fe20 	bl	800037c <d_append_buffer>
 800573c:	9905      	ldr	r1, [sp, #20]
 800573e:	686a      	ldr	r2, [r5, #4]
 8005740:	f7fd bb33 	b.w	8002daa <d_print_comp+0x1e6>
 8005744:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005748:	2fff      	cmp	r7, #255	; 0xff
 800574a:	d111      	bne.n	8005770 <d_print_comp+0x2bac>
 800574c:	2600      	movs	r6, #0
 800574e:	4639      	mov	r1, r7
 8005750:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005754:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005758:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800575c:	4620      	mov	r0, r4
 800575e:	4798      	blx	r3
 8005760:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005764:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005768:	3301      	adds	r3, #1
 800576a:	4637      	mov	r7, r6
 800576c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005770:	1c7a      	adds	r2, r7, #1
 8005772:	236c      	movs	r3, #108	; 0x6c
 8005774:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005778:	55e3      	strb	r3, [r4, r7]
 800577a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800577e:	686a      	ldr	r2, [r5, #4]
 8005780:	9905      	ldr	r1, [sp, #20]
 8005782:	f7fd bb12 	b.w	8002daa <d_print_comp+0x1e6>
 8005786:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800578a:	2fff      	cmp	r7, #255	; 0xff
 800578c:	d111      	bne.n	80057b2 <d_print_comp+0x2bee>
 800578e:	2600      	movs	r6, #0
 8005790:	4639      	mov	r1, r7
 8005792:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005796:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800579a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800579e:	4620      	mov	r0, r4
 80057a0:	4798      	blx	r3
 80057a2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80057a6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80057aa:	3301      	adds	r3, #1
 80057ac:	4637      	mov	r7, r6
 80057ae:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80057b2:	1c7a      	adds	r2, r7, #1
 80057b4:	2375      	movs	r3, #117	; 0x75
 80057b6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80057ba:	55e3      	strb	r3, [r4, r7]
 80057bc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80057c0:	686a      	ldr	r2, [r5, #4]
 80057c2:	9905      	ldr	r1, [sp, #20]
 80057c4:	f7fd baf1 	b.w	8002daa <d_print_comp+0x1e6>
 80057c8:	9905      	ldr	r1, [sp, #20]
 80057ca:	686a      	ldr	r2, [r5, #4]
 80057cc:	f7fd baed 	b.w	8002daa <d_print_comp+0x1e6>
 80057d0:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80057d4:	2fff      	cmp	r7, #255	; 0xff
 80057d6:	d110      	bne.n	80057fa <d_print_comp+0x2c36>
 80057d8:	4639      	mov	r1, r7
 80057da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80057de:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80057e2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80057e6:	4620      	mov	r0, r4
 80057e8:	4798      	blx	r3
 80057ea:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80057ee:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80057f2:	3301      	adds	r3, #1
 80057f4:	464f      	mov	r7, r9
 80057f6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80057fa:	232d      	movs	r3, #45	; 0x2d
 80057fc:	1c7a      	adds	r2, r7, #1
 80057fe:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005802:	55e3      	strb	r3, [r4, r7]
 8005804:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005808:	e6fc      	b.n	8005604 <d_print_comp+0x2a40>
 800580a:	689a      	ldr	r2, [r3, #8]
 800580c:	6891      	ldr	r1, [r2, #8]
 800580e:	2901      	cmp	r1, #1
 8005810:	f47d aa69 	bne.w	8002ce6 <d_print_comp+0x122>
 8005814:	6852      	ldr	r2, [r2, #4]
 8005816:	7812      	ldrb	r2, [r2, #0]
 8005818:	2a3e      	cmp	r2, #62	; 0x3e
 800581a:	f47d aa64 	bne.w	8002ce6 <d_print_comp+0x122>
 800581e:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005822:	2fff      	cmp	r7, #255	; 0xff
 8005824:	d110      	bne.n	8005848 <d_print_comp+0x2c84>
 8005826:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 800582a:	4639      	mov	r1, r7
 800582c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005830:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005834:	4620      	mov	r0, r4
 8005836:	4798      	blx	r3
 8005838:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800583c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005840:	3301      	adds	r3, #1
 8005842:	4647      	mov	r7, r8
 8005844:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005848:	2328      	movs	r3, #40	; 0x28
 800584a:	1c7a      	adds	r2, r7, #1
 800584c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005850:	55e3      	strb	r3, [r4, r7]
 8005852:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005856:	68ab      	ldr	r3, [r5, #8]
 8005858:	f7fd ba45 	b.w	8002ce6 <d_print_comp+0x122>
 800585c:	465a      	mov	r2, fp
 800585e:	4631      	mov	r1, r6
 8005860:	4620      	mov	r0, r4
 8005862:	f000 feb7 	bl	80065d4 <d_print_subexpr>
 8005866:	463a      	mov	r2, r7
 8005868:	4631      	mov	r1, r6
 800586a:	4620      	mov	r0, r4
 800586c:	f000 fe72 	bl	8006554 <d_print_expr_op>
 8005870:	4652      	mov	r2, sl
 8005872:	4631      	mov	r1, r6
 8005874:	4620      	mov	r0, r4
 8005876:	f000 fead 	bl	80065d4 <d_print_subexpr>
 800587a:	2203      	movs	r2, #3
 800587c:	491b      	ldr	r1, [pc, #108]	; (80058ec <d_print_comp+0x2d28>)
 800587e:	4620      	mov	r0, r4
 8005880:	f7fa fd7c 	bl	800037c <d_append_buffer>
 8005884:	464a      	mov	r2, r9
 8005886:	4631      	mov	r1, r6
 8005888:	4620      	mov	r0, r4
 800588a:	f000 fea3 	bl	80065d4 <d_print_subexpr>
 800588e:	9905      	ldr	r1, [sp, #20]
 8005890:	686a      	ldr	r2, [r5, #4]
 8005892:	f7fd ba8a 	b.w	8002daa <d_print_comp+0x1e6>
 8005896:	9905      	ldr	r1, [sp, #20]
 8005898:	686a      	ldr	r2, [r5, #4]
 800589a:	f7fd ba86 	b.w	8002daa <d_print_comp+0x1e6>
 800589e:	9905      	ldr	r1, [sp, #20]
 80058a0:	686a      	ldr	r2, [r5, #4]
 80058a2:	f7fd ba82 	b.w	8002daa <d_print_comp+0x1e6>
 80058a6:	68d3      	ldr	r3, [r2, #12]
 80058a8:	781b      	ldrb	r3, [r3, #0]
 80058aa:	2b29      	cmp	r3, #41	; 0x29
 80058ac:	bf1c      	itt	ne
 80058ae:	2301      	movne	r3, #1
 80058b0:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 80058b4:	6892      	ldr	r2, [r2, #8]
 80058b6:	4631      	mov	r1, r6
 80058b8:	4620      	mov	r0, r4
 80058ba:	f000 fe8b 	bl	80065d4 <d_print_subexpr>
 80058be:	f7fd ba22 	b.w	8002d06 <d_print_comp+0x142>
 80058c2:	463a      	mov	r2, r7
 80058c4:	4631      	mov	r1, r6
 80058c6:	4620      	mov	r0, r4
 80058c8:	f000 fe44 	bl	8006554 <d_print_expr_op>
 80058cc:	e5fe      	b.n	80054cc <d_print_comp+0x2908>
 80058ce:	2301      	movs	r3, #1
 80058d0:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80058d4:	686a      	ldr	r2, [r5, #4]
 80058d6:	f7fd ba68 	b.w	8002daa <d_print_comp+0x1e6>
 80058da:	bf00      	nop
 80058dc:	0801ef68 	.word	0x0801ef68
 80058e0:	0801ef6c 	.word	0x0801ef6c
 80058e4:	0801ef64 	.word	0x0801ef64
 80058e8:	0801ef60 	.word	0x0801ef60
 80058ec:	0801ef54 	.word	0x0801ef54

080058f0 <d_print_mod>:
 80058f0:	7813      	ldrb	r3, [r2, #0]
 80058f2:	3b03      	subs	r3, #3
 80058f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058f8:	4615      	mov	r5, r2
 80058fa:	4604      	mov	r4, r0
 80058fc:	460e      	mov	r6, r1
 80058fe:	2b4c      	cmp	r3, #76	; 0x4c
 8005900:	f200 82c8 	bhi.w	8005e94 <d_print_mod+0x5a4>
 8005904:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005908:	02c60075 	.word	0x02c60075
 800590c:	02c602c6 	.word	0x02c602c6
 8005910:	02c602c6 	.word	0x02c602c6
 8005914:	02c602c6 	.word	0x02c602c6
 8005918:	02c602c6 	.word	0x02c602c6
 800591c:	02c602c6 	.word	0x02c602c6
 8005920:	02c602c6 	.word	0x02c602c6
 8005924:	02c602c6 	.word	0x02c602c6
 8005928:	02c602c6 	.word	0x02c602c6
 800592c:	02c602c6 	.word	0x02c602c6
 8005930:	02c602c6 	.word	0x02c602c6
 8005934:	00a1007a 	.word	0x00a1007a
 8005938:	007a00c8 	.word	0x007a00c8
 800593c:	00c800a1 	.word	0x00c800a1
 8005940:	010a00ee 	.word	0x010a00ee
 8005944:	01480126 	.word	0x01480126
 8005948:	02790166 	.word	0x02790166
 800594c:	029f0252 	.word	0x029f0252
 8005950:	02c602c6 	.word	0x02c602c6
 8005954:	02c602c6 	.word	0x02c602c6
 8005958:	02c60184 	.word	0x02c60184
 800595c:	02c601cc 	.word	0x02c601cc
 8005960:	02c602c6 	.word	0x02c602c6
 8005964:	02c602c6 	.word	0x02c602c6
 8005968:	02c602c6 	.word	0x02c602c6
 800596c:	02c602c6 	.word	0x02c602c6
 8005970:	02c602c6 	.word	0x02c602c6
 8005974:	02c602c6 	.word	0x02c602c6
 8005978:	02c602c6 	.word	0x02c602c6
 800597c:	02c602c6 	.word	0x02c602c6
 8005980:	02c602c6 	.word	0x02c602c6
 8005984:	02c602c6 	.word	0x02c602c6
 8005988:	02c602c6 	.word	0x02c602c6
 800598c:	02c602c6 	.word	0x02c602c6
 8005990:	02c602c6 	.word	0x02c602c6
 8005994:	02c602c6 	.word	0x02c602c6
 8005998:	01f402c6 	.word	0x01f402c6
 800599c:	022a02c6 	.word	0x022a02c6
 80059a0:	004d      	.short	0x004d
 80059a2:	4fd7      	ldr	r7, [pc, #860]	; (8005d00 <d_print_mod+0x410>)
 80059a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80059a8:	f107 0806 	add.w	r8, r7, #6
 80059ac:	f04f 0900 	mov.w	r9, #0
 80059b0:	e016      	b.n	80059e0 <d_print_mod+0xf0>
 80059b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80059b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80059ba:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80059be:	4798      	blx	r3
 80059c0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80059c4:	3301      	adds	r3, #1
 80059c6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80059ca:	2200      	movs	r2, #0
 80059cc:	2301      	movs	r3, #1
 80059ce:	4547      	cmp	r7, r8
 80059d0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80059d4:	f804 a002 	strb.w	sl, [r4, r2]
 80059d8:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80059dc:	f000 825f 	beq.w	8005e9e <d_print_mod+0x5ae>
 80059e0:	2bff      	cmp	r3, #255	; 0xff
 80059e2:	4619      	mov	r1, r3
 80059e4:	4620      	mov	r0, r4
 80059e6:	f817 ab01 	ldrb.w	sl, [r7], #1
 80059ea:	d0e2      	beq.n	80059b2 <d_print_mod+0xc2>
 80059ec:	461a      	mov	r2, r3
 80059ee:	3301      	adds	r3, #1
 80059f0:	e7ed      	b.n	80059ce <d_print_mod+0xde>
 80059f2:	68aa      	ldr	r2, [r5, #8]
 80059f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059f8:	f7fd b8e4 	b.w	8002bc4 <d_print_comp>
 80059fc:	4dc1      	ldr	r5, [pc, #772]	; (8005d04 <d_print_mod+0x414>)
 80059fe:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005a02:	f105 0609 	add.w	r6, r5, #9
 8005a06:	2700      	movs	r7, #0
 8005a08:	e016      	b.n	8005a38 <d_print_mod+0x148>
 8005a0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005a0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005a12:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a16:	4798      	blx	r3
 8005a18:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005a1c:	3301      	adds	r3, #1
 8005a1e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005a22:	2200      	movs	r2, #0
 8005a24:	2301      	movs	r3, #1
 8005a26:	42ae      	cmp	r6, r5
 8005a28:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005a2c:	f804 8002 	strb.w	r8, [r4, r2]
 8005a30:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005a34:	f000 80ea 	beq.w	8005c0c <d_print_mod+0x31c>
 8005a38:	2bff      	cmp	r3, #255	; 0xff
 8005a3a:	4619      	mov	r1, r3
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005a42:	d0e2      	beq.n	8005a0a <d_print_mod+0x11a>
 8005a44:	461a      	mov	r2, r3
 8005a46:	3301      	adds	r3, #1
 8005a48:	e7ed      	b.n	8005a26 <d_print_mod+0x136>
 8005a4a:	4daf      	ldr	r5, [pc, #700]	; (8005d08 <d_print_mod+0x418>)
 8005a4c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005a50:	f105 0609 	add.w	r6, r5, #9
 8005a54:	2700      	movs	r7, #0
 8005a56:	e016      	b.n	8005a86 <d_print_mod+0x196>
 8005a58:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005a5c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005a60:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a64:	4798      	blx	r3
 8005a66:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005a6a:	3301      	adds	r3, #1
 8005a6c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005a70:	2200      	movs	r2, #0
 8005a72:	2301      	movs	r3, #1
 8005a74:	42ae      	cmp	r6, r5
 8005a76:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005a7a:	f804 8002 	strb.w	r8, [r4, r2]
 8005a7e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005a82:	f000 80c3 	beq.w	8005c0c <d_print_mod+0x31c>
 8005a86:	2bff      	cmp	r3, #255	; 0xff
 8005a88:	4619      	mov	r1, r3
 8005a8a:	4620      	mov	r0, r4
 8005a8c:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005a90:	d0e2      	beq.n	8005a58 <d_print_mod+0x168>
 8005a92:	461a      	mov	r2, r3
 8005a94:	3301      	adds	r3, #1
 8005a96:	e7ed      	b.n	8005a74 <d_print_mod+0x184>
 8005a98:	4d9c      	ldr	r5, [pc, #624]	; (8005d0c <d_print_mod+0x41c>)
 8005a9a:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005a9e:	1dae      	adds	r6, r5, #6
 8005aa0:	2700      	movs	r7, #0
 8005aa2:	e016      	b.n	8005ad2 <d_print_mod+0x1e2>
 8005aa4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005aa8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005aac:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005ab0:	4798      	blx	r3
 8005ab2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005ab6:	3301      	adds	r3, #1
 8005ab8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005abc:	2200      	movs	r2, #0
 8005abe:	2301      	movs	r3, #1
 8005ac0:	42b5      	cmp	r5, r6
 8005ac2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005ac6:	f804 8002 	strb.w	r8, [r4, r2]
 8005aca:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005ace:	f000 809d 	beq.w	8005c0c <d_print_mod+0x31c>
 8005ad2:	2bff      	cmp	r3, #255	; 0xff
 8005ad4:	4619      	mov	r1, r3
 8005ad6:	4620      	mov	r0, r4
 8005ad8:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005adc:	d0e2      	beq.n	8005aa4 <d_print_mod+0x1b4>
 8005ade:	461a      	mov	r2, r3
 8005ae0:	3301      	adds	r3, #1
 8005ae2:	e7ed      	b.n	8005ac0 <d_print_mod+0x1d0>
 8005ae4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005ae8:	29ff      	cmp	r1, #255	; 0xff
 8005aea:	d10f      	bne.n	8005b0c <d_print_mod+0x21c>
 8005aec:	2500      	movs	r5, #0
 8005aee:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005af2:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005af6:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005afa:	4798      	blx	r3
 8005afc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b00:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005b04:	3301      	adds	r3, #1
 8005b06:	4629      	mov	r1, r5
 8005b08:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b0c:	2220      	movs	r2, #32
 8005b0e:	1c4b      	adds	r3, r1, #1
 8005b10:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005b14:	5462      	strb	r2, [r4, r1]
 8005b16:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005b1a:	e05d      	b.n	8005bd8 <d_print_mod+0x2e8>
 8005b1c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b20:	29ff      	cmp	r1, #255	; 0xff
 8005b22:	d10f      	bne.n	8005b44 <d_print_mod+0x254>
 8005b24:	2500      	movs	r5, #0
 8005b26:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005b2a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005b2e:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005b32:	4798      	blx	r3
 8005b34:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b38:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005b3c:	3301      	adds	r3, #1
 8005b3e:	4629      	mov	r1, r5
 8005b40:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b44:	2220      	movs	r2, #32
 8005b46:	1c4b      	adds	r3, r1, #1
 8005b48:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005b4c:	5462      	strb	r2, [r4, r1]
 8005b4e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005b52:	e154      	b.n	8005dfe <d_print_mod+0x50e>
 8005b54:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b58:	29ff      	cmp	r1, #255	; 0xff
 8005b5a:	d10f      	bne.n	8005b7c <d_print_mod+0x28c>
 8005b5c:	2700      	movs	r7, #0
 8005b5e:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005b62:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005b66:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005b6a:	4798      	blx	r3
 8005b6c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b70:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005b74:	3301      	adds	r3, #1
 8005b76:	4639      	mov	r1, r7
 8005b78:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b7c:	1c4a      	adds	r2, r1, #1
 8005b7e:	2320      	movs	r3, #32
 8005b80:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005b84:	5463      	strb	r3, [r4, r1]
 8005b86:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005b8a:	4631      	mov	r1, r6
 8005b8c:	68ea      	ldr	r2, [r5, #12]
 8005b8e:	4620      	mov	r0, r4
 8005b90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b94:	f7fd b816 	b.w	8002bc4 <d_print_comp>
 8005b98:	f011 0604 	ands.w	r6, r1, #4
 8005b9c:	d136      	bne.n	8005c0c <d_print_mod+0x31c>
 8005b9e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005ba2:	29ff      	cmp	r1, #255	; 0xff
 8005ba4:	d10e      	bne.n	8005bc4 <d_print_mod+0x2d4>
 8005ba6:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005baa:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005bae:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005bb2:	4798      	blx	r3
 8005bb4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005bb8:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005bbc:	3301      	adds	r3, #1
 8005bbe:	4631      	mov	r1, r6
 8005bc0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005bc4:	232a      	movs	r3, #42	; 0x2a
 8005bc6:	1c4a      	adds	r2, r1, #1
 8005bc8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005bcc:	5463      	strb	r3, [r4, r1]
 8005bce:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005bd2:	e01b      	b.n	8005c0c <d_print_mod+0x31c>
 8005bd4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005bd8:	2bff      	cmp	r3, #255	; 0xff
 8005bda:	f040 81a9 	bne.w	8005f30 <d_print_mod+0x640>
 8005bde:	2500      	movs	r5, #0
 8005be0:	4619      	mov	r1, r3
 8005be2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005be6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005bea:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005bee:	4620      	mov	r0, r4
 8005bf0:	4798      	blx	r3
 8005bf2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005bf6:	1c5a      	adds	r2, r3, #1
 8005bf8:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005bfc:	462b      	mov	r3, r5
 8005bfe:	2101      	movs	r1, #1
 8005c00:	2226      	movs	r2, #38	; 0x26
 8005c02:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005c06:	54e2      	strb	r2, [r4, r3]
 8005c08:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c10:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 8005c14:	2b28      	cmp	r3, #40	; 0x28
 8005c16:	d019      	beq.n	8005c4c <d_print_mod+0x35c>
 8005c18:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005c1c:	29ff      	cmp	r1, #255	; 0xff
 8005c1e:	f040 818b 	bne.w	8005f38 <d_print_mod+0x648>
 8005c22:	2700      	movs	r7, #0
 8005c24:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005c28:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005c2c:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005c30:	4798      	blx	r3
 8005c32:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005c36:	3301      	adds	r3, #1
 8005c38:	4639      	mov	r1, r7
 8005c3a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005c3e:	2201      	movs	r2, #1
 8005c40:	2320      	movs	r3, #32
 8005c42:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005c46:	5463      	strb	r3, [r4, r1]
 8005c48:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005c4c:	68aa      	ldr	r2, [r5, #8]
 8005c4e:	4d30      	ldr	r5, [pc, #192]	; (8005d10 <d_print_mod+0x420>)
 8005c50:	4631      	mov	r1, r6
 8005c52:	4620      	mov	r0, r4
 8005c54:	f7fc ffb6 	bl	8002bc4 <d_print_comp>
 8005c58:	1cee      	adds	r6, r5, #3
 8005c5a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005c5e:	2700      	movs	r7, #0
 8005c60:	e015      	b.n	8005c8e <d_print_mod+0x39e>
 8005c62:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005c66:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005c6a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005c6e:	4798      	blx	r3
 8005c70:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005c74:	3301      	adds	r3, #1
 8005c76:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005c7a:	2200      	movs	r2, #0
 8005c7c:	2301      	movs	r3, #1
 8005c7e:	42ae      	cmp	r6, r5
 8005c80:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005c84:	f804 8002 	strb.w	r8, [r4, r2]
 8005c88:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005c8c:	d0be      	beq.n	8005c0c <d_print_mod+0x31c>
 8005c8e:	2bff      	cmp	r3, #255	; 0xff
 8005c90:	4619      	mov	r1, r3
 8005c92:	4620      	mov	r0, r4
 8005c94:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005c98:	d0e3      	beq.n	8005c62 <d_print_mod+0x372>
 8005c9a:	461a      	mov	r2, r3
 8005c9c:	3301      	adds	r3, #1
 8005c9e:	e7ee      	b.n	8005c7e <d_print_mod+0x38e>
 8005ca0:	4f1c      	ldr	r7, [pc, #112]	; (8005d14 <d_print_mod+0x424>)
 8005ca2:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005ca6:	f107 080a 	add.w	r8, r7, #10
 8005caa:	f04f 0900 	mov.w	r9, #0
 8005cae:	e016      	b.n	8005cde <d_print_mod+0x3ee>
 8005cb0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005cb4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005cb8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005cbc:	4798      	blx	r3
 8005cbe:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005cc2:	3301      	adds	r3, #1
 8005cc4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005cc8:	2200      	movs	r2, #0
 8005cca:	2301      	movs	r3, #1
 8005ccc:	45b8      	cmp	r8, r7
 8005cce:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005cd2:	f804 a002 	strb.w	sl, [r4, r2]
 8005cd6:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005cda:	f000 811e 	beq.w	8005f1a <d_print_mod+0x62a>
 8005cde:	2bff      	cmp	r3, #255	; 0xff
 8005ce0:	4619      	mov	r1, r3
 8005ce2:	4620      	mov	r0, r4
 8005ce4:	f817 ab01 	ldrb.w	sl, [r7], #1
 8005ce8:	d0e2      	beq.n	8005cb0 <d_print_mod+0x3c0>
 8005cea:	461a      	mov	r2, r3
 8005cec:	3301      	adds	r3, #1
 8005cee:	e7ed      	b.n	8005ccc <d_print_mod+0x3dc>
 8005cf0:	4d09      	ldr	r5, [pc, #36]	; (8005d18 <d_print_mod+0x428>)
 8005cf2:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005cf6:	f105 0611 	add.w	r6, r5, #17
 8005cfa:	2700      	movs	r7, #0
 8005cfc:	e025      	b.n	8005d4a <d_print_mod+0x45a>
 8005cfe:	bf00      	nop
 8005d00:	0801f058 	.word	0x0801f058
 8005d04:	0801f017 	.word	0x0801f017
 8005d08:	0801f023 	.word	0x0801f023
 8005d0c:	0801f030 	.word	0x0801f030
 8005d10:	0801f07c 	.word	0x0801f07c
 8005d14:	0801f080 	.word	0x0801f080
 8005d18:	0801f037 	.word	0x0801f037
 8005d1c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d20:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d24:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005d28:	4798      	blx	r3
 8005d2a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005d2e:	3301      	adds	r3, #1
 8005d30:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005d34:	2200      	movs	r2, #0
 8005d36:	2301      	movs	r3, #1
 8005d38:	42ae      	cmp	r6, r5
 8005d3a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005d3e:	f804 8002 	strb.w	r8, [r4, r2]
 8005d42:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005d46:	f43f af61 	beq.w	8005c0c <d_print_mod+0x31c>
 8005d4a:	2bff      	cmp	r3, #255	; 0xff
 8005d4c:	4619      	mov	r1, r3
 8005d4e:	4620      	mov	r0, r4
 8005d50:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005d54:	d0e2      	beq.n	8005d1c <d_print_mod+0x42c>
 8005d56:	461a      	mov	r2, r3
 8005d58:	3301      	adds	r3, #1
 8005d5a:	e7ed      	b.n	8005d38 <d_print_mod+0x448>
 8005d5c:	4f77      	ldr	r7, [pc, #476]	; (8005f3c <d_print_mod+0x64c>)
 8005d5e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005d62:	f107 0809 	add.w	r8, r7, #9
 8005d66:	f04f 0900 	mov.w	r9, #0
 8005d6a:	e016      	b.n	8005d9a <d_print_mod+0x4aa>
 8005d6c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d70:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d74:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005d78:	4798      	blx	r3
 8005d7a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005d7e:	3301      	adds	r3, #1
 8005d80:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005d84:	2200      	movs	r2, #0
 8005d86:	2301      	movs	r3, #1
 8005d88:	4547      	cmp	r7, r8
 8005d8a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005d8e:	f804 a002 	strb.w	sl, [r4, r2]
 8005d92:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005d96:	f000 8082 	beq.w	8005e9e <d_print_mod+0x5ae>
 8005d9a:	2bff      	cmp	r3, #255	; 0xff
 8005d9c:	4619      	mov	r1, r3
 8005d9e:	4620      	mov	r0, r4
 8005da0:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8005da4:	d0e2      	beq.n	8005d6c <d_print_mod+0x47c>
 8005da6:	461a      	mov	r2, r3
 8005da8:	3301      	adds	r3, #1
 8005daa:	e7ed      	b.n	8005d88 <d_print_mod+0x498>
 8005dac:	4d64      	ldr	r5, [pc, #400]	; (8005f40 <d_print_mod+0x650>)
 8005dae:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005db2:	f105 0608 	add.w	r6, r5, #8
 8005db6:	2700      	movs	r7, #0
 8005db8:	e016      	b.n	8005de8 <d_print_mod+0x4f8>
 8005dba:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005dbe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005dc2:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005dc6:	4798      	blx	r3
 8005dc8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005dcc:	3301      	adds	r3, #1
 8005dce:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005dd2:	2200      	movs	r2, #0
 8005dd4:	2301      	movs	r3, #1
 8005dd6:	42ae      	cmp	r6, r5
 8005dd8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005ddc:	f804 8002 	strb.w	r8, [r4, r2]
 8005de0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005de4:	f43f af12 	beq.w	8005c0c <d_print_mod+0x31c>
 8005de8:	2bff      	cmp	r3, #255	; 0xff
 8005dea:	4619      	mov	r1, r3
 8005dec:	4620      	mov	r0, r4
 8005dee:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005df2:	d0e2      	beq.n	8005dba <d_print_mod+0x4ca>
 8005df4:	461a      	mov	r2, r3
 8005df6:	3301      	adds	r3, #1
 8005df8:	e7ed      	b.n	8005dd6 <d_print_mod+0x4e6>
 8005dfa:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005dfe:	4d51      	ldr	r5, [pc, #324]	; (8005f44 <d_print_mod+0x654>)
 8005e00:	2700      	movs	r7, #0
 8005e02:	1cae      	adds	r6, r5, #2
 8005e04:	e016      	b.n	8005e34 <d_print_mod+0x544>
 8005e06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e0e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e12:	4798      	blx	r3
 8005e14:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005e18:	3301      	adds	r3, #1
 8005e1a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005e1e:	2200      	movs	r2, #0
 8005e20:	2301      	movs	r3, #1
 8005e22:	42b5      	cmp	r5, r6
 8005e24:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005e28:	f804 8002 	strb.w	r8, [r4, r2]
 8005e2c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005e30:	f43f aeec 	beq.w	8005c0c <d_print_mod+0x31c>
 8005e34:	2bff      	cmp	r3, #255	; 0xff
 8005e36:	4619      	mov	r1, r3
 8005e38:	4620      	mov	r0, r4
 8005e3a:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005e3e:	d0e2      	beq.n	8005e06 <d_print_mod+0x516>
 8005e40:	461a      	mov	r2, r3
 8005e42:	3301      	adds	r3, #1
 8005e44:	e7ed      	b.n	8005e22 <d_print_mod+0x532>
 8005e46:	4d40      	ldr	r5, [pc, #256]	; (8005f48 <d_print_mod+0x658>)
 8005e48:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005e4c:	f105 060a 	add.w	r6, r5, #10
 8005e50:	2700      	movs	r7, #0
 8005e52:	e016      	b.n	8005e82 <d_print_mod+0x592>
 8005e54:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e58:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e5c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e60:	4798      	blx	r3
 8005e62:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005e66:	3301      	adds	r3, #1
 8005e68:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005e6c:	2200      	movs	r2, #0
 8005e6e:	2301      	movs	r3, #1
 8005e70:	42b5      	cmp	r5, r6
 8005e72:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005e76:	f804 8002 	strb.w	r8, [r4, r2]
 8005e7a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005e7e:	f43f aec5 	beq.w	8005c0c <d_print_mod+0x31c>
 8005e82:	2bff      	cmp	r3, #255	; 0xff
 8005e84:	4619      	mov	r1, r3
 8005e86:	4620      	mov	r0, r4
 8005e88:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005e8c:	d0e2      	beq.n	8005e54 <d_print_mod+0x564>
 8005e8e:	461a      	mov	r2, r3
 8005e90:	3301      	adds	r3, #1
 8005e92:	e7ed      	b.n	8005e70 <d_print_mod+0x580>
 8005e94:	462a      	mov	r2, r5
 8005e96:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e9a:	f7fc be93 	b.w	8002bc4 <d_print_comp>
 8005e9e:	68ea      	ldr	r2, [r5, #12]
 8005ea0:	2a00      	cmp	r2, #0
 8005ea2:	f43f aeb3 	beq.w	8005c0c <d_print_mod+0x31c>
 8005ea6:	2bff      	cmp	r3, #255	; 0xff
 8005ea8:	d144      	bne.n	8005f34 <d_print_mod+0x644>
 8005eaa:	2700      	movs	r7, #0
 8005eac:	4619      	mov	r1, r3
 8005eae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005eb2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005eb6:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005eba:	4620      	mov	r0, r4
 8005ebc:	4798      	blx	r3
 8005ebe:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005ec2:	68ea      	ldr	r2, [r5, #12]
 8005ec4:	1c59      	adds	r1, r3, #1
 8005ec6:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8005eca:	463b      	mov	r3, r7
 8005ecc:	2101      	movs	r1, #1
 8005ece:	2528      	movs	r5, #40	; 0x28
 8005ed0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005ed4:	4620      	mov	r0, r4
 8005ed6:	4631      	mov	r1, r6
 8005ed8:	54e5      	strb	r5, [r4, r3]
 8005eda:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005ede:	f7fc fe71 	bl	8002bc4 <d_print_comp>
 8005ee2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005ee6:	29ff      	cmp	r1, #255	; 0xff
 8005ee8:	d120      	bne.n	8005f2c <d_print_mod+0x63c>
 8005eea:	2500      	movs	r5, #0
 8005eec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005ef0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005ef4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005ef8:	4620      	mov	r0, r4
 8005efa:	4798      	blx	r3
 8005efc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005f00:	3301      	adds	r3, #1
 8005f02:	4629      	mov	r1, r5
 8005f04:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005f08:	2201      	movs	r2, #1
 8005f0a:	2329      	movs	r3, #41	; 0x29
 8005f0c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005f10:	5463      	strb	r3, [r4, r1]
 8005f12:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f1a:	4631      	mov	r1, r6
 8005f1c:	68aa      	ldr	r2, [r5, #8]
 8005f1e:	4620      	mov	r0, r4
 8005f20:	f7fc fe50 	bl	8002bc4 <d_print_comp>
 8005f24:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005f28:	29ff      	cmp	r1, #255	; 0xff
 8005f2a:	d0de      	beq.n	8005eea <d_print_mod+0x5fa>
 8005f2c:	1c4a      	adds	r2, r1, #1
 8005f2e:	e7ec      	b.n	8005f0a <d_print_mod+0x61a>
 8005f30:	1c59      	adds	r1, r3, #1
 8005f32:	e665      	b.n	8005c00 <d_print_mod+0x310>
 8005f34:	1c59      	adds	r1, r3, #1
 8005f36:	e7ca      	b.n	8005ece <d_print_mod+0x5de>
 8005f38:	1c4a      	adds	r2, r1, #1
 8005f3a:	e681      	b.n	8005c40 <d_print_mod+0x350>
 8005f3c:	0801f04b 	.word	0x0801f04b
 8005f40:	0801f063 	.word	0x0801f063
 8005f44:	0801f060 	.word	0x0801f060
 8005f48:	0801f070 	.word	0x0801f070

08005f4c <d_print_function_type.isra.15>:
 8005f4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f50:	4604      	mov	r4, r0
 8005f52:	460e      	mov	r6, r1
 8005f54:	4617      	mov	r7, r2
 8005f56:	461d      	mov	r5, r3
 8005f58:	b1d3      	cbz	r3, 8005f90 <d_print_function_type.isra.15+0x44>
 8005f5a:	689b      	ldr	r3, [r3, #8]
 8005f5c:	b9c3      	cbnz	r3, 8005f90 <d_print_function_type.isra.15+0x44>
 8005f5e:	462a      	mov	r2, r5
 8005f60:	2001      	movs	r0, #1
 8005f62:	f8df c1c8 	ldr.w	ip, [pc, #456]	; 800612c <d_print_function_type.isra.15+0x1e0>
 8005f66:	e001      	b.n	8005f6c <d_print_function_type.isra.15+0x20>
 8005f68:	6893      	ldr	r3, [r2, #8]
 8005f6a:	b98b      	cbnz	r3, 8005f90 <d_print_function_type.isra.15+0x44>
 8005f6c:	6853      	ldr	r3, [r2, #4]
 8005f6e:	781b      	ldrb	r3, [r3, #0]
 8005f70:	3b19      	subs	r3, #25
 8005f72:	b2db      	uxtb	r3, r3
 8005f74:	2b12      	cmp	r3, #18
 8005f76:	fa00 f103 	lsl.w	r1, r0, r3
 8005f7a:	d806      	bhi.n	8005f8a <d_print_function_type.isra.15+0x3e>
 8005f7c:	ea11 0f0c 	tst.w	r1, ip
 8005f80:	f040 80c7 	bne.w	8006112 <d_print_function_type.isra.15+0x1c6>
 8005f84:	f411 6f60 	tst.w	r1, #3584	; 0xe00
 8005f88:	d154      	bne.n	8006034 <d_print_function_type.isra.15+0xe8>
 8005f8a:	6812      	ldr	r2, [r2, #0]
 8005f8c:	2a00      	cmp	r2, #0
 8005f8e:	d1eb      	bne.n	8005f68 <d_print_function_type.isra.15+0x1c>
 8005f90:	2300      	movs	r3, #0
 8005f92:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005f96:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005f9a:	4631      	mov	r1, r6
 8005f9c:	462a      	mov	r2, r5
 8005f9e:	4620      	mov	r0, r4
 8005fa0:	f000 f8c6 	bl	8006130 <d_print_mod_list>
 8005fa4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005fa8:	29ff      	cmp	r1, #255	; 0xff
 8005faa:	f040 80a4 	bne.w	80060f6 <d_print_function_type.isra.15+0x1aa>
 8005fae:	2300      	movs	r3, #0
 8005fb0:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8005fb4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005fb8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005fbc:	4620      	mov	r0, r4
 8005fbe:	4798      	blx	r3
 8005fc0:	2328      	movs	r3, #40	; 0x28
 8005fc2:	7023      	strb	r3, [r4, #0]
 8005fc4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005fc8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005fcc:	683a      	ldr	r2, [r7, #0]
 8005fce:	1c59      	adds	r1, r3, #1
 8005fd0:	2301      	movs	r3, #1
 8005fd2:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8005fd6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005fda:	2a00      	cmp	r2, #0
 8005fdc:	f000 8097 	beq.w	800610e <d_print_function_type.isra.15+0x1c2>
 8005fe0:	4631      	mov	r1, r6
 8005fe2:	4620      	mov	r0, r4
 8005fe4:	f7fc fdee 	bl	8002bc4 <d_print_comp>
 8005fe8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005fec:	2bff      	cmp	r3, #255	; 0xff
 8005fee:	f040 808e 	bne.w	800610e <d_print_function_type.isra.15+0x1c2>
 8005ff2:	2700      	movs	r7, #0
 8005ff4:	4619      	mov	r1, r3
 8005ff6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005ffa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005ffe:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8006002:	4620      	mov	r0, r4
 8006004:	4798      	blx	r3
 8006006:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800600a:	1c5a      	adds	r2, r3, #1
 800600c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8006010:	463b      	mov	r3, r7
 8006012:	2201      	movs	r2, #1
 8006014:	2029      	movs	r0, #41	; 0x29
 8006016:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800601a:	4631      	mov	r1, r6
 800601c:	54e0      	strb	r0, [r4, r3]
 800601e:	462a      	mov	r2, r5
 8006020:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 8006024:	2301      	movs	r3, #1
 8006026:	4620      	mov	r0, r4
 8006028:	f000 f882 	bl	8006130 <d_print_mod_list>
 800602c:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8006030:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006034:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8006038:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800603c:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8006040:	2a28      	cmp	r2, #40	; 0x28
 8006042:	d01e      	beq.n	8006082 <d_print_function_type.isra.15+0x136>
 8006044:	2b20      	cmp	r3, #32
 8006046:	d01c      	beq.n	8006082 <d_print_function_type.isra.15+0x136>
 8006048:	29ff      	cmp	r1, #255	; 0xff
 800604a:	d112      	bne.n	8006072 <d_print_function_type.isra.15+0x126>
 800604c:	2300      	movs	r3, #0
 800604e:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8006052:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006056:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800605a:	4620      	mov	r0, r4
 800605c:	4798      	blx	r3
 800605e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006062:	2220      	movs	r2, #32
 8006064:	3301      	adds	r3, #1
 8006066:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800606a:	7022      	strb	r2, [r4, #0]
 800606c:	2101      	movs	r1, #1
 800606e:	1c4a      	adds	r2, r1, #1
 8006070:	e01a      	b.n	80060a8 <d_print_function_type.isra.15+0x15c>
 8006072:	1c4b      	adds	r3, r1, #1
 8006074:	2220      	movs	r2, #32
 8006076:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800607a:	5462      	strb	r2, [r4, r1]
 800607c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006080:	4619      	mov	r1, r3
 8006082:	29ff      	cmp	r1, #255	; 0xff
 8006084:	d1f3      	bne.n	800606e <d_print_function_type.isra.15+0x122>
 8006086:	f04f 0800 	mov.w	r8, #0
 800608a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800608e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006092:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006096:	4620      	mov	r0, r4
 8006098:	4798      	blx	r3
 800609a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800609e:	3301      	adds	r3, #1
 80060a0:	4641      	mov	r1, r8
 80060a2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80060a6:	2201      	movs	r2, #1
 80060a8:	2328      	movs	r3, #40	; 0x28
 80060aa:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80060ae:	5463      	strb	r3, [r4, r1]
 80060b0:	f04f 0900 	mov.w	r9, #0
 80060b4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80060b8:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 80060bc:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 80060c0:	464b      	mov	r3, r9
 80060c2:	462a      	mov	r2, r5
 80060c4:	4631      	mov	r1, r6
 80060c6:	4620      	mov	r0, r4
 80060c8:	f000 f832 	bl	8006130 <d_print_mod_list>
 80060cc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80060d0:	2bff      	cmp	r3, #255	; 0xff
 80060d2:	d123      	bne.n	800611c <d_print_function_type.isra.15+0x1d0>
 80060d4:	4619      	mov	r1, r3
 80060d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80060da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80060de:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80060e2:	4620      	mov	r0, r4
 80060e4:	4798      	blx	r3
 80060e6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80060ea:	2229      	movs	r2, #41	; 0x29
 80060ec:	3301      	adds	r3, #1
 80060ee:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80060f2:	7022      	strb	r2, [r4, #0]
 80060f4:	2101      	movs	r1, #1
 80060f6:	2228      	movs	r2, #40	; 0x28
 80060f8:	1c4b      	adds	r3, r1, #1
 80060fa:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80060fe:	5462      	strb	r2, [r4, r1]
 8006100:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006104:	683a      	ldr	r2, [r7, #0]
 8006106:	2a00      	cmp	r2, #0
 8006108:	f43f af70 	beq.w	8005fec <d_print_function_type.isra.15+0xa0>
 800610c:	e768      	b.n	8005fe0 <d_print_function_type.isra.15+0x94>
 800610e:	1c5a      	adds	r2, r3, #1
 8006110:	e780      	b.n	8006014 <d_print_function_type.isra.15+0xc8>
 8006112:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8006116:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800611a:	e793      	b.n	8006044 <d_print_function_type.isra.15+0xf8>
 800611c:	2229      	movs	r2, #41	; 0x29
 800611e:	1c59      	adds	r1, r3, #1
 8006120:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006124:	54e2      	strb	r2, [r4, r3]
 8006126:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800612a:	e73d      	b.n	8005fa8 <d_print_function_type.isra.15+0x5c>
 800612c:	00043107 	.word	0x00043107

08006130 <d_print_mod_list>:
 8006130:	2a00      	cmp	r2, #0
 8006132:	f000 80ac 	beq.w	800628e <d_print_mod_list+0x15e>
 8006136:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800613a:	461f      	mov	r7, r3
 800613c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8006140:	b089      	sub	sp, #36	; 0x24
 8006142:	4605      	mov	r5, r0
 8006144:	bb4b      	cbnz	r3, 800619a <d_print_mod_list+0x6a>
 8006146:	4688      	mov	r8, r1
 8006148:	4614      	mov	r4, r2
 800614a:	f04f 0901 	mov.w	r9, #1
 800614e:	e002      	b.n	8006156 <d_print_mod_list+0x26>
 8006150:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
 8006154:	bb0b      	cbnz	r3, 800619a <d_print_mod_list+0x6a>
 8006156:	68a3      	ldr	r3, [r4, #8]
 8006158:	b9e3      	cbnz	r3, 8006194 <d_print_mod_list+0x64>
 800615a:	f8d4 a004 	ldr.w	sl, [r4, #4]
 800615e:	f89a 6000 	ldrb.w	r6, [sl]
 8006162:	4630      	mov	r0, r6
 8006164:	b917      	cbnz	r7, 800616c <d_print_mod_list+0x3c>
 8006166:	f7fa f93f 	bl	80003e8 <is_fnqual_component_type>
 800616a:	b998      	cbnz	r0, 8006194 <d_print_mod_list+0x64>
 800616c:	68e3      	ldr	r3, [r4, #12]
 800616e:	f8c4 9008 	str.w	r9, [r4, #8]
 8006172:	2e29      	cmp	r6, #41	; 0x29
 8006174:	f8d5 b110 	ldr.w	fp, [r5, #272]	; 0x110
 8006178:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 800617c:	4652      	mov	r2, sl
 800617e:	4641      	mov	r1, r8
 8006180:	4628      	mov	r0, r5
 8006182:	d00d      	beq.n	80061a0 <d_print_mod_list+0x70>
 8006184:	2e2a      	cmp	r6, #42	; 0x2a
 8006186:	d015      	beq.n	80061b4 <d_print_mod_list+0x84>
 8006188:	2e02      	cmp	r6, #2
 800618a:	d01d      	beq.n	80061c8 <d_print_mod_list+0x98>
 800618c:	f7ff fbb0 	bl	80058f0 <d_print_mod>
 8006190:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 8006194:	6824      	ldr	r4, [r4, #0]
 8006196:	2c00      	cmp	r4, #0
 8006198:	d1da      	bne.n	8006150 <d_print_mod_list+0x20>
 800619a:	b009      	add	sp, #36	; 0x24
 800619c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061a0:	6823      	ldr	r3, [r4, #0]
 80061a2:	f10a 020c 	add.w	r2, sl, #12
 80061a6:	f7ff fed1 	bl	8005f4c <d_print_function_type.isra.15>
 80061aa:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 80061ae:	b009      	add	sp, #36	; 0x24
 80061b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061b4:	6823      	ldr	r3, [r4, #0]
 80061b6:	f10a 0208 	add.w	r2, sl, #8
 80061ba:	f000 f8f1 	bl	80063a0 <d_print_array_type.isra.14>
 80061be:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 80061c2:	b009      	add	sp, #36	; 0x24
 80061c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061c8:	2600      	movs	r6, #0
 80061ca:	f8d5 7114 	ldr.w	r7, [r5, #276]	; 0x114
 80061ce:	f8da 2008 	ldr.w	r2, [sl, #8]
 80061d2:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 80061d6:	f7fc fcf5 	bl	8002bc4 <d_print_comp>
 80061da:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
 80061de:	f018 0704 	ands.w	r7, r8, #4
 80061e2:	d02f      	beq.n	8006244 <d_print_mod_list+0x114>
 80061e4:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80061e8:	29ff      	cmp	r1, #255	; 0xff
 80061ea:	f040 80cf 	bne.w	800638c <d_print_mod_list+0x25c>
 80061ee:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80061f2:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80061f6:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 80061fa:	4628      	mov	r0, r5
 80061fc:	4798      	blx	r3
 80061fe:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8006202:	3301      	adds	r3, #1
 8006204:	4631      	mov	r1, r6
 8006206:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 800620a:	2201      	movs	r2, #1
 800620c:	232e      	movs	r3, #46	; 0x2e
 800620e:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 8006212:	546b      	strb	r3, [r5, r1]
 8006214:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 8006218:	6863      	ldr	r3, [r4, #4]
 800621a:	68dc      	ldr	r4, [r3, #12]
 800621c:	7820      	ldrb	r0, [r4, #0]
 800621e:	2846      	cmp	r0, #70	; 0x46
 8006220:	d102      	bne.n	8006228 <d_print_mod_list+0xf8>
 8006222:	e035      	b.n	8006290 <d_print_mod_list+0x160>
 8006224:	68a4      	ldr	r4, [r4, #8]
 8006226:	7820      	ldrb	r0, [r4, #0]
 8006228:	f7fa f8de 	bl	80003e8 <is_fnqual_component_type>
 800622c:	2800      	cmp	r0, #0
 800622e:	d1f9      	bne.n	8006224 <d_print_mod_list+0xf4>
 8006230:	4622      	mov	r2, r4
 8006232:	4641      	mov	r1, r8
 8006234:	4628      	mov	r0, r5
 8006236:	f7fc fcc5 	bl	8002bc4 <d_print_comp>
 800623a:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 800623e:	b009      	add	sp, #36	; 0x24
 8006240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006244:	4e52      	ldr	r6, [pc, #328]	; (8006390 <d_print_mod_list+0x260>)
 8006246:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 800624a:	f106 0902 	add.w	r9, r6, #2
 800624e:	e015      	b.n	800627c <d_print_mod_list+0x14c>
 8006250:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006254:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006258:	f885 70ff 	strb.w	r7, [r5, #255]	; 0xff
 800625c:	4798      	blx	r3
 800625e:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8006262:	3301      	adds	r3, #1
 8006264:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006268:	2200      	movs	r2, #0
 800626a:	2301      	movs	r3, #1
 800626c:	45b1      	cmp	r9, r6
 800626e:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 8006272:	f805 a002 	strb.w	sl, [r5, r2]
 8006276:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 800627a:	d0cd      	beq.n	8006218 <d_print_mod_list+0xe8>
 800627c:	2bff      	cmp	r3, #255	; 0xff
 800627e:	4619      	mov	r1, r3
 8006280:	4628      	mov	r0, r5
 8006282:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006286:	d0e3      	beq.n	8006250 <d_print_mod_list+0x120>
 8006288:	461a      	mov	r2, r3
 800628a:	3301      	adds	r3, #1
 800628c:	e7ee      	b.n	800626c <d_print_mod_list+0x13c>
 800628e:	4770      	bx	lr
 8006290:	4e40      	ldr	r6, [pc, #256]	; (8006394 <d_print_mod_list+0x264>)
 8006292:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 8006296:	f106 070d 	add.w	r7, r6, #13
 800629a:	f04f 0900 	mov.w	r9, #0
 800629e:	e015      	b.n	80062cc <d_print_mod_list+0x19c>
 80062a0:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80062a4:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80062a8:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 80062ac:	4798      	blx	r3
 80062ae:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 80062b2:	3301      	adds	r3, #1
 80062b4:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 80062b8:	2200      	movs	r2, #0
 80062ba:	2301      	movs	r3, #1
 80062bc:	42b7      	cmp	r7, r6
 80062be:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 80062c2:	f805 a002 	strb.w	sl, [r5, r2]
 80062c6:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 80062ca:	d008      	beq.n	80062de <d_print_mod_list+0x1ae>
 80062cc:	2bff      	cmp	r3, #255	; 0xff
 80062ce:	4619      	mov	r1, r3
 80062d0:	4628      	mov	r0, r5
 80062d2:	f816 ab01 	ldrb.w	sl, [r6], #1
 80062d6:	d0e3      	beq.n	80062a0 <d_print_mod_list+0x170>
 80062d8:	461a      	mov	r2, r3
 80062da:	3301      	adds	r3, #1
 80062dc:	e7ee      	b.n	80062bc <d_print_mod_list+0x18c>
 80062de:	68e2      	ldr	r2, [r4, #12]
 80062e0:	492d      	ldr	r1, [pc, #180]	; (8006398 <d_print_mod_list+0x268>)
 80062e2:	3201      	adds	r2, #1
 80062e4:	a801      	add	r0, sp, #4
 80062e6:	f008 f903 	bl	800e4f0 <sprintf>
 80062ea:	a801      	add	r0, sp, #4
 80062ec:	f000 fd5a 	bl	8006da4 <strlen>
 80062f0:	b328      	cbz	r0, 800633e <d_print_mod_list+0x20e>
 80062f2:	ae01      	add	r6, sp, #4
 80062f4:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 80062f8:	1837      	adds	r7, r6, r0
 80062fa:	f04f 0900 	mov.w	r9, #0
 80062fe:	e015      	b.n	800632c <d_print_mod_list+0x1fc>
 8006300:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006304:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006308:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 800630c:	4798      	blx	r3
 800630e:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8006312:	3301      	adds	r3, #1
 8006314:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006318:	2200      	movs	r2, #0
 800631a:	2301      	movs	r3, #1
 800631c:	42be      	cmp	r6, r7
 800631e:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 8006322:	f805 a002 	strb.w	sl, [r5, r2]
 8006326:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 800632a:	d00a      	beq.n	8006342 <d_print_mod_list+0x212>
 800632c:	2bff      	cmp	r3, #255	; 0xff
 800632e:	4619      	mov	r1, r3
 8006330:	4628      	mov	r0, r5
 8006332:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006336:	d0e3      	beq.n	8006300 <d_print_mod_list+0x1d0>
 8006338:	461a      	mov	r2, r3
 800633a:	3301      	adds	r3, #1
 800633c:	e7ee      	b.n	800631c <d_print_mod_list+0x1ec>
 800633e:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 8006342:	4e16      	ldr	r6, [pc, #88]	; (800639c <d_print_mod_list+0x26c>)
 8006344:	f04f 0900 	mov.w	r9, #0
 8006348:	1cf7      	adds	r7, r6, #3
 800634a:	e016      	b.n	800637a <d_print_mod_list+0x24a>
 800634c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006350:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006354:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 8006358:	4798      	blx	r3
 800635a:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 800635e:	3301      	adds	r3, #1
 8006360:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006364:	2200      	movs	r2, #0
 8006366:	2301      	movs	r3, #1
 8006368:	42b7      	cmp	r7, r6
 800636a:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 800636e:	f805 a002 	strb.w	sl, [r5, r2]
 8006372:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 8006376:	f43f af55 	beq.w	8006224 <d_print_mod_list+0xf4>
 800637a:	2bff      	cmp	r3, #255	; 0xff
 800637c:	4619      	mov	r1, r3
 800637e:	4628      	mov	r0, r5
 8006380:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006384:	d0e2      	beq.n	800634c <d_print_mod_list+0x21c>
 8006386:	461a      	mov	r2, r3
 8006388:	3301      	adds	r3, #1
 800638a:	e7ed      	b.n	8006368 <d_print_mod_list+0x238>
 800638c:	1c4a      	adds	r2, r1, #1
 800638e:	e73d      	b.n	800620c <d_print_mod_list+0xdc>
 8006390:	0801ed98 	.word	0x0801ed98
 8006394:	0801ed9c 	.word	0x0801ed9c
 8006398:	0801ed48 	.word	0x0801ed48
 800639c:	0801edac 	.word	0x0801edac

080063a0 <d_print_array_type.isra.14>:
 80063a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063a4:	4604      	mov	r4, r0
 80063a6:	460f      	mov	r7, r1
 80063a8:	4690      	mov	r8, r2
 80063aa:	b15b      	cbz	r3, 80063c4 <d_print_array_type.isra.14+0x24>
 80063ac:	461e      	mov	r6, r3
 80063ae:	689d      	ldr	r5, [r3, #8]
 80063b0:	2d00      	cmp	r5, #0
 80063b2:	d042      	beq.n	800643a <d_print_array_type.isra.14+0x9a>
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d1f9      	bne.n	80063ae <d_print_array_type.isra.14+0xe>
 80063ba:	4632      	mov	r2, r6
 80063bc:	4639      	mov	r1, r7
 80063be:	4620      	mov	r0, r4
 80063c0:	f7ff feb6 	bl	8006130 <d_print_mod_list>
 80063c4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80063c8:	29ff      	cmp	r1, #255	; 0xff
 80063ca:	f040 80b1 	bne.w	8006530 <d_print_array_type.isra.14+0x190>
 80063ce:	2300      	movs	r3, #0
 80063d0:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80063d4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80063d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80063dc:	4620      	mov	r0, r4
 80063de:	4798      	blx	r3
 80063e0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80063e4:	2220      	movs	r2, #32
 80063e6:	3301      	adds	r3, #1
 80063e8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80063ec:	7022      	strb	r2, [r4, #0]
 80063ee:	2301      	movs	r3, #1
 80063f0:	225b      	movs	r2, #91	; 0x5b
 80063f2:	1c59      	adds	r1, r3, #1
 80063f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80063f8:	54e2      	strb	r2, [r4, r3]
 80063fa:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80063fe:	f8d8 2000 	ldr.w	r2, [r8]
 8006402:	2a00      	cmp	r2, #0
 8006404:	d140      	bne.n	8006488 <d_print_array_type.isra.14+0xe8>
 8006406:	29ff      	cmp	r1, #255	; 0xff
 8006408:	d145      	bne.n	8006496 <d_print_array_type.isra.14+0xf6>
 800640a:	2500      	movs	r5, #0
 800640c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006410:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006414:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006418:	4620      	mov	r0, r4
 800641a:	4798      	blx	r3
 800641c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006420:	3301      	adds	r3, #1
 8006422:	4629      	mov	r1, r5
 8006424:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006428:	2201      	movs	r2, #1
 800642a:	235d      	movs	r3, #93	; 0x5d
 800642c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8006430:	5463      	strb	r3, [r4, r1]
 8006432:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006436:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800643a:	685b      	ldr	r3, [r3, #4]
 800643c:	781b      	ldrb	r3, [r3, #0]
 800643e:	2b2a      	cmp	r3, #42	; 0x2a
 8006440:	d12b      	bne.n	800649a <d_print_array_type.isra.14+0xfa>
 8006442:	462b      	mov	r3, r5
 8006444:	4632      	mov	r2, r6
 8006446:	4639      	mov	r1, r7
 8006448:	4620      	mov	r0, r4
 800644a:	f7ff fe71 	bl	8006130 <d_print_mod_list>
 800644e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006452:	2bff      	cmp	r3, #255	; 0xff
 8006454:	d1cc      	bne.n	80063f0 <d_print_array_type.isra.14+0x50>
 8006456:	2200      	movs	r2, #0
 8006458:	4619      	mov	r1, r3
 800645a:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800645e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006462:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006466:	4620      	mov	r0, r4
 8006468:	4798      	blx	r3
 800646a:	235b      	movs	r3, #91	; 0x5b
 800646c:	7023      	strb	r3, [r4, #0]
 800646e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006472:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006476:	f8d8 2000 	ldr.w	r2, [r8]
 800647a:	3301      	adds	r3, #1
 800647c:	2101      	movs	r1, #1
 800647e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006482:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006486:	b132      	cbz	r2, 8006496 <d_print_array_type.isra.14+0xf6>
 8006488:	4639      	mov	r1, r7
 800648a:	4620      	mov	r0, r4
 800648c:	f7fc fb9a 	bl	8002bc4 <d_print_comp>
 8006490:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006494:	e7b7      	b.n	8006406 <d_print_array_type.isra.14+0x66>
 8006496:	1c4a      	adds	r2, r1, #1
 8006498:	e7c7      	b.n	800642a <d_print_array_type.isra.14+0x8a>
 800649a:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 8006550 <d_print_array_type.isra.14+0x1b0>
 800649e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80064a2:	f109 0a02 	add.w	sl, r9, #2
 80064a6:	e016      	b.n	80064d6 <d_print_array_type.isra.14+0x136>
 80064a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80064ac:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80064b0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80064b4:	4798      	blx	r3
 80064b6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80064ba:	2200      	movs	r2, #0
 80064bc:	3301      	adds	r3, #1
 80064be:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80064c2:	45ca      	cmp	sl, r9
 80064c4:	f04f 0301 	mov.w	r3, #1
 80064c8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80064cc:	f804 b002 	strb.w	fp, [r4, r2]
 80064d0:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80064d4:	d010      	beq.n	80064f8 <d_print_array_type.isra.14+0x158>
 80064d6:	2bff      	cmp	r3, #255	; 0xff
 80064d8:	4619      	mov	r1, r3
 80064da:	4620      	mov	r0, r4
 80064dc:	f819 bb01 	ldrb.w	fp, [r9], #1
 80064e0:	d0e2      	beq.n	80064a8 <d_print_array_type.isra.14+0x108>
 80064e2:	461a      	mov	r2, r3
 80064e4:	45ca      	cmp	sl, r9
 80064e6:	f103 0301 	add.w	r3, r3, #1
 80064ea:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80064ee:	f804 b002 	strb.w	fp, [r4, r2]
 80064f2:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80064f6:	d1ee      	bne.n	80064d6 <d_print_array_type.isra.14+0x136>
 80064f8:	2300      	movs	r3, #0
 80064fa:	4632      	mov	r2, r6
 80064fc:	4639      	mov	r1, r7
 80064fe:	4620      	mov	r0, r4
 8006500:	f7ff fe16 	bl	8006130 <d_print_mod_list>
 8006504:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006508:	2bff      	cmp	r3, #255	; 0xff
 800650a:	d119      	bne.n	8006540 <d_print_array_type.isra.14+0x1a0>
 800650c:	2200      	movs	r2, #0
 800650e:	4619      	mov	r1, r3
 8006510:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8006514:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006518:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800651c:	4620      	mov	r0, r4
 800651e:	4798      	blx	r3
 8006520:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006524:	2229      	movs	r2, #41	; 0x29
 8006526:	3301      	adds	r3, #1
 8006528:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800652c:	7022      	strb	r2, [r4, #0]
 800652e:	2101      	movs	r1, #1
 8006530:	2220      	movs	r2, #32
 8006532:	1c4b      	adds	r3, r1, #1
 8006534:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006538:	5462      	strb	r2, [r4, r1]
 800653a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800653e:	e788      	b.n	8006452 <d_print_array_type.isra.14+0xb2>
 8006540:	2229      	movs	r2, #41	; 0x29
 8006542:	1c59      	adds	r1, r3, #1
 8006544:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006548:	54e2      	strb	r2, [r4, r3]
 800654a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800654e:	e73b      	b.n	80063c8 <d_print_array_type.isra.14+0x28>
 8006550:	0801ef94 	.word	0x0801ef94

08006554 <d_print_expr_op>:
 8006554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006558:	7815      	ldrb	r5, [r2, #0]
 800655a:	2d31      	cmp	r5, #49	; 0x31
 800655c:	d003      	beq.n	8006566 <d_print_expr_op+0x12>
 800655e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006562:	f7fc bb2f 	b.w	8002bc4 <d_print_comp>
 8006566:	6893      	ldr	r3, [r2, #8]
 8006568:	e9d3 5601 	ldrd	r5, r6, [r3, #4]
 800656c:	b37e      	cbz	r6, 80065ce <d_print_expr_op+0x7a>
 800656e:	442e      	add	r6, r5
 8006570:	4604      	mov	r4, r0
 8006572:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8006576:	3e01      	subs	r6, #1
 8006578:	3d01      	subs	r5, #1
 800657a:	2700      	movs	r7, #0
 800657c:	e016      	b.n	80065ac <d_print_expr_op+0x58>
 800657e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006582:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006586:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800658a:	4798      	blx	r3
 800658c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006590:	2200      	movs	r2, #0
 8006592:	3301      	adds	r3, #1
 8006594:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006598:	42b5      	cmp	r5, r6
 800659a:	f04f 0301 	mov.w	r3, #1
 800659e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80065a2:	f804 8002 	strb.w	r8, [r4, r2]
 80065a6:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80065aa:	d010      	beq.n	80065ce <d_print_expr_op+0x7a>
 80065ac:	2bff      	cmp	r3, #255	; 0xff
 80065ae:	4619      	mov	r1, r3
 80065b0:	4620      	mov	r0, r4
 80065b2:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 80065b6:	d0e2      	beq.n	800657e <d_print_expr_op+0x2a>
 80065b8:	461a      	mov	r2, r3
 80065ba:	42b5      	cmp	r5, r6
 80065bc:	f103 0301 	add.w	r3, r3, #1
 80065c0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80065c4:	f804 8002 	strb.w	r8, [r4, r2]
 80065c8:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80065cc:	d1ee      	bne.n	80065ac <d_print_expr_op+0x58>
 80065ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80065d2:	bf00      	nop

080065d4 <d_print_subexpr>:
 80065d4:	7813      	ldrb	r3, [r2, #0]
 80065d6:	2b01      	cmp	r3, #1
 80065d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065dc:	4604      	mov	r4, r0
 80065de:	d941      	bls.n	8006664 <d_print_subexpr+0x90>
 80065e0:	2b30      	cmp	r3, #48	; 0x30
 80065e2:	d03f      	beq.n	8006664 <d_print_subexpr+0x90>
 80065e4:	2b06      	cmp	r3, #6
 80065e6:	d03d      	beq.n	8006664 <d_print_subexpr+0x90>
 80065e8:	f8d0 7100 	ldr.w	r7, [r0, #256]	; 0x100
 80065ec:	2fff      	cmp	r7, #255	; 0xff
 80065ee:	460e      	mov	r6, r1
 80065f0:	4615      	mov	r5, r2
 80065f2:	d13e      	bne.n	8006672 <d_print_subexpr+0x9e>
 80065f4:	f04f 0800 	mov.w	r8, #0
 80065f8:	4639      	mov	r1, r7
 80065fa:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80065fe:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8006602:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 8006606:	4798      	blx	r3
 8006608:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800660c:	3301      	adds	r3, #1
 800660e:	4647      	mov	r7, r8
 8006610:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006614:	2201      	movs	r2, #1
 8006616:	2328      	movs	r3, #40	; 0x28
 8006618:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800661c:	4631      	mov	r1, r6
 800661e:	55e3      	strb	r3, [r4, r7]
 8006620:	462a      	mov	r2, r5
 8006622:	4620      	mov	r0, r4
 8006624:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006628:	f7fc facc 	bl	8002bc4 <d_print_comp>
 800662c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006630:	29ff      	cmp	r1, #255	; 0xff
 8006632:	d11c      	bne.n	800666e <d_print_subexpr+0x9a>
 8006634:	2500      	movs	r5, #0
 8006636:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800663a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800663e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006642:	4620      	mov	r0, r4
 8006644:	4798      	blx	r3
 8006646:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800664a:	3301      	adds	r3, #1
 800664c:	4629      	mov	r1, r5
 800664e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006652:	2201      	movs	r2, #1
 8006654:	2329      	movs	r3, #41	; 0x29
 8006656:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800665a:	5463      	strb	r3, [r4, r1]
 800665c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006660:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006664:	4620      	mov	r0, r4
 8006666:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800666a:	f7fc baab 	b.w	8002bc4 <d_print_comp>
 800666e:	1c4a      	adds	r2, r1, #1
 8006670:	e7f0      	b.n	8006654 <d_print_subexpr+0x80>
 8006672:	1c7a      	adds	r2, r7, #1
 8006674:	e7cf      	b.n	8006616 <d_print_subexpr+0x42>
 8006676:	bf00      	nop

08006678 <d_maybe_print_fold_expression.isra.20>:
 8006678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800667c:	6892      	ldr	r2, [r2, #8]
 800667e:	6812      	ldr	r2, [r2, #0]
 8006680:	7816      	ldrb	r6, [r2, #0]
 8006682:	2e66      	cmp	r6, #102	; 0x66
 8006684:	b083      	sub	sp, #12
 8006686:	d003      	beq.n	8006690 <d_maybe_print_fold_expression.isra.20+0x18>
 8006688:	2000      	movs	r0, #0
 800668a:	b003      	add	sp, #12
 800668c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006690:	681b      	ldr	r3, [r3, #0]
 8006692:	e9d3 8902 	ldrd	r8, r9, [r3, #8]
 8006696:	f899 3000 	ldrb.w	r3, [r9]
 800669a:	2b3b      	cmp	r3, #59	; 0x3b
 800669c:	f000 8110 	beq.w	80068c0 <d_maybe_print_fold_expression.isra.20+0x248>
 80066a0:	2300      	movs	r3, #0
 80066a2:	9301      	str	r3, [sp, #4]
 80066a4:	f04f 33ff 	mov.w	r3, #4294967295
 80066a8:	f8d0 7120 	ldr.w	r7, [r0, #288]	; 0x120
 80066ac:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
 80066b0:	7853      	ldrb	r3, [r2, #1]
 80066b2:	3b4c      	subs	r3, #76	; 0x4c
 80066b4:	460d      	mov	r5, r1
 80066b6:	4604      	mov	r4, r0
 80066b8:	2b26      	cmp	r3, #38	; 0x26
 80066ba:	d83a      	bhi.n	8006732 <d_maybe_print_fold_expression.isra.20+0xba>
 80066bc:	e8df f003 	tbb	[pc, r3]
 80066c0:	393939b0 	.word	0x393939b0
 80066c4:	39b03939 	.word	0x39b03939
 80066c8:	39393939 	.word	0x39393939
 80066cc:	39393939 	.word	0x39393939
 80066d0:	39393939 	.word	0x39393939
 80066d4:	39393939 	.word	0x39393939
 80066d8:	39393939 	.word	0x39393939
 80066dc:	39393939 	.word	0x39393939
 80066e0:	39393989 	.word	0x39393989
 80066e4:	3939      	.short	0x3939
 80066e6:	3f          	.byte	0x3f
 80066e7:	00          	.byte	0x00
 80066e8:	4642      	mov	r2, r8
 80066ea:	4629      	mov	r1, r5
 80066ec:	4620      	mov	r0, r4
 80066ee:	f7ff ff31 	bl	8006554 <d_print_expr_op>
 80066f2:	9a01      	ldr	r2, [sp, #4]
 80066f4:	4629      	mov	r1, r5
 80066f6:	4620      	mov	r0, r4
 80066f8:	f7ff ff6c 	bl	80065d4 <d_print_subexpr>
 80066fc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006700:	29ff      	cmp	r1, #255	; 0xff
 8006702:	f040 80ea 	bne.w	80068da <d_maybe_print_fold_expression.isra.20+0x262>
 8006706:	2500      	movs	r5, #0
 8006708:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800670c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006710:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006714:	4620      	mov	r0, r4
 8006716:	4798      	blx	r3
 8006718:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800671c:	3301      	adds	r3, #1
 800671e:	4629      	mov	r1, r5
 8006720:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006724:	2201      	movs	r2, #1
 8006726:	2329      	movs	r3, #41	; 0x29
 8006728:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800672c:	5463      	strb	r3, [r4, r1]
 800672e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006732:	2001      	movs	r0, #1
 8006734:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 8006738:	b003      	add	sp, #12
 800673a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800673e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8006742:	29ff      	cmp	r1, #255	; 0xff
 8006744:	f040 80cb 	bne.w	80068de <d_maybe_print_fold_expression.isra.20+0x266>
 8006748:	2600      	movs	r6, #0
 800674a:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 800674e:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8006752:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8006756:	4798      	blx	r3
 8006758:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800675c:	3301      	adds	r3, #1
 800675e:	4631      	mov	r1, r6
 8006760:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006764:	2201      	movs	r2, #1
 8006766:	2328      	movs	r3, #40	; 0x28
 8006768:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800676c:	4620      	mov	r0, r4
 800676e:	5463      	strb	r3, [r4, r1]
 8006770:	464a      	mov	r2, r9
 8006772:	4629      	mov	r1, r5
 8006774:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006778:	f7ff ff2c 	bl	80065d4 <d_print_subexpr>
 800677c:	4629      	mov	r1, r5
 800677e:	4d59      	ldr	r5, [pc, #356]	; (80068e4 <d_maybe_print_fold_expression.isra.20+0x26c>)
 8006780:	4642      	mov	r2, r8
 8006782:	4620      	mov	r0, r4
 8006784:	f7ff fee6 	bl	8006554 <d_print_expr_op>
 8006788:	1d2e      	adds	r6, r5, #4
 800678a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800678e:	f04f 0800 	mov.w	r8, #0
 8006792:	e015      	b.n	80067c0 <d_maybe_print_fold_expression.isra.20+0x148>
 8006794:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006798:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800679c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80067a0:	4798      	blx	r3
 80067a2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80067a6:	3301      	adds	r3, #1
 80067a8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80067ac:	2200      	movs	r2, #0
 80067ae:	2301      	movs	r3, #1
 80067b0:	42ae      	cmp	r6, r5
 80067b2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80067b6:	f804 9002 	strb.w	r9, [r4, r2]
 80067ba:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80067be:	d0b8      	beq.n	8006732 <d_maybe_print_fold_expression.isra.20+0xba>
 80067c0:	2bff      	cmp	r3, #255	; 0xff
 80067c2:	4619      	mov	r1, r3
 80067c4:	4620      	mov	r0, r4
 80067c6:	f815 9b01 	ldrb.w	r9, [r5], #1
 80067ca:	d0e3      	beq.n	8006794 <d_maybe_print_fold_expression.isra.20+0x11c>
 80067cc:	461a      	mov	r2, r3
 80067ce:	3301      	adds	r3, #1
 80067d0:	e7ee      	b.n	80067b0 <d_maybe_print_fold_expression.isra.20+0x138>
 80067d2:	4e45      	ldr	r6, [pc, #276]	; (80068e8 <d_maybe_print_fold_expression.isra.20+0x270>)
 80067d4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80067d8:	f106 0a04 	add.w	sl, r6, #4
 80067dc:	e017      	b.n	800680e <d_maybe_print_fold_expression.isra.20+0x196>
 80067de:	f04f 0300 	mov.w	r3, #0
 80067e2:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80067e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80067ea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80067ee:	4798      	blx	r3
 80067f0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80067f4:	3301      	adds	r3, #1
 80067f6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80067fa:	2200      	movs	r2, #0
 80067fc:	2301      	movs	r3, #1
 80067fe:	45b2      	cmp	sl, r6
 8006800:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006804:	f804 b002 	strb.w	fp, [r4, r2]
 8006808:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 800680c:	d05e      	beq.n	80068cc <d_maybe_print_fold_expression.isra.20+0x254>
 800680e:	2bff      	cmp	r3, #255	; 0xff
 8006810:	4619      	mov	r1, r3
 8006812:	4620      	mov	r0, r4
 8006814:	f816 bb01 	ldrb.w	fp, [r6], #1
 8006818:	d0e1      	beq.n	80067de <d_maybe_print_fold_expression.isra.20+0x166>
 800681a:	461a      	mov	r2, r3
 800681c:	3301      	adds	r3, #1
 800681e:	e7ee      	b.n	80067fe <d_maybe_print_fold_expression.isra.20+0x186>
 8006820:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8006824:	2bff      	cmp	r3, #255	; 0xff
 8006826:	d110      	bne.n	800684a <d_maybe_print_fold_expression.isra.20+0x1d2>
 8006828:	2600      	movs	r6, #0
 800682a:	4619      	mov	r1, r3
 800682c:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8006830:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8006834:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8006838:	4798      	blx	r3
 800683a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800683e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8006842:	1c5a      	adds	r2, r3, #1
 8006844:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8006848:	4633      	mov	r3, r6
 800684a:	1c59      	adds	r1, r3, #1
 800684c:	f04f 0c28 	mov.w	ip, #40	; 0x28
 8006850:	464a      	mov	r2, r9
 8006852:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006856:	4620      	mov	r0, r4
 8006858:	f804 c003 	strb.w	ip, [r4, r3]
 800685c:	4629      	mov	r1, r5
 800685e:	f884 c104 	strb.w	ip, [r4, #260]	; 0x104
 8006862:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80068ec <d_maybe_print_fold_expression.isra.20+0x274>
 8006866:	f7ff feb5 	bl	80065d4 <d_print_subexpr>
 800686a:	4642      	mov	r2, r8
 800686c:	4629      	mov	r1, r5
 800686e:	4620      	mov	r0, r4
 8006870:	f7ff fe70 	bl	8006554 <d_print_expr_op>
 8006874:	f109 0a03 	add.w	sl, r9, #3
 8006878:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800687c:	2600      	movs	r6, #0
 800687e:	e016      	b.n	80068ae <d_maybe_print_fold_expression.isra.20+0x236>
 8006880:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006884:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006888:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800688c:	4798      	blx	r3
 800688e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006892:	3301      	adds	r3, #1
 8006894:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006898:	2200      	movs	r2, #0
 800689a:	2301      	movs	r3, #1
 800689c:	45d1      	cmp	r9, sl
 800689e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80068a2:	f804 b002 	strb.w	fp, [r4, r2]
 80068a6:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80068aa:	f43f af1d 	beq.w	80066e8 <d_maybe_print_fold_expression.isra.20+0x70>
 80068ae:	2bff      	cmp	r3, #255	; 0xff
 80068b0:	4619      	mov	r1, r3
 80068b2:	4620      	mov	r0, r4
 80068b4:	f819 bb01 	ldrb.w	fp, [r9], #1
 80068b8:	d0e2      	beq.n	8006880 <d_maybe_print_fold_expression.isra.20+0x208>
 80068ba:	461a      	mov	r2, r3
 80068bc:	3301      	adds	r3, #1
 80068be:	e7ed      	b.n	800689c <d_maybe_print_fold_expression.isra.20+0x224>
 80068c0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80068c4:	9301      	str	r3, [sp, #4]
 80068c6:	f8d9 9008 	ldr.w	r9, [r9, #8]
 80068ca:	e6eb      	b.n	80066a4 <d_maybe_print_fold_expression.isra.20+0x2c>
 80068cc:	4642      	mov	r2, r8
 80068ce:	4629      	mov	r1, r5
 80068d0:	4620      	mov	r0, r4
 80068d2:	f7ff fe3f 	bl	8006554 <d_print_expr_op>
 80068d6:	464a      	mov	r2, r9
 80068d8:	e70c      	b.n	80066f4 <d_maybe_print_fold_expression.isra.20+0x7c>
 80068da:	1c4a      	adds	r2, r1, #1
 80068dc:	e723      	b.n	8006726 <d_maybe_print_fold_expression.isra.20+0xae>
 80068de:	1c4a      	adds	r2, r1, #1
 80068e0:	e741      	b.n	8006766 <d_maybe_print_fold_expression.isra.20+0xee>
 80068e2:	bf00      	nop
 80068e4:	0801f094 	.word	0x0801f094
 80068e8:	0801f08c 	.word	0x0801f08c
 80068ec:	0801ef98 	.word	0x0801ef98

080068f0 <d_demangle_callback.constprop.22>:
 80068f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068f4:	b0e5      	sub	sp, #404	; 0x194
 80068f6:	f890 a000 	ldrb.w	sl, [r0]
 80068fa:	f1ba 0f5f 	cmp.w	sl, #95	; 0x5f
 80068fe:	af00      	add	r7, sp, #0
 8006900:	4605      	mov	r5, r0
 8006902:	4688      	mov	r8, r1
 8006904:	4616      	mov	r6, r2
 8006906:	f000 80f3 	beq.w	8006af0 <d_demangle_callback.constprop.22+0x200>
 800690a:	2208      	movs	r2, #8
 800690c:	49bb      	ldr	r1, [pc, #748]	; (8006bfc <d_demangle_callback.constprop.22+0x30c>)
 800690e:	4628      	mov	r0, r5
 8006910:	f007 fe0e 	bl	800e530 <strncmp>
 8006914:	b948      	cbnz	r0, 800692a <d_demangle_callback.constprop.22+0x3a>
 8006916:	7a2b      	ldrb	r3, [r5, #8]
 8006918:	2b2e      	cmp	r3, #46	; 0x2e
 800691a:	f000 80d8 	beq.w	8006ace <d_demangle_callback.constprop.22+0x1de>
 800691e:	2b5f      	cmp	r3, #95	; 0x5f
 8006920:	f000 80d5 	beq.w	8006ace <d_demangle_callback.constprop.22+0x1de>
 8006924:	2b24      	cmp	r3, #36	; 0x24
 8006926:	f000 80d2 	beq.w	8006ace <d_demangle_callback.constprop.22+0x1de>
 800692a:	f04f 0900 	mov.w	r9, #0
 800692e:	4628      	mov	r0, r5
 8006930:	f000 fa38 	bl	8006da4 <strlen>
 8006934:	0142      	lsls	r2, r0, #5
 8006936:	0083      	lsls	r3, r0, #2
 8006938:	3208      	adds	r2, #8
 800693a:	330a      	adds	r3, #10
 800693c:	ebad 0d02 	sub.w	sp, sp, r2
 8006940:	f023 0307 	bic.w	r3, r3, #7
 8006944:	2400      	movs	r4, #0
 8006946:	46eb      	mov	fp, sp
 8006948:	1829      	adds	r1, r5, r0
 800694a:	ebad 0d03 	sub.w	sp, sp, r3
 800694e:	2211      	movs	r2, #17
 8006950:	0043      	lsls	r3, r0, #1
 8006952:	f1b9 0f01 	cmp.w	r9, #1
 8006956:	f8c7 b01c 	str.w	fp, [r7, #28]
 800695a:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
 800695e:	60fd      	str	r5, [r7, #12]
 8006960:	61bd      	str	r5, [r7, #24]
 8006962:	6338      	str	r0, [r7, #48]	; 0x30
 8006964:	6139      	str	r1, [r7, #16]
 8006966:	627b      	str	r3, [r7, #36]	; 0x24
 8006968:	617a      	str	r2, [r7, #20]
 800696a:	623c      	str	r4, [r7, #32]
 800696c:	62fc      	str	r4, [r7, #44]	; 0x2c
 800696e:	e9c7 440d 	strd	r4, r4, [r7, #52]	; 0x34
 8006972:	e9c7 440f 	strd	r4, r4, [r7, #60]	; 0x3c
 8006976:	647c      	str	r4, [r7, #68]	; 0x44
 8006978:	f000 80a0 	beq.w	8006abc <d_demangle_callback.constprop.22+0x1cc>
 800697c:	f0c0 80bf 	bcc.w	8006afe <d_demangle_callback.constprop.22+0x20e>
 8006980:	7aea      	ldrb	r2, [r5, #11]
 8006982:	f1b9 0f02 	cmp.w	r9, #2
 8006986:	f105 0a0b 	add.w	sl, r5, #11
 800698a:	bf14      	ite	ne
 800698c:	f04f 0944 	movne.w	r9, #68	; 0x44
 8006990:	f04f 0943 	moveq.w	r9, #67	; 0x43
 8006994:	2a5f      	cmp	r2, #95	; 0x5f
 8006996:	f8c7 a018 	str.w	sl, [r7, #24]
 800699a:	f000 80b9 	beq.w	8006b10 <d_demangle_callback.constprop.22+0x220>
 800699e:	4650      	mov	r0, sl
 80069a0:	607b      	str	r3, [r7, #4]
 80069a2:	f000 f9ff 	bl	8006da4 <strlen>
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	f340 8123 	ble.w	8006bf4 <d_demangle_callback.constprop.22+0x304>
 80069ae:	2300      	movs	r3, #0
 80069b0:	2201      	movs	r2, #1
 80069b2:	f8cb 3004 	str.w	r3, [fp, #4]
 80069b6:	623a      	str	r2, [r7, #32]
 80069b8:	2800      	cmp	r0, #0
 80069ba:	f000 811b 	beq.w	8006bf4 <d_demangle_callback.constprop.22+0x304>
 80069be:	e9cb a002 	strd	sl, r0, [fp, #8]
 80069c2:	f88b 3000 	strb.w	r3, [fp]
 80069c6:	4649      	mov	r1, r9
 80069c8:	2300      	movs	r3, #0
 80069ca:	465a      	mov	r2, fp
 80069cc:	f107 000c 	add.w	r0, r7, #12
 80069d0:	f7f9 fc1e 	bl	8000210 <d_make_comp>
 80069d4:	69bc      	ldr	r4, [r7, #24]
 80069d6:	4605      	mov	r5, r0
 80069d8:	4620      	mov	r0, r4
 80069da:	f000 f9e3 	bl	8006da4 <strlen>
 80069de:	1823      	adds	r3, r4, r0
 80069e0:	61bb      	str	r3, [r7, #24]
 80069e2:	f814 9000 	ldrb.w	r9, [r4, r0]
 80069e6:	f1b9 0f00 	cmp.w	r9, #0
 80069ea:	d16a      	bne.n	8006ac2 <d_demangle_callback.constprop.22+0x1d2>
 80069ec:	2d00      	cmp	r5, #0
 80069ee:	d068      	beq.n	8006ac2 <d_demangle_callback.constprop.22+0x1d2>
 80069f0:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80069f4:	462a      	mov	r2, r5
 80069f6:	f507 71be 	add.w	r1, r7, #380	; 0x17c
 80069fa:	f507 70c4 	add.w	r0, r7, #392	; 0x188
 80069fe:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
 8006a02:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
 8006a06:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8006a0a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8006a0e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
 8006a12:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8006a16:	f8c4 9120 	str.w	r9, [r4, #288]	; 0x120
 8006a1a:	f8c4 9124 	str.w	r9, [r4, #292]	; 0x124
 8006a1e:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
 8006a22:	f8c4 911c 	str.w	r9, [r4, #284]	; 0x11c
 8006a26:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 8006a2a:	f8c4 912c 	str.w	r9, [r4, #300]	; 0x12c
 8006a2e:	f8c4 9130 	str.w	r9, [r4, #304]	; 0x130
 8006a32:	f8c4 9134 	str.w	r9, [r4, #308]	; 0x134
 8006a36:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 8006a3a:	f8c4 913c 	str.w	r9, [r4, #316]	; 0x13c
 8006a3e:	f8c4 9140 	str.w	r9, [r4, #320]	; 0x140
 8006a42:	f7f9 fc49 	bl	80002d8 <d_count_templates_scopes>
 8006a46:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8006a4a:	f8d4 6140 	ldr.w	r6, [r4, #320]	; 0x140
 8006a4e:	f8c4 9144 	str.w	r9, [r4, #324]	; 0x144
 8006a52:	2b01      	cmp	r3, #1
 8006a54:	fb06 f603 	mul.w	r6, r6, r3
 8006a58:	461a      	mov	r2, r3
 8006a5a:	bfb8      	it	lt
 8006a5c:	2201      	movlt	r2, #1
 8006a5e:	00d2      	lsls	r2, r2, #3
 8006a60:	2e01      	cmp	r6, #1
 8006a62:	4633      	mov	r3, r6
 8006a64:	f102 0208 	add.w	r2, r2, #8
 8006a68:	bfb8      	it	lt
 8006a6a:	2301      	movlt	r3, #1
 8006a6c:	46e8      	mov	r8, sp
 8006a6e:	00db      	lsls	r3, r3, #3
 8006a70:	ebad 0d02 	sub.w	sp, sp, r2
 8006a74:	3308      	adds	r3, #8
 8006a76:	4669      	mov	r1, sp
 8006a78:	462a      	mov	r2, r5
 8006a7a:	ebad 0d03 	sub.w	sp, sp, r3
 8006a7e:	4620      	mov	r0, r4
 8006a80:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8006a84:	2111      	movs	r1, #17
 8006a86:	f8c4 d138 	str.w	sp, [r4, #312]	; 0x138
 8006a8a:	f8c4 6140 	str.w	r6, [r4, #320]	; 0x140
 8006a8e:	f7fc f899 	bl	8002bc4 <d_print_comp>
 8006a92:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006a96:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006a9a:	f804 9001 	strb.w	r9, [r4, r1]
 8006a9e:	4620      	mov	r0, r4
 8006aa0:	46c5      	mov	sp, r8
 8006aa2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006aa6:	4798      	blx	r3
 8006aa8:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 8006aac:	fab0 f080 	clz	r0, r0
 8006ab0:	0940      	lsrs	r0, r0, #5
 8006ab2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006ab6:	46bd      	mov	sp, r7
 8006ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006abc:	f1ba 0f5f 	cmp.w	sl, #95	; 0x5f
 8006ac0:	d033      	beq.n	8006b2a <d_demangle_callback.constprop.22+0x23a>
 8006ac2:	2000      	movs	r0, #0
 8006ac4:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006ac8:	46bd      	mov	sp, r7
 8006aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ace:	7a6b      	ldrb	r3, [r5, #9]
 8006ad0:	2b44      	cmp	r3, #68	; 0x44
 8006ad2:	d002      	beq.n	8006ada <d_demangle_callback.constprop.22+0x1ea>
 8006ad4:	2b49      	cmp	r3, #73	; 0x49
 8006ad6:	f47f af28 	bne.w	800692a <d_demangle_callback.constprop.22+0x3a>
 8006ada:	7aaa      	ldrb	r2, [r5, #10]
 8006adc:	2a5f      	cmp	r2, #95	; 0x5f
 8006ade:	f47f af24 	bne.w	800692a <d_demangle_callback.constprop.22+0x3a>
 8006ae2:	2b49      	cmp	r3, #73	; 0x49
 8006ae4:	bf14      	ite	ne
 8006ae6:	f04f 0903 	movne.w	r9, #3
 8006aea:	f04f 0902 	moveq.w	r9, #2
 8006aee:	e71e      	b.n	800692e <d_demangle_callback.constprop.22+0x3e>
 8006af0:	7843      	ldrb	r3, [r0, #1]
 8006af2:	2b5a      	cmp	r3, #90	; 0x5a
 8006af4:	f47f af09 	bne.w	800690a <d_demangle_callback.constprop.22+0x1a>
 8006af8:	f04f 0901 	mov.w	r9, #1
 8006afc:	e717      	b.n	800692e <d_demangle_callback.constprop.22+0x3e>
 8006afe:	f107 000c 	add.w	r0, r7, #12
 8006b02:	f7fa fe05 	bl	8001710 <d_type>
 8006b06:	69bb      	ldr	r3, [r7, #24]
 8006b08:	4605      	mov	r5, r0
 8006b0a:	f893 9000 	ldrb.w	r9, [r3]
 8006b0e:	e76a      	b.n	80069e6 <d_demangle_callback.constprop.22+0xf6>
 8006b10:	7b2a      	ldrb	r2, [r5, #12]
 8006b12:	2a5a      	cmp	r2, #90	; 0x5a
 8006b14:	f47f af43 	bne.w	800699e <d_demangle_callback.constprop.22+0xae>
 8006b18:	350d      	adds	r5, #13
 8006b1a:	4621      	mov	r1, r4
 8006b1c:	f107 000c 	add.w	r0, r7, #12
 8006b20:	61bd      	str	r5, [r7, #24]
 8006b22:	f7fb fd37 	bl	8002594 <d_encoding>
 8006b26:	4683      	mov	fp, r0
 8006b28:	e74d      	b.n	80069c6 <d_demangle_callback.constprop.22+0xd6>
 8006b2a:	786b      	ldrb	r3, [r5, #1]
 8006b2c:	2b5a      	cmp	r3, #90	; 0x5a
 8006b2e:	d1c8      	bne.n	8006ac2 <d_demangle_callback.constprop.22+0x1d2>
 8006b30:	3502      	adds	r5, #2
 8006b32:	4649      	mov	r1, r9
 8006b34:	f107 000c 	add.w	r0, r7, #12
 8006b38:	61bd      	str	r5, [r7, #24]
 8006b3a:	f7fb fd2b 	bl	8002594 <d_encoding>
 8006b3e:	697b      	ldr	r3, [r7, #20]
 8006b40:	07db      	lsls	r3, r3, #31
 8006b42:	4605      	mov	r5, r0
 8006b44:	d552      	bpl.n	8006bec <d_demangle_callback.constprop.22+0x2fc>
 8006b46:	69b8      	ldr	r0, [r7, #24]
 8006b48:	f890 9000 	ldrb.w	r9, [r0]
 8006b4c:	f1b9 0f2e 	cmp.w	r9, #46	; 0x2e
 8006b50:	f47f af49 	bne.w	80069e6 <d_demangle_callback.constprop.22+0xf6>
 8006b54:	7843      	ldrb	r3, [r0, #1]
 8006b56:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8006b5a:	2a19      	cmp	r2, #25
 8006b5c:	d93a      	bls.n	8006bd4 <d_demangle_callback.constprop.22+0x2e4>
 8006b5e:	2b5f      	cmp	r3, #95	; 0x5f
 8006b60:	d038      	beq.n	8006bd4 <d_demangle_callback.constprop.22+0x2e4>
 8006b62:	3b30      	subs	r3, #48	; 0x30
 8006b64:	2b09      	cmp	r3, #9
 8006b66:	d841      	bhi.n	8006bec <d_demangle_callback.constprop.22+0x2fc>
 8006b68:	7803      	ldrb	r3, [r0, #0]
 8006b6a:	4602      	mov	r2, r0
 8006b6c:	2b2e      	cmp	r3, #46	; 0x2e
 8006b6e:	d112      	bne.n	8006b96 <d_demangle_callback.constprop.22+0x2a6>
 8006b70:	7853      	ldrb	r3, [r2, #1]
 8006b72:	3b30      	subs	r3, #48	; 0x30
 8006b74:	2b09      	cmp	r3, #9
 8006b76:	d80e      	bhi.n	8006b96 <d_demangle_callback.constprop.22+0x2a6>
 8006b78:	7893      	ldrb	r3, [r2, #2]
 8006b7a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006b7e:	2909      	cmp	r1, #9
 8006b80:	f102 0202 	add.w	r2, r2, #2
 8006b84:	d8f2      	bhi.n	8006b6c <d_demangle_callback.constprop.22+0x27c>
 8006b86:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006b8a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006b8e:	2909      	cmp	r1, #9
 8006b90:	d9f9      	bls.n	8006b86 <d_demangle_callback.constprop.22+0x296>
 8006b92:	2b2e      	cmp	r3, #46	; 0x2e
 8006b94:	d0ec      	beq.n	8006b70 <d_demangle_callback.constprop.22+0x280>
 8006b96:	e9d7 1308 	ldrd	r1, r3, [r7, #32]
 8006b9a:	4299      	cmp	r1, r3
 8006b9c:	61ba      	str	r2, [r7, #24]
 8006b9e:	da17      	bge.n	8006bd0 <d_demangle_callback.constprop.22+0x2e0>
 8006ba0:	f8d7 e01c 	ldr.w	lr, [r7, #28]
 8006ba4:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8006ba8:	eb0e 030c 	add.w	r3, lr, ip
 8006bac:	3101      	adds	r1, #1
 8006bae:	1a12      	subs	r2, r2, r0
 8006bb0:	605c      	str	r4, [r3, #4]
 8006bb2:	6239      	str	r1, [r7, #32]
 8006bb4:	d00c      	beq.n	8006bd0 <d_demangle_callback.constprop.22+0x2e0>
 8006bb6:	605c      	str	r4, [r3, #4]
 8006bb8:	f80e 400c 	strb.w	r4, [lr, ip]
 8006bbc:	e9c3 0202 	strd	r0, r2, [r3, #8]
 8006bc0:	462a      	mov	r2, r5
 8006bc2:	214d      	movs	r1, #77	; 0x4d
 8006bc4:	f107 000c 	add.w	r0, r7, #12
 8006bc8:	f7f9 fb22 	bl	8000210 <d_make_comp>
 8006bcc:	4605      	mov	r5, r0
 8006bce:	e7ba      	b.n	8006b46 <d_demangle_callback.constprop.22+0x256>
 8006bd0:	2300      	movs	r3, #0
 8006bd2:	e7f5      	b.n	8006bc0 <d_demangle_callback.constprop.22+0x2d0>
 8006bd4:	1c81      	adds	r1, r0, #2
 8006bd6:	460a      	mov	r2, r1
 8006bd8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006bdc:	f1a3 0c61 	sub.w	ip, r3, #97	; 0x61
 8006be0:	f1bc 0f19 	cmp.w	ip, #25
 8006be4:	d9f7      	bls.n	8006bd6 <d_demangle_callback.constprop.22+0x2e6>
 8006be6:	2b5f      	cmp	r3, #95	; 0x5f
 8006be8:	d0f5      	beq.n	8006bd6 <d_demangle_callback.constprop.22+0x2e6>
 8006bea:	e7bf      	b.n	8006b6c <d_demangle_callback.constprop.22+0x27c>
 8006bec:	69bb      	ldr	r3, [r7, #24]
 8006bee:	f893 9000 	ldrb.w	r9, [r3]
 8006bf2:	e6f8      	b.n	80069e6 <d_demangle_callback.constprop.22+0xf6>
 8006bf4:	f04f 0b00 	mov.w	fp, #0
 8006bf8:	e6e5      	b.n	80069c6 <d_demangle_callback.constprop.22+0xd6>
 8006bfa:	bf00      	nop
 8006bfc:	0801ed24 	.word	0x0801ed24

08006c00 <__cxa_demangle>:
 8006c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c04:	b084      	sub	sp, #16
 8006c06:	b380      	cbz	r0, 8006c6a <__cxa_demangle+0x6a>
 8006c08:	b101      	cbz	r1, 8006c0c <__cxa_demangle+0xc>
 8006c0a:	b372      	cbz	r2, 8006c6a <__cxa_demangle+0x6a>
 8006c0c:	2400      	movs	r4, #0
 8006c0e:	4617      	mov	r7, r2
 8006c10:	460e      	mov	r6, r1
 8006c12:	466a      	mov	r2, sp
 8006c14:	492b      	ldr	r1, [pc, #172]	; (8006cc4 <__cxa_demangle+0xc4>)
 8006c16:	461d      	mov	r5, r3
 8006c18:	e9cd 4400 	strd	r4, r4, [sp]
 8006c1c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8006c20:	f7ff fe66 	bl	80068f0 <d_demangle_callback.constprop.22>
 8006c24:	2800      	cmp	r0, #0
 8006c26:	d047      	beq.n	8006cb8 <__cxa_demangle+0xb8>
 8006c28:	9b03      	ldr	r3, [sp, #12]
 8006c2a:	9c00      	ldr	r4, [sp, #0]
 8006c2c:	b9ab      	cbnz	r3, 8006c5a <__cxa_demangle+0x5a>
 8006c2e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8006c32:	b36c      	cbz	r4, 8006c90 <__cxa_demangle+0x90>
 8006c34:	b1b6      	cbz	r6, 8006c64 <__cxa_demangle+0x64>
 8006c36:	4620      	mov	r0, r4
 8006c38:	f000 f8b4 	bl	8006da4 <strlen>
 8006c3c:	683b      	ldr	r3, [r7, #0]
 8006c3e:	4298      	cmp	r0, r3
 8006c40:	d31c      	bcc.n	8006c7c <__cxa_demangle+0x7c>
 8006c42:	4630      	mov	r0, r6
 8006c44:	f006 ff46 	bl	800dad4 <free>
 8006c48:	f8c7 8000 	str.w	r8, [r7]
 8006c4c:	b195      	cbz	r5, 8006c74 <__cxa_demangle+0x74>
 8006c4e:	2300      	movs	r3, #0
 8006c50:	4620      	mov	r0, r4
 8006c52:	602b      	str	r3, [r5, #0]
 8006c54:	b004      	add	sp, #16
 8006c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c5a:	b334      	cbz	r4, 8006caa <__cxa_demangle+0xaa>
 8006c5c:	f04f 0801 	mov.w	r8, #1
 8006c60:	2e00      	cmp	r6, #0
 8006c62:	d1e8      	bne.n	8006c36 <__cxa_demangle+0x36>
 8006c64:	2f00      	cmp	r7, #0
 8006c66:	d1ef      	bne.n	8006c48 <__cxa_demangle+0x48>
 8006c68:	e7f0      	b.n	8006c4c <__cxa_demangle+0x4c>
 8006c6a:	b113      	cbz	r3, 8006c72 <__cxa_demangle+0x72>
 8006c6c:	f06f 0202 	mvn.w	r2, #2
 8006c70:	601a      	str	r2, [r3, #0]
 8006c72:	2400      	movs	r4, #0
 8006c74:	4620      	mov	r0, r4
 8006c76:	b004      	add	sp, #16
 8006c78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c7c:	1c42      	adds	r2, r0, #1
 8006c7e:	4621      	mov	r1, r4
 8006c80:	4630      	mov	r0, r6
 8006c82:	f007 f974 	bl	800df6e <memcpy>
 8006c86:	4620      	mov	r0, r4
 8006c88:	f006 ff24 	bl	800dad4 <free>
 8006c8c:	4634      	mov	r4, r6
 8006c8e:	e7dd      	b.n	8006c4c <__cxa_demangle+0x4c>
 8006c90:	2d00      	cmp	r5, #0
 8006c92:	d0ee      	beq.n	8006c72 <__cxa_demangle+0x72>
 8006c94:	f1b8 0f01 	cmp.w	r8, #1
 8006c98:	d009      	beq.n	8006cae <__cxa_demangle+0xae>
 8006c9a:	2400      	movs	r4, #0
 8006c9c:	f06f 0301 	mvn.w	r3, #1
 8006ca0:	4620      	mov	r0, r4
 8006ca2:	602b      	str	r3, [r5, #0]
 8006ca4:	b004      	add	sp, #16
 8006ca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006caa:	2d00      	cmp	r5, #0
 8006cac:	d0e1      	beq.n	8006c72 <__cxa_demangle+0x72>
 8006cae:	f04f 33ff 	mov.w	r3, #4294967295
 8006cb2:	602b      	str	r3, [r5, #0]
 8006cb4:	2400      	movs	r4, #0
 8006cb6:	e7dd      	b.n	8006c74 <__cxa_demangle+0x74>
 8006cb8:	9800      	ldr	r0, [sp, #0]
 8006cba:	f006 ff0b 	bl	800dad4 <free>
 8006cbe:	2d00      	cmp	r5, #0
 8006cc0:	d1eb      	bne.n	8006c9a <__cxa_demangle+0x9a>
 8006cc2:	e7d6      	b.n	8006c72 <__cxa_demangle+0x72>
 8006cc4:	08000889 	.word	0x08000889

08006cc8 <__gcclibcxx_demangle_callback>:
 8006cc8:	b160      	cbz	r0, 8006ce4 <__gcclibcxx_demangle_callback+0x1c>
 8006cca:	b508      	push	{r3, lr}
 8006ccc:	b139      	cbz	r1, 8006cde <__gcclibcxx_demangle_callback+0x16>
 8006cce:	f7ff fe0f 	bl	80068f0 <d_demangle_callback.constprop.22>
 8006cd2:	2800      	cmp	r0, #0
 8006cd4:	bf0c      	ite	eq
 8006cd6:	f06f 0001 	mvneq.w	r0, #1
 8006cda:	2000      	movne	r0, #0
 8006cdc:	bd08      	pop	{r3, pc}
 8006cde:	f06f 0002 	mvn.w	r0, #2
 8006ce2:	bd08      	pop	{r3, pc}
 8006ce4:	f06f 0002 	mvn.w	r0, #2
 8006ce8:	4770      	bx	lr
 8006cea:	bf00      	nop
 8006cec:	0000      	movs	r0, r0
	...

08006cf0 <memchr>:
 8006cf0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006cf4:	2a10      	cmp	r2, #16
 8006cf6:	db2b      	blt.n	8006d50 <memchr+0x60>
 8006cf8:	f010 0f07 	tst.w	r0, #7
 8006cfc:	d008      	beq.n	8006d10 <memchr+0x20>
 8006cfe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006d02:	3a01      	subs	r2, #1
 8006d04:	428b      	cmp	r3, r1
 8006d06:	d02d      	beq.n	8006d64 <memchr+0x74>
 8006d08:	f010 0f07 	tst.w	r0, #7
 8006d0c:	b342      	cbz	r2, 8006d60 <memchr+0x70>
 8006d0e:	d1f6      	bne.n	8006cfe <memchr+0xe>
 8006d10:	b4f0      	push	{r4, r5, r6, r7}
 8006d12:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006d16:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8006d1a:	f022 0407 	bic.w	r4, r2, #7
 8006d1e:	f07f 0700 	mvns.w	r7, #0
 8006d22:	2300      	movs	r3, #0
 8006d24:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006d28:	3c08      	subs	r4, #8
 8006d2a:	ea85 0501 	eor.w	r5, r5, r1
 8006d2e:	ea86 0601 	eor.w	r6, r6, r1
 8006d32:	fa85 f547 	uadd8	r5, r5, r7
 8006d36:	faa3 f587 	sel	r5, r3, r7
 8006d3a:	fa86 f647 	uadd8	r6, r6, r7
 8006d3e:	faa5 f687 	sel	r6, r5, r7
 8006d42:	b98e      	cbnz	r6, 8006d68 <memchr+0x78>
 8006d44:	d1ee      	bne.n	8006d24 <memchr+0x34>
 8006d46:	bcf0      	pop	{r4, r5, r6, r7}
 8006d48:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006d4c:	f002 0207 	and.w	r2, r2, #7
 8006d50:	b132      	cbz	r2, 8006d60 <memchr+0x70>
 8006d52:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006d56:	3a01      	subs	r2, #1
 8006d58:	ea83 0301 	eor.w	r3, r3, r1
 8006d5c:	b113      	cbz	r3, 8006d64 <memchr+0x74>
 8006d5e:	d1f8      	bne.n	8006d52 <memchr+0x62>
 8006d60:	2000      	movs	r0, #0
 8006d62:	4770      	bx	lr
 8006d64:	3801      	subs	r0, #1
 8006d66:	4770      	bx	lr
 8006d68:	2d00      	cmp	r5, #0
 8006d6a:	bf06      	itte	eq
 8006d6c:	4635      	moveq	r5, r6
 8006d6e:	3803      	subeq	r0, #3
 8006d70:	3807      	subne	r0, #7
 8006d72:	f015 0f01 	tst.w	r5, #1
 8006d76:	d107      	bne.n	8006d88 <memchr+0x98>
 8006d78:	3001      	adds	r0, #1
 8006d7a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8006d7e:	bf02      	ittt	eq
 8006d80:	3001      	addeq	r0, #1
 8006d82:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006d86:	3001      	addeq	r0, #1
 8006d88:	bcf0      	pop	{r4, r5, r6, r7}
 8006d8a:	3801      	subs	r0, #1
 8006d8c:	4770      	bx	lr
 8006d8e:	bf00      	nop

08006d90 <strcmp>:
 8006d90:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006d98:	2a01      	cmp	r2, #1
 8006d9a:	bf28      	it	cs
 8006d9c:	429a      	cmpcs	r2, r3
 8006d9e:	d0f7      	beq.n	8006d90 <strcmp>
 8006da0:	1ad0      	subs	r0, r2, r3
 8006da2:	4770      	bx	lr

08006da4 <strlen>:
 8006da4:	4603      	mov	r3, r0
 8006da6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006daa:	2a00      	cmp	r2, #0
 8006dac:	d1fb      	bne.n	8006da6 <strlen+0x2>
 8006dae:	1a18      	subs	r0, r3, r0
 8006db0:	3801      	subs	r0, #1
 8006db2:	4770      	bx	lr

08006db4 <__aeabi_drsub>:
 8006db4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006db8:	e002      	b.n	8006dc0 <__adddf3>
 8006dba:	bf00      	nop

08006dbc <__aeabi_dsub>:
 8006dbc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006dc0 <__adddf3>:
 8006dc0:	b530      	push	{r4, r5, lr}
 8006dc2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006dc6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8006dca:	ea94 0f05 	teq	r4, r5
 8006dce:	bf08      	it	eq
 8006dd0:	ea90 0f02 	teqeq	r0, r2
 8006dd4:	bf1f      	itttt	ne
 8006dd6:	ea54 0c00 	orrsne.w	ip, r4, r0
 8006dda:	ea55 0c02 	orrsne.w	ip, r5, r2
 8006dde:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8006de2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006de6:	f000 80e2 	beq.w	8006fae <__adddf3+0x1ee>
 8006dea:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006dee:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006df2:	bfb8      	it	lt
 8006df4:	426d      	neglt	r5, r5
 8006df6:	dd0c      	ble.n	8006e12 <__adddf3+0x52>
 8006df8:	442c      	add	r4, r5
 8006dfa:	ea80 0202 	eor.w	r2, r0, r2
 8006dfe:	ea81 0303 	eor.w	r3, r1, r3
 8006e02:	ea82 0000 	eor.w	r0, r2, r0
 8006e06:	ea83 0101 	eor.w	r1, r3, r1
 8006e0a:	ea80 0202 	eor.w	r2, r0, r2
 8006e0e:	ea81 0303 	eor.w	r3, r1, r3
 8006e12:	2d36      	cmp	r5, #54	; 0x36
 8006e14:	bf88      	it	hi
 8006e16:	bd30      	pophi	{r4, r5, pc}
 8006e18:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006e1c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006e20:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8006e24:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8006e28:	d002      	beq.n	8006e30 <__adddf3+0x70>
 8006e2a:	4240      	negs	r0, r0
 8006e2c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006e30:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006e34:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006e38:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8006e3c:	d002      	beq.n	8006e44 <__adddf3+0x84>
 8006e3e:	4252      	negs	r2, r2
 8006e40:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8006e44:	ea94 0f05 	teq	r4, r5
 8006e48:	f000 80a7 	beq.w	8006f9a <__adddf3+0x1da>
 8006e4c:	f1a4 0401 	sub.w	r4, r4, #1
 8006e50:	f1d5 0e20 	rsbs	lr, r5, #32
 8006e54:	db0d      	blt.n	8006e72 <__adddf3+0xb2>
 8006e56:	fa02 fc0e 	lsl.w	ip, r2, lr
 8006e5a:	fa22 f205 	lsr.w	r2, r2, r5
 8006e5e:	1880      	adds	r0, r0, r2
 8006e60:	f141 0100 	adc.w	r1, r1, #0
 8006e64:	fa03 f20e 	lsl.w	r2, r3, lr
 8006e68:	1880      	adds	r0, r0, r2
 8006e6a:	fa43 f305 	asr.w	r3, r3, r5
 8006e6e:	4159      	adcs	r1, r3
 8006e70:	e00e      	b.n	8006e90 <__adddf3+0xd0>
 8006e72:	f1a5 0520 	sub.w	r5, r5, #32
 8006e76:	f10e 0e20 	add.w	lr, lr, #32
 8006e7a:	2a01      	cmp	r2, #1
 8006e7c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8006e80:	bf28      	it	cs
 8006e82:	f04c 0c02 	orrcs.w	ip, ip, #2
 8006e86:	fa43 f305 	asr.w	r3, r3, r5
 8006e8a:	18c0      	adds	r0, r0, r3
 8006e8c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8006e90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006e94:	d507      	bpl.n	8006ea6 <__adddf3+0xe6>
 8006e96:	f04f 0e00 	mov.w	lr, #0
 8006e9a:	f1dc 0c00 	rsbs	ip, ip, #0
 8006e9e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8006ea2:	eb6e 0101 	sbc.w	r1, lr, r1
 8006ea6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8006eaa:	d31b      	bcc.n	8006ee4 <__adddf3+0x124>
 8006eac:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006eb0:	d30c      	bcc.n	8006ecc <__adddf3+0x10c>
 8006eb2:	0849      	lsrs	r1, r1, #1
 8006eb4:	ea5f 0030 	movs.w	r0, r0, rrx
 8006eb8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8006ebc:	f104 0401 	add.w	r4, r4, #1
 8006ec0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8006ec4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8006ec8:	f080 809a 	bcs.w	8007000 <__adddf3+0x240>
 8006ecc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8006ed0:	bf08      	it	eq
 8006ed2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8006ed6:	f150 0000 	adcs.w	r0, r0, #0
 8006eda:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006ede:	ea41 0105 	orr.w	r1, r1, r5
 8006ee2:	bd30      	pop	{r4, r5, pc}
 8006ee4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8006ee8:	4140      	adcs	r0, r0
 8006eea:	eb41 0101 	adc.w	r1, r1, r1
 8006eee:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006ef2:	f1a4 0401 	sub.w	r4, r4, #1
 8006ef6:	d1e9      	bne.n	8006ecc <__adddf3+0x10c>
 8006ef8:	f091 0f00 	teq	r1, #0
 8006efc:	bf04      	itt	eq
 8006efe:	4601      	moveq	r1, r0
 8006f00:	2000      	moveq	r0, #0
 8006f02:	fab1 f381 	clz	r3, r1
 8006f06:	bf08      	it	eq
 8006f08:	3320      	addeq	r3, #32
 8006f0a:	f1a3 030b 	sub.w	r3, r3, #11
 8006f0e:	f1b3 0220 	subs.w	r2, r3, #32
 8006f12:	da0c      	bge.n	8006f2e <__adddf3+0x16e>
 8006f14:	320c      	adds	r2, #12
 8006f16:	dd08      	ble.n	8006f2a <__adddf3+0x16a>
 8006f18:	f102 0c14 	add.w	ip, r2, #20
 8006f1c:	f1c2 020c 	rsb	r2, r2, #12
 8006f20:	fa01 f00c 	lsl.w	r0, r1, ip
 8006f24:	fa21 f102 	lsr.w	r1, r1, r2
 8006f28:	e00c      	b.n	8006f44 <__adddf3+0x184>
 8006f2a:	f102 0214 	add.w	r2, r2, #20
 8006f2e:	bfd8      	it	le
 8006f30:	f1c2 0c20 	rsble	ip, r2, #32
 8006f34:	fa01 f102 	lsl.w	r1, r1, r2
 8006f38:	fa20 fc0c 	lsr.w	ip, r0, ip
 8006f3c:	bfdc      	itt	le
 8006f3e:	ea41 010c 	orrle.w	r1, r1, ip
 8006f42:	4090      	lslle	r0, r2
 8006f44:	1ae4      	subs	r4, r4, r3
 8006f46:	bfa2      	ittt	ge
 8006f48:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8006f4c:	4329      	orrge	r1, r5
 8006f4e:	bd30      	popge	{r4, r5, pc}
 8006f50:	ea6f 0404 	mvn.w	r4, r4
 8006f54:	3c1f      	subs	r4, #31
 8006f56:	da1c      	bge.n	8006f92 <__adddf3+0x1d2>
 8006f58:	340c      	adds	r4, #12
 8006f5a:	dc0e      	bgt.n	8006f7a <__adddf3+0x1ba>
 8006f5c:	f104 0414 	add.w	r4, r4, #20
 8006f60:	f1c4 0220 	rsb	r2, r4, #32
 8006f64:	fa20 f004 	lsr.w	r0, r0, r4
 8006f68:	fa01 f302 	lsl.w	r3, r1, r2
 8006f6c:	ea40 0003 	orr.w	r0, r0, r3
 8006f70:	fa21 f304 	lsr.w	r3, r1, r4
 8006f74:	ea45 0103 	orr.w	r1, r5, r3
 8006f78:	bd30      	pop	{r4, r5, pc}
 8006f7a:	f1c4 040c 	rsb	r4, r4, #12
 8006f7e:	f1c4 0220 	rsb	r2, r4, #32
 8006f82:	fa20 f002 	lsr.w	r0, r0, r2
 8006f86:	fa01 f304 	lsl.w	r3, r1, r4
 8006f8a:	ea40 0003 	orr.w	r0, r0, r3
 8006f8e:	4629      	mov	r1, r5
 8006f90:	bd30      	pop	{r4, r5, pc}
 8006f92:	fa21 f004 	lsr.w	r0, r1, r4
 8006f96:	4629      	mov	r1, r5
 8006f98:	bd30      	pop	{r4, r5, pc}
 8006f9a:	f094 0f00 	teq	r4, #0
 8006f9e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8006fa2:	bf06      	itte	eq
 8006fa4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8006fa8:	3401      	addeq	r4, #1
 8006faa:	3d01      	subne	r5, #1
 8006fac:	e74e      	b.n	8006e4c <__adddf3+0x8c>
 8006fae:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8006fb2:	bf18      	it	ne
 8006fb4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006fb8:	d029      	beq.n	800700e <__adddf3+0x24e>
 8006fba:	ea94 0f05 	teq	r4, r5
 8006fbe:	bf08      	it	eq
 8006fc0:	ea90 0f02 	teqeq	r0, r2
 8006fc4:	d005      	beq.n	8006fd2 <__adddf3+0x212>
 8006fc6:	ea54 0c00 	orrs.w	ip, r4, r0
 8006fca:	bf04      	itt	eq
 8006fcc:	4619      	moveq	r1, r3
 8006fce:	4610      	moveq	r0, r2
 8006fd0:	bd30      	pop	{r4, r5, pc}
 8006fd2:	ea91 0f03 	teq	r1, r3
 8006fd6:	bf1e      	ittt	ne
 8006fd8:	2100      	movne	r1, #0
 8006fda:	2000      	movne	r0, #0
 8006fdc:	bd30      	popne	{r4, r5, pc}
 8006fde:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8006fe2:	d105      	bne.n	8006ff0 <__adddf3+0x230>
 8006fe4:	0040      	lsls	r0, r0, #1
 8006fe6:	4149      	adcs	r1, r1
 8006fe8:	bf28      	it	cs
 8006fea:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8006fee:	bd30      	pop	{r4, r5, pc}
 8006ff0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006ff4:	bf3c      	itt	cc
 8006ff6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8006ffa:	bd30      	popcc	{r4, r5, pc}
 8006ffc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007000:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007004:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007008:	f04f 0000 	mov.w	r0, #0
 800700c:	bd30      	pop	{r4, r5, pc}
 800700e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007012:	bf1a      	itte	ne
 8007014:	4619      	movne	r1, r3
 8007016:	4610      	movne	r0, r2
 8007018:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800701c:	bf1c      	itt	ne
 800701e:	460b      	movne	r3, r1
 8007020:	4602      	movne	r2, r0
 8007022:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007026:	bf06      	itte	eq
 8007028:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800702c:	ea91 0f03 	teqeq	r1, r3
 8007030:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007034:	bd30      	pop	{r4, r5, pc}
 8007036:	bf00      	nop

08007038 <__aeabi_ui2d>:
 8007038:	f090 0f00 	teq	r0, #0
 800703c:	bf04      	itt	eq
 800703e:	2100      	moveq	r1, #0
 8007040:	4770      	bxeq	lr
 8007042:	b530      	push	{r4, r5, lr}
 8007044:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007048:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800704c:	f04f 0500 	mov.w	r5, #0
 8007050:	f04f 0100 	mov.w	r1, #0
 8007054:	e750      	b.n	8006ef8 <__adddf3+0x138>
 8007056:	bf00      	nop

08007058 <__aeabi_i2d>:
 8007058:	f090 0f00 	teq	r0, #0
 800705c:	bf04      	itt	eq
 800705e:	2100      	moveq	r1, #0
 8007060:	4770      	bxeq	lr
 8007062:	b530      	push	{r4, r5, lr}
 8007064:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007068:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800706c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007070:	bf48      	it	mi
 8007072:	4240      	negmi	r0, r0
 8007074:	f04f 0100 	mov.w	r1, #0
 8007078:	e73e      	b.n	8006ef8 <__adddf3+0x138>
 800707a:	bf00      	nop

0800707c <__aeabi_f2d>:
 800707c:	0042      	lsls	r2, r0, #1
 800707e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007082:	ea4f 0131 	mov.w	r1, r1, rrx
 8007086:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800708a:	bf1f      	itttt	ne
 800708c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007090:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007094:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007098:	4770      	bxne	lr
 800709a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800709e:	bf08      	it	eq
 80070a0:	4770      	bxeq	lr
 80070a2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80070a6:	bf04      	itt	eq
 80070a8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80070ac:	4770      	bxeq	lr
 80070ae:	b530      	push	{r4, r5, lr}
 80070b0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80070b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80070b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80070bc:	e71c      	b.n	8006ef8 <__adddf3+0x138>
 80070be:	bf00      	nop

080070c0 <__aeabi_ul2d>:
 80070c0:	ea50 0201 	orrs.w	r2, r0, r1
 80070c4:	bf08      	it	eq
 80070c6:	4770      	bxeq	lr
 80070c8:	b530      	push	{r4, r5, lr}
 80070ca:	f04f 0500 	mov.w	r5, #0
 80070ce:	e00a      	b.n	80070e6 <__aeabi_l2d+0x16>

080070d0 <__aeabi_l2d>:
 80070d0:	ea50 0201 	orrs.w	r2, r0, r1
 80070d4:	bf08      	it	eq
 80070d6:	4770      	bxeq	lr
 80070d8:	b530      	push	{r4, r5, lr}
 80070da:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80070de:	d502      	bpl.n	80070e6 <__aeabi_l2d+0x16>
 80070e0:	4240      	negs	r0, r0
 80070e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80070e6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80070ea:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80070ee:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80070f2:	f43f aed8 	beq.w	8006ea6 <__adddf3+0xe6>
 80070f6:	f04f 0203 	mov.w	r2, #3
 80070fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80070fe:	bf18      	it	ne
 8007100:	3203      	addne	r2, #3
 8007102:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007106:	bf18      	it	ne
 8007108:	3203      	addne	r2, #3
 800710a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800710e:	f1c2 0320 	rsb	r3, r2, #32
 8007112:	fa00 fc03 	lsl.w	ip, r0, r3
 8007116:	fa20 f002 	lsr.w	r0, r0, r2
 800711a:	fa01 fe03 	lsl.w	lr, r1, r3
 800711e:	ea40 000e 	orr.w	r0, r0, lr
 8007122:	fa21 f102 	lsr.w	r1, r1, r2
 8007126:	4414      	add	r4, r2
 8007128:	e6bd      	b.n	8006ea6 <__adddf3+0xe6>
 800712a:	bf00      	nop

0800712c <__aeabi_dmul>:
 800712c:	b570      	push	{r4, r5, r6, lr}
 800712e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007132:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8007136:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800713a:	bf1d      	ittte	ne
 800713c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8007140:	ea94 0f0c 	teqne	r4, ip
 8007144:	ea95 0f0c 	teqne	r5, ip
 8007148:	f000 f8de 	bleq	8007308 <__aeabi_dmul+0x1dc>
 800714c:	442c      	add	r4, r5
 800714e:	ea81 0603 	eor.w	r6, r1, r3
 8007152:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8007156:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800715a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800715e:	bf18      	it	ne
 8007160:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8007164:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007168:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800716c:	d038      	beq.n	80071e0 <__aeabi_dmul+0xb4>
 800716e:	fba0 ce02 	umull	ip, lr, r0, r2
 8007172:	f04f 0500 	mov.w	r5, #0
 8007176:	fbe1 e502 	umlal	lr, r5, r1, r2
 800717a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800717e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8007182:	f04f 0600 	mov.w	r6, #0
 8007186:	fbe1 5603 	umlal	r5, r6, r1, r3
 800718a:	f09c 0f00 	teq	ip, #0
 800718e:	bf18      	it	ne
 8007190:	f04e 0e01 	orrne.w	lr, lr, #1
 8007194:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8007198:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800719c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80071a0:	d204      	bcs.n	80071ac <__aeabi_dmul+0x80>
 80071a2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80071a6:	416d      	adcs	r5, r5
 80071a8:	eb46 0606 	adc.w	r6, r6, r6
 80071ac:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80071b0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80071b4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80071b8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80071bc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80071c0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80071c4:	bf88      	it	hi
 80071c6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80071ca:	d81e      	bhi.n	800720a <__aeabi_dmul+0xde>
 80071cc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80071d0:	bf08      	it	eq
 80071d2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80071d6:	f150 0000 	adcs.w	r0, r0, #0
 80071da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80071de:	bd70      	pop	{r4, r5, r6, pc}
 80071e0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80071e4:	ea46 0101 	orr.w	r1, r6, r1
 80071e8:	ea40 0002 	orr.w	r0, r0, r2
 80071ec:	ea81 0103 	eor.w	r1, r1, r3
 80071f0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80071f4:	bfc2      	ittt	gt
 80071f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80071fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80071fe:	bd70      	popgt	{r4, r5, r6, pc}
 8007200:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007204:	f04f 0e00 	mov.w	lr, #0
 8007208:	3c01      	subs	r4, #1
 800720a:	f300 80ab 	bgt.w	8007364 <__aeabi_dmul+0x238>
 800720e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8007212:	bfde      	ittt	le
 8007214:	2000      	movle	r0, #0
 8007216:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800721a:	bd70      	pople	{r4, r5, r6, pc}
 800721c:	f1c4 0400 	rsb	r4, r4, #0
 8007220:	3c20      	subs	r4, #32
 8007222:	da35      	bge.n	8007290 <__aeabi_dmul+0x164>
 8007224:	340c      	adds	r4, #12
 8007226:	dc1b      	bgt.n	8007260 <__aeabi_dmul+0x134>
 8007228:	f104 0414 	add.w	r4, r4, #20
 800722c:	f1c4 0520 	rsb	r5, r4, #32
 8007230:	fa00 f305 	lsl.w	r3, r0, r5
 8007234:	fa20 f004 	lsr.w	r0, r0, r4
 8007238:	fa01 f205 	lsl.w	r2, r1, r5
 800723c:	ea40 0002 	orr.w	r0, r0, r2
 8007240:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8007244:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007248:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800724c:	fa21 f604 	lsr.w	r6, r1, r4
 8007250:	eb42 0106 	adc.w	r1, r2, r6
 8007254:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007258:	bf08      	it	eq
 800725a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800725e:	bd70      	pop	{r4, r5, r6, pc}
 8007260:	f1c4 040c 	rsb	r4, r4, #12
 8007264:	f1c4 0520 	rsb	r5, r4, #32
 8007268:	fa00 f304 	lsl.w	r3, r0, r4
 800726c:	fa20 f005 	lsr.w	r0, r0, r5
 8007270:	fa01 f204 	lsl.w	r2, r1, r4
 8007274:	ea40 0002 	orr.w	r0, r0, r2
 8007278:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800727c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8007280:	f141 0100 	adc.w	r1, r1, #0
 8007284:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007288:	bf08      	it	eq
 800728a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800728e:	bd70      	pop	{r4, r5, r6, pc}
 8007290:	f1c4 0520 	rsb	r5, r4, #32
 8007294:	fa00 f205 	lsl.w	r2, r0, r5
 8007298:	ea4e 0e02 	orr.w	lr, lr, r2
 800729c:	fa20 f304 	lsr.w	r3, r0, r4
 80072a0:	fa01 f205 	lsl.w	r2, r1, r5
 80072a4:	ea43 0302 	orr.w	r3, r3, r2
 80072a8:	fa21 f004 	lsr.w	r0, r1, r4
 80072ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80072b0:	fa21 f204 	lsr.w	r2, r1, r4
 80072b4:	ea20 0002 	bic.w	r0, r0, r2
 80072b8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80072bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80072c0:	bf08      	it	eq
 80072c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80072c6:	bd70      	pop	{r4, r5, r6, pc}
 80072c8:	f094 0f00 	teq	r4, #0
 80072cc:	d10f      	bne.n	80072ee <__aeabi_dmul+0x1c2>
 80072ce:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80072d2:	0040      	lsls	r0, r0, #1
 80072d4:	eb41 0101 	adc.w	r1, r1, r1
 80072d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80072dc:	bf08      	it	eq
 80072de:	3c01      	subeq	r4, #1
 80072e0:	d0f7      	beq.n	80072d2 <__aeabi_dmul+0x1a6>
 80072e2:	ea41 0106 	orr.w	r1, r1, r6
 80072e6:	f095 0f00 	teq	r5, #0
 80072ea:	bf18      	it	ne
 80072ec:	4770      	bxne	lr
 80072ee:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80072f2:	0052      	lsls	r2, r2, #1
 80072f4:	eb43 0303 	adc.w	r3, r3, r3
 80072f8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80072fc:	bf08      	it	eq
 80072fe:	3d01      	subeq	r5, #1
 8007300:	d0f7      	beq.n	80072f2 <__aeabi_dmul+0x1c6>
 8007302:	ea43 0306 	orr.w	r3, r3, r6
 8007306:	4770      	bx	lr
 8007308:	ea94 0f0c 	teq	r4, ip
 800730c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8007310:	bf18      	it	ne
 8007312:	ea95 0f0c 	teqne	r5, ip
 8007316:	d00c      	beq.n	8007332 <__aeabi_dmul+0x206>
 8007318:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800731c:	bf18      	it	ne
 800731e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8007322:	d1d1      	bne.n	80072c8 <__aeabi_dmul+0x19c>
 8007324:	ea81 0103 	eor.w	r1, r1, r3
 8007328:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800732c:	f04f 0000 	mov.w	r0, #0
 8007330:	bd70      	pop	{r4, r5, r6, pc}
 8007332:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8007336:	bf06      	itte	eq
 8007338:	4610      	moveq	r0, r2
 800733a:	4619      	moveq	r1, r3
 800733c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8007340:	d019      	beq.n	8007376 <__aeabi_dmul+0x24a>
 8007342:	ea94 0f0c 	teq	r4, ip
 8007346:	d102      	bne.n	800734e <__aeabi_dmul+0x222>
 8007348:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800734c:	d113      	bne.n	8007376 <__aeabi_dmul+0x24a>
 800734e:	ea95 0f0c 	teq	r5, ip
 8007352:	d105      	bne.n	8007360 <__aeabi_dmul+0x234>
 8007354:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8007358:	bf1c      	itt	ne
 800735a:	4610      	movne	r0, r2
 800735c:	4619      	movne	r1, r3
 800735e:	d10a      	bne.n	8007376 <__aeabi_dmul+0x24a>
 8007360:	ea81 0103 	eor.w	r1, r1, r3
 8007364:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8007368:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800736c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007370:	f04f 0000 	mov.w	r0, #0
 8007374:	bd70      	pop	{r4, r5, r6, pc}
 8007376:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800737a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800737e:	bd70      	pop	{r4, r5, r6, pc}

08007380 <__aeabi_ddiv>:
 8007380:	b570      	push	{r4, r5, r6, lr}
 8007382:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007386:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800738a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800738e:	bf1d      	ittte	ne
 8007390:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8007394:	ea94 0f0c 	teqne	r4, ip
 8007398:	ea95 0f0c 	teqne	r5, ip
 800739c:	f000 f8a7 	bleq	80074ee <__aeabi_ddiv+0x16e>
 80073a0:	eba4 0405 	sub.w	r4, r4, r5
 80073a4:	ea81 0e03 	eor.w	lr, r1, r3
 80073a8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80073ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80073b0:	f000 8088 	beq.w	80074c4 <__aeabi_ddiv+0x144>
 80073b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80073b8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80073bc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80073c0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80073c4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80073c8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80073cc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80073d0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80073d4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80073d8:	429d      	cmp	r5, r3
 80073da:	bf08      	it	eq
 80073dc:	4296      	cmpeq	r6, r2
 80073de:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80073e2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80073e6:	d202      	bcs.n	80073ee <__aeabi_ddiv+0x6e>
 80073e8:	085b      	lsrs	r3, r3, #1
 80073ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80073ee:	1ab6      	subs	r6, r6, r2
 80073f0:	eb65 0503 	sbc.w	r5, r5, r3
 80073f4:	085b      	lsrs	r3, r3, #1
 80073f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80073fa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80073fe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8007402:	ebb6 0e02 	subs.w	lr, r6, r2
 8007406:	eb75 0e03 	sbcs.w	lr, r5, r3
 800740a:	bf22      	ittt	cs
 800740c:	1ab6      	subcs	r6, r6, r2
 800740e:	4675      	movcs	r5, lr
 8007410:	ea40 000c 	orrcs.w	r0, r0, ip
 8007414:	085b      	lsrs	r3, r3, #1
 8007416:	ea4f 0232 	mov.w	r2, r2, rrx
 800741a:	ebb6 0e02 	subs.w	lr, r6, r2
 800741e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8007422:	bf22      	ittt	cs
 8007424:	1ab6      	subcs	r6, r6, r2
 8007426:	4675      	movcs	r5, lr
 8007428:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800742c:	085b      	lsrs	r3, r3, #1
 800742e:	ea4f 0232 	mov.w	r2, r2, rrx
 8007432:	ebb6 0e02 	subs.w	lr, r6, r2
 8007436:	eb75 0e03 	sbcs.w	lr, r5, r3
 800743a:	bf22      	ittt	cs
 800743c:	1ab6      	subcs	r6, r6, r2
 800743e:	4675      	movcs	r5, lr
 8007440:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8007444:	085b      	lsrs	r3, r3, #1
 8007446:	ea4f 0232 	mov.w	r2, r2, rrx
 800744a:	ebb6 0e02 	subs.w	lr, r6, r2
 800744e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8007452:	bf22      	ittt	cs
 8007454:	1ab6      	subcs	r6, r6, r2
 8007456:	4675      	movcs	r5, lr
 8007458:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800745c:	ea55 0e06 	orrs.w	lr, r5, r6
 8007460:	d018      	beq.n	8007494 <__aeabi_ddiv+0x114>
 8007462:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8007466:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800746a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800746e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8007472:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8007476:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800747a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800747e:	d1c0      	bne.n	8007402 <__aeabi_ddiv+0x82>
 8007480:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007484:	d10b      	bne.n	800749e <__aeabi_ddiv+0x11e>
 8007486:	ea41 0100 	orr.w	r1, r1, r0
 800748a:	f04f 0000 	mov.w	r0, #0
 800748e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8007492:	e7b6      	b.n	8007402 <__aeabi_ddiv+0x82>
 8007494:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007498:	bf04      	itt	eq
 800749a:	4301      	orreq	r1, r0
 800749c:	2000      	moveq	r0, #0
 800749e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80074a2:	bf88      	it	hi
 80074a4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80074a8:	f63f aeaf 	bhi.w	800720a <__aeabi_dmul+0xde>
 80074ac:	ebb5 0c03 	subs.w	ip, r5, r3
 80074b0:	bf04      	itt	eq
 80074b2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80074b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80074ba:	f150 0000 	adcs.w	r0, r0, #0
 80074be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80074c2:	bd70      	pop	{r4, r5, r6, pc}
 80074c4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80074c8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80074cc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80074d0:	bfc2      	ittt	gt
 80074d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80074d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80074da:	bd70      	popgt	{r4, r5, r6, pc}
 80074dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80074e0:	f04f 0e00 	mov.w	lr, #0
 80074e4:	3c01      	subs	r4, #1
 80074e6:	e690      	b.n	800720a <__aeabi_dmul+0xde>
 80074e8:	ea45 0e06 	orr.w	lr, r5, r6
 80074ec:	e68d      	b.n	800720a <__aeabi_dmul+0xde>
 80074ee:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80074f2:	ea94 0f0c 	teq	r4, ip
 80074f6:	bf08      	it	eq
 80074f8:	ea95 0f0c 	teqeq	r5, ip
 80074fc:	f43f af3b 	beq.w	8007376 <__aeabi_dmul+0x24a>
 8007500:	ea94 0f0c 	teq	r4, ip
 8007504:	d10a      	bne.n	800751c <__aeabi_ddiv+0x19c>
 8007506:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800750a:	f47f af34 	bne.w	8007376 <__aeabi_dmul+0x24a>
 800750e:	ea95 0f0c 	teq	r5, ip
 8007512:	f47f af25 	bne.w	8007360 <__aeabi_dmul+0x234>
 8007516:	4610      	mov	r0, r2
 8007518:	4619      	mov	r1, r3
 800751a:	e72c      	b.n	8007376 <__aeabi_dmul+0x24a>
 800751c:	ea95 0f0c 	teq	r5, ip
 8007520:	d106      	bne.n	8007530 <__aeabi_ddiv+0x1b0>
 8007522:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8007526:	f43f aefd 	beq.w	8007324 <__aeabi_dmul+0x1f8>
 800752a:	4610      	mov	r0, r2
 800752c:	4619      	mov	r1, r3
 800752e:	e722      	b.n	8007376 <__aeabi_dmul+0x24a>
 8007530:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8007534:	bf18      	it	ne
 8007536:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800753a:	f47f aec5 	bne.w	80072c8 <__aeabi_dmul+0x19c>
 800753e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8007542:	f47f af0d 	bne.w	8007360 <__aeabi_dmul+0x234>
 8007546:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800754a:	f47f aeeb 	bne.w	8007324 <__aeabi_dmul+0x1f8>
 800754e:	e712      	b.n	8007376 <__aeabi_dmul+0x24a>

08007550 <__gedf2>:
 8007550:	f04f 3cff 	mov.w	ip, #4294967295
 8007554:	e006      	b.n	8007564 <__cmpdf2+0x4>
 8007556:	bf00      	nop

08007558 <__ledf2>:
 8007558:	f04f 0c01 	mov.w	ip, #1
 800755c:	e002      	b.n	8007564 <__cmpdf2+0x4>
 800755e:	bf00      	nop

08007560 <__cmpdf2>:
 8007560:	f04f 0c01 	mov.w	ip, #1
 8007564:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007568:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800756c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007570:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007574:	bf18      	it	ne
 8007576:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800757a:	d01b      	beq.n	80075b4 <__cmpdf2+0x54>
 800757c:	b001      	add	sp, #4
 800757e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8007582:	bf0c      	ite	eq
 8007584:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8007588:	ea91 0f03 	teqne	r1, r3
 800758c:	bf02      	ittt	eq
 800758e:	ea90 0f02 	teqeq	r0, r2
 8007592:	2000      	moveq	r0, #0
 8007594:	4770      	bxeq	lr
 8007596:	f110 0f00 	cmn.w	r0, #0
 800759a:	ea91 0f03 	teq	r1, r3
 800759e:	bf58      	it	pl
 80075a0:	4299      	cmppl	r1, r3
 80075a2:	bf08      	it	eq
 80075a4:	4290      	cmpeq	r0, r2
 80075a6:	bf2c      	ite	cs
 80075a8:	17d8      	asrcs	r0, r3, #31
 80075aa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80075ae:	f040 0001 	orr.w	r0, r0, #1
 80075b2:	4770      	bx	lr
 80075b4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80075b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80075bc:	d102      	bne.n	80075c4 <__cmpdf2+0x64>
 80075be:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80075c2:	d107      	bne.n	80075d4 <__cmpdf2+0x74>
 80075c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80075c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80075cc:	d1d6      	bne.n	800757c <__cmpdf2+0x1c>
 80075ce:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80075d2:	d0d3      	beq.n	800757c <__cmpdf2+0x1c>
 80075d4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80075d8:	4770      	bx	lr
 80075da:	bf00      	nop

080075dc <__aeabi_cdrcmple>:
 80075dc:	4684      	mov	ip, r0
 80075de:	4610      	mov	r0, r2
 80075e0:	4662      	mov	r2, ip
 80075e2:	468c      	mov	ip, r1
 80075e4:	4619      	mov	r1, r3
 80075e6:	4663      	mov	r3, ip
 80075e8:	e000      	b.n	80075ec <__aeabi_cdcmpeq>
 80075ea:	bf00      	nop

080075ec <__aeabi_cdcmpeq>:
 80075ec:	b501      	push	{r0, lr}
 80075ee:	f7ff ffb7 	bl	8007560 <__cmpdf2>
 80075f2:	2800      	cmp	r0, #0
 80075f4:	bf48      	it	mi
 80075f6:	f110 0f00 	cmnmi.w	r0, #0
 80075fa:	bd01      	pop	{r0, pc}

080075fc <__aeabi_dcmpeq>:
 80075fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007600:	f7ff fff4 	bl	80075ec <__aeabi_cdcmpeq>
 8007604:	bf0c      	ite	eq
 8007606:	2001      	moveq	r0, #1
 8007608:	2000      	movne	r0, #0
 800760a:	f85d fb08 	ldr.w	pc, [sp], #8
 800760e:	bf00      	nop

08007610 <__aeabi_dcmplt>:
 8007610:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007614:	f7ff ffea 	bl	80075ec <__aeabi_cdcmpeq>
 8007618:	bf34      	ite	cc
 800761a:	2001      	movcc	r0, #1
 800761c:	2000      	movcs	r0, #0
 800761e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007622:	bf00      	nop

08007624 <__aeabi_dcmple>:
 8007624:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007628:	f7ff ffe0 	bl	80075ec <__aeabi_cdcmpeq>
 800762c:	bf94      	ite	ls
 800762e:	2001      	movls	r0, #1
 8007630:	2000      	movhi	r0, #0
 8007632:	f85d fb08 	ldr.w	pc, [sp], #8
 8007636:	bf00      	nop

08007638 <__aeabi_dcmpge>:
 8007638:	f84d ed08 	str.w	lr, [sp, #-8]!
 800763c:	f7ff ffce 	bl	80075dc <__aeabi_cdrcmple>
 8007640:	bf94      	ite	ls
 8007642:	2001      	movls	r0, #1
 8007644:	2000      	movhi	r0, #0
 8007646:	f85d fb08 	ldr.w	pc, [sp], #8
 800764a:	bf00      	nop

0800764c <__aeabi_dcmpgt>:
 800764c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007650:	f7ff ffc4 	bl	80075dc <__aeabi_cdrcmple>
 8007654:	bf34      	ite	cc
 8007656:	2001      	movcc	r0, #1
 8007658:	2000      	movcs	r0, #0
 800765a:	f85d fb08 	ldr.w	pc, [sp], #8
 800765e:	bf00      	nop

08007660 <__aeabi_dcmpun>:
 8007660:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007664:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007668:	d102      	bne.n	8007670 <__aeabi_dcmpun+0x10>
 800766a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800766e:	d10a      	bne.n	8007686 <__aeabi_dcmpun+0x26>
 8007670:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007674:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007678:	d102      	bne.n	8007680 <__aeabi_dcmpun+0x20>
 800767a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800767e:	d102      	bne.n	8007686 <__aeabi_dcmpun+0x26>
 8007680:	f04f 0000 	mov.w	r0, #0
 8007684:	4770      	bx	lr
 8007686:	f04f 0001 	mov.w	r0, #1
 800768a:	4770      	bx	lr

0800768c <__aeabi_d2iz>:
 800768c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007690:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8007694:	d215      	bcs.n	80076c2 <__aeabi_d2iz+0x36>
 8007696:	d511      	bpl.n	80076bc <__aeabi_d2iz+0x30>
 8007698:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800769c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80076a0:	d912      	bls.n	80076c8 <__aeabi_d2iz+0x3c>
 80076a2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80076a6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80076aa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80076ae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80076b2:	fa23 f002 	lsr.w	r0, r3, r2
 80076b6:	bf18      	it	ne
 80076b8:	4240      	negne	r0, r0
 80076ba:	4770      	bx	lr
 80076bc:	f04f 0000 	mov.w	r0, #0
 80076c0:	4770      	bx	lr
 80076c2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80076c6:	d105      	bne.n	80076d4 <__aeabi_d2iz+0x48>
 80076c8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 80076cc:	bf08      	it	eq
 80076ce:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80076d2:	4770      	bx	lr
 80076d4:	f04f 0000 	mov.w	r0, #0
 80076d8:	4770      	bx	lr
 80076da:	bf00      	nop

080076dc <__aeabi_d2f>:
 80076dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80076e0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80076e4:	bf24      	itt	cs
 80076e6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80076ea:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80076ee:	d90d      	bls.n	800770c <__aeabi_d2f+0x30>
 80076f0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80076f4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80076f8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80076fc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007700:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007704:	bf08      	it	eq
 8007706:	f020 0001 	biceq.w	r0, r0, #1
 800770a:	4770      	bx	lr
 800770c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007710:	d121      	bne.n	8007756 <__aeabi_d2f+0x7a>
 8007712:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007716:	bfbc      	itt	lt
 8007718:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800771c:	4770      	bxlt	lr
 800771e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007722:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007726:	f1c2 0218 	rsb	r2, r2, #24
 800772a:	f1c2 0c20 	rsb	ip, r2, #32
 800772e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007732:	fa20 f002 	lsr.w	r0, r0, r2
 8007736:	bf18      	it	ne
 8007738:	f040 0001 	orrne.w	r0, r0, #1
 800773c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007740:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007744:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007748:	ea40 000c 	orr.w	r0, r0, ip
 800774c:	fa23 f302 	lsr.w	r3, r3, r2
 8007750:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007754:	e7cc      	b.n	80076f0 <__aeabi_d2f+0x14>
 8007756:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800775a:	d107      	bne.n	800776c <__aeabi_d2f+0x90>
 800775c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007760:	bf1e      	ittt	ne
 8007762:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007766:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 800776a:	4770      	bxne	lr
 800776c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007770:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007774:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007778:	4770      	bx	lr
 800777a:	bf00      	nop

0800777c <__aeabi_uldivmod>:
 800777c:	b953      	cbnz	r3, 8007794 <__aeabi_uldivmod+0x18>
 800777e:	b94a      	cbnz	r2, 8007794 <__aeabi_uldivmod+0x18>
 8007780:	2900      	cmp	r1, #0
 8007782:	bf08      	it	eq
 8007784:	2800      	cmpeq	r0, #0
 8007786:	bf1c      	itt	ne
 8007788:	f04f 31ff 	movne.w	r1, #4294967295
 800778c:	f04f 30ff 	movne.w	r0, #4294967295
 8007790:	f001 b8f8 	b.w	8008984 <__aeabi_idiv0>
 8007794:	f1ad 0c08 	sub.w	ip, sp, #8
 8007798:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800779c:	f000 f806 	bl	80077ac <__udivmoddi4>
 80077a0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80077a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80077a8:	b004      	add	sp, #16
 80077aa:	4770      	bx	lr

080077ac <__udivmoddi4>:
 80077ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80077b0:	9e08      	ldr	r6, [sp, #32]
 80077b2:	4604      	mov	r4, r0
 80077b4:	4688      	mov	r8, r1
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	d14b      	bne.n	8007852 <__udivmoddi4+0xa6>
 80077ba:	428a      	cmp	r2, r1
 80077bc:	4615      	mov	r5, r2
 80077be:	d967      	bls.n	8007890 <__udivmoddi4+0xe4>
 80077c0:	fab2 f282 	clz	r2, r2
 80077c4:	b14a      	cbz	r2, 80077da <__udivmoddi4+0x2e>
 80077c6:	f1c2 0720 	rsb	r7, r2, #32
 80077ca:	fa01 f302 	lsl.w	r3, r1, r2
 80077ce:	fa20 f707 	lsr.w	r7, r0, r7
 80077d2:	4095      	lsls	r5, r2
 80077d4:	ea47 0803 	orr.w	r8, r7, r3
 80077d8:	4094      	lsls	r4, r2
 80077da:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80077de:	0c23      	lsrs	r3, r4, #16
 80077e0:	fbb8 f7fe 	udiv	r7, r8, lr
 80077e4:	fa1f fc85 	uxth.w	ip, r5
 80077e8:	fb0e 8817 	mls	r8, lr, r7, r8
 80077ec:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80077f0:	fb07 f10c 	mul.w	r1, r7, ip
 80077f4:	4299      	cmp	r1, r3
 80077f6:	d909      	bls.n	800780c <__udivmoddi4+0x60>
 80077f8:	18eb      	adds	r3, r5, r3
 80077fa:	f107 30ff 	add.w	r0, r7, #4294967295
 80077fe:	f080 811b 	bcs.w	8007a38 <__udivmoddi4+0x28c>
 8007802:	4299      	cmp	r1, r3
 8007804:	f240 8118 	bls.w	8007a38 <__udivmoddi4+0x28c>
 8007808:	3f02      	subs	r7, #2
 800780a:	442b      	add	r3, r5
 800780c:	1a5b      	subs	r3, r3, r1
 800780e:	b2a4      	uxth	r4, r4
 8007810:	fbb3 f0fe 	udiv	r0, r3, lr
 8007814:	fb0e 3310 	mls	r3, lr, r0, r3
 8007818:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800781c:	fb00 fc0c 	mul.w	ip, r0, ip
 8007820:	45a4      	cmp	ip, r4
 8007822:	d909      	bls.n	8007838 <__udivmoddi4+0x8c>
 8007824:	192c      	adds	r4, r5, r4
 8007826:	f100 33ff 	add.w	r3, r0, #4294967295
 800782a:	f080 8107 	bcs.w	8007a3c <__udivmoddi4+0x290>
 800782e:	45a4      	cmp	ip, r4
 8007830:	f240 8104 	bls.w	8007a3c <__udivmoddi4+0x290>
 8007834:	3802      	subs	r0, #2
 8007836:	442c      	add	r4, r5
 8007838:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800783c:	eba4 040c 	sub.w	r4, r4, ip
 8007840:	2700      	movs	r7, #0
 8007842:	b11e      	cbz	r6, 800784c <__udivmoddi4+0xa0>
 8007844:	40d4      	lsrs	r4, r2
 8007846:	2300      	movs	r3, #0
 8007848:	e9c6 4300 	strd	r4, r3, [r6]
 800784c:	4639      	mov	r1, r7
 800784e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007852:	428b      	cmp	r3, r1
 8007854:	d909      	bls.n	800786a <__udivmoddi4+0xbe>
 8007856:	2e00      	cmp	r6, #0
 8007858:	f000 80eb 	beq.w	8007a32 <__udivmoddi4+0x286>
 800785c:	2700      	movs	r7, #0
 800785e:	e9c6 0100 	strd	r0, r1, [r6]
 8007862:	4638      	mov	r0, r7
 8007864:	4639      	mov	r1, r7
 8007866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800786a:	fab3 f783 	clz	r7, r3
 800786e:	2f00      	cmp	r7, #0
 8007870:	d147      	bne.n	8007902 <__udivmoddi4+0x156>
 8007872:	428b      	cmp	r3, r1
 8007874:	d302      	bcc.n	800787c <__udivmoddi4+0xd0>
 8007876:	4282      	cmp	r2, r0
 8007878:	f200 80fa 	bhi.w	8007a70 <__udivmoddi4+0x2c4>
 800787c:	1a84      	subs	r4, r0, r2
 800787e:	eb61 0303 	sbc.w	r3, r1, r3
 8007882:	2001      	movs	r0, #1
 8007884:	4698      	mov	r8, r3
 8007886:	2e00      	cmp	r6, #0
 8007888:	d0e0      	beq.n	800784c <__udivmoddi4+0xa0>
 800788a:	e9c6 4800 	strd	r4, r8, [r6]
 800788e:	e7dd      	b.n	800784c <__udivmoddi4+0xa0>
 8007890:	b902      	cbnz	r2, 8007894 <__udivmoddi4+0xe8>
 8007892:	deff      	udf	#255	; 0xff
 8007894:	fab2 f282 	clz	r2, r2
 8007898:	2a00      	cmp	r2, #0
 800789a:	f040 808f 	bne.w	80079bc <__udivmoddi4+0x210>
 800789e:	1b49      	subs	r1, r1, r5
 80078a0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80078a4:	fa1f f885 	uxth.w	r8, r5
 80078a8:	2701      	movs	r7, #1
 80078aa:	fbb1 fcfe 	udiv	ip, r1, lr
 80078ae:	0c23      	lsrs	r3, r4, #16
 80078b0:	fb0e 111c 	mls	r1, lr, ip, r1
 80078b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80078b8:	fb08 f10c 	mul.w	r1, r8, ip
 80078bc:	4299      	cmp	r1, r3
 80078be:	d907      	bls.n	80078d0 <__udivmoddi4+0x124>
 80078c0:	18eb      	adds	r3, r5, r3
 80078c2:	f10c 30ff 	add.w	r0, ip, #4294967295
 80078c6:	d202      	bcs.n	80078ce <__udivmoddi4+0x122>
 80078c8:	4299      	cmp	r1, r3
 80078ca:	f200 80cd 	bhi.w	8007a68 <__udivmoddi4+0x2bc>
 80078ce:	4684      	mov	ip, r0
 80078d0:	1a59      	subs	r1, r3, r1
 80078d2:	b2a3      	uxth	r3, r4
 80078d4:	fbb1 f0fe 	udiv	r0, r1, lr
 80078d8:	fb0e 1410 	mls	r4, lr, r0, r1
 80078dc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80078e0:	fb08 f800 	mul.w	r8, r8, r0
 80078e4:	45a0      	cmp	r8, r4
 80078e6:	d907      	bls.n	80078f8 <__udivmoddi4+0x14c>
 80078e8:	192c      	adds	r4, r5, r4
 80078ea:	f100 33ff 	add.w	r3, r0, #4294967295
 80078ee:	d202      	bcs.n	80078f6 <__udivmoddi4+0x14a>
 80078f0:	45a0      	cmp	r8, r4
 80078f2:	f200 80b6 	bhi.w	8007a62 <__udivmoddi4+0x2b6>
 80078f6:	4618      	mov	r0, r3
 80078f8:	eba4 0408 	sub.w	r4, r4, r8
 80078fc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8007900:	e79f      	b.n	8007842 <__udivmoddi4+0x96>
 8007902:	f1c7 0c20 	rsb	ip, r7, #32
 8007906:	40bb      	lsls	r3, r7
 8007908:	fa22 fe0c 	lsr.w	lr, r2, ip
 800790c:	ea4e 0e03 	orr.w	lr, lr, r3
 8007910:	fa01 f407 	lsl.w	r4, r1, r7
 8007914:	fa20 f50c 	lsr.w	r5, r0, ip
 8007918:	fa21 f30c 	lsr.w	r3, r1, ip
 800791c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8007920:	4325      	orrs	r5, r4
 8007922:	fbb3 f9f8 	udiv	r9, r3, r8
 8007926:	0c2c      	lsrs	r4, r5, #16
 8007928:	fb08 3319 	mls	r3, r8, r9, r3
 800792c:	fa1f fa8e 	uxth.w	sl, lr
 8007930:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8007934:	fb09 f40a 	mul.w	r4, r9, sl
 8007938:	429c      	cmp	r4, r3
 800793a:	fa02 f207 	lsl.w	r2, r2, r7
 800793e:	fa00 f107 	lsl.w	r1, r0, r7
 8007942:	d90b      	bls.n	800795c <__udivmoddi4+0x1b0>
 8007944:	eb1e 0303 	adds.w	r3, lr, r3
 8007948:	f109 30ff 	add.w	r0, r9, #4294967295
 800794c:	f080 8087 	bcs.w	8007a5e <__udivmoddi4+0x2b2>
 8007950:	429c      	cmp	r4, r3
 8007952:	f240 8084 	bls.w	8007a5e <__udivmoddi4+0x2b2>
 8007956:	f1a9 0902 	sub.w	r9, r9, #2
 800795a:	4473      	add	r3, lr
 800795c:	1b1b      	subs	r3, r3, r4
 800795e:	b2ad      	uxth	r5, r5
 8007960:	fbb3 f0f8 	udiv	r0, r3, r8
 8007964:	fb08 3310 	mls	r3, r8, r0, r3
 8007968:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 800796c:	fb00 fa0a 	mul.w	sl, r0, sl
 8007970:	45a2      	cmp	sl, r4
 8007972:	d908      	bls.n	8007986 <__udivmoddi4+0x1da>
 8007974:	eb1e 0404 	adds.w	r4, lr, r4
 8007978:	f100 33ff 	add.w	r3, r0, #4294967295
 800797c:	d26b      	bcs.n	8007a56 <__udivmoddi4+0x2aa>
 800797e:	45a2      	cmp	sl, r4
 8007980:	d969      	bls.n	8007a56 <__udivmoddi4+0x2aa>
 8007982:	3802      	subs	r0, #2
 8007984:	4474      	add	r4, lr
 8007986:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800798a:	fba0 8902 	umull	r8, r9, r0, r2
 800798e:	eba4 040a 	sub.w	r4, r4, sl
 8007992:	454c      	cmp	r4, r9
 8007994:	46c2      	mov	sl, r8
 8007996:	464b      	mov	r3, r9
 8007998:	d354      	bcc.n	8007a44 <__udivmoddi4+0x298>
 800799a:	d051      	beq.n	8007a40 <__udivmoddi4+0x294>
 800799c:	2e00      	cmp	r6, #0
 800799e:	d069      	beq.n	8007a74 <__udivmoddi4+0x2c8>
 80079a0:	ebb1 050a 	subs.w	r5, r1, sl
 80079a4:	eb64 0403 	sbc.w	r4, r4, r3
 80079a8:	fa04 fc0c 	lsl.w	ip, r4, ip
 80079ac:	40fd      	lsrs	r5, r7
 80079ae:	40fc      	lsrs	r4, r7
 80079b0:	ea4c 0505 	orr.w	r5, ip, r5
 80079b4:	e9c6 5400 	strd	r5, r4, [r6]
 80079b8:	2700      	movs	r7, #0
 80079ba:	e747      	b.n	800784c <__udivmoddi4+0xa0>
 80079bc:	f1c2 0320 	rsb	r3, r2, #32
 80079c0:	fa20 f703 	lsr.w	r7, r0, r3
 80079c4:	4095      	lsls	r5, r2
 80079c6:	fa01 f002 	lsl.w	r0, r1, r2
 80079ca:	fa21 f303 	lsr.w	r3, r1, r3
 80079ce:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80079d2:	4338      	orrs	r0, r7
 80079d4:	0c01      	lsrs	r1, r0, #16
 80079d6:	fbb3 f7fe 	udiv	r7, r3, lr
 80079da:	fa1f f885 	uxth.w	r8, r5
 80079de:	fb0e 3317 	mls	r3, lr, r7, r3
 80079e2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80079e6:	fb07 f308 	mul.w	r3, r7, r8
 80079ea:	428b      	cmp	r3, r1
 80079ec:	fa04 f402 	lsl.w	r4, r4, r2
 80079f0:	d907      	bls.n	8007a02 <__udivmoddi4+0x256>
 80079f2:	1869      	adds	r1, r5, r1
 80079f4:	f107 3cff 	add.w	ip, r7, #4294967295
 80079f8:	d22f      	bcs.n	8007a5a <__udivmoddi4+0x2ae>
 80079fa:	428b      	cmp	r3, r1
 80079fc:	d92d      	bls.n	8007a5a <__udivmoddi4+0x2ae>
 80079fe:	3f02      	subs	r7, #2
 8007a00:	4429      	add	r1, r5
 8007a02:	1acb      	subs	r3, r1, r3
 8007a04:	b281      	uxth	r1, r0
 8007a06:	fbb3 f0fe 	udiv	r0, r3, lr
 8007a0a:	fb0e 3310 	mls	r3, lr, r0, r3
 8007a0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8007a12:	fb00 f308 	mul.w	r3, r0, r8
 8007a16:	428b      	cmp	r3, r1
 8007a18:	d907      	bls.n	8007a2a <__udivmoddi4+0x27e>
 8007a1a:	1869      	adds	r1, r5, r1
 8007a1c:	f100 3cff 	add.w	ip, r0, #4294967295
 8007a20:	d217      	bcs.n	8007a52 <__udivmoddi4+0x2a6>
 8007a22:	428b      	cmp	r3, r1
 8007a24:	d915      	bls.n	8007a52 <__udivmoddi4+0x2a6>
 8007a26:	3802      	subs	r0, #2
 8007a28:	4429      	add	r1, r5
 8007a2a:	1ac9      	subs	r1, r1, r3
 8007a2c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8007a30:	e73b      	b.n	80078aa <__udivmoddi4+0xfe>
 8007a32:	4637      	mov	r7, r6
 8007a34:	4630      	mov	r0, r6
 8007a36:	e709      	b.n	800784c <__udivmoddi4+0xa0>
 8007a38:	4607      	mov	r7, r0
 8007a3a:	e6e7      	b.n	800780c <__udivmoddi4+0x60>
 8007a3c:	4618      	mov	r0, r3
 8007a3e:	e6fb      	b.n	8007838 <__udivmoddi4+0x8c>
 8007a40:	4541      	cmp	r1, r8
 8007a42:	d2ab      	bcs.n	800799c <__udivmoddi4+0x1f0>
 8007a44:	ebb8 0a02 	subs.w	sl, r8, r2
 8007a48:	eb69 020e 	sbc.w	r2, r9, lr
 8007a4c:	3801      	subs	r0, #1
 8007a4e:	4613      	mov	r3, r2
 8007a50:	e7a4      	b.n	800799c <__udivmoddi4+0x1f0>
 8007a52:	4660      	mov	r0, ip
 8007a54:	e7e9      	b.n	8007a2a <__udivmoddi4+0x27e>
 8007a56:	4618      	mov	r0, r3
 8007a58:	e795      	b.n	8007986 <__udivmoddi4+0x1da>
 8007a5a:	4667      	mov	r7, ip
 8007a5c:	e7d1      	b.n	8007a02 <__udivmoddi4+0x256>
 8007a5e:	4681      	mov	r9, r0
 8007a60:	e77c      	b.n	800795c <__udivmoddi4+0x1b0>
 8007a62:	3802      	subs	r0, #2
 8007a64:	442c      	add	r4, r5
 8007a66:	e747      	b.n	80078f8 <__udivmoddi4+0x14c>
 8007a68:	f1ac 0c02 	sub.w	ip, ip, #2
 8007a6c:	442b      	add	r3, r5
 8007a6e:	e72f      	b.n	80078d0 <__udivmoddi4+0x124>
 8007a70:	4638      	mov	r0, r7
 8007a72:	e708      	b.n	8007886 <__udivmoddi4+0xda>
 8007a74:	4637      	mov	r7, r6
 8007a76:	e6e9      	b.n	800784c <__udivmoddi4+0xa0>

08007a78 <selfrel_offset31>:
 8007a78:	6803      	ldr	r3, [r0, #0]
 8007a7a:	005a      	lsls	r2, r3, #1
 8007a7c:	bf4c      	ite	mi
 8007a7e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8007a82:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8007a86:	4418      	add	r0, r3
 8007a88:	4770      	bx	lr
 8007a8a:	bf00      	nop

08007a8c <search_EIT_table>:
 8007a8c:	b361      	cbz	r1, 8007ae8 <search_EIT_table+0x5c>
 8007a8e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a92:	f101 3aff 	add.w	sl, r1, #4294967295
 8007a96:	4690      	mov	r8, r2
 8007a98:	4606      	mov	r6, r0
 8007a9a:	46d1      	mov	r9, sl
 8007a9c:	2700      	movs	r7, #0
 8007a9e:	eb07 0409 	add.w	r4, r7, r9
 8007aa2:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8007aa6:	1064      	asrs	r4, r4, #1
 8007aa8:	00e5      	lsls	r5, r4, #3
 8007aaa:	1971      	adds	r1, r6, r5
 8007aac:	4608      	mov	r0, r1
 8007aae:	f7ff ffe3 	bl	8007a78 <selfrel_offset31>
 8007ab2:	45a2      	cmp	sl, r4
 8007ab4:	4683      	mov	fp, r0
 8007ab6:	f105 0008 	add.w	r0, r5, #8
 8007aba:	4430      	add	r0, r6
 8007abc:	d009      	beq.n	8007ad2 <search_EIT_table+0x46>
 8007abe:	f7ff ffdb 	bl	8007a78 <selfrel_offset31>
 8007ac2:	45c3      	cmp	fp, r8
 8007ac4:	f100 30ff 	add.w	r0, r0, #4294967295
 8007ac8:	d805      	bhi.n	8007ad6 <search_EIT_table+0x4a>
 8007aca:	4540      	cmp	r0, r8
 8007acc:	d209      	bcs.n	8007ae2 <search_EIT_table+0x56>
 8007ace:	1c67      	adds	r7, r4, #1
 8007ad0:	e7e5      	b.n	8007a9e <search_EIT_table+0x12>
 8007ad2:	45c3      	cmp	fp, r8
 8007ad4:	d905      	bls.n	8007ae2 <search_EIT_table+0x56>
 8007ad6:	42a7      	cmp	r7, r4
 8007ad8:	d002      	beq.n	8007ae0 <search_EIT_table+0x54>
 8007ada:	f104 39ff 	add.w	r9, r4, #4294967295
 8007ade:	e7de      	b.n	8007a9e <search_EIT_table+0x12>
 8007ae0:	2100      	movs	r1, #0
 8007ae2:	4608      	mov	r0, r1
 8007ae4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ae8:	4608      	mov	r0, r1
 8007aea:	4770      	bx	lr

08007aec <__gnu_unwind_get_pr_addr>:
 8007aec:	2801      	cmp	r0, #1
 8007aee:	d007      	beq.n	8007b00 <__gnu_unwind_get_pr_addr+0x14>
 8007af0:	2802      	cmp	r0, #2
 8007af2:	d007      	beq.n	8007b04 <__gnu_unwind_get_pr_addr+0x18>
 8007af4:	4b04      	ldr	r3, [pc, #16]	; (8007b08 <__gnu_unwind_get_pr_addr+0x1c>)
 8007af6:	2800      	cmp	r0, #0
 8007af8:	bf0c      	ite	eq
 8007afa:	4618      	moveq	r0, r3
 8007afc:	2000      	movne	r0, #0
 8007afe:	4770      	bx	lr
 8007b00:	4802      	ldr	r0, [pc, #8]	; (8007b0c <__gnu_unwind_get_pr_addr+0x20>)
 8007b02:	4770      	bx	lr
 8007b04:	4802      	ldr	r0, [pc, #8]	; (8007b10 <__gnu_unwind_get_pr_addr+0x24>)
 8007b06:	4770      	bx	lr
 8007b08:	080081d9 	.word	0x080081d9
 8007b0c:	080081dd 	.word	0x080081dd
 8007b10:	080081e1 	.word	0x080081e1

08007b14 <get_eit_entry>:
 8007b14:	b530      	push	{r4, r5, lr}
 8007b16:	4b25      	ldr	r3, [pc, #148]	; (8007bac <get_eit_entry+0x98>)
 8007b18:	b083      	sub	sp, #12
 8007b1a:	4604      	mov	r4, r0
 8007b1c:	1e8d      	subs	r5, r1, #2
 8007b1e:	b34b      	cbz	r3, 8007b74 <get_eit_entry+0x60>
 8007b20:	a901      	add	r1, sp, #4
 8007b22:	4628      	mov	r0, r5
 8007b24:	f3af 8000 	nop.w
 8007b28:	b1f0      	cbz	r0, 8007b68 <get_eit_entry+0x54>
 8007b2a:	9901      	ldr	r1, [sp, #4]
 8007b2c:	462a      	mov	r2, r5
 8007b2e:	f7ff ffad 	bl	8007a8c <search_EIT_table>
 8007b32:	4601      	mov	r1, r0
 8007b34:	b1c0      	cbz	r0, 8007b68 <get_eit_entry+0x54>
 8007b36:	f7ff ff9f 	bl	8007a78 <selfrel_offset31>
 8007b3a:	684b      	ldr	r3, [r1, #4]
 8007b3c:	64a0      	str	r0, [r4, #72]	; 0x48
 8007b3e:	2b01      	cmp	r3, #1
 8007b40:	d02e      	beq.n	8007ba0 <get_eit_entry+0x8c>
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	f101 0004 	add.w	r0, r1, #4
 8007b48:	db26      	blt.n	8007b98 <get_eit_entry+0x84>
 8007b4a:	f7ff ff95 	bl	8007a78 <selfrel_offset31>
 8007b4e:	2300      	movs	r3, #0
 8007b50:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007b54:	6803      	ldr	r3, [r0, #0]
 8007b56:	2b00      	cmp	r3, #0
 8007b58:	db12      	blt.n	8007b80 <get_eit_entry+0x6c>
 8007b5a:	f7ff ff8d 	bl	8007a78 <selfrel_offset31>
 8007b5e:	2300      	movs	r3, #0
 8007b60:	6120      	str	r0, [r4, #16]
 8007b62:	4618      	mov	r0, r3
 8007b64:	b003      	add	sp, #12
 8007b66:	bd30      	pop	{r4, r5, pc}
 8007b68:	2300      	movs	r3, #0
 8007b6a:	6123      	str	r3, [r4, #16]
 8007b6c:	2309      	movs	r3, #9
 8007b6e:	4618      	mov	r0, r3
 8007b70:	b003      	add	sp, #12
 8007b72:	bd30      	pop	{r4, r5, pc}
 8007b74:	490e      	ldr	r1, [pc, #56]	; (8007bb0 <get_eit_entry+0x9c>)
 8007b76:	480f      	ldr	r0, [pc, #60]	; (8007bb4 <get_eit_entry+0xa0>)
 8007b78:	1a09      	subs	r1, r1, r0
 8007b7a:	10c9      	asrs	r1, r1, #3
 8007b7c:	9101      	str	r1, [sp, #4]
 8007b7e:	e7d5      	b.n	8007b2c <get_eit_entry+0x18>
 8007b80:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8007b84:	f7ff ffb2 	bl	8007aec <__gnu_unwind_get_pr_addr>
 8007b88:	2800      	cmp	r0, #0
 8007b8a:	bf14      	ite	ne
 8007b8c:	2300      	movne	r3, #0
 8007b8e:	2309      	moveq	r3, #9
 8007b90:	6120      	str	r0, [r4, #16]
 8007b92:	4618      	mov	r0, r3
 8007b94:	b003      	add	sp, #12
 8007b96:	bd30      	pop	{r4, r5, pc}
 8007b98:	2301      	movs	r3, #1
 8007b9a:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007b9e:	e7d9      	b.n	8007b54 <get_eit_entry+0x40>
 8007ba0:	2300      	movs	r3, #0
 8007ba2:	6123      	str	r3, [r4, #16]
 8007ba4:	2305      	movs	r3, #5
 8007ba6:	4618      	mov	r0, r3
 8007ba8:	b003      	add	sp, #12
 8007baa:	bd30      	pop	{r4, r5, pc}
 8007bac:	00000000 	.word	0x00000000
 8007bb0:	0801fa94 	.word	0x0801fa94
 8007bb4:	0801f90c 	.word	0x0801f90c

08007bb8 <restore_non_core_regs>:
 8007bb8:	6803      	ldr	r3, [r0, #0]
 8007bba:	07da      	lsls	r2, r3, #31
 8007bbc:	b510      	push	{r4, lr}
 8007bbe:	4604      	mov	r4, r0
 8007bc0:	d406      	bmi.n	8007bd0 <restore_non_core_regs+0x18>
 8007bc2:	079b      	lsls	r3, r3, #30
 8007bc4:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8007bc8:	d509      	bpl.n	8007bde <restore_non_core_regs+0x26>
 8007bca:	f000 fc5f 	bl	800848c <__gnu_Unwind_Restore_VFP_D>
 8007bce:	6823      	ldr	r3, [r4, #0]
 8007bd0:	0759      	lsls	r1, r3, #29
 8007bd2:	d509      	bpl.n	8007be8 <restore_non_core_regs+0x30>
 8007bd4:	071a      	lsls	r2, r3, #28
 8007bd6:	d50e      	bpl.n	8007bf6 <restore_non_core_regs+0x3e>
 8007bd8:	06db      	lsls	r3, r3, #27
 8007bda:	d513      	bpl.n	8007c04 <restore_non_core_regs+0x4c>
 8007bdc:	bd10      	pop	{r4, pc}
 8007bde:	f000 fc4d 	bl	800847c <__gnu_Unwind_Restore_VFP>
 8007be2:	6823      	ldr	r3, [r4, #0]
 8007be4:	0759      	lsls	r1, r3, #29
 8007be6:	d4f5      	bmi.n	8007bd4 <restore_non_core_regs+0x1c>
 8007be8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007bec:	f000 fc56 	bl	800849c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8007bf0:	6823      	ldr	r3, [r4, #0]
 8007bf2:	071a      	lsls	r2, r3, #28
 8007bf4:	d4f0      	bmi.n	8007bd8 <restore_non_core_regs+0x20>
 8007bf6:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8007bfa:	f000 fc57 	bl	80084ac <__gnu_Unwind_Restore_WMMXD>
 8007bfe:	6823      	ldr	r3, [r4, #0]
 8007c00:	06db      	lsls	r3, r3, #27
 8007c02:	d4eb      	bmi.n	8007bdc <restore_non_core_regs+0x24>
 8007c04:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8007c08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007c0c:	f000 bc92 	b.w	8008534 <__gnu_Unwind_Restore_WMMXC>

08007c10 <_Unwind_decode_typeinfo_ptr.isra.0>:
 8007c10:	6803      	ldr	r3, [r0, #0]
 8007c12:	b103      	cbz	r3, 8007c16 <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 8007c14:	4403      	add	r3, r0
 8007c16:	4618      	mov	r0, r3
 8007c18:	4770      	bx	lr
 8007c1a:	bf00      	nop

08007c1c <__gnu_unwind_24bit.isra.1>:
 8007c1c:	2009      	movs	r0, #9
 8007c1e:	4770      	bx	lr

08007c20 <_Unwind_DebugHook>:
 8007c20:	4770      	bx	lr
 8007c22:	bf00      	nop

08007c24 <unwind_phase2>:
 8007c24:	b570      	push	{r4, r5, r6, lr}
 8007c26:	4604      	mov	r4, r0
 8007c28:	460d      	mov	r5, r1
 8007c2a:	e008      	b.n	8007c3e <unwind_phase2+0x1a>
 8007c2c:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8007c2e:	6163      	str	r3, [r4, #20]
 8007c30:	462a      	mov	r2, r5
 8007c32:	6923      	ldr	r3, [r4, #16]
 8007c34:	4621      	mov	r1, r4
 8007c36:	2001      	movs	r0, #1
 8007c38:	4798      	blx	r3
 8007c3a:	2808      	cmp	r0, #8
 8007c3c:	d108      	bne.n	8007c50 <unwind_phase2+0x2c>
 8007c3e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007c40:	4620      	mov	r0, r4
 8007c42:	f7ff ff67 	bl	8007b14 <get_eit_entry>
 8007c46:	4606      	mov	r6, r0
 8007c48:	2800      	cmp	r0, #0
 8007c4a:	d0ef      	beq.n	8007c2c <unwind_phase2+0x8>
 8007c4c:	f005 fcf0 	bl	800d630 <abort>
 8007c50:	2807      	cmp	r0, #7
 8007c52:	d1fb      	bne.n	8007c4c <unwind_phase2+0x28>
 8007c54:	4630      	mov	r0, r6
 8007c56:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007c58:	f7ff ffe2 	bl	8007c20 <_Unwind_DebugHook>
 8007c5c:	1d28      	adds	r0, r5, #4
 8007c5e:	f000 fc01 	bl	8008464 <__restore_core_regs>
 8007c62:	bf00      	nop

08007c64 <unwind_phase2_forced>:
 8007c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c68:	1d0c      	adds	r4, r1, #4
 8007c6a:	4605      	mov	r5, r0
 8007c6c:	4617      	mov	r7, r2
 8007c6e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007c70:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8007c74:	ae03      	add	r6, sp, #12
 8007c76:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007c78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007c7a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007c7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007c7e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007c80:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8007c84:	ac02      	add	r4, sp, #8
 8007c86:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8007c8a:	f8d5 9018 	ldr.w	r9, [r5, #24]
 8007c8e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8007c92:	2300      	movs	r3, #0
 8007c94:	6023      	str	r3, [r4, #0]
 8007c96:	e021      	b.n	8007cdc <unwind_phase2_forced+0x78>
 8007c98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007c9a:	616b      	str	r3, [r5, #20]
 8007c9c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007ca0:	4621      	mov	r1, r4
 8007ca2:	a87a      	add	r0, sp, #488	; 0x1e8
 8007ca4:	f006 f963 	bl	800df6e <memcpy>
 8007ca8:	692b      	ldr	r3, [r5, #16]
 8007caa:	aa7a      	add	r2, sp, #488	; 0x1e8
 8007cac:	4629      	mov	r1, r5
 8007cae:	4630      	mov	r0, r6
 8007cb0:	4798      	blx	r3
 8007cb2:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8007cb4:	e9cd 4900 	strd	r4, r9, [sp]
 8007cb8:	4682      	mov	sl, r0
 8007cba:	6463      	str	r3, [r4, #68]	; 0x44
 8007cbc:	4631      	mov	r1, r6
 8007cbe:	462b      	mov	r3, r5
 8007cc0:	462a      	mov	r2, r5
 8007cc2:	2001      	movs	r0, #1
 8007cc4:	47c0      	blx	r8
 8007cc6:	4607      	mov	r7, r0
 8007cc8:	b9f8      	cbnz	r0, 8007d0a <unwind_phase2_forced+0xa6>
 8007cca:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007cce:	a97a      	add	r1, sp, #488	; 0x1e8
 8007cd0:	4620      	mov	r0, r4
 8007cd2:	f006 f94c 	bl	800df6e <memcpy>
 8007cd6:	f1ba 0f08 	cmp.w	sl, #8
 8007cda:	d11c      	bne.n	8007d16 <unwind_phase2_forced+0xb2>
 8007cdc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007cde:	4628      	mov	r0, r5
 8007ce0:	f7ff ff18 	bl	8007b14 <get_eit_entry>
 8007ce4:	2f00      	cmp	r7, #0
 8007ce6:	bf08      	it	eq
 8007ce8:	2609      	moveq	r6, #9
 8007cea:	4607      	mov	r7, r0
 8007cec:	bf18      	it	ne
 8007cee:	260a      	movne	r6, #10
 8007cf0:	2800      	cmp	r0, #0
 8007cf2:	d0d1      	beq.n	8007c98 <unwind_phase2_forced+0x34>
 8007cf4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007cf6:	f046 0110 	orr.w	r1, r6, #16
 8007cfa:	e9cd 4900 	strd	r4, r9, [sp]
 8007cfe:	462a      	mov	r2, r5
 8007d00:	6463      	str	r3, [r4, #68]	; 0x44
 8007d02:	2001      	movs	r0, #1
 8007d04:	462b      	mov	r3, r5
 8007d06:	47c0      	blx	r8
 8007d08:	b100      	cbz	r0, 8007d0c <unwind_phase2_forced+0xa8>
 8007d0a:	2709      	movs	r7, #9
 8007d0c:	4638      	mov	r0, r7
 8007d0e:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8007d12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007d16:	f1ba 0f07 	cmp.w	sl, #7
 8007d1a:	d1f6      	bne.n	8007d0a <unwind_phase2_forced+0xa6>
 8007d1c:	4638      	mov	r0, r7
 8007d1e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007d20:	f7ff ff7e 	bl	8007c20 <_Unwind_DebugHook>
 8007d24:	a803      	add	r0, sp, #12
 8007d26:	f000 fb9d 	bl	8008464 <__restore_core_regs>
 8007d2a:	bf00      	nop

08007d2c <_Unwind_GetCFA>:
 8007d2c:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8007d2e:	4770      	bx	lr

08007d30 <__gnu_Unwind_RaiseException>:
 8007d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d32:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8007d34:	640b      	str	r3, [r1, #64]	; 0x40
 8007d36:	1d0d      	adds	r5, r1, #4
 8007d38:	460f      	mov	r7, r1
 8007d3a:	4606      	mov	r6, r0
 8007d3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d3e:	b0f9      	sub	sp, #484	; 0x1e4
 8007d40:	ac01      	add	r4, sp, #4
 8007d42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007d44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007d48:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007d4c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007d50:	f04f 35ff 	mov.w	r5, #4294967295
 8007d54:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007d58:	9500      	str	r5, [sp, #0]
 8007d5a:	e006      	b.n	8007d6a <__gnu_Unwind_RaiseException+0x3a>
 8007d5c:	6933      	ldr	r3, [r6, #16]
 8007d5e:	466a      	mov	r2, sp
 8007d60:	4631      	mov	r1, r6
 8007d62:	4798      	blx	r3
 8007d64:	2808      	cmp	r0, #8
 8007d66:	4604      	mov	r4, r0
 8007d68:	d108      	bne.n	8007d7c <__gnu_Unwind_RaiseException+0x4c>
 8007d6a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007d6c:	4630      	mov	r0, r6
 8007d6e:	f7ff fed1 	bl	8007b14 <get_eit_entry>
 8007d72:	2800      	cmp	r0, #0
 8007d74:	d0f2      	beq.n	8007d5c <__gnu_Unwind_RaiseException+0x2c>
 8007d76:	2009      	movs	r0, #9
 8007d78:	b079      	add	sp, #484	; 0x1e4
 8007d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007d7c:	4668      	mov	r0, sp
 8007d7e:	f7ff ff1b 	bl	8007bb8 <restore_non_core_regs>
 8007d82:	2c06      	cmp	r4, #6
 8007d84:	d1f7      	bne.n	8007d76 <__gnu_Unwind_RaiseException+0x46>
 8007d86:	4639      	mov	r1, r7
 8007d88:	4630      	mov	r0, r6
 8007d8a:	f7ff ff4b 	bl	8007c24 <unwind_phase2>
 8007d8e:	bf00      	nop

08007d90 <__gnu_Unwind_ForcedUnwind>:
 8007d90:	b430      	push	{r4, r5}
 8007d92:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8007d94:	60c1      	str	r1, [r0, #12]
 8007d96:	6182      	str	r2, [r0, #24]
 8007d98:	4619      	mov	r1, r3
 8007d9a:	641d      	str	r5, [r3, #64]	; 0x40
 8007d9c:	2200      	movs	r2, #0
 8007d9e:	bc30      	pop	{r4, r5}
 8007da0:	e760      	b.n	8007c64 <unwind_phase2_forced>
 8007da2:	bf00      	nop

08007da4 <__gnu_Unwind_Resume>:
 8007da4:	b570      	push	{r4, r5, r6, lr}
 8007da6:	68c6      	ldr	r6, [r0, #12]
 8007da8:	6943      	ldr	r3, [r0, #20]
 8007daa:	640b      	str	r3, [r1, #64]	; 0x40
 8007dac:	b9be      	cbnz	r6, 8007dde <__gnu_Unwind_Resume+0x3a>
 8007dae:	6903      	ldr	r3, [r0, #16]
 8007db0:	460a      	mov	r2, r1
 8007db2:	4604      	mov	r4, r0
 8007db4:	460d      	mov	r5, r1
 8007db6:	4601      	mov	r1, r0
 8007db8:	2002      	movs	r0, #2
 8007dba:	4798      	blx	r3
 8007dbc:	2807      	cmp	r0, #7
 8007dbe:	d007      	beq.n	8007dd0 <__gnu_Unwind_Resume+0x2c>
 8007dc0:	2808      	cmp	r0, #8
 8007dc2:	d103      	bne.n	8007dcc <__gnu_Unwind_Resume+0x28>
 8007dc4:	4629      	mov	r1, r5
 8007dc6:	4620      	mov	r0, r4
 8007dc8:	f7ff ff2c 	bl	8007c24 <unwind_phase2>
 8007dcc:	f005 fc30 	bl	800d630 <abort>
 8007dd0:	4630      	mov	r0, r6
 8007dd2:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007dd4:	f7ff ff24 	bl	8007c20 <_Unwind_DebugHook>
 8007dd8:	1d28      	adds	r0, r5, #4
 8007dda:	f000 fb43 	bl	8008464 <__restore_core_regs>
 8007dde:	2201      	movs	r2, #1
 8007de0:	f7ff ff40 	bl	8007c64 <unwind_phase2_forced>
 8007de4:	f005 fc24 	bl	800d630 <abort>

08007de8 <__gnu_Unwind_Resume_or_Rethrow>:
 8007de8:	68c2      	ldr	r2, [r0, #12]
 8007dea:	b11a      	cbz	r2, 8007df4 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8007dec:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8007dee:	640a      	str	r2, [r1, #64]	; 0x40
 8007df0:	2200      	movs	r2, #0
 8007df2:	e737      	b.n	8007c64 <unwind_phase2_forced>
 8007df4:	e79c      	b.n	8007d30 <__gnu_Unwind_RaiseException>
 8007df6:	bf00      	nop

08007df8 <_Unwind_Complete>:
 8007df8:	4770      	bx	lr
 8007dfa:	bf00      	nop

08007dfc <_Unwind_DeleteException>:
 8007dfc:	6883      	ldr	r3, [r0, #8]
 8007dfe:	b113      	cbz	r3, 8007e06 <_Unwind_DeleteException+0xa>
 8007e00:	4601      	mov	r1, r0
 8007e02:	2001      	movs	r0, #1
 8007e04:	4718      	bx	r3
 8007e06:	4770      	bx	lr

08007e08 <_Unwind_VRS_Get>:
 8007e08:	2904      	cmp	r1, #4
 8007e0a:	d807      	bhi.n	8007e1c <_Unwind_VRS_Get+0x14>
 8007e0c:	e8df f001 	tbb	[pc, r1]
 8007e10:	08060803 	.word	0x08060803
 8007e14:	08          	.byte	0x08
 8007e15:	00          	.byte	0x00
 8007e16:	b90b      	cbnz	r3, 8007e1c <_Unwind_VRS_Get+0x14>
 8007e18:	2a0f      	cmp	r2, #15
 8007e1a:	d903      	bls.n	8007e24 <_Unwind_VRS_Get+0x1c>
 8007e1c:	2002      	movs	r0, #2
 8007e1e:	4770      	bx	lr
 8007e20:	2001      	movs	r0, #1
 8007e22:	4770      	bx	lr
 8007e24:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007e28:	4618      	mov	r0, r3
 8007e2a:	6853      	ldr	r3, [r2, #4]
 8007e2c:	9a00      	ldr	r2, [sp, #0]
 8007e2e:	6013      	str	r3, [r2, #0]
 8007e30:	4770      	bx	lr
 8007e32:	bf00      	nop

08007e34 <_Unwind_GetGR>:
 8007e34:	b510      	push	{r4, lr}
 8007e36:	b084      	sub	sp, #16
 8007e38:	2300      	movs	r3, #0
 8007e3a:	ac03      	add	r4, sp, #12
 8007e3c:	460a      	mov	r2, r1
 8007e3e:	9400      	str	r4, [sp, #0]
 8007e40:	4619      	mov	r1, r3
 8007e42:	f7ff ffe1 	bl	8007e08 <_Unwind_VRS_Get>
 8007e46:	9803      	ldr	r0, [sp, #12]
 8007e48:	b004      	add	sp, #16
 8007e4a:	bd10      	pop	{r4, pc}

08007e4c <_Unwind_VRS_Set>:
 8007e4c:	2904      	cmp	r1, #4
 8007e4e:	d807      	bhi.n	8007e60 <_Unwind_VRS_Set+0x14>
 8007e50:	e8df f001 	tbb	[pc, r1]
 8007e54:	08060803 	.word	0x08060803
 8007e58:	08          	.byte	0x08
 8007e59:	00          	.byte	0x00
 8007e5a:	b90b      	cbnz	r3, 8007e60 <_Unwind_VRS_Set+0x14>
 8007e5c:	2a0f      	cmp	r2, #15
 8007e5e:	d903      	bls.n	8007e68 <_Unwind_VRS_Set+0x1c>
 8007e60:	2002      	movs	r0, #2
 8007e62:	4770      	bx	lr
 8007e64:	2001      	movs	r0, #1
 8007e66:	4770      	bx	lr
 8007e68:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007e6c:	9a00      	ldr	r2, [sp, #0]
 8007e6e:	6812      	ldr	r2, [r2, #0]
 8007e70:	6042      	str	r2, [r0, #4]
 8007e72:	4618      	mov	r0, r3
 8007e74:	4770      	bx	lr
 8007e76:	bf00      	nop

08007e78 <_Unwind_SetGR>:
 8007e78:	b510      	push	{r4, lr}
 8007e7a:	b084      	sub	sp, #16
 8007e7c:	ac04      	add	r4, sp, #16
 8007e7e:	2300      	movs	r3, #0
 8007e80:	f844 2d04 	str.w	r2, [r4, #-4]!
 8007e84:	460a      	mov	r2, r1
 8007e86:	9400      	str	r4, [sp, #0]
 8007e88:	4619      	mov	r1, r3
 8007e8a:	f7ff ffdf 	bl	8007e4c <_Unwind_VRS_Set>
 8007e8e:	b004      	add	sp, #16
 8007e90:	bd10      	pop	{r4, pc}
 8007e92:	bf00      	nop

08007e94 <__gnu_Unwind_Backtrace>:
 8007e94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e96:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8007e98:	6413      	str	r3, [r2, #64]	; 0x40
 8007e9a:	1d15      	adds	r5, r2, #4
 8007e9c:	4607      	mov	r7, r0
 8007e9e:	460e      	mov	r6, r1
 8007ea0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007ea2:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 8007ea6:	ac17      	add	r4, sp, #92	; 0x5c
 8007ea8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007eaa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007eac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007eae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007eb0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007eb2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007eb6:	f04f 35ff 	mov.w	r5, #4294967295
 8007eba:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007ebe:	9516      	str	r5, [sp, #88]	; 0x58
 8007ec0:	e010      	b.n	8007ee4 <__gnu_Unwind_Backtrace+0x50>
 8007ec2:	a816      	add	r0, sp, #88	; 0x58
 8007ec4:	f7ff ffd8 	bl	8007e78 <_Unwind_SetGR>
 8007ec8:	4631      	mov	r1, r6
 8007eca:	a816      	add	r0, sp, #88	; 0x58
 8007ecc:	47b8      	blx	r7
 8007ece:	aa16      	add	r2, sp, #88	; 0x58
 8007ed0:	4669      	mov	r1, sp
 8007ed2:	b978      	cbnz	r0, 8007ef4 <__gnu_Unwind_Backtrace+0x60>
 8007ed4:	9b04      	ldr	r3, [sp, #16]
 8007ed6:	2008      	movs	r0, #8
 8007ed8:	4798      	blx	r3
 8007eda:	2805      	cmp	r0, #5
 8007edc:	4604      	mov	r4, r0
 8007ede:	d00a      	beq.n	8007ef6 <__gnu_Unwind_Backtrace+0x62>
 8007ee0:	2809      	cmp	r0, #9
 8007ee2:	d007      	beq.n	8007ef4 <__gnu_Unwind_Backtrace+0x60>
 8007ee4:	9926      	ldr	r1, [sp, #152]	; 0x98
 8007ee6:	4668      	mov	r0, sp
 8007ee8:	f7ff fe14 	bl	8007b14 <get_eit_entry>
 8007eec:	466a      	mov	r2, sp
 8007eee:	210c      	movs	r1, #12
 8007ef0:	2800      	cmp	r0, #0
 8007ef2:	d0e6      	beq.n	8007ec2 <__gnu_Unwind_Backtrace+0x2e>
 8007ef4:	2409      	movs	r4, #9
 8007ef6:	a816      	add	r0, sp, #88	; 0x58
 8007ef8:	f7ff fe5e 	bl	8007bb8 <restore_non_core_regs>
 8007efc:	4620      	mov	r0, r4
 8007efe:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 8007f02:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007f04 <__gnu_unwind_pr_common>:
 8007f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f08:	460d      	mov	r5, r1
 8007f0a:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
 8007f0c:	b089      	sub	sp, #36	; 0x24
 8007f0e:	1d0c      	adds	r4, r1, #4
 8007f10:	4616      	mov	r6, r2
 8007f12:	f000 0b03 	and.w	fp, r0, #3
 8007f16:	680a      	ldr	r2, [r1, #0]
 8007f18:	9406      	str	r4, [sp, #24]
 8007f1a:	461f      	mov	r7, r3
 8007f1c:	2b00      	cmp	r3, #0
 8007f1e:	d068      	beq.n	8007ff2 <__gnu_unwind_pr_common+0xee>
 8007f20:	0c13      	lsrs	r3, r2, #16
 8007f22:	b2d9      	uxtb	r1, r3
 8007f24:	0412      	lsls	r2, r2, #16
 8007f26:	f88d 301d 	strb.w	r3, [sp, #29]
 8007f2a:	2302      	movs	r3, #2
 8007f2c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8007f30:	9205      	str	r2, [sp, #20]
 8007f32:	f88d 301c 	strb.w	r3, [sp, #28]
 8007f36:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007f38:	f1bb 0f02 	cmp.w	fp, #2
 8007f3c:	bf08      	it	eq
 8007f3e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8007f40:	f013 0301 	ands.w	r3, r3, #1
 8007f44:	d146      	bne.n	8007fd4 <__gnu_unwind_pr_common+0xd0>
 8007f46:	9301      	str	r3, [sp, #4]
 8007f48:	f000 0308 	and.w	r3, r0, #8
 8007f4c:	9300      	str	r3, [sp, #0]
 8007f4e:	f8d4 9000 	ldr.w	r9, [r4]
 8007f52:	f1b9 0f00 	cmp.w	r9, #0
 8007f56:	f000 80f3 	beq.w	8008140 <__gnu_unwind_pr_common+0x23c>
 8007f5a:	2f02      	cmp	r7, #2
 8007f5c:	d045      	beq.n	8007fea <__gnu_unwind_pr_common+0xe6>
 8007f5e:	f8b4 9000 	ldrh.w	r9, [r4]
 8007f62:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 8007f66:	3404      	adds	r4, #4
 8007f68:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007f6a:	f028 0a01 	bic.w	sl, r8, #1
 8007f6e:	210f      	movs	r1, #15
 8007f70:	4630      	mov	r0, r6
 8007f72:	449a      	add	sl, r3
 8007f74:	f7ff ff5e 	bl	8007e34 <_Unwind_GetGR>
 8007f78:	4582      	cmp	sl, r0
 8007f7a:	d834      	bhi.n	8007fe6 <__gnu_unwind_pr_common+0xe2>
 8007f7c:	f029 0301 	bic.w	r3, r9, #1
 8007f80:	4453      	add	r3, sl
 8007f82:	4283      	cmp	r3, r0
 8007f84:	bf94      	ite	ls
 8007f86:	2000      	movls	r0, #0
 8007f88:	2001      	movhi	r0, #1
 8007f8a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8007f8e:	f008 0802 	and.w	r8, r8, #2
 8007f92:	f009 0901 	and.w	r9, r9, #1
 8007f96:	ea48 0809 	orr.w	r8, r8, r9
 8007f9a:	f1b8 0f01 	cmp.w	r8, #1
 8007f9e:	d03a      	beq.n	8008016 <__gnu_unwind_pr_common+0x112>
 8007fa0:	d331      	bcc.n	8008006 <__gnu_unwind_pr_common+0x102>
 8007fa2:	f1b8 0f02 	cmp.w	r8, #2
 8007fa6:	d11a      	bne.n	8007fde <__gnu_unwind_pr_common+0xda>
 8007fa8:	6823      	ldr	r3, [r4, #0]
 8007faa:	f023 4a00 	bic.w	sl, r3, #2147483648	; 0x80000000
 8007fae:	f1bb 0f00 	cmp.w	fp, #0
 8007fb2:	d166      	bne.n	8008082 <__gnu_unwind_pr_common+0x17e>
 8007fb4:	b130      	cbz	r0, 8007fc4 <__gnu_unwind_pr_common+0xc0>
 8007fb6:	9a00      	ldr	r2, [sp, #0]
 8007fb8:	2a00      	cmp	r2, #0
 8007fba:	d06c      	beq.n	8008096 <__gnu_unwind_pr_common+0x192>
 8007fbc:	f1ba 0f00 	cmp.w	sl, #0
 8007fc0:	f000 8090 	beq.w	80080e4 <__gnu_unwind_pr_common+0x1e0>
 8007fc4:	2b00      	cmp	r3, #0
 8007fc6:	da00      	bge.n	8007fca <__gnu_unwind_pr_common+0xc6>
 8007fc8:	3404      	adds	r4, #4
 8007fca:	f10a 0301 	add.w	r3, sl, #1
 8007fce:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007fd2:	e7bc      	b.n	8007f4e <__gnu_unwind_pr_common+0x4a>
 8007fd4:	4630      	mov	r0, r6
 8007fd6:	a905      	add	r1, sp, #20
 8007fd8:	f000 fb46 	bl	8008668 <__gnu_unwind_execute>
 8007fdc:	b178      	cbz	r0, 8007ffe <__gnu_unwind_pr_common+0xfa>
 8007fde:	2009      	movs	r0, #9
 8007fe0:	b009      	add	sp, #36	; 0x24
 8007fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007fe6:	2000      	movs	r0, #0
 8007fe8:	e7cf      	b.n	8007f8a <__gnu_unwind_pr_common+0x86>
 8007fea:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007fee:	3408      	adds	r4, #8
 8007ff0:	e7ba      	b.n	8007f68 <__gnu_unwind_pr_common+0x64>
 8007ff2:	0212      	lsls	r2, r2, #8
 8007ff4:	2303      	movs	r3, #3
 8007ff6:	9205      	str	r2, [sp, #20]
 8007ff8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007ffc:	e79b      	b.n	8007f36 <__gnu_unwind_pr_common+0x32>
 8007ffe:	2008      	movs	r0, #8
 8008000:	b009      	add	sp, #36	; 0x24
 8008002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008006:	f1bb 0f00 	cmp.w	fp, #0
 800800a:	d002      	beq.n	8008012 <__gnu_unwind_pr_common+0x10e>
 800800c:	2800      	cmp	r0, #0
 800800e:	f040 80b4 	bne.w	800817a <__gnu_unwind_pr_common+0x276>
 8008012:	3404      	adds	r4, #4
 8008014:	e79b      	b.n	8007f4e <__gnu_unwind_pr_common+0x4a>
 8008016:	f1bb 0f00 	cmp.w	fp, #0
 800801a:	d118      	bne.n	800804e <__gnu_unwind_pr_common+0x14a>
 800801c:	b1a8      	cbz	r0, 800804a <__gnu_unwind_pr_common+0x146>
 800801e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8008022:	1c99      	adds	r1, r3, #2
 8008024:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8008028:	d0d9      	beq.n	8007fde <__gnu_unwind_pr_common+0xda>
 800802a:	f105 0158 	add.w	r1, r5, #88	; 0x58
 800802e:	3301      	adds	r3, #1
 8008030:	9104      	str	r1, [sp, #16]
 8008032:	f000 80b5 	beq.w	80081a0 <__gnu_unwind_pr_common+0x29c>
 8008036:	1d20      	adds	r0, r4, #4
 8008038:	f7ff fdea 	bl	8007c10 <_Unwind_decode_typeinfo_ptr.isra.0>
 800803c:	ab04      	add	r3, sp, #16
 800803e:	4601      	mov	r1, r0
 8008040:	4628      	mov	r0, r5
 8008042:	f004 fc85 	bl	800c950 <__cxa_type_match>
 8008046:	2800      	cmp	r0, #0
 8008048:	d167      	bne.n	800811a <__gnu_unwind_pr_common+0x216>
 800804a:	3408      	adds	r4, #8
 800804c:	e77f      	b.n	8007f4e <__gnu_unwind_pr_common+0x4a>
 800804e:	210d      	movs	r1, #13
 8008050:	4630      	mov	r0, r6
 8008052:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8008056:	f7ff feed 	bl	8007e34 <_Unwind_GetGR>
 800805a:	4580      	cmp	r8, r0
 800805c:	d1f5      	bne.n	800804a <__gnu_unwind_pr_common+0x146>
 800805e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008060:	429c      	cmp	r4, r3
 8008062:	d1f2      	bne.n	800804a <__gnu_unwind_pr_common+0x146>
 8008064:	4620      	mov	r0, r4
 8008066:	f7ff fd07 	bl	8007a78 <selfrel_offset31>
 800806a:	210f      	movs	r1, #15
 800806c:	4602      	mov	r2, r0
 800806e:	4630      	mov	r0, r6
 8008070:	f7ff ff02 	bl	8007e78 <_Unwind_SetGR>
 8008074:	4630      	mov	r0, r6
 8008076:	462a      	mov	r2, r5
 8008078:	2100      	movs	r1, #0
 800807a:	f7ff fefd 	bl	8007e78 <_Unwind_SetGR>
 800807e:	2007      	movs	r0, #7
 8008080:	e7ae      	b.n	8007fe0 <__gnu_unwind_pr_common+0xdc>
 8008082:	210d      	movs	r1, #13
 8008084:	4630      	mov	r0, r6
 8008086:	f8d5 8020 	ldr.w	r8, [r5, #32]
 800808a:	f7ff fed3 	bl	8007e34 <_Unwind_GetGR>
 800808e:	4580      	cmp	r8, r0
 8008090:	d032      	beq.n	80080f8 <__gnu_unwind_pr_common+0x1f4>
 8008092:	6823      	ldr	r3, [r4, #0]
 8008094:	e796      	b.n	8007fc4 <__gnu_unwind_pr_common+0xc0>
 8008096:	f1ba 0f00 	cmp.w	sl, #0
 800809a:	d023      	beq.n	80080e4 <__gnu_unwind_pr_common+0x1e0>
 800809c:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80080a0:	f104 0804 	add.w	r8, r4, #4
 80080a4:	f8cd b008 	str.w	fp, [sp, #8]
 80080a8:	f8dd 9000 	ldr.w	r9, [sp]
 80080ac:	9703      	str	r7, [sp, #12]
 80080ae:	46a3      	mov	fp, r4
 80080b0:	461c      	mov	r4, r3
 80080b2:	e002      	b.n	80080ba <__gnu_unwind_pr_common+0x1b6>
 80080b4:	4557      	cmp	r7, sl
 80080b6:	46b9      	mov	r9, r7
 80080b8:	d040      	beq.n	800813c <__gnu_unwind_pr_common+0x238>
 80080ba:	4640      	mov	r0, r8
 80080bc:	9404      	str	r4, [sp, #16]
 80080be:	f7ff fda7 	bl	8007c10 <_Unwind_decode_typeinfo_ptr.isra.0>
 80080c2:	ab04      	add	r3, sp, #16
 80080c4:	4601      	mov	r1, r0
 80080c6:	2200      	movs	r2, #0
 80080c8:	4628      	mov	r0, r5
 80080ca:	f004 fc41 	bl	800c950 <__cxa_type_match>
 80080ce:	f109 0701 	add.w	r7, r9, #1
 80080d2:	f108 0804 	add.w	r8, r8, #4
 80080d6:	2800      	cmp	r0, #0
 80080d8:	d0ec      	beq.n	80080b4 <__gnu_unwind_pr_common+0x1b0>
 80080da:	45d1      	cmp	r9, sl
 80080dc:	465c      	mov	r4, fp
 80080de:	e9dd b702 	ldrd	fp, r7, [sp, #8]
 80080e2:	d1d6      	bne.n	8008092 <__gnu_unwind_pr_common+0x18e>
 80080e4:	4630      	mov	r0, r6
 80080e6:	210d      	movs	r1, #13
 80080e8:	f7ff fea4 	bl	8007e34 <_Unwind_GetGR>
 80080ec:	9b04      	ldr	r3, [sp, #16]
 80080ee:	6228      	str	r0, [r5, #32]
 80080f0:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 80080f4:	2006      	movs	r0, #6
 80080f6:	e773      	b.n	8007fe0 <__gnu_unwind_pr_common+0xdc>
 80080f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80080fa:	429c      	cmp	r4, r3
 80080fc:	d1c9      	bne.n	8008092 <__gnu_unwind_pr_common+0x18e>
 80080fe:	2204      	movs	r2, #4
 8008100:	f04f 0800 	mov.w	r8, #0
 8008104:	18a3      	adds	r3, r4, r2
 8008106:	e9c5 a80a 	strd	sl, r8, [r5, #40]	; 0x28
 800810a:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
 800810e:	6823      	ldr	r3, [r4, #0]
 8008110:	4543      	cmp	r3, r8
 8008112:	db4d      	blt.n	80081b0 <__gnu_unwind_pr_common+0x2ac>
 8008114:	2301      	movs	r3, #1
 8008116:	9301      	str	r3, [sp, #4]
 8008118:	e757      	b.n	8007fca <__gnu_unwind_pr_common+0xc6>
 800811a:	4680      	mov	r8, r0
 800811c:	210d      	movs	r1, #13
 800811e:	4630      	mov	r0, r6
 8008120:	f7ff fe88 	bl	8007e34 <_Unwind_GetGR>
 8008124:	f1b8 0f02 	cmp.w	r8, #2
 8008128:	6228      	str	r0, [r5, #32]
 800812a:	d13e      	bne.n	80081aa <__gnu_unwind_pr_common+0x2a6>
 800812c:	462b      	mov	r3, r5
 800812e:	9a04      	ldr	r2, [sp, #16]
 8008130:	f843 2f2c 	str.w	r2, [r3, #44]!
 8008134:	626b      	str	r3, [r5, #36]	; 0x24
 8008136:	62ac      	str	r4, [r5, #40]	; 0x28
 8008138:	2006      	movs	r0, #6
 800813a:	e751      	b.n	8007fe0 <__gnu_unwind_pr_common+0xdc>
 800813c:	465c      	mov	r4, fp
 800813e:	e7d1      	b.n	80080e4 <__gnu_unwind_pr_common+0x1e0>
 8008140:	a905      	add	r1, sp, #20
 8008142:	4630      	mov	r0, r6
 8008144:	f000 fa90 	bl	8008668 <__gnu_unwind_execute>
 8008148:	2800      	cmp	r0, #0
 800814a:	f47f af48 	bne.w	8007fde <__gnu_unwind_pr_common+0xda>
 800814e:	9b01      	ldr	r3, [sp, #4]
 8008150:	2b00      	cmp	r3, #0
 8008152:	f43f af54 	beq.w	8007ffe <__gnu_unwind_pr_common+0xfa>
 8008156:	210f      	movs	r1, #15
 8008158:	4630      	mov	r0, r6
 800815a:	f7ff fe6b 	bl	8007e34 <_Unwind_GetGR>
 800815e:	210e      	movs	r1, #14
 8008160:	4602      	mov	r2, r0
 8008162:	4630      	mov	r0, r6
 8008164:	f7ff fe88 	bl	8007e78 <_Unwind_SetGR>
 8008168:	4630      	mov	r0, r6
 800816a:	4a1a      	ldr	r2, [pc, #104]	; (80081d4 <__gnu_unwind_pr_common+0x2d0>)
 800816c:	210f      	movs	r1, #15
 800816e:	f7ff fe83 	bl	8007e78 <_Unwind_SetGR>
 8008172:	2007      	movs	r0, #7
 8008174:	b009      	add	sp, #36	; 0x24
 8008176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800817a:	4620      	mov	r0, r4
 800817c:	f7ff fc7c 	bl	8007a78 <selfrel_offset31>
 8008180:	3404      	adds	r4, #4
 8008182:	4607      	mov	r7, r0
 8008184:	63ac      	str	r4, [r5, #56]	; 0x38
 8008186:	4628      	mov	r0, r5
 8008188:	f004 fc3a 	bl	800ca00 <__cxa_begin_cleanup>
 800818c:	2800      	cmp	r0, #0
 800818e:	f43f af26 	beq.w	8007fde <__gnu_unwind_pr_common+0xda>
 8008192:	4630      	mov	r0, r6
 8008194:	463a      	mov	r2, r7
 8008196:	210f      	movs	r1, #15
 8008198:	f7ff fe6e 	bl	8007e78 <_Unwind_SetGR>
 800819c:	2007      	movs	r0, #7
 800819e:	e71f      	b.n	8007fe0 <__gnu_unwind_pr_common+0xdc>
 80081a0:	4630      	mov	r0, r6
 80081a2:	210d      	movs	r1, #13
 80081a4:	f7ff fe46 	bl	8007e34 <_Unwind_GetGR>
 80081a8:	6228      	str	r0, [r5, #32]
 80081aa:	9b04      	ldr	r3, [sp, #16]
 80081ac:	626b      	str	r3, [r5, #36]	; 0x24
 80081ae:	e7c2      	b.n	8008136 <__gnu_unwind_pr_common+0x232>
 80081b0:	f10a 0001 	add.w	r0, sl, #1
 80081b4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80081b8:	f7ff fc5e 	bl	8007a78 <selfrel_offset31>
 80081bc:	210f      	movs	r1, #15
 80081be:	4602      	mov	r2, r0
 80081c0:	4630      	mov	r0, r6
 80081c2:	f7ff fe59 	bl	8007e78 <_Unwind_SetGR>
 80081c6:	4630      	mov	r0, r6
 80081c8:	462a      	mov	r2, r5
 80081ca:	4641      	mov	r1, r8
 80081cc:	f7ff fe54 	bl	8007e78 <_Unwind_SetGR>
 80081d0:	2007      	movs	r0, #7
 80081d2:	e705      	b.n	8007fe0 <__gnu_unwind_pr_common+0xdc>
 80081d4:	0800c869 	.word	0x0800c869

080081d8 <__aeabi_unwind_cpp_pr0>:
 80081d8:	2300      	movs	r3, #0
 80081da:	e693      	b.n	8007f04 <__gnu_unwind_pr_common>

080081dc <__aeabi_unwind_cpp_pr1>:
 80081dc:	2301      	movs	r3, #1
 80081de:	e691      	b.n	8007f04 <__gnu_unwind_pr_common>

080081e0 <__aeabi_unwind_cpp_pr2>:
 80081e0:	2302      	movs	r3, #2
 80081e2:	e68f      	b.n	8007f04 <__gnu_unwind_pr_common>

080081e4 <_Unwind_VRS_Pop>:
 80081e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081e8:	4605      	mov	r5, r0
 80081ea:	b0c4      	sub	sp, #272	; 0x110
 80081ec:	2904      	cmp	r1, #4
 80081ee:	d806      	bhi.n	80081fe <_Unwind_VRS_Pop+0x1a>
 80081f0:	e8df f001 	tbb	[pc, r1]
 80081f4:	03052b4d 	.word	0x03052b4d
 80081f8:	09          	.byte	0x09
 80081f9:	00          	.byte	0x00
 80081fa:	2b03      	cmp	r3, #3
 80081fc:	d05f      	beq.n	80082be <_Unwind_VRS_Pop+0xda>
 80081fe:	2002      	movs	r0, #2
 8008200:	b044      	add	sp, #272	; 0x110
 8008202:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008206:	2b00      	cmp	r3, #0
 8008208:	d1f9      	bne.n	80081fe <_Unwind_VRS_Pop+0x1a>
 800820a:	2a10      	cmp	r2, #16
 800820c:	d8f7      	bhi.n	80081fe <_Unwind_VRS_Pop+0x1a>
 800820e:	682b      	ldr	r3, [r5, #0]
 8008210:	06dc      	lsls	r4, r3, #27
 8008212:	f100 80f4 	bmi.w	80083fe <_Unwind_VRS_Pop+0x21a>
 8008216:	ac22      	add	r4, sp, #136	; 0x88
 8008218:	4620      	mov	r0, r4
 800821a:	9201      	str	r2, [sp, #4]
 800821c:	f000 f994 	bl	8008548 <__gnu_Unwind_Save_WMMXC>
 8008220:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8008222:	9a01      	ldr	r2, [sp, #4]
 8008224:	2300      	movs	r3, #0
 8008226:	2601      	movs	r6, #1
 8008228:	fa06 f103 	lsl.w	r1, r6, r3
 800822c:	4211      	tst	r1, r2
 800822e:	d003      	beq.n	8008238 <_Unwind_VRS_Pop+0x54>
 8008230:	6801      	ldr	r1, [r0, #0]
 8008232:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8008236:	3004      	adds	r0, #4
 8008238:	3301      	adds	r3, #1
 800823a:	2b04      	cmp	r3, #4
 800823c:	d1f4      	bne.n	8008228 <_Unwind_VRS_Pop+0x44>
 800823e:	63a8      	str	r0, [r5, #56]	; 0x38
 8008240:	4620      	mov	r0, r4
 8008242:	f000 f977 	bl	8008534 <__gnu_Unwind_Restore_WMMXC>
 8008246:	2000      	movs	r0, #0
 8008248:	e7da      	b.n	8008200 <_Unwind_VRS_Pop+0x1c>
 800824a:	2b01      	cmp	r3, #1
 800824c:	ea4f 4612 	mov.w	r6, r2, lsr #16
 8008250:	b297      	uxth	r7, r2
 8008252:	d052      	beq.n	80082fa <_Unwind_VRS_Pop+0x116>
 8008254:	2b05      	cmp	r3, #5
 8008256:	d1d2      	bne.n	80081fe <_Unwind_VRS_Pop+0x1a>
 8008258:	eb06 0807 	add.w	r8, r6, r7
 800825c:	f1b8 0f20 	cmp.w	r8, #32
 8008260:	d8cd      	bhi.n	80081fe <_Unwind_VRS_Pop+0x1a>
 8008262:	2e0f      	cmp	r6, #15
 8008264:	f240 8099 	bls.w	800839a <_Unwind_VRS_Pop+0x1b6>
 8008268:	46b8      	mov	r8, r7
 800826a:	2f00      	cmp	r7, #0
 800826c:	f040 80db 	bne.w	8008426 <_Unwind_VRS_Pop+0x242>
 8008270:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8008272:	63aa      	str	r2, [r5, #56]	; 0x38
 8008274:	2e0f      	cmp	r6, #15
 8008276:	f240 80be 	bls.w	80083f6 <_Unwind_VRS_Pop+0x212>
 800827a:	f1b8 0f00 	cmp.w	r8, #0
 800827e:	d002      	beq.n	8008286 <_Unwind_VRS_Pop+0xa2>
 8008280:	a802      	add	r0, sp, #8
 8008282:	f000 f90b 	bl	800849c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8008286:	2000      	movs	r0, #0
 8008288:	b044      	add	sp, #272	; 0x110
 800828a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800828e:	2b00      	cmp	r3, #0
 8008290:	d1b5      	bne.n	80081fe <_Unwind_VRS_Pop+0x1a>
 8008292:	6bac      	ldr	r4, [r5, #56]	; 0x38
 8008294:	b297      	uxth	r7, r2
 8008296:	1d28      	adds	r0, r5, #4
 8008298:	2601      	movs	r6, #1
 800829a:	fa06 f103 	lsl.w	r1, r6, r3
 800829e:	4239      	tst	r1, r7
 80082a0:	f103 0301 	add.w	r3, r3, #1
 80082a4:	d002      	beq.n	80082ac <_Unwind_VRS_Pop+0xc8>
 80082a6:	6821      	ldr	r1, [r4, #0]
 80082a8:	6001      	str	r1, [r0, #0]
 80082aa:	3404      	adds	r4, #4
 80082ac:	2b10      	cmp	r3, #16
 80082ae:	f100 0004 	add.w	r0, r0, #4
 80082b2:	d1f2      	bne.n	800829a <_Unwind_VRS_Pop+0xb6>
 80082b4:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 80082b8:	d1e5      	bne.n	8008286 <_Unwind_VRS_Pop+0xa2>
 80082ba:	63ac      	str	r4, [r5, #56]	; 0x38
 80082bc:	e7a0      	b.n	8008200 <_Unwind_VRS_Pop+0x1c>
 80082be:	0c16      	lsrs	r6, r2, #16
 80082c0:	b297      	uxth	r7, r2
 80082c2:	19f3      	adds	r3, r6, r7
 80082c4:	2b10      	cmp	r3, #16
 80082c6:	d89a      	bhi.n	80081fe <_Unwind_VRS_Pop+0x1a>
 80082c8:	682b      	ldr	r3, [r5, #0]
 80082ca:	071a      	lsls	r2, r3, #28
 80082cc:	d45d      	bmi.n	800838a <_Unwind_VRS_Pop+0x1a6>
 80082ce:	ac22      	add	r4, sp, #136	; 0x88
 80082d0:	4620      	mov	r0, r4
 80082d2:	f000 f90d 	bl	80084f0 <__gnu_Unwind_Save_WMMXD>
 80082d6:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 80082da:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80082dc:	b13f      	cbz	r7, 80082ee <_Unwind_VRS_Pop+0x10a>
 80082de:	eb03 02c7 	add.w	r2, r3, r7, lsl #3
 80082e2:	6818      	ldr	r0, [r3, #0]
 80082e4:	f841 0b04 	str.w	r0, [r1], #4
 80082e8:	3304      	adds	r3, #4
 80082ea:	4293      	cmp	r3, r2
 80082ec:	d1f9      	bne.n	80082e2 <_Unwind_VRS_Pop+0xfe>
 80082ee:	4620      	mov	r0, r4
 80082f0:	63ab      	str	r3, [r5, #56]	; 0x38
 80082f2:	f000 f8db 	bl	80084ac <__gnu_Unwind_Restore_WMMXD>
 80082f6:	2000      	movs	r0, #0
 80082f8:	e782      	b.n	8008200 <_Unwind_VRS_Pop+0x1c>
 80082fa:	19f2      	adds	r2, r6, r7
 80082fc:	2a10      	cmp	r2, #16
 80082fe:	f63f af7e 	bhi.w	80081fe <_Unwind_VRS_Pop+0x1a>
 8008302:	2e0f      	cmp	r6, #15
 8008304:	f63f af7b 	bhi.w	80081fe <_Unwind_VRS_Pop+0x1a>
 8008308:	682a      	ldr	r2, [r5, #0]
 800830a:	07d1      	lsls	r1, r2, #31
 800830c:	d508      	bpl.n	8008320 <_Unwind_VRS_Pop+0x13c>
 800830e:	4628      	mov	r0, r5
 8008310:	f022 0203 	bic.w	r2, r2, #3
 8008314:	f840 2b48 	str.w	r2, [r0], #72
 8008318:	9301      	str	r3, [sp, #4]
 800831a:	f000 f8b3 	bl	8008484 <__gnu_Unwind_Save_VFP>
 800831e:	9b01      	ldr	r3, [sp, #4]
 8008320:	9301      	str	r3, [sp, #4]
 8008322:	ac22      	add	r4, sp, #136	; 0x88
 8008324:	4620      	mov	r0, r4
 8008326:	f000 f8ad 	bl	8008484 <__gnu_Unwind_Save_VFP>
 800832a:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800832c:	9b01      	ldr	r3, [sp, #4]
 800832e:	2f00      	cmp	r7, #0
 8008330:	f000 8095 	beq.w	800845e <_Unwind_VRS_Pop+0x27a>
 8008334:	007f      	lsls	r7, r7, #1
 8008336:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 800833a:	f04f 0800 	mov.w	r8, #0
 800833e:	3c04      	subs	r4, #4
 8008340:	eb01 0287 	add.w	r2, r1, r7, lsl #2
 8008344:	f851 0b04 	ldr.w	r0, [r1], #4
 8008348:	f844 0f04 	str.w	r0, [r4, #4]!
 800834c:	4291      	cmp	r1, r2
 800834e:	d1f9      	bne.n	8008344 <_Unwind_VRS_Pop+0x160>
 8008350:	f1b8 0f00 	cmp.w	r8, #0
 8008354:	d00f      	beq.n	8008376 <_Unwind_VRS_Pop+0x192>
 8008356:	ac02      	add	r4, sp, #8
 8008358:	2e10      	cmp	r6, #16
 800835a:	4631      	mov	r1, r6
 800835c:	bf38      	it	cc
 800835e:	2110      	movcc	r1, #16
 8008360:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8008364:	3984      	subs	r1, #132	; 0x84
 8008366:	eb02 04c8 	add.w	r4, r2, r8, lsl #3
 800836a:	f852 0b04 	ldr.w	r0, [r2], #4
 800836e:	f841 0f04 	str.w	r0, [r1, #4]!
 8008372:	4294      	cmp	r4, r2
 8008374:	d1f9      	bne.n	800836a <_Unwind_VRS_Pop+0x186>
 8008376:	2b01      	cmp	r3, #1
 8008378:	f47f af7b 	bne.w	8008272 <_Unwind_VRS_Pop+0x8e>
 800837c:	ac22      	add	r4, sp, #136	; 0x88
 800837e:	3204      	adds	r2, #4
 8008380:	63aa      	str	r2, [r5, #56]	; 0x38
 8008382:	4620      	mov	r0, r4
 8008384:	f000 f87a 	bl	800847c <__gnu_Unwind_Restore_VFP>
 8008388:	e77d      	b.n	8008286 <_Unwind_VRS_Pop+0xa2>
 800838a:	f023 0308 	bic.w	r3, r3, #8
 800838e:	602b      	str	r3, [r5, #0]
 8008390:	f505 70a8 	add.w	r0, r5, #336	; 0x150
 8008394:	f000 f8ac 	bl	80084f0 <__gnu_Unwind_Save_WMMXD>
 8008398:	e799      	b.n	80082ce <_Unwind_VRS_Pop+0xea>
 800839a:	f1b8 0f10 	cmp.w	r8, #16
 800839e:	682a      	ldr	r2, [r5, #0]
 80083a0:	d943      	bls.n	800842a <_Unwind_VRS_Pop+0x246>
 80083a2:	07d0      	lsls	r0, r2, #31
 80083a4:	f1a8 0810 	sub.w	r8, r8, #16
 80083a8:	d50b      	bpl.n	80083c2 <_Unwind_VRS_Pop+0x1de>
 80083aa:	4628      	mov	r0, r5
 80083ac:	f022 0201 	bic.w	r2, r2, #1
 80083b0:	f042 0202 	orr.w	r2, r2, #2
 80083b4:	f840 2b48 	str.w	r2, [r0], #72
 80083b8:	9301      	str	r3, [sp, #4]
 80083ba:	f000 f86b 	bl	8008494 <__gnu_Unwind_Save_VFP_D>
 80083be:	682a      	ldr	r2, [r5, #0]
 80083c0:	9b01      	ldr	r3, [sp, #4]
 80083c2:	0751      	lsls	r1, r2, #29
 80083c4:	d425      	bmi.n	8008412 <_Unwind_VRS_Pop+0x22e>
 80083c6:	2e0f      	cmp	r6, #15
 80083c8:	d804      	bhi.n	80083d4 <_Unwind_VRS_Pop+0x1f0>
 80083ca:	a822      	add	r0, sp, #136	; 0x88
 80083cc:	9301      	str	r3, [sp, #4]
 80083ce:	f000 f861 	bl	8008494 <__gnu_Unwind_Save_VFP_D>
 80083d2:	9b01      	ldr	r3, [sp, #4]
 80083d4:	9301      	str	r3, [sp, #4]
 80083d6:	ac02      	add	r4, sp, #8
 80083d8:	4620      	mov	r0, r4
 80083da:	f000 f863 	bl	80084a4 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80083de:	f1c6 0110 	rsb	r1, r6, #16
 80083e2:	2900      	cmp	r1, #0
 80083e4:	6baa      	ldr	r2, [r5, #56]	; 0x38
 80083e6:	9b01      	ldr	r3, [sp, #4]
 80083e8:	ddb6      	ble.n	8008358 <_Unwind_VRS_Pop+0x174>
 80083ea:	ac22      	add	r4, sp, #136	; 0x88
 80083ec:	004f      	lsls	r7, r1, #1
 80083ee:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80083f2:	4611      	mov	r1, r2
 80083f4:	e7a3      	b.n	800833e <_Unwind_VRS_Pop+0x15a>
 80083f6:	a822      	add	r0, sp, #136	; 0x88
 80083f8:	f000 f848 	bl	800848c <__gnu_Unwind_Restore_VFP_D>
 80083fc:	e73d      	b.n	800827a <_Unwind_VRS_Pop+0x96>
 80083fe:	f023 0310 	bic.w	r3, r3, #16
 8008402:	602b      	str	r3, [r5, #0]
 8008404:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8008408:	9201      	str	r2, [sp, #4]
 800840a:	f000 f89d 	bl	8008548 <__gnu_Unwind_Save_WMMXC>
 800840e:	9a01      	ldr	r2, [sp, #4]
 8008410:	e701      	b.n	8008216 <_Unwind_VRS_Pop+0x32>
 8008412:	4628      	mov	r0, r5
 8008414:	f022 0204 	bic.w	r2, r2, #4
 8008418:	f840 2bd0 	str.w	r2, [r0], #208
 800841c:	9301      	str	r3, [sp, #4]
 800841e:	f000 f841 	bl	80084a4 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8008422:	9b01      	ldr	r3, [sp, #4]
 8008424:	e7cf      	b.n	80083c6 <_Unwind_VRS_Pop+0x1e2>
 8008426:	682a      	ldr	r2, [r5, #0]
 8008428:	e7cb      	b.n	80083c2 <_Unwind_VRS_Pop+0x1de>
 800842a:	07d0      	lsls	r0, r2, #31
 800842c:	d50a      	bpl.n	8008444 <_Unwind_VRS_Pop+0x260>
 800842e:	4628      	mov	r0, r5
 8008430:	f022 0201 	bic.w	r2, r2, #1
 8008434:	f042 0202 	orr.w	r2, r2, #2
 8008438:	f840 2b48 	str.w	r2, [r0], #72
 800843c:	9301      	str	r3, [sp, #4]
 800843e:	f000 f829 	bl	8008494 <__gnu_Unwind_Save_VFP_D>
 8008442:	9b01      	ldr	r3, [sp, #4]
 8008444:	9301      	str	r3, [sp, #4]
 8008446:	ac22      	add	r4, sp, #136	; 0x88
 8008448:	4620      	mov	r0, r4
 800844a:	f000 f823 	bl	8008494 <__gnu_Unwind_Save_VFP_D>
 800844e:	46b8      	mov	r8, r7
 8008450:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8008452:	9b01      	ldr	r3, [sp, #4]
 8008454:	2f00      	cmp	r7, #0
 8008456:	f47f af6d 	bne.w	8008334 <_Unwind_VRS_Pop+0x150>
 800845a:	460a      	mov	r2, r1
 800845c:	e709      	b.n	8008272 <_Unwind_VRS_Pop+0x8e>
 800845e:	460a      	mov	r2, r1
 8008460:	e78d      	b.n	800837e <_Unwind_VRS_Pop+0x19a>
 8008462:	bf00      	nop

08008464 <__restore_core_regs>:
 8008464:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8008468:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 800846c:	469c      	mov	ip, r3
 800846e:	46a6      	mov	lr, r4
 8008470:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8008474:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8008478:	46e5      	mov	sp, ip
 800847a:	bd00      	pop	{pc}

0800847c <__gnu_Unwind_Restore_VFP>:
 800847c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8008480:	4770      	bx	lr
 8008482:	bf00      	nop

08008484 <__gnu_Unwind_Save_VFP>:
 8008484:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8008488:	4770      	bx	lr
 800848a:	bf00      	nop

0800848c <__gnu_Unwind_Restore_VFP_D>:
 800848c:	ec90 0b20 	vldmia	r0, {d0-d15}
 8008490:	4770      	bx	lr
 8008492:	bf00      	nop

08008494 <__gnu_Unwind_Save_VFP_D>:
 8008494:	ec80 0b20 	vstmia	r0, {d0-d15}
 8008498:	4770      	bx	lr
 800849a:	bf00      	nop

0800849c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 800849c:	ecd0 0b20 	vldmia	r0, {d16-d31}
 80084a0:	4770      	bx	lr
 80084a2:	bf00      	nop

080084a4 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 80084a4:	ecc0 0b20 	vstmia	r0, {d16-d31}
 80084a8:	4770      	bx	lr
 80084aa:	bf00      	nop

080084ac <__gnu_Unwind_Restore_WMMXD>:
 80084ac:	ecf0 0102 	ldfe	f0, [r0], #8
 80084b0:	ecf0 1102 	ldfe	f1, [r0], #8
 80084b4:	ecf0 2102 	ldfe	f2, [r0], #8
 80084b8:	ecf0 3102 	ldfe	f3, [r0], #8
 80084bc:	ecf0 4102 	ldfe	f4, [r0], #8
 80084c0:	ecf0 5102 	ldfe	f5, [r0], #8
 80084c4:	ecf0 6102 	ldfe	f6, [r0], #8
 80084c8:	ecf0 7102 	ldfe	f7, [r0], #8
 80084cc:	ecf0 8102 	ldfp	f0, [r0], #8
 80084d0:	ecf0 9102 	ldfp	f1, [r0], #8
 80084d4:	ecf0 a102 	ldfp	f2, [r0], #8
 80084d8:	ecf0 b102 	ldfp	f3, [r0], #8
 80084dc:	ecf0 c102 	ldfp	f4, [r0], #8
 80084e0:	ecf0 d102 	ldfp	f5, [r0], #8
 80084e4:	ecf0 e102 	ldfp	f6, [r0], #8
 80084e8:	ecf0 f102 	ldfp	f7, [r0], #8
 80084ec:	4770      	bx	lr
 80084ee:	bf00      	nop

080084f0 <__gnu_Unwind_Save_WMMXD>:
 80084f0:	ece0 0102 	stfe	f0, [r0], #8
 80084f4:	ece0 1102 	stfe	f1, [r0], #8
 80084f8:	ece0 2102 	stfe	f2, [r0], #8
 80084fc:	ece0 3102 	stfe	f3, [r0], #8
 8008500:	ece0 4102 	stfe	f4, [r0], #8
 8008504:	ece0 5102 	stfe	f5, [r0], #8
 8008508:	ece0 6102 	stfe	f6, [r0], #8
 800850c:	ece0 7102 	stfe	f7, [r0], #8
 8008510:	ece0 8102 	stfp	f0, [r0], #8
 8008514:	ece0 9102 	stfp	f1, [r0], #8
 8008518:	ece0 a102 	stfp	f2, [r0], #8
 800851c:	ece0 b102 	stfp	f3, [r0], #8
 8008520:	ece0 c102 	stfp	f4, [r0], #8
 8008524:	ece0 d102 	stfp	f5, [r0], #8
 8008528:	ece0 e102 	stfp	f6, [r0], #8
 800852c:	ece0 f102 	stfp	f7, [r0], #8
 8008530:	4770      	bx	lr
 8008532:	bf00      	nop

08008534 <__gnu_Unwind_Restore_WMMXC>:
 8008534:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8008538:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 800853c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8008540:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8008544:	4770      	bx	lr
 8008546:	bf00      	nop

08008548 <__gnu_Unwind_Save_WMMXC>:
 8008548:	fca0 8101 	stc2	1, cr8, [r0], #4
 800854c:	fca0 9101 	stc2	1, cr9, [r0], #4
 8008550:	fca0 a101 	stc2	1, cr10, [r0], #4
 8008554:	fca0 b101 	stc2	1, cr11, [r0], #4
 8008558:	4770      	bx	lr
 800855a:	bf00      	nop

0800855c <_Unwind_RaiseException>:
 800855c:	46ec      	mov	ip, sp
 800855e:	b500      	push	{lr}
 8008560:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008564:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008568:	f04f 0300 	mov.w	r3, #0
 800856c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008570:	a901      	add	r1, sp, #4
 8008572:	f7ff fbdd 	bl	8007d30 <__gnu_Unwind_RaiseException>
 8008576:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800857a:	b012      	add	sp, #72	; 0x48
 800857c:	4770      	bx	lr
 800857e:	bf00      	nop

08008580 <_Unwind_Resume>:
 8008580:	46ec      	mov	ip, sp
 8008582:	b500      	push	{lr}
 8008584:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008588:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800858c:	f04f 0300 	mov.w	r3, #0
 8008590:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008594:	a901      	add	r1, sp, #4
 8008596:	f7ff fc05 	bl	8007da4 <__gnu_Unwind_Resume>
 800859a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800859e:	b012      	add	sp, #72	; 0x48
 80085a0:	4770      	bx	lr
 80085a2:	bf00      	nop

080085a4 <_Unwind_Resume_or_Rethrow>:
 80085a4:	46ec      	mov	ip, sp
 80085a6:	b500      	push	{lr}
 80085a8:	e92d 5000 	stmdb	sp!, {ip, lr}
 80085ac:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80085b0:	f04f 0300 	mov.w	r3, #0
 80085b4:	e92d 000c 	stmdb	sp!, {r2, r3}
 80085b8:	a901      	add	r1, sp, #4
 80085ba:	f7ff fc15 	bl	8007de8 <__gnu_Unwind_Resume_or_Rethrow>
 80085be:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80085c2:	b012      	add	sp, #72	; 0x48
 80085c4:	4770      	bx	lr
 80085c6:	bf00      	nop

080085c8 <_Unwind_ForcedUnwind>:
 80085c8:	46ec      	mov	ip, sp
 80085ca:	b500      	push	{lr}
 80085cc:	e92d 5000 	stmdb	sp!, {ip, lr}
 80085d0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80085d4:	f04f 0300 	mov.w	r3, #0
 80085d8:	e92d 000c 	stmdb	sp!, {r2, r3}
 80085dc:	ab01      	add	r3, sp, #4
 80085de:	f7ff fbd7 	bl	8007d90 <__gnu_Unwind_ForcedUnwind>
 80085e2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80085e6:	b012      	add	sp, #72	; 0x48
 80085e8:	4770      	bx	lr
 80085ea:	bf00      	nop

080085ec <_Unwind_Backtrace>:
 80085ec:	46ec      	mov	ip, sp
 80085ee:	b500      	push	{lr}
 80085f0:	e92d 5000 	stmdb	sp!, {ip, lr}
 80085f4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80085f8:	f04f 0300 	mov.w	r3, #0
 80085fc:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008600:	aa01      	add	r2, sp, #4
 8008602:	f7ff fc47 	bl	8007e94 <__gnu_Unwind_Backtrace>
 8008606:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800860a:	b012      	add	sp, #72	; 0x48
 800860c:	4770      	bx	lr
 800860e:	bf00      	nop

08008610 <next_unwind_byte>:
 8008610:	7a02      	ldrb	r2, [r0, #8]
 8008612:	b982      	cbnz	r2, 8008636 <next_unwind_byte+0x26>
 8008614:	7a43      	ldrb	r3, [r0, #9]
 8008616:	b1ab      	cbz	r3, 8008644 <next_unwind_byte+0x34>
 8008618:	6842      	ldr	r2, [r0, #4]
 800861a:	3b01      	subs	r3, #1
 800861c:	b410      	push	{r4}
 800861e:	7243      	strb	r3, [r0, #9]
 8008620:	6813      	ldr	r3, [r2, #0]
 8008622:	2103      	movs	r1, #3
 8008624:	1d14      	adds	r4, r2, #4
 8008626:	7201      	strb	r1, [r0, #8]
 8008628:	021a      	lsls	r2, r3, #8
 800862a:	6044      	str	r4, [r0, #4]
 800862c:	6002      	str	r2, [r0, #0]
 800862e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008632:	0e18      	lsrs	r0, r3, #24
 8008634:	4770      	bx	lr
 8008636:	6803      	ldr	r3, [r0, #0]
 8008638:	3a01      	subs	r2, #1
 800863a:	7202      	strb	r2, [r0, #8]
 800863c:	021a      	lsls	r2, r3, #8
 800863e:	6002      	str	r2, [r0, #0]
 8008640:	0e18      	lsrs	r0, r3, #24
 8008642:	4770      	bx	lr
 8008644:	20b0      	movs	r0, #176	; 0xb0
 8008646:	4770      	bx	lr

08008648 <_Unwind_GetGR.constprop.0>:
 8008648:	b500      	push	{lr}
 800864a:	b085      	sub	sp, #20
 800864c:	aa03      	add	r2, sp, #12
 800864e:	2300      	movs	r3, #0
 8008650:	9200      	str	r2, [sp, #0]
 8008652:	4619      	mov	r1, r3
 8008654:	220c      	movs	r2, #12
 8008656:	f7ff fbd7 	bl	8007e08 <_Unwind_VRS_Get>
 800865a:	9803      	ldr	r0, [sp, #12]
 800865c:	b005      	add	sp, #20
 800865e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008662:	bf00      	nop

08008664 <unwind_UCB_from_context>:
 8008664:	e7f0      	b.n	8008648 <_Unwind_GetGR.constprop.0>
 8008666:	bf00      	nop

08008668 <__gnu_unwind_execute>:
 8008668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800866c:	4605      	mov	r5, r0
 800866e:	b085      	sub	sp, #20
 8008670:	460e      	mov	r6, r1
 8008672:	f04f 0800 	mov.w	r8, #0
 8008676:	4630      	mov	r0, r6
 8008678:	f7ff ffca 	bl	8008610 <next_unwind_byte>
 800867c:	28b0      	cmp	r0, #176	; 0xb0
 800867e:	4604      	mov	r4, r0
 8008680:	f000 80b1 	beq.w	80087e6 <__gnu_unwind_execute+0x17e>
 8008684:	0607      	lsls	r7, r0, #24
 8008686:	d520      	bpl.n	80086ca <__gnu_unwind_execute+0x62>
 8008688:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 800868c:	2b80      	cmp	r3, #128	; 0x80
 800868e:	d065      	beq.n	800875c <__gnu_unwind_execute+0xf4>
 8008690:	2b90      	cmp	r3, #144	; 0x90
 8008692:	d036      	beq.n	8008702 <__gnu_unwind_execute+0x9a>
 8008694:	2ba0      	cmp	r3, #160	; 0xa0
 8008696:	d078      	beq.n	800878a <__gnu_unwind_execute+0x122>
 8008698:	2bb0      	cmp	r3, #176	; 0xb0
 800869a:	d047      	beq.n	800872c <__gnu_unwind_execute+0xc4>
 800869c:	2bc0      	cmp	r3, #192	; 0xc0
 800869e:	f000 808a 	beq.w	80087b6 <__gnu_unwind_execute+0x14e>
 80086a2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80086a6:	2bd0      	cmp	r3, #208	; 0xd0
 80086a8:	d10b      	bne.n	80086c2 <__gnu_unwind_execute+0x5a>
 80086aa:	f000 0207 	and.w	r2, r0, #7
 80086ae:	3201      	adds	r2, #1
 80086b0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80086b4:	2305      	movs	r3, #5
 80086b6:	2101      	movs	r1, #1
 80086b8:	4628      	mov	r0, r5
 80086ba:	f7ff fd93 	bl	80081e4 <_Unwind_VRS_Pop>
 80086be:	2800      	cmp	r0, #0
 80086c0:	d0d9      	beq.n	8008676 <__gnu_unwind_execute+0xe>
 80086c2:	2009      	movs	r0, #9
 80086c4:	b005      	add	sp, #20
 80086c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80086ca:	f10d 090c 	add.w	r9, sp, #12
 80086ce:	2300      	movs	r3, #0
 80086d0:	4619      	mov	r1, r3
 80086d2:	0087      	lsls	r7, r0, #2
 80086d4:	f8cd 9000 	str.w	r9, [sp]
 80086d8:	220d      	movs	r2, #13
 80086da:	4628      	mov	r0, r5
 80086dc:	f7ff fb94 	bl	8007e08 <_Unwind_VRS_Get>
 80086e0:	b2ff      	uxtb	r7, r7
 80086e2:	9b03      	ldr	r3, [sp, #12]
 80086e4:	f8cd 9000 	str.w	r9, [sp]
 80086e8:	3704      	adds	r7, #4
 80086ea:	0660      	lsls	r0, r4, #25
 80086ec:	bf4c      	ite	mi
 80086ee:	1bdf      	submi	r7, r3, r7
 80086f0:	18ff      	addpl	r7, r7, r3
 80086f2:	2300      	movs	r3, #0
 80086f4:	4619      	mov	r1, r3
 80086f6:	220d      	movs	r2, #13
 80086f8:	4628      	mov	r0, r5
 80086fa:	9703      	str	r7, [sp, #12]
 80086fc:	f7ff fba6 	bl	8007e4c <_Unwind_VRS_Set>
 8008700:	e7b9      	b.n	8008676 <__gnu_unwind_execute+0xe>
 8008702:	f000 030d 	and.w	r3, r0, #13
 8008706:	2b0d      	cmp	r3, #13
 8008708:	d0db      	beq.n	80086c2 <__gnu_unwind_execute+0x5a>
 800870a:	af03      	add	r7, sp, #12
 800870c:	2300      	movs	r3, #0
 800870e:	f000 020f 	and.w	r2, r0, #15
 8008712:	4619      	mov	r1, r3
 8008714:	9700      	str	r7, [sp, #0]
 8008716:	4628      	mov	r0, r5
 8008718:	f7ff fb76 	bl	8007e08 <_Unwind_VRS_Get>
 800871c:	2300      	movs	r3, #0
 800871e:	9700      	str	r7, [sp, #0]
 8008720:	4619      	mov	r1, r3
 8008722:	220d      	movs	r2, #13
 8008724:	4628      	mov	r0, r5
 8008726:	f7ff fb91 	bl	8007e4c <_Unwind_VRS_Set>
 800872a:	e7a4      	b.n	8008676 <__gnu_unwind_execute+0xe>
 800872c:	28b1      	cmp	r0, #177	; 0xb1
 800872e:	d05f      	beq.n	80087f0 <__gnu_unwind_execute+0x188>
 8008730:	28b2      	cmp	r0, #178	; 0xb2
 8008732:	f000 80cc 	beq.w	80088ce <__gnu_unwind_execute+0x266>
 8008736:	28b3      	cmp	r0, #179	; 0xb3
 8008738:	d07e      	beq.n	8008838 <__gnu_unwind_execute+0x1d0>
 800873a:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 800873e:	2bb4      	cmp	r3, #180	; 0xb4
 8008740:	d0bf      	beq.n	80086c2 <__gnu_unwind_execute+0x5a>
 8008742:	f000 0207 	and.w	r2, r0, #7
 8008746:	3201      	adds	r2, #1
 8008748:	2301      	movs	r3, #1
 800874a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800874e:	4619      	mov	r1, r3
 8008750:	4628      	mov	r0, r5
 8008752:	f7ff fd47 	bl	80081e4 <_Unwind_VRS_Pop>
 8008756:	2800      	cmp	r0, #0
 8008758:	d08d      	beq.n	8008676 <__gnu_unwind_execute+0xe>
 800875a:	e7b2      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 800875c:	4630      	mov	r0, r6
 800875e:	f7ff ff57 	bl	8008610 <next_unwind_byte>
 8008762:	0224      	lsls	r4, r4, #8
 8008764:	4304      	orrs	r4, r0
 8008766:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 800876a:	d0aa      	beq.n	80086c2 <__gnu_unwind_execute+0x5a>
 800876c:	0124      	lsls	r4, r4, #4
 800876e:	2300      	movs	r3, #0
 8008770:	b2a2      	uxth	r2, r4
 8008772:	4619      	mov	r1, r3
 8008774:	4628      	mov	r0, r5
 8008776:	f7ff fd35 	bl	80081e4 <_Unwind_VRS_Pop>
 800877a:	2800      	cmp	r0, #0
 800877c:	d1a1      	bne.n	80086c2 <__gnu_unwind_execute+0x5a>
 800877e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8008782:	bf18      	it	ne
 8008784:	f04f 0801 	movne.w	r8, #1
 8008788:	e775      	b.n	8008676 <__gnu_unwind_execute+0xe>
 800878a:	43c2      	mvns	r2, r0
 800878c:	f002 0307 	and.w	r3, r2, #7
 8008790:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8008794:	411a      	asrs	r2, r3
 8008796:	0701      	lsls	r1, r0, #28
 8008798:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 800879c:	f04f 0300 	mov.w	r3, #0
 80087a0:	bf48      	it	mi
 80087a2:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 80087a6:	4619      	mov	r1, r3
 80087a8:	4628      	mov	r0, r5
 80087aa:	f7ff fd1b 	bl	80081e4 <_Unwind_VRS_Pop>
 80087ae:	2800      	cmp	r0, #0
 80087b0:	f43f af61 	beq.w	8008676 <__gnu_unwind_execute+0xe>
 80087b4:	e785      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 80087b6:	28c6      	cmp	r0, #198	; 0xc6
 80087b8:	d051      	beq.n	800885e <__gnu_unwind_execute+0x1f6>
 80087ba:	28c7      	cmp	r0, #199	; 0xc7
 80087bc:	d05a      	beq.n	8008874 <__gnu_unwind_execute+0x20c>
 80087be:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80087c2:	2bc0      	cmp	r3, #192	; 0xc0
 80087c4:	d069      	beq.n	800889a <__gnu_unwind_execute+0x232>
 80087c6:	28c8      	cmp	r0, #200	; 0xc8
 80087c8:	d075      	beq.n	80088b6 <__gnu_unwind_execute+0x24e>
 80087ca:	28c9      	cmp	r0, #201	; 0xc9
 80087cc:	f47f af79 	bne.w	80086c2 <__gnu_unwind_execute+0x5a>
 80087d0:	4630      	mov	r0, r6
 80087d2:	f7ff ff1d 	bl	8008610 <next_unwind_byte>
 80087d6:	0302      	lsls	r2, r0, #12
 80087d8:	f000 000f 	and.w	r0, r0, #15
 80087dc:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 80087e0:	3001      	adds	r0, #1
 80087e2:	4302      	orrs	r2, r0
 80087e4:	e766      	b.n	80086b4 <__gnu_unwind_execute+0x4c>
 80087e6:	f1b8 0f00 	cmp.w	r8, #0
 80087ea:	d014      	beq.n	8008816 <__gnu_unwind_execute+0x1ae>
 80087ec:	2000      	movs	r0, #0
 80087ee:	e769      	b.n	80086c4 <__gnu_unwind_execute+0x5c>
 80087f0:	4630      	mov	r0, r6
 80087f2:	f7ff ff0d 	bl	8008610 <next_unwind_byte>
 80087f6:	2800      	cmp	r0, #0
 80087f8:	f43f af63 	beq.w	80086c2 <__gnu_unwind_execute+0x5a>
 80087fc:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8008800:	f47f af5f 	bne.w	80086c2 <__gnu_unwind_execute+0x5a>
 8008804:	4602      	mov	r2, r0
 8008806:	4619      	mov	r1, r3
 8008808:	4628      	mov	r0, r5
 800880a:	f7ff fceb 	bl	80081e4 <_Unwind_VRS_Pop>
 800880e:	2800      	cmp	r0, #0
 8008810:	f43f af31 	beq.w	8008676 <__gnu_unwind_execute+0xe>
 8008814:	e755      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 8008816:	ac03      	add	r4, sp, #12
 8008818:	4643      	mov	r3, r8
 800881a:	220e      	movs	r2, #14
 800881c:	4641      	mov	r1, r8
 800881e:	9400      	str	r4, [sp, #0]
 8008820:	4628      	mov	r0, r5
 8008822:	f7ff faf1 	bl	8007e08 <_Unwind_VRS_Get>
 8008826:	9400      	str	r4, [sp, #0]
 8008828:	4628      	mov	r0, r5
 800882a:	4643      	mov	r3, r8
 800882c:	220f      	movs	r2, #15
 800882e:	4641      	mov	r1, r8
 8008830:	f7ff fb0c 	bl	8007e4c <_Unwind_VRS_Set>
 8008834:	4640      	mov	r0, r8
 8008836:	e745      	b.n	80086c4 <__gnu_unwind_execute+0x5c>
 8008838:	4630      	mov	r0, r6
 800883a:	f7ff fee9 	bl	8008610 <next_unwind_byte>
 800883e:	0301      	lsls	r1, r0, #12
 8008840:	f000 000f 	and.w	r0, r0, #15
 8008844:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8008848:	1c42      	adds	r2, r0, #1
 800884a:	2301      	movs	r3, #1
 800884c:	430a      	orrs	r2, r1
 800884e:	4628      	mov	r0, r5
 8008850:	4619      	mov	r1, r3
 8008852:	f7ff fcc7 	bl	80081e4 <_Unwind_VRS_Pop>
 8008856:	2800      	cmp	r0, #0
 8008858:	f43f af0d 	beq.w	8008676 <__gnu_unwind_execute+0xe>
 800885c:	e731      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 800885e:	4630      	mov	r0, r6
 8008860:	f7ff fed6 	bl	8008610 <next_unwind_byte>
 8008864:	0301      	lsls	r1, r0, #12
 8008866:	f000 000f 	and.w	r0, r0, #15
 800886a:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 800886e:	1c42      	adds	r2, r0, #1
 8008870:	2303      	movs	r3, #3
 8008872:	e7eb      	b.n	800884c <__gnu_unwind_execute+0x1e4>
 8008874:	4630      	mov	r0, r6
 8008876:	f7ff fecb 	bl	8008610 <next_unwind_byte>
 800887a:	4602      	mov	r2, r0
 800887c:	2800      	cmp	r0, #0
 800887e:	f43f af20 	beq.w	80086c2 <__gnu_unwind_execute+0x5a>
 8008882:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8008886:	f47f af1c 	bne.w	80086c2 <__gnu_unwind_execute+0x5a>
 800888a:	2104      	movs	r1, #4
 800888c:	4628      	mov	r0, r5
 800888e:	f7ff fca9 	bl	80081e4 <_Unwind_VRS_Pop>
 8008892:	2800      	cmp	r0, #0
 8008894:	f43f aeef 	beq.w	8008676 <__gnu_unwind_execute+0xe>
 8008898:	e713      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 800889a:	f000 020f 	and.w	r2, r0, #15
 800889e:	3201      	adds	r2, #1
 80088a0:	2303      	movs	r3, #3
 80088a2:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 80088a6:	4619      	mov	r1, r3
 80088a8:	4628      	mov	r0, r5
 80088aa:	f7ff fc9b 	bl	80081e4 <_Unwind_VRS_Pop>
 80088ae:	2800      	cmp	r0, #0
 80088b0:	f43f aee1 	beq.w	8008676 <__gnu_unwind_execute+0xe>
 80088b4:	e705      	b.n	80086c2 <__gnu_unwind_execute+0x5a>
 80088b6:	4630      	mov	r0, r6
 80088b8:	f7ff feaa 	bl	8008610 <next_unwind_byte>
 80088bc:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 80088c0:	f000 030f 	and.w	r3, r0, #15
 80088c4:	3210      	adds	r2, #16
 80088c6:	3301      	adds	r3, #1
 80088c8:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 80088cc:	e6f2      	b.n	80086b4 <__gnu_unwind_execute+0x4c>
 80088ce:	2300      	movs	r3, #0
 80088d0:	f10d 090c 	add.w	r9, sp, #12
 80088d4:	220d      	movs	r2, #13
 80088d6:	4619      	mov	r1, r3
 80088d8:	f8cd 9000 	str.w	r9, [sp]
 80088dc:	4628      	mov	r0, r5
 80088de:	f7ff fa93 	bl	8007e08 <_Unwind_VRS_Get>
 80088e2:	4630      	mov	r0, r6
 80088e4:	f7ff fe94 	bl	8008610 <next_unwind_byte>
 80088e8:	0602      	lsls	r2, r0, #24
 80088ea:	f04f 0702 	mov.w	r7, #2
 80088ee:	d50c      	bpl.n	800890a <__gnu_unwind_execute+0x2a2>
 80088f0:	9b03      	ldr	r3, [sp, #12]
 80088f2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80088f6:	40b8      	lsls	r0, r7
 80088f8:	4403      	add	r3, r0
 80088fa:	4630      	mov	r0, r6
 80088fc:	9303      	str	r3, [sp, #12]
 80088fe:	f7ff fe87 	bl	8008610 <next_unwind_byte>
 8008902:	0603      	lsls	r3, r0, #24
 8008904:	f107 0707 	add.w	r7, r7, #7
 8008908:	d4f2      	bmi.n	80088f0 <__gnu_unwind_execute+0x288>
 800890a:	9b03      	ldr	r3, [sp, #12]
 800890c:	f8cd 9000 	str.w	r9, [sp]
 8008910:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8008914:	f503 7201 	add.w	r2, r3, #516	; 0x204
 8008918:	40bc      	lsls	r4, r7
 800891a:	2300      	movs	r3, #0
 800891c:	4414      	add	r4, r2
 800891e:	4619      	mov	r1, r3
 8008920:	220d      	movs	r2, #13
 8008922:	4628      	mov	r0, r5
 8008924:	9403      	str	r4, [sp, #12]
 8008926:	f7ff fa91 	bl	8007e4c <_Unwind_VRS_Set>
 800892a:	e6a4      	b.n	8008676 <__gnu_unwind_execute+0xe>

0800892c <__gnu_unwind_frame>:
 800892c:	b510      	push	{r4, lr}
 800892e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008930:	b084      	sub	sp, #16
 8008932:	685a      	ldr	r2, [r3, #4]
 8008934:	2003      	movs	r0, #3
 8008936:	f88d 000c 	strb.w	r0, [sp, #12]
 800893a:	79dc      	ldrb	r4, [r3, #7]
 800893c:	f88d 400d 	strb.w	r4, [sp, #13]
 8008940:	0212      	lsls	r2, r2, #8
 8008942:	3308      	adds	r3, #8
 8008944:	4608      	mov	r0, r1
 8008946:	a901      	add	r1, sp, #4
 8008948:	9201      	str	r2, [sp, #4]
 800894a:	9302      	str	r3, [sp, #8]
 800894c:	f7ff fe8c 	bl	8008668 <__gnu_unwind_execute>
 8008950:	b004      	add	sp, #16
 8008952:	bd10      	pop	{r4, pc}

08008954 <_Unwind_GetRegionStart>:
 8008954:	b508      	push	{r3, lr}
 8008956:	f7ff fe85 	bl	8008664 <unwind_UCB_from_context>
 800895a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800895c:	bd08      	pop	{r3, pc}
 800895e:	bf00      	nop

08008960 <_Unwind_GetLanguageSpecificData>:
 8008960:	b508      	push	{r3, lr}
 8008962:	f7ff fe7f 	bl	8008664 <unwind_UCB_from_context>
 8008966:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008968:	79c3      	ldrb	r3, [r0, #7]
 800896a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800896e:	3008      	adds	r0, #8
 8008970:	bd08      	pop	{r3, pc}
 8008972:	bf00      	nop

08008974 <_Unwind_GetDataRelBase>:
 8008974:	b508      	push	{r3, lr}
 8008976:	f004 fe5b 	bl	800d630 <abort>
 800897a:	bf00      	nop

0800897c <_Unwind_GetTextRelBase>:
 800897c:	b508      	push	{r3, lr}
 800897e:	f7ff fff9 	bl	8008974 <_Unwind_GetDataRelBase>
 8008982:	bf00      	nop

08008984 <__aeabi_idiv0>:
 8008984:	4770      	bx	lr
 8008986:	bf00      	nop

08008988 <BSP_PB_Init>:
void BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef ButtonMode)
{
  GPIO_InitTypeDef gpio_init_structure;
  
  /* Enable the BUTTON clock */
  BUTTONx_GPIO_CLK_ENABLE(Button);
 8008988:	4a25      	ldr	r2, [pc, #148]	; (8008a20 <BSP_PB_Init+0x98>)
{
 800898a:	460b      	mov	r3, r1
  BUTTONx_GPIO_CLK_ENABLE(Button);
 800898c:	6b11      	ldr	r1, [r2, #48]	; 0x30
 800898e:	f441 7180 	orr.w	r1, r1, #256	; 0x100
{
 8008992:	b530      	push	{r4, r5, lr}
  BUTTONx_GPIO_CLK_ENABLE(Button);
 8008994:	6311      	str	r1, [r2, #48]	; 0x30
{
 8008996:	b089      	sub	sp, #36	; 0x24
  BUTTONx_GPIO_CLK_ENABLE(Button);
 8008998:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800899a:	4604      	mov	r4, r0
 800899c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80089a0:	bb28      	cbnz	r0, 80089ee <BSP_PB_Init+0x66>
 80089a2:	9200      	str	r2, [sp, #0]
 80089a4:	9a00      	ldr	r2, [sp, #0]
  
  if(ButtonMode == BUTTON_MODE_GPIO)
 80089a6:	b343      	cbz	r3, 80089fa <BSP_PB_Init+0x72>
    gpio_init_structure.Pull = GPIO_NOPULL;
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
  }
  
  if(ButtonMode == BUTTON_MODE_EXTI)
 80089a8:	2b01      	cmp	r3, #1
 80089aa:	d11e      	bne.n	80089ea <BSP_PB_Init+0x62>
  {
    /* Configure Button pin as input with External interrupt */
    gpio_init_structure.Pin = BUTTON_PIN[Button];
    gpio_init_structure.Pull = GPIO_NOPULL;
 80089ac:	2500      	movs	r5, #0
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
    
    if(Button != BUTTON_WAKEUP)
    {
      gpio_init_structure.Mode = GPIO_MODE_IT_FALLING; 
 80089ae:	481d      	ldr	r0, [pc, #116]	; (8008a24 <BSP_PB_Init+0x9c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80089b0:	491d      	ldr	r1, [pc, #116]	; (8008a28 <BSP_PB_Init+0xa0>)
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80089b2:	2202      	movs	r2, #2
      gpio_init_structure.Mode = GPIO_MODE_IT_FALLING; 
 80089b4:	4b1d      	ldr	r3, [pc, #116]	; (8008a2c <BSP_PB_Init+0xa4>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80089b6:	f831 1014 	ldrh.w	r1, [r1, r4, lsl #1]
      gpio_init_structure.Mode = GPIO_MODE_IT_FALLING; 
 80089ba:	42ac      	cmp	r4, r5
 80089bc:	bf18      	it	ne
 80089be:	4603      	movne	r3, r0
    else
    {
      gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
    }
    
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80089c0:	481b      	ldr	r0, [pc, #108]	; (8008a30 <BSP_PB_Init+0xa8>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80089c2:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80089c4:	a903      	add	r1, sp, #12
 80089c6:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80089ca:	9206      	str	r2, [sp, #24]
    gpio_init_structure.Pull = GPIO_NOPULL;
 80089cc:	e9cd 3504 	strd	r3, r5, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80089d0:	f000 ff6a 	bl	80098a8 <HAL_GPIO_Init>
    
    /* Enable and set Button EXTI Interrupt to the lowest priority */
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 80089d4:	4b17      	ldr	r3, [pc, #92]	; (8008a34 <BSP_PB_Init+0xac>)
 80089d6:	462a      	mov	r2, r5
 80089d8:	210f      	movs	r1, #15
 80089da:	f913 4014 	ldrsb.w	r4, [r3, r4, lsl #1]
 80089de:	4620      	mov	r0, r4
 80089e0:	f000 fcba 	bl	8009358 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 80089e4:	4620      	mov	r0, r4
 80089e6:	f000 fced 	bl	80093c4 <HAL_NVIC_EnableIRQ>
  }
}
 80089ea:	b009      	add	sp, #36	; 0x24
 80089ec:	bd30      	pop	{r4, r5, pc}
  BUTTONx_GPIO_CLK_ENABLE(Button);
 80089ee:	2801      	cmp	r0, #1
 80089f0:	d013      	beq.n	8008a1a <BSP_PB_Init+0x92>
 80089f2:	9202      	str	r2, [sp, #8]
 80089f4:	9a02      	ldr	r2, [sp, #8]
  if(ButtonMode == BUTTON_MODE_GPIO)
 80089f6:	2b00      	cmp	r3, #0
 80089f8:	d1d6      	bne.n	80089a8 <BSP_PB_Init+0x20>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80089fa:	4d0b      	ldr	r5, [pc, #44]	; (8008a28 <BSP_PB_Init+0xa0>)
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80089fc:	2202      	movs	r2, #2
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80089fe:	480c      	ldr	r0, [pc, #48]	; (8008a30 <BSP_PB_Init+0xa8>)
 8008a00:	a903      	add	r1, sp, #12
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8008a02:	f835 5014 	ldrh.w	r5, [r5, r4, lsl #1]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8008a06:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8008a0a:	9503      	str	r5, [sp, #12]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8008a0c:	9206      	str	r2, [sp, #24]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8008a0e:	e9cd 3304 	strd	r3, r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8008a12:	f000 ff49 	bl	80098a8 <HAL_GPIO_Init>
}
 8008a16:	b009      	add	sp, #36	; 0x24
 8008a18:	bd30      	pop	{r4, r5, pc}
  BUTTONx_GPIO_CLK_ENABLE(Button);
 8008a1a:	9201      	str	r2, [sp, #4]
 8008a1c:	9a01      	ldr	r2, [sp, #4]
 8008a1e:	e7c2      	b.n	80089a6 <BSP_PB_Init+0x1e>
 8008a20:	40023800 	.word	0x40023800
 8008a24:	10210000 	.word	0x10210000
 8008a28:	08011f60 	.word	0x08011f60
 8008a2c:	10110000 	.word	0x10110000
 8008a30:	20000000 	.word	0x20000000
 8008a34:	08011f58 	.word	0x08011f58

08008a38 <BSP_LCD_GetXSize>:
  * @brief  Gets the LCD X size.
  * @retval Used LCD X size
  */
uint32_t BSP_LCD_GetXSize(void)
{
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008a38:	4b03      	ldr	r3, [pc, #12]	; (8008a48 <BSP_LCD_GetXSize+0x10>)
 8008a3a:	2134      	movs	r1, #52	; 0x34
 8008a3c:	4a03      	ldr	r2, [pc, #12]	; (8008a4c <BSP_LCD_GetXSize+0x14>)
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	fb01 2303 	mla	r3, r1, r3, r2
}
 8008a44:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8008a46:	4770      	bx	lr
 8008a48:	200009f4 	.word	0x200009f4
 8008a4c:	20000a50 	.word	0x20000a50

08008a50 <BSP_LCD_GetYSize>:
  * @brief  Gets the LCD Y size.
  * @retval Used LCD Y size
  */
uint32_t BSP_LCD_GetYSize(void)
{
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageHeight;
 8008a50:	4b03      	ldr	r3, [pc, #12]	; (8008a60 <BSP_LCD_GetYSize+0x10>)
 8008a52:	2134      	movs	r1, #52	; 0x34
 8008a54:	4a03      	ldr	r2, [pc, #12]	; (8008a64 <BSP_LCD_GetYSize+0x14>)
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	fb01 2303 	mla	r3, r1, r3, r2
}
 8008a5c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8008a5e:	4770      	bx	lr
 8008a60:	200009f4 	.word	0x200009f4
 8008a64:	20000a50 	.word	0x20000a50

08008a68 <BSP_LCD_LayerRgb565Init>:
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008a68:	4b1b      	ldr	r3, [pc, #108]	; (8008ad8 <BSP_LCD_LayerRgb565Init+0x70>)
  /* Layer Init */
  layer_cfg.WindowX0 = 0;
  layer_cfg.WindowX1 = BSP_LCD_GetXSize();
  layer_cfg.WindowY0 = 0;
  layer_cfg.WindowY1 = BSP_LCD_GetYSize(); 
  layer_cfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8008a6a:	f04f 0c02 	mov.w	ip, #2
{     
 8008a6e:	b5f0      	push	{r4, r5, r6, r7, lr}
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008a70:	681a      	ldr	r2, [r3, #0]
 8008a72:	2634      	movs	r6, #52	; 0x34
 8008a74:	4d19      	ldr	r5, [pc, #100]	; (8008adc <BSP_LCD_LayerRgb565Init+0x74>)
{     
 8008a76:	b08f      	sub	sp, #60	; 0x3c
 8008a78:	4604      	mov	r4, r0
  layer_cfg.WindowX0 = 0;
 8008a7a:	2300      	movs	r3, #0
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008a7c:	fb06 5202 	mla	r2, r6, r2, r5
  layer_cfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
  layer_cfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
  layer_cfg.ImageWidth = BSP_LCD_GetXSize();
  layer_cfg.ImageHeight = BSP_LCD_GetYSize();
  
  HAL_LTDC_ConfigLayer(&hLtdcHandler, &layer_cfg, LayerIndex); 
 8008a80:	4628      	mov	r0, r5
  layer_cfg.FBStartAdress = FB_Address;
 8008a82:	910a      	str	r1, [sp, #40]	; 0x28
  layer_cfg.Alpha = 255;
 8008a84:	27ff      	movs	r7, #255	; 0xff
  layer_cfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 8008a86:	f44f 66c0 	mov.w	r6, #1536	; 0x600
  layer_cfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8008a8a:	2507      	movs	r5, #7
  layer_cfg.WindowX0 = 0;
 8008a8c:	9301      	str	r3, [sp, #4]
  layer_cfg.WindowY0 = 0;
 8008a8e:	9303      	str	r3, [sp, #12]
  layer_cfg.Alpha0 = 0;
 8008a90:	9307      	str	r3, [sp, #28]
  layer_cfg.Backcolor.Blue = 0;
 8008a92:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
  layer_cfg.Backcolor.Green = 0;
 8008a96:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
  layer_cfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8008a9a:	f8cd c014 	str.w	ip, [sp, #20]
  layer_cfg.Alpha = 255;
 8008a9e:	9706      	str	r7, [sp, #24]
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageHeight;
 8008aa0:	e9d2 1218 	ldrd	r1, r2, [r2, #96]	; 0x60
  layer_cfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8008aa4:	e9cd 6508 	strd	r6, r5, [sp, #32]
  layer_cfg.WindowY1 = BSP_LCD_GetYSize(); 
 8008aa8:	9204      	str	r2, [sp, #16]

  DrawProp[LayerIndex].BackColor = LCD_COLOR_WHITE;
  DrawProp[LayerIndex].pFont     = &Font24;
  DrawProp[LayerIndex].TextColor = LCD_COLOR_BLACK; 
 8008aaa:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
  layer_cfg.ImageHeight = BSP_LCD_GetYSize();
 8008aae:	920c      	str	r2, [sp, #48]	; 0x30
  HAL_LTDC_ConfigLayer(&hLtdcHandler, &layer_cfg, LayerIndex); 
 8008ab0:	4622      	mov	r2, r4
  DrawProp[LayerIndex].BackColor = LCD_COLOR_WHITE;
 8008ab2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
  layer_cfg.WindowX1 = BSP_LCD_GetXSize();
 8008ab6:	9102      	str	r1, [sp, #8]
  layer_cfg.ImageWidth = BSP_LCD_GetXSize();
 8008ab8:	910b      	str	r1, [sp, #44]	; 0x2c
  HAL_LTDC_ConfigLayer(&hLtdcHandler, &layer_cfg, LayerIndex); 
 8008aba:	a901      	add	r1, sp, #4
 8008abc:	f001 f88e 	bl	8009bdc <HAL_LTDC_ConfigLayer>
  DrawProp[LayerIndex].BackColor = LCD_COLOR_WHITE;
 8008ac0:	4a07      	ldr	r2, [pc, #28]	; (8008ae0 <BSP_LCD_LayerRgb565Init+0x78>)
 8008ac2:	00a4      	lsls	r4, r4, #2
 8008ac4:	f04f 30ff 	mov.w	r0, #4294967295
  DrawProp[LayerIndex].pFont     = &Font24;
 8008ac8:	4906      	ldr	r1, [pc, #24]	; (8008ae4 <BSP_LCD_LayerRgb565Init+0x7c>)
  DrawProp[LayerIndex].BackColor = LCD_COLOR_WHITE;
 8008aca:	1913      	adds	r3, r2, r4
  DrawProp[LayerIndex].TextColor = LCD_COLOR_BLACK; 
 8008acc:	5115      	str	r5, [r2, r4]
  DrawProp[LayerIndex].pFont     = &Font24;
 8008ace:	e9c3 0101 	strd	r0, r1, [r3, #4]
}
 8008ad2:	b00f      	add	sp, #60	; 0x3c
 8008ad4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ad6:	bf00      	nop
 8008ad8:	200009f4 	.word	0x200009f4
 8008adc:	20000a50 	.word	0x20000a50
 8008ae0:	200009f8 	.word	0x200009f8
 8008ae4:	20000018 	.word	0x20000018

08008ae8 <BSP_LCD_SelectLayer>:
  * @param  LayerIndex: Layer foreground or background
  * @retval None
  */
void BSP_LCD_SelectLayer(uint32_t LayerIndex)
{
  ActiveLayer = LayerIndex;
 8008ae8:	4b01      	ldr	r3, [pc, #4]	; (8008af0 <BSP_LCD_SelectLayer+0x8>)
 8008aea:	6018      	str	r0, [r3, #0]
} 
 8008aec:	4770      	bx	lr
 8008aee:	bf00      	nop
 8008af0:	200009f4 	.word	0x200009f4

08008af4 <BSP_LCD_SetTransparency>:
  *           This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFF 
  * @retval None
  */
void BSP_LCD_SetTransparency(uint32_t LayerIndex, uint8_t Transparency)
{    
  HAL_LTDC_SetAlpha(&hLtdcHandler, Transparency, LayerIndex);
 8008af4:	4602      	mov	r2, r0
 8008af6:	4801      	ldr	r0, [pc, #4]	; (8008afc <BSP_LCD_SetTransparency+0x8>)
 8008af8:	f001 b938 	b.w	8009d6c <HAL_LTDC_SetAlpha>
 8008afc:	20000a50 	.word	0x20000a50

08008b00 <BSP_LCD_SetTextColor>:
  * @param  Color: Text color code ARGB(8-8-8-8)
  * @retval None
  */
void BSP_LCD_SetTextColor(uint32_t Color)
{
  DrawProp[ActiveLayer].TextColor = Color;
 8008b00:	4b03      	ldr	r3, [pc, #12]	; (8008b10 <BSP_LCD_SetTextColor+0x10>)
 8008b02:	4a04      	ldr	r2, [pc, #16]	; (8008b14 <BSP_LCD_SetTextColor+0x14>)
 8008b04:	681b      	ldr	r3, [r3, #0]
 8008b06:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8008b0a:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
}
 8008b0e:	4770      	bx	lr
 8008b10:	200009f4 	.word	0x200009f4
 8008b14:	200009f8 	.word	0x200009f8

08008b18 <BSP_LCD_Clear>:
  * @brief  Clears the hole LCD.
  * @param  Color: Color of the background
  * @retval None
  */
void BSP_LCD_Clear(uint32_t Color)
{ 
 8008b18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  /* Clear the LCD */ 
  LL_FillBuffer(ActiveLayer, (uint32_t *)(hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress), BSP_LCD_GetXSize(), BSP_LCD_GetYSize(), 0, Color);
 8008b1c:	4c1a      	ldr	r4, [pc, #104]	; (8008b88 <BSP_LCD_Clear+0x70>)
 8008b1e:	2334      	movs	r3, #52	; 0x34
 8008b20:	491a      	ldr	r1, [pc, #104]	; (8008b8c <BSP_LCD_Clear+0x74>)
  * @retval None
  */
static void LL_FillBuffer(uint32_t LayerIndex, void *pDst, uint32_t xSize, uint32_t ySize, uint32_t OffLine, uint32_t ColorIndex) 
{
  /* Register to memory mode with ARGB8888 as color Mode */ 
  hDma2dHandler.Init.Mode         = DMA2D_R2M;
 8008b22:	f44f 3240 	mov.w	r2, #196608	; 0x30000
  LL_FillBuffer(ActiveLayer, (uint32_t *)(hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress), BSP_LCD_GetXSize(), BSP_LCD_GetYSize(), 0, Color);
 8008b26:	6825      	ldr	r5, [r4, #0]
  }
  else
  { /* ARGB8888 format */
    hDma2dHandler.Init.ColorMode    = DMA2D_ARGB8888;
  }
  hDma2dHandler.Init.OutputOffset = OffLine;      
 8008b28:	2600      	movs	r6, #0
  hDma2dHandler.Init.Mode         = DMA2D_R2M;
 8008b2a:	4c19      	ldr	r4, [pc, #100]	; (8008b90 <BSP_LCD_Clear+0x78>)
{ 
 8008b2c:	b083      	sub	sp, #12
  LL_FillBuffer(ActiveLayer, (uint32_t *)(hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress), BSP_LCD_GetXSize(), BSP_LCD_GetYSize(), 0, Color);
 8008b2e:	fb03 1305 	mla	r3, r3, r5, r1
  
  hDma2dHandler.Instance = DMA2D;
 8008b32:	4918      	ldr	r1, [pc, #96]	; (8008b94 <BSP_LCD_Clear+0x7c>)
  hDma2dHandler.Init.Mode         = DMA2D_R2M;
 8008b34:	6062      	str	r2, [r4, #4]
{ 
 8008b36:	4607      	mov	r7, r0
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008b38:	6c9a      	ldr	r2, [r3, #72]	; 0x48
  
  /* DMA2D Initialization */
  if(HAL_DMA2D_Init(&hDma2dHandler) == HAL_OK) 
 8008b3a:	4620      	mov	r0, r4
  hDma2dHandler.Init.OutputOffset = OffLine;      
 8008b3c:	60e6      	str	r6, [r4, #12]
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008b3e:	2a02      	cmp	r2, #2
  hDma2dHandler.Instance = DMA2D;
 8008b40:	6021      	str	r1, [r4, #0]
  LL_FillBuffer(ActiveLayer, (uint32_t *)(hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress), BSP_LCD_GetXSize(), BSP_LCD_GetYSize(), 0, Color);
 8008b42:	6dde      	ldr	r6, [r3, #92]	; 0x5c
    hDma2dHandler.Init.ColorMode    = DMA2D_ARGB8888;
 8008b44:	bf18      	it	ne
 8008b46:	2200      	movne	r2, #0
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageHeight;
 8008b48:	e9d3 8918 	ldrd	r8, r9, [r3, #96]	; 0x60
 8008b4c:	60a2      	str	r2, [r4, #8]
  if(HAL_DMA2D_Init(&hDma2dHandler) == HAL_OK) 
 8008b4e:	f000 fd3f 	bl	80095d0 <HAL_DMA2D_Init>
 8008b52:	b110      	cbz	r0, 8008b5a <BSP_LCD_Clear+0x42>
}
 8008b54:	b003      	add	sp, #12
 8008b56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  {
    if(HAL_DMA2D_ConfigLayer(&hDma2dHandler, LayerIndex) == HAL_OK) 
 8008b5a:	4629      	mov	r1, r5
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	f000 fe51 	bl	8009804 <HAL_DMA2D_ConfigLayer>
 8008b62:	2800      	cmp	r0, #0
 8008b64:	d1f6      	bne.n	8008b54 <BSP_LCD_Clear+0x3c>
    {
      if (HAL_DMA2D_Start(&hDma2dHandler, ColorIndex, (uint32_t)pDst, xSize, ySize) == HAL_OK)
 8008b66:	f8cd 9000 	str.w	r9, [sp]
 8008b6a:	4643      	mov	r3, r8
 8008b6c:	4632      	mov	r2, r6
 8008b6e:	4639      	mov	r1, r7
 8008b70:	4620      	mov	r0, r4
 8008b72:	f000 fd5b 	bl	800962c <HAL_DMA2D_Start>
 8008b76:	2800      	cmp	r0, #0
 8008b78:	d1ec      	bne.n	8008b54 <BSP_LCD_Clear+0x3c>
      {
        /* Polling For DMA transfer */  
        HAL_DMA2D_PollForTransfer(&hDma2dHandler, 10);
 8008b7a:	4620      	mov	r0, r4
 8008b7c:	210a      	movs	r1, #10
}
 8008b7e:	b003      	add	sp, #12
 8008b80:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        HAL_DMA2D_PollForTransfer(&hDma2dHandler, 10);
 8008b84:	f000 bda8 	b.w	80096d8 <HAL_DMA2D_PollForTransfer>
 8008b88:	200009f4 	.word	0x200009f4
 8008b8c:	20000a50 	.word	0x20000a50
 8008b90:	20000a10 	.word	0x20000a10
 8008b94:	4002b000 	.word	0x4002b000

08008b98 <BSP_LCD_DisplayChar>:
{
 8008b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  DrawChar(Xpos, Ypos, &DrawProp[ActiveLayer].pFont->table[(Ascii-' ') *\
 8008b9c:	4c3b      	ldr	r4, [pc, #236]	; (8008c8c <BSP_LCD_DisplayChar+0xf4>)
{
 8008b9e:	b087      	sub	sp, #28
  DrawChar(Xpos, Ypos, &DrawProp[ActiveLayer].pFont->table[(Ascii-' ') *\
 8008ba0:	4b3b      	ldr	r3, [pc, #236]	; (8008c90 <BSP_LCD_DisplayChar+0xf8>)
{
 8008ba2:	4682      	mov	sl, r0
  DrawChar(Xpos, Ypos, &DrawProp[ActiveLayer].pFont->table[(Ascii-' ') *\
 8008ba4:	6825      	ldr	r5, [r4, #0]
 8008ba6:	3a20      	subs	r2, #32
{
 8008ba8:	9103      	str	r1, [sp, #12]
  DrawChar(Xpos, Ypos, &DrawProp[ActiveLayer].pFont->table[(Ascii-' ') *\
 8008baa:	eb05 0e45 	add.w	lr, r5, r5, lsl #1
 8008bae:	eb03 0e8e 	add.w	lr, r3, lr, lsl #2
 8008bb2:	f8de 3008 	ldr.w	r3, [lr, #8]
    DrawProp[ActiveLayer].pFont->Height * ((DrawProp[ActiveLayer].pFont->Width + 7) / 8)]);
 8008bb6:	8898      	ldrh	r0, [r3, #4]
 8008bb8:	88de      	ldrh	r6, [r3, #6]
 8008bba:	1dc1      	adds	r1, r0, #7
  DrawChar(Xpos, Ypos, &DrawProp[ActiveLayer].pFont->table[(Ascii-' ') *\
 8008bbc:	681c      	ldr	r4, [r3, #0]
 8008bbe:	fb06 f202 	mul.w	r2, r6, r2
    DrawProp[ActiveLayer].pFont->Height * ((DrawProp[ActiveLayer].pFont->Width + 7) / 8)]);
 8008bc2:	10c9      	asrs	r1, r1, #3
 8008bc4:	9602      	str	r6, [sp, #8]
  offset =  8 *((width + 7)/8) -  width ;
 8008bc6:	ebc0 03c1 	rsb	r3, r0, r1, lsl #3
    DrawProp[ActiveLayer].pFont->Height * ((DrawProp[ActiveLayer].pFont->Width + 7) / 8)]);
 8008bca:	9101      	str	r1, [sp, #4]
 8008bcc:	fb01 f202 	mul.w	r2, r1, r2
  offset =  8 *((width + 7)/8) -  width ;
 8008bd0:	b2db      	uxtb	r3, r3
 8008bd2:	9304      	str	r3, [sp, #16]
  for(i = 0; i < height; i++)
 8008bd4:	2e00      	cmp	r6, #0
 8008bd6:	d04c      	beq.n	8008c72 <BSP_LCD_DisplayChar+0xda>
 8008bd8:	4b2e      	ldr	r3, [pc, #184]	; (8008c94 <BSP_LCD_DisplayChar+0xfc>)
 8008bda:	2134      	movs	r1, #52	; 0x34
 8008bdc:	eb04 0b02 	add.w	fp, r4, r2
 8008be0:	fb01 3505 	mla	r5, r1, r5, r3
 8008be4:	2300      	movs	r3, #0
 8008be6:	9300      	str	r3, [sp, #0]
 8008be8:	1e43      	subs	r3, r0, #1
 8008bea:	9305      	str	r3, [sp, #20]
 8008bec:	9b03      	ldr	r3, [sp, #12]
 8008bee:	9a00      	ldr	r2, [sp, #0]
 8008bf0:	f89b 7000 	ldrb.w	r7, [fp]
 8008bf4:	eb03 0c02 	add.w	ip, r3, r2
    switch(((width + 7)/8))
 8008bf8:	9b01      	ldr	r3, [sp, #4]
 8008bfa:	2b01      	cmp	r3, #1
 8008bfc:	fa1f fc8c 	uxth.w	ip, ip
 8008c00:	d005      	beq.n	8008c0e <BSP_LCD_DisplayChar+0x76>
 8008c02:	2b02      	cmp	r3, #2
 8008c04:	d138      	bne.n	8008c78 <BSP_LCD_DisplayChar+0xe0>
      line =  (pchar[0]<< 8) | pchar[1];      
 8008c06:	f8bb 7000 	ldrh.w	r7, [fp]
 8008c0a:	ba7f      	rev16	r7, r7
 8008c0c:	b2bf      	uxth	r7, r7
    for (j = 0; j < width; j++)
 8008c0e:	b340      	cbz	r0, 8008c62 <BSP_LCD_DisplayChar+0xca>
 8008c10:	2100      	movs	r1, #0
      if(line & (1 << (width- j + offset- 1))) 
 8008c12:	f04f 0801 	mov.w	r8, #1
 8008c16:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008c1a:	eb03 0902 	add.w	r9, r3, r2
 8008c1e:	e008      	b.n	8008c32 <BSP_LCD_DisplayChar+0x9a>
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008c20:	2e02      	cmp	r6, #2
        BSP_LCD_DrawPixel((Xpos + j), Ypos, DrawProp[ActiveLayer].TextColor);
 8008c22:	f8de 2000 	ldr.w	r2, [lr]
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008c26:	d016      	beq.n	8008c56 <BSP_LCD_DisplayChar+0xbe>
    for (j = 0; j < width; j++)
 8008c28:	3101      	adds	r1, #1
    *(__IO uint32_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (4*(Ypos*BSP_LCD_GetXSize() + Xpos))) = RGB_Code;
 8008c2a:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
    for (j = 0; j < width; j++)
 8008c2e:	4288      	cmp	r0, r1
 8008c30:	d017      	beq.n	8008c62 <BSP_LCD_DisplayChar+0xca>
      if(line & (1 << (width- j + offset- 1))) 
 8008c32:	eba9 0201 	sub.w	r2, r9, r1
 8008c36:	eb0a 0301 	add.w	r3, sl, r1
 8008c3a:	6e2c      	ldr	r4, [r5, #96]	; 0x60
 8008c3c:	fa08 f202 	lsl.w	r2, r8, r2
 8008c40:	b29b      	uxth	r3, r3
 8008c42:	6cae      	ldr	r6, [r5, #72]	; 0x48
 8008c44:	423a      	tst	r2, r7
 8008c46:	fb04 330c 	mla	r3, r4, ip, r3
 8008c4a:	6dec      	ldr	r4, [r5, #92]	; 0x5c
 8008c4c:	d1e8      	bne.n	8008c20 <BSP_LCD_DisplayChar+0x88>
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008c4e:	2e02      	cmp	r6, #2
        BSP_LCD_DrawPixel((Xpos + j), Ypos, DrawProp[ActiveLayer].BackColor);
 8008c50:	f8de 2004 	ldr.w	r2, [lr, #4]
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008c54:	d1e8      	bne.n	8008c28 <BSP_LCD_DisplayChar+0x90>
    for (j = 0; j < width; j++)
 8008c56:	3101      	adds	r1, #1
    *(__IO uint16_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (2*(Ypos*BSP_LCD_GetXSize() + Xpos))) = (uint16_t)RGB_Code;
 8008c58:	b292      	uxth	r2, r2
    for (j = 0; j < width; j++)
 8008c5a:	4288      	cmp	r0, r1
    *(__IO uint16_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (2*(Ypos*BSP_LCD_GetXSize() + Xpos))) = (uint16_t)RGB_Code;
 8008c5c:	f824 2013 	strh.w	r2, [r4, r3, lsl #1]
    for (j = 0; j < width; j++)
 8008c60:	d1e7      	bne.n	8008c32 <BSP_LCD_DisplayChar+0x9a>
  for(i = 0; i < height; i++)
 8008c62:	9b00      	ldr	r3, [sp, #0]
 8008c64:	9a01      	ldr	r2, [sp, #4]
 8008c66:	3301      	adds	r3, #1
 8008c68:	4493      	add	fp, r2
 8008c6a:	9a02      	ldr	r2, [sp, #8]
 8008c6c:	9300      	str	r3, [sp, #0]
 8008c6e:	429a      	cmp	r2, r3
 8008c70:	d1bc      	bne.n	8008bec <BSP_LCD_DisplayChar+0x54>
}
 8008c72:	b007      	add	sp, #28
 8008c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      line =  (pchar[0]<< 16) | (pchar[1]<< 8) | pchar[2];      
 8008c78:	043f      	lsls	r7, r7, #16
 8008c7a:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8008c7e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8008c82:	ea47 2702 	orr.w	r7, r7, r2, lsl #8
 8008c86:	431f      	orrs	r7, r3
 8008c88:	e7c1      	b.n	8008c0e <BSP_LCD_DisplayChar+0x76>
 8008c8a:	bf00      	nop
 8008c8c:	200009f4 	.word	0x200009f4
 8008c90:	200009f8 	.word	0x200009f8
 8008c94:	20000a50 	.word	0x20000a50

08008c98 <BSP_LCD_DisplayStringAt>:
{
 8008c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008c9c:	4616      	mov	r6, r2
  while (*ptr++) size ++ ;
 8008c9e:	7812      	ldrb	r2, [r2, #0]
{
 8008ca0:	4604      	mov	r4, r0
 8008ca2:	4688      	mov	r8, r1
  while (*ptr++) size ++ ;
 8008ca4:	2a00      	cmp	r2, #0
 8008ca6:	d04b      	beq.n	8008d40 <BSP_LCD_DisplayStringAt+0xa8>
 8008ca8:	1c71      	adds	r1, r6, #1
 8008caa:	1b8d      	subs	r5, r1, r6
 8008cac:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008cb0:	2800      	cmp	r0, #0
 8008cb2:	d1fa      	bne.n	8008caa <BSP_LCD_DisplayStringAt+0x12>
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cb4:	4f23      	ldr	r7, [pc, #140]	; (8008d44 <BSP_LCD_DisplayStringAt+0xac>)
 8008cb6:	2034      	movs	r0, #52	; 0x34
  xsize = (BSP_LCD_GetXSize()/DrawProp[ActiveLayer].pFont->Width);
 8008cb8:	4923      	ldr	r1, [pc, #140]	; (8008d48 <BSP_LCD_DisplayStringAt+0xb0>)
  switch (Mode)
 8008cba:	2b01      	cmp	r3, #1
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cbc:	f8d7 9000 	ldr.w	r9, [r7]
 8008cc0:	f8df c088 	ldr.w	ip, [pc, #136]	; 8008d4c <BSP_LCD_DisplayStringAt+0xb4>
  xsize = (BSP_LCD_GetXSize()/DrawProp[ActiveLayer].pFont->Width);
 8008cc4:	eb09 0749 	add.w	r7, r9, r9, lsl #1
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cc8:	fb00 c009 	mla	r0, r0, r9, ip
  xsize = (BSP_LCD_GetXSize()/DrawProp[ActiveLayer].pFont->Width);
 8008ccc:	eb01 0187 	add.w	r1, r1, r7, lsl #2
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cd0:	6e00      	ldr	r0, [r0, #96]	; 0x60
  xsize = (BSP_LCD_GetXSize()/DrawProp[ActiveLayer].pFont->Width);
 8008cd2:	688f      	ldr	r7, [r1, #8]
 8008cd4:	f8b7 e004 	ldrh.w	lr, [r7, #4]
 8008cd8:	fbb0 f1fe 	udiv	r1, r0, lr
  switch (Mode)
 8008cdc:	d029      	beq.n	8008d32 <BSP_LCD_DisplayStringAt+0x9a>
 8008cde:	2b02      	cmp	r3, #2
 8008ce0:	d021      	beq.n	8008d26 <BSP_LCD_DisplayStringAt+0x8e>
  if ((ref_column < 1) || (ref_column >= 0x8000))
 8008ce2:	b223      	sxth	r3, r4
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008ce4:	b280      	uxth	r0, r0
    ref_column = 1;
 8008ce6:	2b00      	cmp	r3, #0
 8008ce8:	bfd8      	it	le
 8008cea:	2401      	movle	r4, #1
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008cec:	4586      	cmp	lr, r0
 8008cee:	d818      	bhi.n	8008d22 <BSP_LCD_DisplayStringAt+0x8a>
 8008cf0:	b1ba      	cbz	r2, 8008d22 <BSP_LCD_DisplayStringAt+0x8a>
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cf2:	2334      	movs	r3, #52	; 0x34
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008cf4:	4635      	mov	r5, r6
  return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
 8008cf6:	fb03 c909 	mla	r9, r3, r9, ip
    BSP_LCD_DisplayChar(ref_column, Ypos, *Text);
 8008cfa:	4620      	mov	r0, r4
 8008cfc:	4641      	mov	r1, r8
 8008cfe:	f7ff ff4b 	bl	8008b98 <BSP_LCD_DisplayChar>
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008d02:	f815 2f01 	ldrb.w	r2, [r5, #1]!
    ref_column += DrawProp[ActiveLayer].pFont->Width;
 8008d06:	88b8      	ldrh	r0, [r7, #4]
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008d08:	1bab      	subs	r3, r5, r6
 8008d0a:	f8d9 1060 	ldr.w	r1, [r9, #96]	; 0x60
    ref_column += DrawProp[ActiveLayer].pFont->Width;
 8008d0e:	4404      	add	r4, r0
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008d10:	b29b      	uxth	r3, r3
    ref_column += DrawProp[ActiveLayer].pFont->Width;
 8008d12:	b2a4      	uxth	r4, r4
  while ((*Text != 0) & (((BSP_LCD_GetXSize() - (i*DrawProp[ActiveLayer].pFont->Width)) & 0xFFFF) >= DrawProp[ActiveLayer].pFont->Width))
 8008d14:	fb00 1313 	mls	r3, r0, r3, r1
 8008d18:	b29b      	uxth	r3, r3
 8008d1a:	4283      	cmp	r3, r0
 8008d1c:	d301      	bcc.n	8008d22 <BSP_LCD_DisplayStringAt+0x8a>
 8008d1e:	2a00      	cmp	r2, #0
 8008d20:	d1eb      	bne.n	8008cfa <BSP_LCD_DisplayStringAt+0x62>
}
 8008d22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ref_column = - Xpos + ((xsize - size)*DrawProp[ActiveLayer].pFont->Width);
 8008d26:	1b49      	subs	r1, r1, r5
 8008d28:	fb11 f10e 	smulbb	r1, r1, lr
 8008d2c:	1b0c      	subs	r4, r1, r4
 8008d2e:	b2a4      	uxth	r4, r4
      break;
 8008d30:	e7d7      	b.n	8008ce2 <BSP_LCD_DisplayStringAt+0x4a>
      ref_column = Xpos + ((xsize - size)* DrawProp[ActiveLayer].pFont->Width) / 2;
 8008d32:	1b49      	subs	r1, r1, r5
 8008d34:	fb0e f101 	mul.w	r1, lr, r1
 8008d38:	eb04 0451 	add.w	r4, r4, r1, lsr #1
 8008d3c:	b2a4      	uxth	r4, r4
      break;
 8008d3e:	e7d0      	b.n	8008ce2 <BSP_LCD_DisplayStringAt+0x4a>
  uint32_t size = 0, xsize = 0; 
 8008d40:	4615      	mov	r5, r2
 8008d42:	e7b7      	b.n	8008cb4 <BSP_LCD_DisplayStringAt+0x1c>
 8008d44:	200009f4 	.word	0x200009f4
 8008d48:	200009f8 	.word	0x200009f8
 8008d4c:	20000a50 	.word	0x20000a50

08008d50 <BSP_LCD_DrawPixel>:
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008d50:	4b0b      	ldr	r3, [pc, #44]	; (8008d80 <BSP_LCD_DrawPixel+0x30>)
{
 8008d52:	b430      	push	{r4, r5}
  if(hLtdcHandler.LayerCfg[ActiveLayer].PixelFormat == LTDC_PIXEL_FORMAT_RGB565)
 8008d54:	681b      	ldr	r3, [r3, #0]
 8008d56:	2534      	movs	r5, #52	; 0x34
 8008d58:	4c0a      	ldr	r4, [pc, #40]	; (8008d84 <BSP_LCD_DrawPixel+0x34>)
 8008d5a:	fb05 4303 	mla	r3, r5, r3, r4
 8008d5e:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8008d60:	6e1c      	ldr	r4, [r3, #96]	; 0x60
 8008d62:	2d02      	cmp	r5, #2
 8008d64:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008d66:	fb04 0101 	mla	r1, r4, r1, r0
 8008d6a:	d003      	beq.n	8008d74 <BSP_LCD_DrawPixel+0x24>
    *(__IO uint32_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (4*(Ypos*BSP_LCD_GetXSize() + Xpos))) = RGB_Code;
 8008d6c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
}
 8008d70:	bc30      	pop	{r4, r5}
 8008d72:	4770      	bx	lr
    *(__IO uint16_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (2*(Ypos*BSP_LCD_GetXSize() + Xpos))) = (uint16_t)RGB_Code;
 8008d74:	b292      	uxth	r2, r2
}
 8008d76:	bc30      	pop	{r4, r5}
    *(__IO uint16_t*) (hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress + (2*(Ypos*BSP_LCD_GetXSize() + Xpos))) = (uint16_t)RGB_Code;
 8008d78:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
}
 8008d7c:	4770      	bx	lr
 8008d7e:	bf00      	nop
 8008d80:	200009f4 	.word	0x200009f4
 8008d84:	20000a50 	.word	0x20000a50

08008d88 <BSP_LCD_DisplayOn>:
  __HAL_LTDC_ENABLE(&hLtdcHandler);
 8008d88:	4b09      	ldr	r3, [pc, #36]	; (8008db0 <BSP_LCD_DisplayOn+0x28>)
  HAL_GPIO_WritePin(LCD_DISP_GPIO_PORT, LCD_DISP_PIN, GPIO_PIN_SET);        /* Assert LCD_DISP pin */
 8008d8a:	2201      	movs	r2, #1
 8008d8c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8008d90:	4808      	ldr	r0, [pc, #32]	; (8008db4 <BSP_LCD_DisplayOn+0x2c>)
{
 8008d92:	b510      	push	{r4, lr}
  __HAL_LTDC_ENABLE(&hLtdcHandler);
 8008d94:	681c      	ldr	r4, [r3, #0]
 8008d96:	69a3      	ldr	r3, [r4, #24]
 8008d98:	4313      	orrs	r3, r2
 8008d9a:	61a3      	str	r3, [r4, #24]
  HAL_GPIO_WritePin(LCD_DISP_GPIO_PORT, LCD_DISP_PIN, GPIO_PIN_SET);        /* Assert LCD_DISP pin */
 8008d9c:	f000 fea2 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);  /* Assert LCD_BL_CTRL pin */
 8008da0:	2201      	movs	r2, #1
 8008da2:	2108      	movs	r1, #8
 8008da4:	4804      	ldr	r0, [pc, #16]	; (8008db8 <BSP_LCD_DisplayOn+0x30>)
}
 8008da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);  /* Assert LCD_BL_CTRL pin */
 8008daa:	f000 be9b 	b.w	8009ae4 <HAL_GPIO_WritePin>
 8008dae:	bf00      	nop
 8008db0:	20000a50 	.word	0x20000a50
 8008db4:	40022000 	.word	0x40022000
 8008db8:	40022800 	.word	0x40022800

08008dbc <BSP_LCD_MspInit>:
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dbc:	4b4e      	ldr	r3, [pc, #312]	; (8008ef8 <BSP_LCD_MspInit+0x13c>)
  gpio_init_structure.Pin       = GPIO_PIN_4;
 8008dbe:	f04f 0c10 	mov.w	ip, #16
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8008dc2:	484e      	ldr	r0, [pc, #312]	; (8008efc <BSP_LCD_MspInit+0x140>)
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dc4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008dc6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
{
 8008dca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dce:	645a      	str	r2, [r3, #68]	; 0x44
{
 8008dd0:	b08f      	sub	sp, #60	; 0x3c
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dd2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008dd4:	2402      	movs	r4, #2
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;  
 8008dd6:	250e      	movs	r5, #14
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8008dd8:	2700      	movs	r7, #0
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dda:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8008dde:	a909      	add	r1, sp, #36	; 0x24
  gpio_init_structure.Pin       = GPIO_PIN_12;
 8008de0:	f44f 5680 	mov.w	r6, #4096	; 0x1000
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8008de4:	f8df 9124 	ldr.w	r9, [pc, #292]	; 8008f0c <BSP_LCD_MspInit+0x150>
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008de8:	9200      	str	r2, [sp, #0]
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
 8008dea:	f04f 0801 	mov.w	r8, #1
  __HAL_RCC_LTDC_CLK_ENABLE();
 8008dee:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_DMA2D_CLK_ENABLE();
 8008df0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008df2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8008df6:	631a      	str	r2, [r3, #48]	; 0x30
 8008df8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008dfa:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8008dfe:	9201      	str	r2, [sp, #4]
 8008e00:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8008e02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e04:	ea42 020c 	orr.w	r2, r2, ip
 8008e08:	631a      	str	r2, [r3, #48]	; 0x30
 8008e0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e0c:	ea02 020c 	and.w	r2, r2, ip
 8008e10:	9202      	str	r2, [sp, #8]
 8008e12:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8008e14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e16:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008e1a:	631a      	str	r2, [r3, #48]	; 0x30
 8008e1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e1e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8008e22:	9203      	str	r2, [sp, #12]
 8008e24:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8008e26:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008e2c:	631a      	str	r2, [r3, #48]	; 0x30
 8008e2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e30:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8008e34:	9204      	str	r2, [sp, #16]
 8008e36:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8008e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e3a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8008e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e42:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8008e46:	9205      	str	r2, [sp, #20]
 8008e48:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8008e4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e4c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008e50:	631a      	str	r2, [r3, #48]	; 0x30
 8008e52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e54:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8008e58:	9206      	str	r2, [sp, #24]
 8008e5a:	9a06      	ldr	r2, [sp, #24]
  LCD_DISP_GPIO_CLK_ENABLE();
 8008e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e5e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008e62:	631a      	str	r2, [r3, #48]	; 0x30
 8008e64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e66:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8008e6a:	9207      	str	r2, [sp, #28]
 8008e6c:	9a07      	ldr	r2, [sp, #28]
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
 8008e6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e70:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008e74:	631a      	str	r2, [r3, #48]	; 0x30
 8008e76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  gpio_init_structure.Pin       = GPIO_PIN_4;
 8008e78:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
 8008e7c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8008e80:	970b      	str	r7, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008e82:	940a      	str	r4, [sp, #40]	; 0x28
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
 8008e84:	9308      	str	r3, [sp, #32]
 8008e86:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8008e88:	940c      	str	r4, [sp, #48]	; 0x30
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;  
 8008e8a:	950d      	str	r5, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8008e8c:	f000 fd0c 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Alternate = GPIO_AF9_LTDC;
 8008e90:	2309      	movs	r3, #9
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8008e92:	a909      	add	r1, sp, #36	; 0x24
 8008e94:	481a      	ldr	r0, [pc, #104]	; (8008f00 <BSP_LCD_MspInit+0x144>)
  gpio_init_structure.Alternate = GPIO_AF9_LTDC;
 8008e96:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
 8008e98:	4f1a      	ldr	r7, [pc, #104]	; (8008f04 <BSP_LCD_MspInit+0x148>)
  gpio_init_structure.Pin       = GPIO_PIN_12;
 8008e9a:	e9cd 6409 	strd	r6, r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8008e9e:	f000 fd03 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | \
 8008ea2:	f44f 4367 	mov.w	r3, #59136	; 0xe700
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8008ea6:	a909      	add	r1, sp, #36	; 0x24
 8008ea8:	4648      	mov	r0, r9
  gpio_init_structure.Pin       = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | \
 8008eaa:	9309      	str	r3, [sp, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008eac:	940a      	str	r4, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 8008eae:	950d      	str	r5, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8008eb0:	f000 fcfa 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | \
 8008eb4:	f64e 73ff 	movw	r3, #61439	; 0xefff
  HAL_GPIO_Init(GPIOJ, &gpio_init_structure);  
 8008eb8:	a909      	add	r1, sp, #36	; 0x24
 8008eba:	4813      	ldr	r0, [pc, #76]	; (8008f08 <BSP_LCD_MspInit+0x14c>)
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | \
 8008ebc:	9309      	str	r3, [sp, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008ebe:	940a      	str	r4, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 8008ec0:	950d      	str	r5, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOJ, &gpio_init_structure);  
 8008ec2:	f000 fcf1 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 | \
 8008ec6:	23f7      	movs	r3, #247	; 0xf7
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
 8008ec8:	a909      	add	r1, sp, #36	; 0x24
 8008eca:	4638      	mov	r0, r7
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008ecc:	940a      	str	r4, [sp, #40]	; 0x28
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 | \
 8008ece:	9309      	str	r3, [sp, #36]	; 0x24
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 8008ed0:	950d      	str	r5, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
 8008ed2:	f000 fce9 	bl	80098a8 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_PORT, &gpio_init_structure);
 8008ed6:	4648      	mov	r0, r9
 8008ed8:	a909      	add	r1, sp, #36	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
 8008eda:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  HAL_GPIO_Init(LCD_DISP_GPIO_PORT, &gpio_init_structure);
 8008ede:	f000 fce3 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = LCD_BL_CTRL_PIN;  /* LCD_BL_CTRL pin has to be manually controlled */
 8008ee2:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_PORT, &gpio_init_structure);
 8008ee4:	a909      	add	r1, sp, #36	; 0x24
 8008ee6:	4638      	mov	r0, r7
  gpio_init_structure.Pin       = LCD_BL_CTRL_PIN;  /* LCD_BL_CTRL pin has to be manually controlled */
 8008ee8:	e9cd 3809 	strd	r3, r8, [sp, #36]	; 0x24
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_PORT, &gpio_init_structure);
 8008eec:	f000 fcdc 	bl	80098a8 <HAL_GPIO_Init>
}
 8008ef0:	b00f      	add	sp, #60	; 0x3c
 8008ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008ef6:	bf00      	nop
 8008ef8:	40023800 	.word	0x40023800
 8008efc:	40021000 	.word	0x40021000
 8008f00:	40021800 	.word	0x40021800
 8008f04:	40022800 	.word	0x40022800
 8008f08:	40022400 	.word	0x40022400
 8008f0c:	40022000 	.word	0x40022000

08008f10 <BSP_LCD_ClockConfig>:
{
 8008f10:	b430      	push	{r4, r5}
  periph_clk_init_struct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8008f12:	4b07      	ldr	r3, [pc, #28]	; (8008f30 <BSP_LCD_ClockConfig+0x20>)
 8008f14:	2508      	movs	r5, #8
  periph_clk_init_struct.PLLSAI.PLLSAIN = 192;
 8008f16:	24c0      	movs	r4, #192	; 0xc0
  periph_clk_init_struct.PLLSAI.PLLSAIR = RK043FN48H_FREQUENCY_DIVIDER;
 8008f18:	2105      	movs	r1, #5
  periph_clk_init_struct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8008f1a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  periph_clk_init_struct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8008f1e:	601d      	str	r5, [r3, #0]
  periph_clk_init_struct.PLLSAI.PLLSAIN = 192;
 8008f20:	615c      	str	r4, [r3, #20]
  HAL_RCCEx_PeriphCLKConfig(&periph_clk_init_struct);
 8008f22:	4618      	mov	r0, r3
  periph_clk_init_struct.PLLSAI.PLLSAIR = RK043FN48H_FREQUENCY_DIVIDER;
 8008f24:	61d9      	str	r1, [r3, #28]
  periph_clk_init_struct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8008f26:	62da      	str	r2, [r3, #44]	; 0x2c
}
 8008f28:	bc30      	pop	{r4, r5}
  HAL_RCCEx_PeriphCLKConfig(&periph_clk_init_struct);
 8008f2a:	f001 bb15 	b.w	800a558 <HAL_RCCEx_PeriphCLKConfig>
 8008f2e:	bf00      	nop
 8008f30:	20000af8 	.word	0x20000af8

08008f34 <BSP_LCD_Init>:
{    
 8008f34:	b538      	push	{r3, r4, r5, lr}
  hLtdcHandler.Init.VerticalSync = (RK043FN48H_VSYNC - 1);
 8008f36:	2209      	movs	r2, #9
  hLtdcHandler.Init.HorizontalSync = (RK043FN48H_HSYNC - 1);
 8008f38:	4c25      	ldr	r4, [pc, #148]	; (8008fd0 <BSP_LCD_Init+0x9c>)
 8008f3a:	2528      	movs	r5, #40	; 0x28
  hLtdcHandler.Init.AccumulatedHBP = (RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
 8008f3c:	2335      	movs	r3, #53	; 0x35
  hLtdcHandler.Init.AccumulatedVBP = (RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
 8008f3e:	200b      	movs	r0, #11
  hLtdcHandler.Init.AccumulatedActiveH = (RK043FN48H_HEIGHT + RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
 8008f40:	f240 111b 	movw	r1, #283	; 0x11b
  hLtdcHandler.Init.HorizontalSync = (RK043FN48H_HSYNC - 1);
 8008f44:	6165      	str	r5, [r4, #20]
  hLtdcHandler.Init.AccumulatedActiveW = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
 8008f46:	f240 2515 	movw	r5, #533	; 0x215
  hLtdcHandler.Init.VerticalSync = (RK043FN48H_VSYNC - 1);
 8008f4a:	61a2      	str	r2, [r4, #24]
  hLtdcHandler.Init.TotalHeigh = (RK043FN48H_HEIGHT + RK043FN48H_VSYNC + RK043FN48H_VBP + RK043FN48H_VFP - 1);
 8008f4c:	f240 121d 	movw	r2, #285	; 0x11d
  hLtdcHandler.Init.AccumulatedHBP = (RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
 8008f50:	61e3      	str	r3, [r4, #28]
  hLtdcHandler.Init.TotalWidth = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP + RK043FN48H_HFP - 1);
 8008f52:	f240 2335 	movw	r3, #565	; 0x235
  hLtdcHandler.Init.AccumulatedVBP = (RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
 8008f56:	6220      	str	r0, [r4, #32]
  BSP_LCD_ClockConfig(&hLtdcHandler, NULL);
 8008f58:	4620      	mov	r0, r4
  hLtdcHandler.Init.AccumulatedActiveH = (RK043FN48H_HEIGHT + RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
 8008f5a:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_LCD_ClockConfig(&hLtdcHandler, NULL);
 8008f5c:	2100      	movs	r1, #0
  hLtdcHandler.Init.AccumulatedActiveW = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
 8008f5e:	6265      	str	r5, [r4, #36]	; 0x24
  hLtdcHandler.LayerCfg->ImageWidth  = RK043FN48H_WIDTH;
 8008f60:	f44f 75f0 	mov.w	r5, #480	; 0x1e0
  hLtdcHandler.Init.TotalWidth = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP + RK043FN48H_HFP - 1);
 8008f64:	e9c4 320b 	strd	r3, r2, [r4, #44]	; 0x2c
  BSP_LCD_ClockConfig(&hLtdcHandler, NULL);
 8008f68:	f7ff ffd2 	bl	8008f10 <BSP_LCD_ClockConfig>
  hLtdcHandler.Init.Backcolor.Blue = 0;
 8008f6c:	2300      	movs	r3, #0
  hLtdcHandler.LayerCfg->ImageHeight = RK043FN48H_HEIGHT;
 8008f6e:	f44f 7188 	mov.w	r1, #272	; 0x110
  hLtdcHandler.Instance = LTDC;
 8008f72:	4a18      	ldr	r2, [pc, #96]	; (8008fd4 <BSP_LCD_Init+0xa0>)
  if(HAL_LTDC_GetState(&hLtdcHandler) == HAL_LTDC_STATE_RESET)
 8008f74:	4620      	mov	r0, r4
  hLtdcHandler.Init.Backcolor.Blue = 0;
 8008f76:	86a3      	strh	r3, [r4, #52]	; 0x34
  hLtdcHandler.Instance = LTDC;
 8008f78:	6022      	str	r2, [r4, #0]
  hLtdcHandler.Init.Backcolor.Green = 0;
 8008f7a:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
  hLtdcHandler.LayerCfg->ImageHeight = RK043FN48H_HEIGHT;
 8008f7e:	e9c4 5118 	strd	r5, r1, [r4, #96]	; 0x60
  hLtdcHandler.Init.VSPolarity = LTDC_VSPOLARITY_AL; 
 8008f82:	e9c4 3301 	strd	r3, r3, [r4, #4]
  hLtdcHandler.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8008f86:	e9c4 3303 	strd	r3, r3, [r4, #12]
  if(HAL_LTDC_GetState(&hLtdcHandler) == HAL_LTDC_STATE_RESET)
 8008f8a:	f000 ffbb 	bl	8009f04 <HAL_LTDC_GetState>
 8008f8e:	b918      	cbnz	r0, 8008f98 <BSP_LCD_Init+0x64>
    BSP_LCD_MspInit(&hLtdcHandler, NULL);
 8008f90:	4601      	mov	r1, r0
 8008f92:	4620      	mov	r0, r4
 8008f94:	f7ff ff12 	bl	8008dbc <BSP_LCD_MspInit>
  HAL_LTDC_Init(&hLtdcHandler);
 8008f98:	480d      	ldr	r0, [pc, #52]	; (8008fd0 <BSP_LCD_Init+0x9c>)
 8008f9a:	f000 fda7 	bl	8009aec <HAL_LTDC_Init>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_PORT, LCD_DISP_PIN, GPIO_PIN_SET);
 8008f9e:	2201      	movs	r2, #1
 8008fa0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8008fa4:	480c      	ldr	r0, [pc, #48]	; (8008fd8 <BSP_LCD_Init+0xa4>)
 8008fa6:	f000 fd9d 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);
 8008faa:	2201      	movs	r2, #1
 8008fac:	2108      	movs	r1, #8
 8008fae:	480b      	ldr	r0, [pc, #44]	; (8008fdc <BSP_LCD_Init+0xa8>)
 8008fb0:	f000 fd98 	bl	8009ae4 <HAL_GPIO_WritePin>
  BSP_SDRAM_Init();
 8008fb4:	f000 f8d4 	bl	8009160 <BSP_SDRAM_Init>
  DrawProp[ActiveLayer].pFont = fonts;
 8008fb8:	4b09      	ldr	r3, [pc, #36]	; (8008fe0 <BSP_LCD_Init+0xac>)
 8008fba:	4a0a      	ldr	r2, [pc, #40]	; (8008fe4 <BSP_LCD_Init+0xb0>)
}
 8008fbc:	2000      	movs	r0, #0
  DrawProp[ActiveLayer].pFont = fonts;
 8008fbe:	681b      	ldr	r3, [r3, #0]
 8008fc0:	4909      	ldr	r1, [pc, #36]	; (8008fe8 <BSP_LCD_Init+0xb4>)
 8008fc2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8008fc6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008fca:	6099      	str	r1, [r3, #8]
}
 8008fcc:	bd38      	pop	{r3, r4, r5, pc}
 8008fce:	bf00      	nop
 8008fd0:	20000a50 	.word	0x20000a50
 8008fd4:	40016800 	.word	0x40016800
 8008fd8:	40022000 	.word	0x40022000
 8008fdc:	40022800 	.word	0x40022800
 8008fe0:	200009f4 	.word	0x200009f4
 8008fe4:	200009f8 	.word	0x200009f8
 8008fe8:	20000018 	.word	0x20000018

08008fec <BSP_SDRAM_MspInit>:
{  
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;
  
  /* Enable FMC clock */
  __HAL_RCC_FMC_CLK_ENABLE();
 8008fec:	4b53      	ldr	r3, [pc, #332]	; (800913c <BSP_SDRAM_MspInit+0x150>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
  __HAL_RCC_GPIOG_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  
  /* Common GPIO configuration */
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008fee:	2102      	movs	r1, #2
  __HAL_RCC_FMC_CLK_ENABLE();
 8008ff0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008ff2:	f042 0201 	orr.w	r2, r2, #1
{  
 8008ff6:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
 8008ff8:	639a      	str	r2, [r3, #56]	; 0x38
{  
 8008ffa:	4606      	mov	r6, r0
  __HAL_RCC_FMC_CLK_ENABLE();
 8008ffc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8008ffe:	2001      	movs	r0, #1
{  
 8009000:	b08e      	sub	sp, #56	; 0x38
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
  
  /* GPIOC configuration */
  gpio_init_structure.Pin   = GPIO_PIN_3;
 8009002:	2508      	movs	r5, #8
  __HAL_RCC_FMC_CLK_ENABLE();
 8009004:	4002      	ands	r2, r0
  gpio_init_structure.Pin   = GPIO_PIN_3;
 8009006:	ac0e      	add	r4, sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
 8009008:	9201      	str	r2, [sp, #4]
 800900a:	9a01      	ldr	r2, [sp, #4]
  __DMAx_CLK_ENABLE();
 800900c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800900e:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8009012:	631a      	str	r2, [r3, #48]	; 0x30
 8009014:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009016:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800901a:	9202      	str	r2, [sp, #8]
 800901c:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800901e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009020:	f042 0204 	orr.w	r2, r2, #4
 8009024:	631a      	str	r2, [r3, #48]	; 0x30
 8009026:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009028:	f002 0204 	and.w	r2, r2, #4
 800902c:	9203      	str	r2, [sp, #12]
 800902e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8009030:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009032:	432a      	orrs	r2, r5
 8009034:	631a      	str	r2, [r3, #48]	; 0x30
 8009036:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009038:	402a      	ands	r2, r5
 800903a:	9204      	str	r2, [sp, #16]
 800903c:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800903e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009040:	f042 0210 	orr.w	r2, r2, #16
 8009044:	631a      	str	r2, [r3, #48]	; 0x30
 8009046:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009048:	f002 0210 	and.w	r2, r2, #16
 800904c:	9205      	str	r2, [sp, #20]
 800904e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8009050:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009052:	f042 0220 	orr.w	r2, r2, #32
 8009056:	631a      	str	r2, [r3, #48]	; 0x30
 8009058:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800905a:	f002 0220 	and.w	r2, r2, #32
 800905e:	9206      	str	r2, [sp, #24]
 8009060:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8009062:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009064:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009068:	631a      	str	r2, [r3, #48]	; 0x30
 800906a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800906c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8009070:	9207      	str	r2, [sp, #28]
 8009072:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8009074:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009076:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800907a:	631a      	str	r2, [r3, #48]	; 0x30
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800907c:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800907e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_3;
 8009080:	f844 5d14 	str.w	r5, [r4, #-20]!
  /* GPIOH configuration */  
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
  
  /* Configure common DMA parameters */
  dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009084:	2500      	movs	r5, #0
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8009086:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800908a:	910a      	str	r1, [sp, #40]	; 0x28
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800908c:	910c      	str	r1, [sp, #48]	; 0x30
  HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800908e:	4621      	mov	r1, r4
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8009090:	9308      	str	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8009092:	900b      	str	r0, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009094:	482a      	ldr	r0, [pc, #168]	; (8009140 <BSP_SDRAM_MspInit+0x154>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009096:	920d      	str	r2, [sp, #52]	; 0x34
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8009098:	9b08      	ldr	r3, [sp, #32]
  HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800909a:	f000 fc05 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |
 800909e:	f24c 730b 	movw	r3, #50955	; 0xc70b
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80090a2:	4621      	mov	r1, r4
 80090a4:	4827      	ldr	r0, [pc, #156]	; (8009144 <BSP_SDRAM_MspInit+0x158>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |
 80090a6:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80090a8:	f000 fbfe 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80090ac:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80090b0:	4621      	mov	r1, r4
 80090b2:	4825      	ldr	r0, [pc, #148]	; (8009148 <BSP_SDRAM_MspInit+0x15c>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80090b4:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80090b6:	f000 fbf7 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80090ba:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80090be:	4621      	mov	r1, r4
 80090c0:	4822      	ldr	r0, [pc, #136]	; (800914c <BSP_SDRAM_MspInit+0x160>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80090c2:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80090c4:	f000 fbf0 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80090c8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80090cc:	4621      	mov	r1, r4
 80090ce:	4820      	ldr	r0, [pc, #128]	; (8009150 <BSP_SDRAM_MspInit+0x164>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80090d0:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80090d2:	f000 fbe9 	bl	80098a8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
 80090d6:	2328      	movs	r3, #40	; 0x28
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
 80090d8:	4621      	mov	r1, r4
 80090da:	481e      	ldr	r0, [pc, #120]	; (8009154 <BSP_SDRAM_MspInit+0x168>)
  dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80090dc:	4c1e      	ldr	r4, [pc, #120]	; (8009158 <BSP_SDRAM_MspInit+0x16c>)
  gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
 80090de:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure); 
 80090e0:	f000 fbe2 	bl	80098a8 <HAL_GPIO_Init>
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
  dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80090e4:	f44f 7300 	mov.w	r3, #512	; 0x200
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
 80090e8:	2180      	movs	r1, #128	; 0x80
  dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
 80090ea:	f44f 6280 	mov.w	r2, #1024	; 0x400
  dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80090ee:	f44f 5080 	mov.w	r0, #4096	; 0x1000
  dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80090f2:	60e3      	str	r3, [r4, #12]
  dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
  dma_handle.Init.Mode                = DMA_NORMAL;
  dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80090f4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
 80090f8:	60a1      	str	r1, [r4, #8]
  dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80090fa:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
 80090fe:	6122      	str	r2, [r4, #16]
  dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
  dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009100:	2203      	movs	r2, #3
  dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8009102:	6223      	str	r3, [r4, #32]
  dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
  dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE; 
  
  dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009104:	4b15      	ldr	r3, [pc, #84]	; (800915c <BSP_SDRAM_MspInit+0x170>)
  dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE; 
 8009106:	6325      	str	r5, [r4, #48]	; 0x30
  dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8009108:	6160      	str	r0, [r4, #20]
  
   /* Associate the DMA handle */
  __HAL_LINKDMA(hsdram, hdma, dma_handle);
  
  /* Deinitialize the stream for new transfer */
  HAL_DMA_DeInit(&dma_handle);
 800910a:	4620      	mov	r0, r4
  __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800910c:	6334      	str	r4, [r6, #48]	; 0x30
  dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800910e:	61a1      	str	r1, [r4, #24]
  dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009110:	62a2      	str	r2, [r4, #40]	; 0x28
  dma_handle.Init.Mode                = DMA_NORMAL;
 8009112:	61e5      	str	r5, [r4, #28]
  dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
 8009114:	6265      	str	r5, [r4, #36]	; 0x24
  dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8009116:	62e5      	str	r5, [r4, #44]	; 0x2c
  __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009118:	63a6      	str	r6, [r4, #56]	; 0x38
  dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800911a:	e9c4 3500 	strd	r3, r5, [r4]
  HAL_DMA_DeInit(&dma_handle);
 800911e:	f000 fa13 	bl	8009548 <HAL_DMA_DeInit>
  
  /* Configure the DMA stream */
  HAL_DMA_Init(&dma_handle); 
 8009122:	4620      	mov	r0, r4
 8009124:	f000 f974 	bl	8009410 <HAL_DMA_Init>
  
  /* NVIC configuration for DMA transfer complete interrupt */
  HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8009128:	462a      	mov	r2, r5
 800912a:	2105      	movs	r1, #5
 800912c:	2038      	movs	r0, #56	; 0x38
 800912e:	f000 f913 	bl	8009358 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8009132:	2038      	movs	r0, #56	; 0x38
 8009134:	f000 f946 	bl	80093c4 <HAL_NVIC_EnableIRQ>
}
 8009138:	b00e      	add	sp, #56	; 0x38
 800913a:	bd70      	pop	{r4, r5, r6, pc}
 800913c:	40023800 	.word	0x40023800
 8009140:	40020800 	.word	0x40020800
 8009144:	40020c00 	.word	0x40020c00
 8009148:	40021000 	.word	0x40021000
 800914c:	40021400 	.word	0x40021400
 8009150:	40021800 	.word	0x40021800
 8009154:	40021c00 	.word	0x40021c00
 8009158:	20000ba8 	.word	0x20000ba8
 800915c:	40026410 	.word	0x40026410

08009160 <BSP_SDRAM_Init>:
{ 
 8009160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009164:	483d      	ldr	r0, [pc, #244]	; (800925c <BSP_SDRAM_Init+0xfc>)
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8009166:	2600      	movs	r6, #0
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009168:	4d3d      	ldr	r5, [pc, #244]	; (8009260 <BSP_SDRAM_Init+0x100>)
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800916a:	2140      	movs	r1, #64	; 0x40
  Timing.LoadToActiveDelay    = 2;
 800916c:	4c3d      	ldr	r4, [pc, #244]	; (8009264 <BSP_SDRAM_Init+0x104>)
  sdramHandle.Init.SDClockPeriod      = SDCLOCK_PERIOD;
 800916e:	f44f 6c00 	mov.w	ip, #2048	; 0x800
  sdramHandle.Init.MemoryDataWidth    = SDRAM_MEMORY_WIDTH;
 8009172:	f04f 0810 	mov.w	r8, #16
  Timing.LoadToActiveDelay    = 2;
 8009176:	f04f 0902 	mov.w	r9, #2
  Timing.ExitSelfRefreshDelay = 7;
 800917a:	2307      	movs	r3, #7
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800917c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  Timing.SelfRefreshTime      = 4;
 8009180:	f04f 0a04 	mov.w	sl, #4
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_2;
 8009184:	f44f 7780 	mov.w	r7, #256	; 0x100
{ 
 8009188:	b083      	sub	sp, #12
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800918a:	6028      	str	r0, [r5, #0]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800918c:	6169      	str	r1, [r5, #20]
  BSP_SDRAM_MspInit(&sdramHandle, NULL); /* __weak function can be rewritten by the application */
 800918e:	4628      	mov	r0, r5
 8009190:	4631      	mov	r1, r6
  Timing.ExitSelfRefreshDelay = 7;
 8009192:	6063      	str	r3, [r4, #4]
  Timing.RowCycleDelay        = 7;
 8009194:	60e3      	str	r3, [r4, #12]
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_2;
 8009196:	61af      	str	r7, [r5, #24]
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8009198:	2701      	movs	r7, #1
  Timing.SelfRefreshTime      = 4;
 800919a:	f8c4 a008 	str.w	sl, [r4, #8]
  Timing.LoadToActiveDelay    = 2;
 800919e:	f8c4 9000 	str.w	r9, [r4]
  Timing.RCDDelay             = 2;
 80091a2:	f8c4 9018 	str.w	r9, [r4, #24]
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80091a6:	61ee      	str	r6, [r5, #28]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 80091a8:	62ae      	str	r6, [r5, #40]	; 0x28
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 80091aa:	f8c5 a00c 	str.w	sl, [r5, #12]
  sdramHandle.Init.MemoryDataWidth    = SDRAM_MEMORY_WIDTH;
 80091ae:	f8c5 8010 	str.w	r8, [r5, #16]
 80091b2:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 800926c <BSP_SDRAM_Init+0x10c>
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 80091b6:	e9c5 c208 	strd	ip, r2, [r5, #32]
  Timing.RPDelay              = 2;
 80091ba:	e9c4 9904 	strd	r9, r9, [r4, #16]
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80091be:	e9c5 6601 	strd	r6, r6, [r5, #4]
  BSP_SDRAM_MspInit(&sdramHandle, NULL); /* __weak function can be rewritten by the application */
 80091c2:	f7ff ff13 	bl	8008fec <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80091c6:	4621      	mov	r1, r4
 80091c8:	4628      	mov	r0, r5
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80091ca:	4c27      	ldr	r4, [pc, #156]	; (8009268 <BSP_SDRAM_Init+0x108>)
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80091cc:	f001 fc66 	bl	800aa9c <HAL_SDRAM_Init>
 80091d0:	1b83      	subs	r3, r0, r6
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80091d2:	4621      	mov	r1, r4
 80091d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80091d8:	bf18      	it	ne
 80091da:	2301      	movne	r3, #1
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80091dc:	4628      	mov	r0, r5
  __IO uint32_t tmpmrd = 0;
 80091de:	9601      	str	r6, [sp, #4]
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80091e0:	f88b 3000 	strb.w	r3, [fp]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80091e4:	f8c4 8004 	str.w	r8, [r4, #4]
  Command.ModeRegisterDefinition = 0;
 80091e8:	60e6      	str	r6, [r4, #12]
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80091ea:	6027      	str	r7, [r4, #0]
  Command.AutoRefreshNumber      = 1;
 80091ec:	60a7      	str	r7, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80091ee:	f001 fc77 	bl	800aae0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80091f2:	4638      	mov	r0, r7
 80091f4:	f000 f88a 	bl	800930c <HAL_Delay>
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);  
 80091f8:	4621      	mov	r1, r4
 80091fa:	4628      	mov	r0, r5
 80091fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009200:	e9c4 9800 	strd	r9, r8, [r4]
  Command.ModeRegisterDefinition = 0;
 8009204:	e9c4 7602 	strd	r7, r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);  
 8009208:	f001 fc6a 	bl	800aae0 <HAL_SDRAM_SendCommand>
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800920c:	f04f 0c03 	mov.w	ip, #3
  Command.AutoRefreshNumber      = 8;
 8009210:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009212:	4621      	mov	r1, r4
 8009214:	4628      	mov	r0, r5
 8009216:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800921a:	f8c4 c000 	str.w	ip, [r4]
  Command.AutoRefreshNumber      = 8;
 800921e:	60a3      	str	r3, [r4, #8]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009220:	f8c4 8004 	str.w	r8, [r4, #4]
  Command.ModeRegisterDefinition = 0;
 8009224:	60e6      	str	r6, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009226:	f001 fc5b 	bl	800aae0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800922a:	f44f 7308 	mov.w	r3, #544	; 0x220
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800922e:	4621      	mov	r1, r4
 8009230:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009234:	4628      	mov	r0, r5
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8009236:	9301      	str	r3, [sp, #4]
  Command.ModeRegisterDefinition = tmpmrd;
 8009238:	9b01      	ldr	r3, [sp, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800923a:	e9c4 a800 	strd	sl, r8, [r4]
  Command.ModeRegisterDefinition = tmpmrd;
 800923e:	e9c4 7302 	strd	r7, r3, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009242:	f001 fc4d 	bl	800aae0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount); 
 8009246:	4628      	mov	r0, r5
 8009248:	f240 6103 	movw	r1, #1539	; 0x603
 800924c:	f001 fc62 	bl	800ab14 <HAL_SDRAM_ProgramRefreshRate>
}
 8009250:	f89b 0000 	ldrb.w	r0, [fp]
 8009254:	b003      	add	sp, #12
 8009256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800925a:	bf00      	nop
 800925c:	a0000140 	.word	0xa0000140
 8009260:	20000c08 	.word	0x20000c08
 8009264:	20000b8c 	.word	0x20000b8c
 8009268:	20000b7c 	.word	0x20000b7c
 800926c:	2000000c 	.word	0x2000000c

08009270 <HAL_MspInit>:
__weak void HAL_MspInit(void)
{
  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_MspInit could be implemented in the user file
   */
}
 8009270:	4770      	bx	lr
 8009272:	bf00      	nop

08009274 <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8009274:	4a0e      	ldr	r2, [pc, #56]	; (80092b0 <HAL_InitTick+0x3c>)
 8009276:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800927a:	490e      	ldr	r1, [pc, #56]	; (80092b4 <HAL_InitTick+0x40>)
 800927c:	7812      	ldrb	r2, [r2, #0]
 800927e:	fbb3 f3f2 	udiv	r3, r3, r2
{
 8009282:	b510      	push	{r4, lr}
 8009284:	4604      	mov	r4, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8009286:	6808      	ldr	r0, [r1, #0]
 8009288:	fbb0 f0f3 	udiv	r0, r0, r3
 800928c:	f000 f8a8 	bl	80093e0 <HAL_SYSTICK_Config>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8009290:	b908      	cbnz	r0, 8009296 <HAL_InitTick+0x22>
 8009292:	2c0f      	cmp	r4, #15
 8009294:	d901      	bls.n	800929a <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8009296:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 8009298:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800929a:	2200      	movs	r2, #0
 800929c:	4621      	mov	r1, r4
 800929e:	f04f 30ff 	mov.w	r0, #4294967295
 80092a2:	f000 f859 	bl	8009358 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80092a6:	4b04      	ldr	r3, [pc, #16]	; (80092b8 <HAL_InitTick+0x44>)
 80092a8:	2000      	movs	r0, #0
 80092aa:	601c      	str	r4, [r3, #0]
}
 80092ac:	bd10      	pop	{r4, pc}
 80092ae:	bf00      	nop
 80092b0:	2000000d 	.word	0x2000000d
 80092b4:	20000014 	.word	0x20000014
 80092b8:	20000010 	.word	0x20000010

080092bc <HAL_Init>:
{
 80092bc:	b508      	push	{r3, lr}
   __HAL_FLASH_ART_ENABLE();
 80092be:	4b09      	ldr	r3, [pc, #36]	; (80092e4 <HAL_Init+0x28>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80092c0:	2003      	movs	r0, #3
   __HAL_FLASH_ART_ENABLE();
 80092c2:	681a      	ldr	r2, [r3, #0]
 80092c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80092c8:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80092ca:	681a      	ldr	r2, [r3, #0]
 80092cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80092d0:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80092d2:	f000 f82d 	bl	8009330 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 80092d6:	2000      	movs	r0, #0
 80092d8:	f7ff ffcc 	bl	8009274 <HAL_InitTick>
  HAL_MspInit();
 80092dc:	f7ff ffc8 	bl	8009270 <HAL_MspInit>
}
 80092e0:	2000      	movs	r0, #0
 80092e2:	bd08      	pop	{r3, pc}
 80092e4:	40023c00 	.word	0x40023c00

080092e8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80092e8:	4a03      	ldr	r2, [pc, #12]	; (80092f8 <HAL_IncTick+0x10>)
 80092ea:	4b04      	ldr	r3, [pc, #16]	; (80092fc <HAL_IncTick+0x14>)
 80092ec:	6811      	ldr	r1, [r2, #0]
 80092ee:	781b      	ldrb	r3, [r3, #0]
 80092f0:	440b      	add	r3, r1
 80092f2:	6013      	str	r3, [r2, #0]
}
 80092f4:	4770      	bx	lr
 80092f6:	bf00      	nop
 80092f8:	2001e040 	.word	0x2001e040
 80092fc:	2000000d 	.word	0x2000000d

08009300 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009300:	4b01      	ldr	r3, [pc, #4]	; (8009308 <HAL_GetTick+0x8>)
 8009302:	6818      	ldr	r0, [r3, #0]
}
 8009304:	4770      	bx	lr
 8009306:	bf00      	nop
 8009308:	2001e040 	.word	0x2001e040

0800930c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800930c:	b538      	push	{r3, r4, r5, lr}
 800930e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009310:	f7ff fff6 	bl	8009300 <HAL_GetTick>
 8009314:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009316:	1c63      	adds	r3, r4, #1
 8009318:	d002      	beq.n	8009320 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800931a:	4b04      	ldr	r3, [pc, #16]	; (800932c <HAL_Delay+0x20>)
 800931c:	781b      	ldrb	r3, [r3, #0]
 800931e:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8009320:	f7ff ffee 	bl	8009300 <HAL_GetTick>
 8009324:	1b40      	subs	r0, r0, r5
 8009326:	42a0      	cmp	r0, r4
 8009328:	d3fa      	bcc.n	8009320 <HAL_Delay+0x14>
  {
  }
}
 800932a:	bd38      	pop	{r3, r4, r5, pc}
 800932c:	2000000d 	.word	0x2000000d

08009330 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009330:	4907      	ldr	r1, [pc, #28]	; (8009350 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009332:	0200      	lsls	r0, r0, #8
 8009334:	4b07      	ldr	r3, [pc, #28]	; (8009354 <HAL_NVIC_SetPriorityGrouping+0x24>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009336:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009338:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800933c:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800933e:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 8009342:	4022      	ands	r2, r4
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009344:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009348:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800934a:	4318      	orrs	r0, r3
  SCB->AIRCR =  reg_value;
 800934c:	60c8      	str	r0, [r1, #12]
 800934e:	4770      	bx	lr
 8009350:	e000ed00 	.word	0xe000ed00
 8009354:	05fa0000 	.word	0x05fa0000

08009358 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009358:	4b17      	ldr	r3, [pc, #92]	; (80093b8 <HAL_NVIC_SetPriority+0x60>)
 800935a:	68db      	ldr	r3, [r3, #12]
 800935c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009360:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009362:	f1c3 0507 	rsb	r5, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009366:	1d1c      	adds	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009368:	2d04      	cmp	r5, #4
 800936a:	bf28      	it	cs
 800936c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800936e:	2c06      	cmp	r4, #6
 8009370:	d918      	bls.n	80093a4 <HAL_NVIC_SetPriority+0x4c>
 8009372:	3b03      	subs	r3, #3
 8009374:	f04f 34ff 	mov.w	r4, #4294967295
 8009378:	409c      	lsls	r4, r3
 800937a:	ea22 0404 	bic.w	r4, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800937e:	f04f 32ff 	mov.w	r2, #4294967295
  if ((int32_t)(IRQn) >= 0)
 8009382:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009384:	fa02 f205 	lsl.w	r2, r2, r5
 8009388:	ea21 0102 	bic.w	r1, r1, r2
 800938c:	fa01 f203 	lsl.w	r2, r1, r3
 8009390:	ea42 0204 	orr.w	r2, r2, r4
 8009394:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8009398:	b2d2      	uxtb	r2, r2
  if ((int32_t)(IRQn) >= 0)
 800939a:	db06      	blt.n	80093aa <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800939c:	4b07      	ldr	r3, [pc, #28]	; (80093bc <HAL_NVIC_SetPriority+0x64>)
 800939e:	541a      	strb	r2, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80093a0:	bc30      	pop	{r4, r5}
 80093a2:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80093a4:	2400      	movs	r4, #0
 80093a6:	4623      	mov	r3, r4
 80093a8:	e7e9      	b.n	800937e <HAL_NVIC_SetPriority+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80093aa:	f000 000f 	and.w	r0, r0, #15
 80093ae:	4b04      	ldr	r3, [pc, #16]	; (80093c0 <HAL_NVIC_SetPriority+0x68>)
 80093b0:	541a      	strb	r2, [r3, r0]
 80093b2:	bc30      	pop	{r4, r5}
 80093b4:	4770      	bx	lr
 80093b6:	bf00      	nop
 80093b8:	e000ed00 	.word	0xe000ed00
 80093bc:	e000e400 	.word	0xe000e400
 80093c0:	e000ed14 	.word	0xe000ed14

080093c4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80093c4:	2800      	cmp	r0, #0
 80093c6:	db07      	blt.n	80093d8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80093c8:	2301      	movs	r3, #1
 80093ca:	f000 011f 	and.w	r1, r0, #31
 80093ce:	4a03      	ldr	r2, [pc, #12]	; (80093dc <HAL_NVIC_EnableIRQ+0x18>)
 80093d0:	0940      	lsrs	r0, r0, #5
 80093d2:	408b      	lsls	r3, r1
 80093d4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80093d8:	4770      	bx	lr
 80093da:	bf00      	nop
 80093dc:	e000e100 	.word	0xe000e100

080093e0 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80093e0:	3801      	subs	r0, #1
 80093e2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80093e6:	d20d      	bcs.n	8009404 <HAL_SYSTICK_Config+0x24>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80093e8:	4b07      	ldr	r3, [pc, #28]	; (8009408 <HAL_SYSTICK_Config+0x28>)
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80093ea:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80093ec:	2107      	movs	r1, #7
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80093ee:	b430      	push	{r4, r5}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80093f0:	25f0      	movs	r5, #240	; 0xf0
 80093f2:	4c06      	ldr	r4, [pc, #24]	; (800940c <HAL_SYSTICK_Config+0x2c>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80093f4:	6058      	str	r0, [r3, #4]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80093f6:	4610      	mov	r0, r2
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80093f8:	f884 5023 	strb.w	r5, [r4, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80093fc:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80093fe:	6019      	str	r1, [r3, #0]
   return SysTick_Config(TicksNumb);
}
 8009400:	bc30      	pop	{r4, r5}
 8009402:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8009404:	2001      	movs	r0, #1
 8009406:	4770      	bx	lr
 8009408:	e000e010 	.word	0xe000e010
 800940c:	e000ed00 	.word	0xe000ed00

08009410 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8009410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009412:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 8009414:	f7ff ff74 	bl	8009300 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8009418:	2c00      	cmp	r4, #0
 800941a:	d053      	beq.n	80094c4 <HAL_DMA_Init+0xb4>
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800941c:	2202      	movs	r2, #2
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 800941e:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009420:	2100      	movs	r1, #0
 8009422:	4605      	mov	r5, r0
  hdma->State = HAL_DMA_STATE_BUSY;
 8009424:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8009428:	681a      	ldr	r2, [r3, #0]
  __HAL_UNLOCK(hdma);
 800942a:	f884 1034 	strb.w	r1, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800942e:	f022 0201 	bic.w	r2, r2, #1
 8009432:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009434:	e005      	b.n	8009442 <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009436:	f7ff ff63 	bl	8009300 <HAL_GetTick>
 800943a:	1b40      	subs	r0, r0, r5
 800943c:	2805      	cmp	r0, #5
 800943e:	d83a      	bhi.n	80094b6 <HAL_DMA_Init+0xa6>
 8009440:	6823      	ldr	r3, [r4, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009442:	681a      	ldr	r2, [r3, #0]
 8009444:	07d1      	lsls	r1, r2, #31
 8009446:	d4f6      	bmi.n	8009436 <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009448:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800944c:	68e1      	ldr	r1, [r4, #12]
 800944e:	4302      	orrs	r2, r0
  tmp = hdma->Instance->CR;
 8009450:	681f      	ldr	r7, [r3, #0]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009452:	e9d4 0504 	ldrd	r0, r5, [r4, #16]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009456:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009458:	4302      	orrs	r2, r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
          hdma->Init.Mode                | hdma->Init.Priority;
 800945a:	6a20      	ldr	r0, [r4, #32]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800945c:	e9d4 6106 	ldrd	r6, r1, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009460:	432a      	orrs	r2, r5
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009462:	4d35      	ldr	r5, [pc, #212]	; (8009538 <HAL_DMA_Init+0x128>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009464:	4332      	orrs	r2, r6
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009466:	403d      	ands	r5, r7
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009468:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800946a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hdma->Init.Mode                | hdma->Init.Priority;
 800946c:	4302      	orrs	r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800946e:	2904      	cmp	r1, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009470:	ea42 0205 	orr.w	r2, r2, r5
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009474:	d028      	beq.n	80094c8 <HAL_DMA_Init+0xb8>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8009476:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8009478:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800947a:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800947e:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009480:	b2da      	uxtb	r2, r3
 8009482:	4d2e      	ldr	r5, [pc, #184]	; (800953c <HAL_DMA_Init+0x12c>)
  hdma->Instance->FCR = tmp;
 8009484:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009486:	3a10      	subs	r2, #16
 8009488:	492d      	ldr	r1, [pc, #180]	; (8009540 <HAL_DMA_Init+0x130>)
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800948a:	482e      	ldr	r0, [pc, #184]	; (8009544 <HAL_DMA_Init+0x134>)
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800948c:	fba5 5202 	umull	r5, r2, r5, r2
 8009490:	4019      	ands	r1, r3
  hdma->State = HAL_DMA_STATE_READY;
 8009492:	2501      	movs	r5, #1
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009494:	0913      	lsrs	r3, r2, #4
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009496:	2200      	movs	r2, #0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009498:	5cc0      	ldrb	r0, [r0, r3]
  
  if (stream_number > 3U)
 800949a:	2b03      	cmp	r3, #3
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800949c:	f04f 033f 	mov.w	r3, #63	; 0x3f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80094a0:	bf88      	it	hi
 80094a2:	3104      	addhi	r1, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80094a4:	65e0      	str	r0, [r4, #92]	; 0x5c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80094a6:	4083      	lsls	r3, r0
  return HAL_OK;
 80094a8:	4610      	mov	r0, r2
 80094aa:	65a1      	str	r1, [r4, #88]	; 0x58
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80094ac:	608b      	str	r3, [r1, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80094ae:	6562      	str	r2, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80094b0:	f884 5035 	strb.w	r5, [r4, #53]	; 0x35
}
 80094b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80094b6:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80094b8:	2220      	movs	r2, #32
      return HAL_TIMEOUT;
 80094ba:	4618      	mov	r0, r3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80094bc:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80094be:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 80094c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
 80094c4:	2001      	movs	r0, #1
}
 80094c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80094c8:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 80094cc:	6aa7      	ldr	r7, [r4, #40]	; 0x28
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80094ce:	ea45 0001 	orr.w	r0, r5, r1
    tmp |= hdma->Init.FIFOThreshold;
 80094d2:	f047 0104 	orr.w	r1, r7, #4
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80094d6:	4302      	orrs	r2, r0
  hdma->Instance->CR = tmp;  
 80094d8:	601a      	str	r2, [r3, #0]
  tmp = hdma->Instance->FCR;
 80094da:	695a      	ldr	r2, [r3, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80094dc:	f022 0207 	bic.w	r2, r2, #7
    tmp |= hdma->Init.FIFOThreshold;
 80094e0:	4311      	orrs	r1, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80094e2:	2d00      	cmp	r5, #0
 80094e4:	d0cc      	beq.n	8009480 <HAL_DMA_Init+0x70>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80094e6:	b17e      	cbz	r6, 8009508 <HAL_DMA_Init+0xf8>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80094e8:	f5b6 5f00 	cmp.w	r6, #8192	; 0x2000
 80094ec:	d016      	beq.n	800951c <HAL_DMA_Init+0x10c>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80094ee:	2f02      	cmp	r7, #2
 80094f0:	d903      	bls.n	80094fa <HAL_DMA_Init+0xea>
 80094f2:	2f03      	cmp	r7, #3
 80094f4:	d1c4      	bne.n	8009480 <HAL_DMA_Init+0x70>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80094f6:	01ea      	lsls	r2, r5, #7
 80094f8:	d5c2      	bpl.n	8009480 <HAL_DMA_Init+0x70>
        hdma->State = HAL_DMA_STATE_READY;
 80094fa:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80094fc:	2240      	movs	r2, #64	; 0x40
        return HAL_ERROR; 
 80094fe:	4618      	mov	r0, r3
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8009500:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8009502:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 8009506:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (tmp)
 8009508:	2f01      	cmp	r7, #1
 800950a:	d003      	beq.n	8009514 <HAL_DMA_Init+0x104>
 800950c:	d3f3      	bcc.n	80094f6 <HAL_DMA_Init+0xe6>
 800950e:	2f02      	cmp	r7, #2
 8009510:	d1b6      	bne.n	8009480 <HAL_DMA_Init+0x70>
 8009512:	e7f0      	b.n	80094f6 <HAL_DMA_Init+0xe6>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8009514:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8009518:	d1b2      	bne.n	8009480 <HAL_DMA_Init+0x70>
 800951a:	e7ee      	b.n	80094fa <HAL_DMA_Init+0xea>
    switch (tmp)
 800951c:	2f03      	cmp	r7, #3
 800951e:	d8af      	bhi.n	8009480 <HAL_DMA_Init+0x70>
 8009520:	a201      	add	r2, pc, #4	; (adr r2, 8009528 <HAL_DMA_Init+0x118>)
 8009522:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 8009526:	bf00      	nop
 8009528:	080094fb 	.word	0x080094fb
 800952c:	080094f7 	.word	0x080094f7
 8009530:	080094fb 	.word	0x080094fb
 8009534:	08009515 	.word	0x08009515
 8009538:	f010803f 	.word	0xf010803f
 800953c:	aaaaaaab 	.word	0xaaaaaaab
 8009540:	fffffc00 	.word	0xfffffc00
 8009544:	08011f68 	.word	0x08011f68

08009548 <HAL_DMA_DeInit>:
  if(hdma == NULL)
 8009548:	2800      	cmp	r0, #0
 800954a:	d035      	beq.n	80095b8 <HAL_DMA_DeInit+0x70>
 800954c:	4603      	mov	r3, r0
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800954e:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
 8009552:	b2c0      	uxtb	r0, r0
 8009554:	2802      	cmp	r0, #2
 8009556:	d031      	beq.n	80095bc <HAL_DMA_DeInit+0x74>
  __HAL_DMA_DISABLE(hdma);
 8009558:	681a      	ldr	r2, [r3, #0]
  hdma->Instance->CR   = 0U;
 800955a:	2000      	movs	r0, #0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800955c:	b2d1      	uxtb	r1, r2
{
 800955e:	b470      	push	{r4, r5, r6}
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009560:	3910      	subs	r1, #16
  __HAL_DMA_DISABLE(hdma);
 8009562:	6814      	ldr	r4, [r2, #0]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009564:	4d16      	ldr	r5, [pc, #88]	; (80095c0 <HAL_DMA_DeInit+0x78>)
  hdma->Instance->FCR  = (uint32_t)0x00000021U;
 8009566:	2621      	movs	r6, #33	; 0x21
  __HAL_DMA_DISABLE(hdma);
 8009568:	f024 0401 	bic.w	r4, r4, #1
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800956c:	fba5 5101 	umull	r5, r1, r5, r1
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009570:	4d14      	ldr	r5, [pc, #80]	; (80095c4 <HAL_DMA_DeInit+0x7c>)
  __HAL_DMA_DISABLE(hdma);
 8009572:	6014      	str	r4, [r2, #0]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009574:	0909      	lsrs	r1, r1, #4
 8009576:	4c14      	ldr	r4, [pc, #80]	; (80095c8 <HAL_DMA_DeInit+0x80>)
  hdma->Instance->CR   = 0U;
 8009578:	6010      	str	r0, [r2, #0]
 800957a:	4014      	ands	r4, r2
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800957c:	5c6d      	ldrb	r5, [r5, r1]
  if (stream_number > 3U)
 800957e:	2903      	cmp	r1, #3
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009580:	f04f 013f 	mov.w	r1, #63	; 0x3f
  hdma->Instance->NDTR = 0U;
 8009584:	6050      	str	r0, [r2, #4]
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009586:	bf88      	it	hi
 8009588:	3404      	addhi	r4, #4
  hdma->Instance->PAR  = 0U;
 800958a:	6090      	str	r0, [r2, #8]
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800958c:	40a9      	lsls	r1, r5
  hdma->Instance->M0AR = 0U;
 800958e:	60d0      	str	r0, [r2, #12]
  hdma->Instance->M1AR = 0U;
 8009590:	6110      	str	r0, [r2, #16]
  hdma->Instance->FCR  = (uint32_t)0x00000021U;
 8009592:	6156      	str	r6, [r2, #20]
  hdma->XferCpltCallback = NULL;
 8009594:	2200      	movs	r2, #0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009596:	65dd      	str	r5, [r3, #92]	; 0x5c
 8009598:	659c      	str	r4, [r3, #88]	; 0x58
  return HAL_OK;
 800959a:	4610      	mov	r0, r2
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800959c:	60a1      	str	r1, [r4, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800959e:	655a      	str	r2, [r3, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 80095a0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 80095a4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hdma->XferHalfCpltCallback = NULL;
 80095a8:	e9c3 220f 	strd	r2, r2, [r3, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 80095ac:	e9c3 2211 	strd	r2, r2, [r3, #68]	; 0x44
  hdma->XferAbortCallback = NULL;  
 80095b0:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
}
 80095b4:	bc70      	pop	{r4, r5, r6}
 80095b6:	4770      	bx	lr
    return HAL_ERROR;
 80095b8:	2001      	movs	r0, #1
 80095ba:	4770      	bx	lr
}
 80095bc:	4770      	bx	lr
 80095be:	bf00      	nop
 80095c0:	aaaaaaab 	.word	0xaaaaaaab
 80095c4:	08011f68 	.word	0x08011f68
 80095c8:	fffffc00 	.word	0xfffffc00

080095cc <HAL_DMA2D_MspInit>:
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_MspInit can be implemented in the user file.
   */
}
 80095cc:	4770      	bx	lr
 80095ce:	bf00      	nop

080095d0 <HAL_DMA2D_Init>:
  if(hdma2d == NULL)
 80095d0:	b340      	cbz	r0, 8009624 <HAL_DMA2D_Init+0x54>
{ 
 80095d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 80095d4:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80095d8:	4604      	mov	r4, r0
 80095da:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80095de:	b1e3      	cbz	r3, 800961a <HAL_DMA2D_Init+0x4a>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 80095e0:	2202      	movs	r2, #2
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80095e2:	68a7      	ldr	r7, [r4, #8]
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80095e4:	2500      	movs	r5, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80095e6:	2601      	movs	r6, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 80095e8:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  return HAL_OK;
 80095ec:	4628      	mov	r0, r5
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80095ee:	e9d4 3100 	ldrd	r3, r1, [r4]
 80095f2:	681a      	ldr	r2, [r3, #0]
 80095f4:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80095f8:	430a      	orrs	r2, r1
 80095fa:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80095fc:	6b59      	ldr	r1, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);  
 80095fe:	4a0a      	ldr	r2, [pc, #40]	; (8009628 <HAL_DMA2D_Init+0x58>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009600:	f021 0107 	bic.w	r1, r1, #7
 8009604:	4339      	orrs	r1, r7
 8009606:	6359      	str	r1, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);  
 8009608:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800960a:	400a      	ands	r2, r1
 800960c:	68e1      	ldr	r1, [r4, #12]
 800960e:	430a      	orrs	r2, r1
 8009610:	641a      	str	r2, [r3, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009612:	63e5      	str	r5, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009614:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
}
 8009618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 800961a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800961e:	f7ff ffd5 	bl	80095cc <HAL_DMA2D_MspInit>
 8009622:	e7dd      	b.n	80095e0 <HAL_DMA2D_Init+0x10>
     return HAL_ERROR;
 8009624:	2001      	movs	r0, #1
}
 8009626:	4770      	bx	lr
 8009628:	ffffc000 	.word	0xffffc000

0800962c <HAL_DMA2D_Start>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 800962c:	b470      	push	{r4, r5, r6}
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));
  
  /* Process locked */
  __HAL_LOCK(hdma2d);
 800962e:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8009632:	2c01      	cmp	r4, #1
 8009634:	d036      	beq.n	80096a4 <HAL_DMA2D_Start+0x78>
  uint32_t tmp2 = 0;
  uint32_t tmp3 = 0;
  uint32_t tmp4 = 0;
    
  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 8009636:	6804      	ldr	r4, [r0, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009638:	2502      	movs	r5, #2
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 800963a:	9e03      	ldr	r6, [sp, #12]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800963c:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 8009640:	ea46 4303 	orr.w	r3, r6, r3, lsl #16
 8009644:	6c65      	ldr	r5, [r4, #68]	; 0x44
  __HAL_LOCK(hdma2d);
 8009646:	2601      	movs	r6, #1
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 8009648:	f005 4540 	and.w	r5, r5, #3221225472	; 0xc0000000
  __HAL_LOCK(hdma2d);
 800964c:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  
  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 
  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8009650:	6846      	ldr	r6, [r0, #4]
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 8009652:	432b      	orrs	r3, r5
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8009654:	f5b6 3f40 	cmp.w	r6, #196608	; 0x30000
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos))); 
 8009658:	6463      	str	r3, [r4, #68]	; 0x44
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800965a:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 800965c:	d007      	beq.n	800966e <HAL_DMA2D_Start+0x42>
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);    
  } 
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 800965e:	60e1      	str	r1, [r4, #12]
  __HAL_DMA2D_ENABLE(hdma2d);
 8009660:	6823      	ldr	r3, [r4, #0]
  return HAL_OK;
 8009662:	2000      	movs	r0, #0
  __HAL_DMA2D_ENABLE(hdma2d);
 8009664:	f043 0301 	orr.w	r3, r3, #1
 8009668:	6023      	str	r3, [r4, #0]
}
 800966a:	bc70      	pop	{r4, r5, r6}
 800966c:	4770      	bx	lr
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 800966e:	6882      	ldr	r2, [r0, #8]
 8009670:	b1b2      	cbz	r2, 80096a0 <HAL_DMA2D_Start+0x74>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8009672:	2a01      	cmp	r2, #1
 8009674:	d024      	beq.n	80096c0 <HAL_DMA2D_Start+0x94>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8009676:	2a02      	cmp	r2, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8009678:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 800967c:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8009680:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8009682:	d020      	beq.n	80096c6 <HAL_DMA2D_Start+0x9a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8009684:	2a03      	cmp	r2, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8009686:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800968a:	d00e      	beq.n	80096aa <HAL_DMA2D_Start+0x7e>
      tmp2 = (tmp2 >> 20);
 800968c:	0d1b      	lsrs	r3, r3, #20
      tmp3 = (tmp3 >> 12);
 800968e:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4) | (tmp2 << 8) | (tmp1 << 12) | tmp4);
 8009690:	021b      	lsls	r3, r3, #8
      tmp1 = (tmp1 >> 28);
 8009692:	0f09      	lsrs	r1, r1, #28
      tmp  = ((tmp3 << 4) | (tmp2 << 8) | (tmp1 << 12) | tmp4);
 8009694:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8009698:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 800969c:	ea43 3101 	orr.w	r1, r3, r1, lsl #12
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);    
 80096a0:	63a1      	str	r1, [r4, #56]	; 0x38
 80096a2:	e7dd      	b.n	8009660 <HAL_DMA2D_Start+0x34>
  __HAL_LOCK(hdma2d);
 80096a4:	2002      	movs	r0, #2
}
 80096a6:	bc70      	pop	{r4, r5, r6}
 80096a8:	4770      	bx	lr
      tmp2 = (tmp2 >> 19);
 80096aa:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11);
 80096ac:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5) | (tmp2 << 10) | (tmp1 << 15) | tmp4);    
 80096ae:	029b      	lsls	r3, r3, #10
      tmp1 = (tmp1 >> 31);
 80096b0:	0fc9      	lsrs	r1, r1, #31
      tmp  = ((tmp3 << 5) | (tmp2 << 10) | (tmp1 << 15) | tmp4);    
 80096b2:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 80096b6:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 80096ba:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 80096be:	e7ef      	b.n	80096a0 <HAL_DMA2D_Start+0x74>
      tmp = (tmp3 | tmp2 | tmp4);  
 80096c0:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80096c4:	e7ec      	b.n	80096a0 <HAL_DMA2D_Start+0x74>
      tmp2 = (tmp2 >> 19);
 80096c6:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10);
 80096c8:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5) | (tmp2 << 11) | tmp4); 
 80096ca:	02c9      	lsls	r1, r1, #11
 80096cc:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 80096d0:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 80096d4:	e7e4      	b.n	80096a0 <HAL_DMA2D_Start+0x74>
 80096d6:	bf00      	nop

080096d8 <HAL_DMA2D_PollForTransfer>:
{
 80096d8:	b570      	push	{r4, r5, r6, lr}
  __IO uint32_t isrflags = 0x0;  
 80096da:	2200      	movs	r2, #0
{
 80096dc:	b082      	sub	sp, #8
  if((hdma2d->Instance->CR & DMA2D_CR_START) != RESET)
 80096de:	6803      	ldr	r3, [r0, #0]
{
 80096e0:	4604      	mov	r4, r0
  __IO uint32_t isrflags = 0x0;  
 80096e2:	9201      	str	r2, [sp, #4]
{
 80096e4:	460d      	mov	r5, r1
  if((hdma2d->Instance->CR & DMA2D_CR_START) != RESET)
 80096e6:	681a      	ldr	r2, [r3, #0]
 80096e8:	07d2      	lsls	r2, r2, #31
 80096ea:	d420      	bmi.n	800972e <HAL_DMA2D_PollForTransfer+0x56>
  if (((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) != RESET)  || 
 80096ec:	69da      	ldr	r2, [r3, #28]
 80096ee:	0690      	lsls	r0, r2, #26
 80096f0:	d402      	bmi.n	80096f8 <HAL_DMA2D_PollForTransfer+0x20>
      ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) != RESET))
 80096f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  if (((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) != RESET)  || 
 80096f4:	0691      	lsls	r1, r2, #26
 80096f6:	d50f      	bpl.n	8009718 <HAL_DMA2D_PollForTransfer+0x40>
    tickstart = HAL_GetTick();
 80096f8:	f7ff fe02 	bl	8009300 <HAL_GetTick>
 80096fc:	4606      	mov	r6, r0
 80096fe:	1c68      	adds	r0, r5, #1
    while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == RESET)
 8009700:	6823      	ldr	r3, [r4, #0]
 8009702:	d006      	beq.n	8009712 <HAL_DMA2D_PollForTransfer+0x3a>
 8009704:	e032      	b.n	800976c <HAL_DMA2D_PollForTransfer+0x94>
      isrflags = READ_REG(hdma2d->Instance->ISR);   
 8009706:	685a      	ldr	r2, [r3, #4]
 8009708:	9201      	str	r2, [sp, #4]
      if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)        
 800970a:	9a01      	ldr	r2, [sp, #4]
 800970c:	f012 0f29 	tst.w	r2, #41	; 0x29
 8009710:	d147      	bne.n	80097a2 <HAL_DMA2D_PollForTransfer+0xca>
    while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == RESET)
 8009712:	685a      	ldr	r2, [r3, #4]
 8009714:	06d1      	lsls	r1, r2, #27
 8009716:	d5f6      	bpl.n	8009706 <HAL_DMA2D_PollForTransfer+0x2e>
  __HAL_UNLOCK(hdma2d);
 8009718:	2200      	movs	r2, #0
  __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
 800971a:	2512      	movs	r5, #18
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800971c:	2101      	movs	r1, #1
  return HAL_OK;
 800971e:	4610      	mov	r0, r2
  __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
 8009720:	609d      	str	r5, [r3, #8]
  __HAL_UNLOCK(hdma2d);
 8009722:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8009726:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
}
 800972a:	b002      	add	sp, #8
 800972c:	bd70      	pop	{r4, r5, r6, pc}
   tickstart = HAL_GetTick();
 800972e:	f7ff fde7 	bl	8009300 <HAL_GetTick>
 8009732:	4606      	mov	r6, r0
 8009734:	1c68      	adds	r0, r5, #1
    while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == RESET)
 8009736:	6823      	ldr	r3, [r4, #0]
 8009738:	d153      	bne.n	80097e2 <HAL_DMA2D_PollForTransfer+0x10a>
 800973a:	685a      	ldr	r2, [r3, #4]
 800973c:	0791      	lsls	r1, r2, #30
 800973e:	d4d5      	bmi.n	80096ec <HAL_DMA2D_PollForTransfer+0x14>
      isrflags = READ_REG(hdma2d->Instance->ISR); 
 8009740:	685a      	ldr	r2, [r3, #4]
 8009742:	9201      	str	r2, [sp, #4]
      if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)
 8009744:	9a01      	ldr	r2, [sp, #4]
 8009746:	f012 0f21 	tst.w	r2, #33	; 0x21
 800974a:	d0f6      	beq.n	800973a <HAL_DMA2D_PollForTransfer+0x62>
        if ((isrflags & DMA2D_FLAG_CE) != RESET)
 800974c:	9a01      	ldr	r2, [sp, #4]
 800974e:	0696      	lsls	r6, r2, #26
 8009750:	d503      	bpl.n	800975a <HAL_DMA2D_PollForTransfer+0x82>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;        
 8009752:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8009754:	f042 0202 	orr.w	r2, r2, #2
 8009758:	63e2      	str	r2, [r4, #60]	; 0x3c
        if ((isrflags & DMA2D_FLAG_TE) != RESET)        
 800975a:	9a01      	ldr	r2, [sp, #4]
 800975c:	07d5      	lsls	r5, r2, #31
 800975e:	d503      	bpl.n	8009768 <HAL_DMA2D_PollForTransfer+0x90>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;        
 8009760:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8009762:	f042 0201 	orr.w	r2, r2, #1
 8009766:	63e2      	str	r2, [r4, #60]	; 0x3c
        __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8009768:	2521      	movs	r5, #33	; 0x21
 800976a:	e030      	b.n	80097ce <HAL_DMA2D_PollForTransfer+0xf6>
    while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == RESET)
 800976c:	685a      	ldr	r2, [r3, #4]
 800976e:	06d2      	lsls	r2, r2, #27
 8009770:	d4d2      	bmi.n	8009718 <HAL_DMA2D_PollForTransfer+0x40>
      isrflags = READ_REG(hdma2d->Instance->ISR);   
 8009772:	685a      	ldr	r2, [r3, #4]
 8009774:	9201      	str	r2, [sp, #4]
      if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)        
 8009776:	9a01      	ldr	r2, [sp, #4]
 8009778:	f012 0f29 	tst.w	r2, #41	; 0x29
 800977c:	d111      	bne.n	80097a2 <HAL_DMA2D_PollForTransfer+0xca>
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 800977e:	b125      	cbz	r5, 800978a <HAL_DMA2D_PollForTransfer+0xb2>
 8009780:	f7ff fdbe 	bl	8009300 <HAL_GetTick>
 8009784:	1b80      	subs	r0, r0, r6
 8009786:	42a8      	cmp	r0, r5
 8009788:	d9b9      	bls.n	80096fe <HAL_DMA2D_PollForTransfer+0x26>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800978a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
          hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
 800978c:	2203      	movs	r2, #3
          __HAL_UNLOCK(hdma2d);
 800978e:	2100      	movs	r1, #0
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8009790:	f043 0320 	orr.w	r3, r3, #32
          return HAL_TIMEOUT;
 8009794:	4610      	mov	r0, r2
          __HAL_UNLOCK(hdma2d);
 8009796:	f884 1038 	strb.w	r1, [r4, #56]	; 0x38
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800979a:	63e3      	str	r3, [r4, #60]	; 0x3c
          hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
 800979c:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
          return HAL_TIMEOUT;
 80097a0:	e7c3      	b.n	800972a <HAL_DMA2D_PollForTransfer+0x52>
        if ((isrflags & DMA2D_FLAG_CAE) != RESET)
 80097a2:	9a01      	ldr	r2, [sp, #4]
 80097a4:	0712      	lsls	r2, r2, #28
 80097a6:	d503      	bpl.n	80097b0 <HAL_DMA2D_PollForTransfer+0xd8>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;        
 80097a8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80097aa:	f042 0204 	orr.w	r2, r2, #4
 80097ae:	63e2      	str	r2, [r4, #60]	; 0x3c
        if ((isrflags & DMA2D_FLAG_CE) != RESET)             
 80097b0:	9a01      	ldr	r2, [sp, #4]
 80097b2:	0696      	lsls	r6, r2, #26
 80097b4:	d503      	bpl.n	80097be <HAL_DMA2D_PollForTransfer+0xe6>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;        
 80097b6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80097b8:	f042 0202 	orr.w	r2, r2, #2
 80097bc:	63e2      	str	r2, [r4, #60]	; 0x3c
        if ((isrflags & DMA2D_FLAG_TE) != RESET)        
 80097be:	9a01      	ldr	r2, [sp, #4]
 80097c0:	07d5      	lsls	r5, r2, #31
 80097c2:	d503      	bpl.n	80097cc <HAL_DMA2D_PollForTransfer+0xf4>
          hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;        
 80097c4:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80097c6:	f042 0201 	orr.w	r2, r2, #1
 80097ca:	63e2      	str	r2, [r4, #60]	; 0x3c
        __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80097cc:	2529      	movs	r5, #41	; 0x29
        hdma2d->State= HAL_DMA2D_STATE_ERROR;
 80097ce:	2104      	movs	r1, #4
        __HAL_UNLOCK(hdma2d);
 80097d0:	2200      	movs	r2, #0
        return HAL_ERROR;      
 80097d2:	2001      	movs	r0, #1
        __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80097d4:	609d      	str	r5, [r3, #8]
        hdma2d->State= HAL_DMA2D_STATE_ERROR;
 80097d6:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
        __HAL_UNLOCK(hdma2d);
 80097da:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
}
 80097de:	b002      	add	sp, #8
 80097e0:	bd70      	pop	{r4, r5, r6, pc}
    while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == RESET)
 80097e2:	685a      	ldr	r2, [r3, #4]
 80097e4:	0792      	lsls	r2, r2, #30
 80097e6:	d481      	bmi.n	80096ec <HAL_DMA2D_PollForTransfer+0x14>
      isrflags = READ_REG(hdma2d->Instance->ISR); 
 80097e8:	685a      	ldr	r2, [r3, #4]
 80097ea:	9201      	str	r2, [sp, #4]
      if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)
 80097ec:	9a01      	ldr	r2, [sp, #4]
 80097ee:	f012 0f21 	tst.w	r2, #33	; 0x21
 80097f2:	d1ab      	bne.n	800974c <HAL_DMA2D_PollForTransfer+0x74>
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 80097f4:	2d00      	cmp	r5, #0
 80097f6:	d0c8      	beq.n	800978a <HAL_DMA2D_PollForTransfer+0xb2>
 80097f8:	f7ff fd82 	bl	8009300 <HAL_GetTick>
 80097fc:	1b80      	subs	r0, r0, r6
 80097fe:	42a8      	cmp	r0, r5
 8009800:	d998      	bls.n	8009734 <HAL_DMA2D_PollForTransfer+0x5c>
 8009802:	e7c2      	b.n	800978a <HAL_DMA2D_PollForTransfer+0xb2>

08009804 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 8009804:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8009808:	2a01      	cmp	r2, #1
 800980a:	d049      	beq.n	80098a0 <HAL_DMA2D_ConfigLayer+0x9c>
 800980c:	4603      	mov	r3, r0
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800980e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
{ 
 8009812:	b4f0      	push	{r4, r5, r6, r7}
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009814:	e9d0 2507 	ldrd	r2, r5, [r0, #28]
  __HAL_LOCK(hdma2d);
 8009818:	2701      	movs	r7, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 800981a:	2402      	movs	r4, #2
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800981c:	f1a2 0609 	sub.w	r6, r2, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009820:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
  __HAL_LOCK(hdma2d);
 8009824:	f883 7038 	strb.w	r7, [r3, #56]	; 0x38
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009828:	42be      	cmp	r6, r7
 800982a:	6a45      	ldr	r5, [r0, #36]	; 0x24
  hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 800982c:	f883 4039 	strb.w	r4, [r3, #57]	; 0x39
 8009830:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009832:	d91a      	bls.n	800986a <HAL_DMA2D_ConfigLayer+0x66>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009834:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  if(LayerIdx == 0)
 8009838:	b179      	cbz	r1, 800985a <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800983a:	69e5      	ldr	r5, [r4, #28]
 800983c:	4919      	ldr	r1, [pc, #100]	; (80098a4 <HAL_DMA2D_ConfigLayer+0xa0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);      
 800983e:	6980      	ldr	r0, [r0, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009840:	4029      	ands	r1, r5
 8009842:	430a      	orrs	r2, r1
 8009844:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);      
 8009846:	6120      	str	r0, [r4, #16]
  __HAL_UNLOCK(hdma2d);  
 8009848:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800984a:	2101      	movs	r1, #1
  return HAL_OK;
 800984c:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800984e:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);  
 8009852:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
}
 8009856:	bcf0      	pop	{r4, r5, r6, r7}
 8009858:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800985a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800985c:	4911      	ldr	r1, [pc, #68]	; (80098a4 <HAL_DMA2D_ConfigLayer+0xa0>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800985e:	6998      	ldr	r0, [r3, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009860:	4029      	ands	r1, r5
 8009862:	430a      	orrs	r2, r1
 8009864:	6262      	str	r2, [r4, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009866:	61a0      	str	r0, [r4, #24]
 8009868:	e7ee      	b.n	8009848 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800986a:	f005 467f 	and.w	r6, r5, #4278190080	; 0xff000000
 800986e:	4332      	orrs	r2, r6
  if(LayerIdx == 0)
 8009870:	b151      	cbz	r1, 8009888 <HAL_DMA2D_ConfigLayer+0x84>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009872:	69e6      	ldr	r6, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));      
 8009874:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009878:	490a      	ldr	r1, [pc, #40]	; (80098a4 <HAL_DMA2D_ConfigLayer+0xa0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);      
 800987a:	6980      	ldr	r0, [r0, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800987c:	4031      	ands	r1, r6
 800987e:	430a      	orrs	r2, r1
 8009880:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);      
 8009882:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));      
 8009884:	6225      	str	r5, [r4, #32]
 8009886:	e7df      	b.n	8009848 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009888:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800988a:	4906      	ldr	r1, [pc, #24]	; (80098a4 <HAL_DMA2D_ConfigLayer+0xa0>)
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800988c:	6a58      	ldr	r0, [r3, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800988e:	4029      	ands	r1, r5
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009890:	699d      	ldr	r5, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8009892:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009896:	430a      	orrs	r2, r1
 8009898:	6262      	str	r2, [r4, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800989a:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800989c:	62a0      	str	r0, [r4, #40]	; 0x28
 800989e:	e7d3      	b.n	8009848 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80098a0:	2002      	movs	r0, #2
}
 80098a2:	4770      	bx	lr
 80098a4:	00fcfff0 	.word	0x00fcfff0

080098a8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80098a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80098ac:	f8df c22c 	ldr.w	ip, [pc, #556]	; 8009adc <HAL_GPIO_Init+0x234>
{
 80098b0:	b083      	sub	sp, #12
 80098b2:	468e      	mov	lr, r1
  for(position = 0; position < GPIO_NUMBER; position++)
 80098b4:	2500      	movs	r5, #0
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80098b6:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8009ae0 <HAL_GPIO_Init+0x238>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80098ba:	f8d1 8000 	ldr.w	r8, [r1]
 80098be:	e003      	b.n	80098c8 <HAL_GPIO_Init+0x20>
  for(position = 0; position < GPIO_NUMBER; position++)
 80098c0:	3501      	adds	r5, #1
 80098c2:	2d10      	cmp	r5, #16
 80098c4:	f000 80b6 	beq.w	8009a34 <HAL_GPIO_Init+0x18c>
    ioposition = ((uint32_t)0x01) << position;
 80098c8:	2301      	movs	r3, #1
 80098ca:	40ab      	lsls	r3, r5
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80098cc:	ea08 0103 	and.w	r1, r8, r3
    if(iocurrent == ioposition)
 80098d0:	428b      	cmp	r3, r1
 80098d2:	d1f5      	bne.n	80098c0 <HAL_GPIO_Init+0x18>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80098d4:	f8de 4004 	ldr.w	r4, [lr, #4]
 80098d8:	f024 0710 	bic.w	r7, r4, #16
 80098dc:	2f02      	cmp	r7, #2
 80098de:	f040 80ac 	bne.w	8009a3a <HAL_GPIO_Init+0x192>
        temp = GPIOx->AFR[position >> 3];
 80098e2:	08ef      	lsrs	r7, r5, #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80098e4:	f005 0a07 	and.w	sl, r5, #7
 80098e8:	f04f 0b0f 	mov.w	fp, #15
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80098ec:	f8de 2010 	ldr.w	r2, [lr, #16]
 80098f0:	eb00 0787 	add.w	r7, r0, r7, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80098f4:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 80098f8:	6a3e      	ldr	r6, [r7, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80098fa:	fa0b fb0a 	lsl.w	fp, fp, sl
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80098fe:	fa02 f20a 	lsl.w	r2, r2, sl
 8009902:	ea4f 0a45 	mov.w	sl, r5, lsl #1
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8009906:	ea26 060b 	bic.w	r6, r6, fp
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800990a:	f04f 0b03 	mov.w	fp, #3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800990e:	4332      	orrs	r2, r6
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009910:	fa0b fb0a 	lsl.w	fp, fp, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009914:	f004 0603 	and.w	r6, r4, #3
        GPIOx->AFR[position >> 3] = temp;
 8009918:	623a      	str	r2, [r7, #32]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800991a:	ea6f 020b 	mvn.w	r2, fp
      temp = GPIOx->MODER;
 800991e:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009920:	fa06 f60a 	lsl.w	r6, r6, sl
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009924:	4017      	ands	r7, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009926:	433e      	orrs	r6, r7
      GPIOx->MODER = temp;
 8009928:	6006      	str	r6, [r0, #0]
        temp = GPIOx->OSPEEDR; 
 800992a:	6886      	ldr	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800992c:	f3c4 1700 	ubfx	r7, r4, #4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8009930:	ea06 0b02 	and.w	fp, r6, r2
        temp |= (GPIO_Init->Speed << (position * 2));
 8009934:	f8de 600c 	ldr.w	r6, [lr, #12]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8009938:	40af      	lsls	r7, r5
        temp |= (GPIO_Init->Speed << (position * 2));
 800993a:	fa06 f60a 	lsl.w	r6, r6, sl
 800993e:	ea46 060b 	orr.w	r6, r6, fp
        GPIOx->OSPEEDR = temp;
 8009942:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8009944:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009946:	ea26 0303 	bic.w	r3, r6, r3
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800994a:	431f      	orrs	r7, r3
        GPIOx->OTYPER = temp;
 800994c:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800994e:	68c6      	ldr	r6, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8009950:	00e7      	lsls	r7, r4, #3
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8009952:	f8de 3008 	ldr.w	r3, [lr, #8]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8009956:	ea02 0206 	and.w	r2, r2, r6
      temp |= ((GPIO_Init->Pull) << (position * 2));
 800995a:	fa03 f30a 	lsl.w	r3, r3, sl
 800995e:	ea43 0302 	orr.w	r3, r3, r2
      GPIOx->PUPDR = temp;
 8009962:	60c3      	str	r3, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8009964:	d5ac      	bpl.n	80098c0 <HAL_GPIO_Init+0x18>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009966:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800996a:	f025 0703 	bic.w	r7, r5, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800996e:	f005 0303 	and.w	r3, r5, #3
 8009972:	220f      	movs	r2, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009974:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8009978:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800997c:	009b      	lsls	r3, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800997e:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8009982:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8009986:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800998a:	fa02 fa03 	lsl.w	sl, r2, r3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800998e:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8009992:	9601      	str	r6, [sp, #4]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8009994:	4e48      	ldr	r6, [pc, #288]	; (8009ab8 <HAL_GPIO_Init+0x210>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009996:	9a01      	ldr	r2, [sp, #4]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8009998:	42b0      	cmp	r0, r6
        temp = SYSCFG->EXTICR[position >> 2];
 800999a:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800999c:	ea22 020a 	bic.w	r2, r2, sl
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80099a0:	d020      	beq.n	80099e4 <HAL_GPIO_Init+0x13c>
 80099a2:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80099a6:	42b0      	cmp	r0, r6
 80099a8:	d05e      	beq.n	8009a68 <HAL_GPIO_Init+0x1c0>
 80099aa:	4e44      	ldr	r6, [pc, #272]	; (8009abc <HAL_GPIO_Init+0x214>)
 80099ac:	42b0      	cmp	r0, r6
 80099ae:	d060      	beq.n	8009a72 <HAL_GPIO_Init+0x1ca>
 80099b0:	4e43      	ldr	r6, [pc, #268]	; (8009ac0 <HAL_GPIO_Init+0x218>)
 80099b2:	42b0      	cmp	r0, r6
 80099b4:	d062      	beq.n	8009a7c <HAL_GPIO_Init+0x1d4>
 80099b6:	4e43      	ldr	r6, [pc, #268]	; (8009ac4 <HAL_GPIO_Init+0x21c>)
 80099b8:	42b0      	cmp	r0, r6
 80099ba:	d064      	beq.n	8009a86 <HAL_GPIO_Init+0x1de>
 80099bc:	4e42      	ldr	r6, [pc, #264]	; (8009ac8 <HAL_GPIO_Init+0x220>)
 80099be:	42b0      	cmp	r0, r6
 80099c0:	d06b      	beq.n	8009a9a <HAL_GPIO_Init+0x1f2>
 80099c2:	4e42      	ldr	r6, [pc, #264]	; (8009acc <HAL_GPIO_Init+0x224>)
 80099c4:	42b0      	cmp	r0, r6
 80099c6:	d06d      	beq.n	8009aa4 <HAL_GPIO_Init+0x1fc>
 80099c8:	4e41      	ldr	r6, [pc, #260]	; (8009ad0 <HAL_GPIO_Init+0x228>)
 80099ca:	42b0      	cmp	r0, r6
 80099cc:	d060      	beq.n	8009a90 <HAL_GPIO_Init+0x1e8>
 80099ce:	4e41      	ldr	r6, [pc, #260]	; (8009ad4 <HAL_GPIO_Init+0x22c>)
 80099d0:	42b0      	cmp	r0, r6
 80099d2:	d06c      	beq.n	8009aae <HAL_GPIO_Init+0x206>
 80099d4:	4e40      	ldr	r6, [pc, #256]	; (8009ad8 <HAL_GPIO_Init+0x230>)
 80099d6:	42b0      	cmp	r0, r6
 80099d8:	bf0c      	ite	eq
 80099da:	2609      	moveq	r6, #9
 80099dc:	260a      	movne	r6, #10
 80099de:	fa06 f303 	lsl.w	r3, r6, r3
 80099e2:	431a      	orrs	r2, r3
        SYSCFG->EXTICR[position >> 2] = temp;
 80099e4:	60ba      	str	r2, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80099e6:	03e6      	lsls	r6, r4, #15
        temp = EXTI->IMR;
 80099e8:	f8dc 3000 	ldr.w	r3, [ip]
        temp &= ~((uint32_t)iocurrent);
 80099ec:	ea6f 0201 	mvn.w	r2, r1
  for(position = 0; position < GPIO_NUMBER; position++)
 80099f0:	f105 0501 	add.w	r5, r5, #1
        temp &= ~((uint32_t)iocurrent);
 80099f4:	bf54      	ite	pl
 80099f6:	4013      	andpl	r3, r2
        {
          temp |= iocurrent;
 80099f8:	430b      	orrmi	r3, r1
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80099fa:	03a7      	lsls	r7, r4, #14
        EXTI->IMR = temp;
 80099fc:	f8cc 3000 	str.w	r3, [ip]
        temp = EXTI->EMR;
 8009a00:	f8dc 3004 	ldr.w	r3, [ip, #4]
        temp &= ~((uint32_t)iocurrent);
 8009a04:	bf54      	ite	pl
 8009a06:	4013      	andpl	r3, r2
        {
          temp |= iocurrent;
 8009a08:	430b      	orrmi	r3, r1
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8009a0a:	02e6      	lsls	r6, r4, #11
        EXTI->EMR = temp;
 8009a0c:	f8cc 3004 	str.w	r3, [ip, #4]
        temp = EXTI->RTSR;
 8009a10:	f8dc 3008 	ldr.w	r3, [ip, #8]
        temp &= ~((uint32_t)iocurrent);
 8009a14:	bf54      	ite	pl
 8009a16:	4013      	andpl	r3, r2
        {
          temp |= iocurrent;
 8009a18:	430b      	orrmi	r3, r1
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8009a1a:	02a4      	lsls	r4, r4, #10
        EXTI->RTSR = temp;
 8009a1c:	f8cc 3008 	str.w	r3, [ip, #8]
        temp = EXTI->FTSR;
 8009a20:	f8dc 300c 	ldr.w	r3, [ip, #12]
        temp &= ~((uint32_t)iocurrent);
 8009a24:	bf54      	ite	pl
 8009a26:	4013      	andpl	r3, r2
        {
          temp |= iocurrent;
 8009a28:	430b      	orrmi	r3, r1
  for(position = 0; position < GPIO_NUMBER; position++)
 8009a2a:	2d10      	cmp	r5, #16
        }
        EXTI->FTSR = temp;
 8009a2c:	f8cc 300c 	str.w	r3, [ip, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8009a30:	f47f af4a 	bne.w	80098c8 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8009a34:	b003      	add	sp, #12
 8009a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a3a:	ea4f 0a45 	mov.w	sl, r5, lsl #1
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009a3e:	2203      	movs	r2, #3
      temp = GPIOx->MODER;
 8009a40:	f8d0 b000 	ldr.w	fp, [r0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8009a44:	3f01      	subs	r7, #1
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009a46:	ea04 0602 	and.w	r6, r4, r2
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009a4a:	fa02 f20a 	lsl.w	r2, r2, sl
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8009a4e:	2f01      	cmp	r7, #1
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009a50:	ea6f 0202 	mvn.w	r2, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009a54:	fa06 f60a 	lsl.w	r6, r6, sl
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8009a58:	ea02 0b0b 	and.w	fp, r2, fp
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8009a5c:	ea46 060b 	orr.w	r6, r6, fp
      GPIOx->MODER = temp;
 8009a60:	6006      	str	r6, [r0, #0]
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8009a62:	f63f af74 	bhi.w	800994e <HAL_GPIO_Init+0xa6>
 8009a66:	e760      	b.n	800992a <HAL_GPIO_Init+0x82>
 8009a68:	2601      	movs	r6, #1
 8009a6a:	fa06 f303 	lsl.w	r3, r6, r3
 8009a6e:	431a      	orrs	r2, r3
 8009a70:	e7b8      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009a72:	2602      	movs	r6, #2
 8009a74:	fa06 f303 	lsl.w	r3, r6, r3
 8009a78:	431a      	orrs	r2, r3
 8009a7a:	e7b3      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009a7c:	2603      	movs	r6, #3
 8009a7e:	fa06 f303 	lsl.w	r3, r6, r3
 8009a82:	431a      	orrs	r2, r3
 8009a84:	e7ae      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009a86:	2604      	movs	r6, #4
 8009a88:	fa06 f303 	lsl.w	r3, r6, r3
 8009a8c:	431a      	orrs	r2, r3
 8009a8e:	e7a9      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009a90:	2607      	movs	r6, #7
 8009a92:	fa06 f303 	lsl.w	r3, r6, r3
 8009a96:	431a      	orrs	r2, r3
 8009a98:	e7a4      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009a9a:	2605      	movs	r6, #5
 8009a9c:	fa06 f303 	lsl.w	r3, r6, r3
 8009aa0:	431a      	orrs	r2, r3
 8009aa2:	e79f      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009aa4:	2606      	movs	r6, #6
 8009aa6:	fa06 f303 	lsl.w	r3, r6, r3
 8009aaa:	431a      	orrs	r2, r3
 8009aac:	e79a      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009aae:	2608      	movs	r6, #8
 8009ab0:	fa06 f303 	lsl.w	r3, r6, r3
 8009ab4:	431a      	orrs	r2, r3
 8009ab6:	e795      	b.n	80099e4 <HAL_GPIO_Init+0x13c>
 8009ab8:	40020000 	.word	0x40020000
 8009abc:	40020800 	.word	0x40020800
 8009ac0:	40020c00 	.word	0x40020c00
 8009ac4:	40021000 	.word	0x40021000
 8009ac8:	40021400 	.word	0x40021400
 8009acc:	40021800 	.word	0x40021800
 8009ad0:	40021c00 	.word	0x40021c00
 8009ad4:	40022000 	.word	0x40022000
 8009ad8:	40022400 	.word	0x40022400
 8009adc:	40013c00 	.word	0x40013c00
 8009ae0:	40023800 	.word	0x40023800

08009ae4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009ae4:	b902      	cbnz	r2, 8009ae8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8009ae6:	0409      	lsls	r1, r1, #16
 8009ae8:	6181      	str	r1, [r0, #24]
  }
}
 8009aea:	4770      	bx	lr

08009aec <HAL_LTDC_Init>:
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
  uint32_t tmp = 0, tmp1 = 0;

  /* Check the LTDC peripheral state */
  if(hltdc == NULL)
 8009aec:	2800      	cmp	r0, #0
 8009aee:	d071      	beq.n	8009bd4 <HAL_LTDC_Init+0xe8>
{
 8009af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_LTDC_HSPOL(hltdc->Init.HSPolarity));
  assert_param(IS_LTDC_VSPOL(hltdc->Init.VSPolarity));
  assert_param(IS_LTDC_DEPOL(hltdc->Init.DEPolarity));
  assert_param(IS_LTDC_PCPOL(hltdc->Init.PCPolarity));

  if(hltdc->State == HAL_LTDC_STATE_RESET)
 8009af2:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8009af6:	4604      	mov	r4, r0
 8009af8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009afc:	2b00      	cmp	r3, #0
 8009afe:	d064      	beq.n	8009bca <HAL_LTDC_Init+0xde>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configures the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b00:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b02:	2502      	movs	r5, #2
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b04:	68e6      	ldr	r6, [r4, #12]

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;  
 8009b06:	2100      	movs	r1, #0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b08:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
  hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009b0c:	6925      	ldr	r5, [r4, #16]
  tmp = (hltdc->Init.HorizontalSync << 16);
 8009b0e:	6967      	ldr	r7, [r4, #20]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009b10:	f8d4 c018 	ldr.w	ip, [r4, #24]
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b14:	e9d4 3200 	ldrd	r3, r2, [r4]
 8009b18:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009b1a:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b1c:	4332      	orrs	r2, r6
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009b1e:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009b22:	4e2d      	ldr	r6, [pc, #180]	; (8009bd8 <HAL_LTDC_Init+0xec>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009b24:	6198      	str	r0, [r3, #24]
  hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009b26:	432a      	orrs	r2, r5
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b28:	6998      	ldr	r0, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8009b2a:	2501      	movs	r5, #1
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b2c:	4302      	orrs	r2, r0
 8009b2e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009b30:	689a      	ldr	r2, [r3, #8]
 8009b32:	4032      	ands	r2, r6
 8009b34:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009b36:	6898      	ldr	r0, [r3, #8]
 8009b38:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
  tmp = (hltdc->Init.AccumulatedHBP << 16);
 8009b3c:	69e7      	ldr	r7, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009b3e:	ea40 000c 	orr.w	r0, r0, ip
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009b42:	f8d4 c020 	ldr.w	ip, [r4, #32]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009b46:	6098      	str	r0, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009b48:	68d8      	ldr	r0, [r3, #12]
 8009b4a:	4030      	ands	r0, r6
 8009b4c:	60d8      	str	r0, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009b4e:	68da      	ldr	r2, [r3, #12]
 8009b50:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
  tmp = (hltdc->Init.AccumulatedActiveW << 16);
 8009b54:	6a67      	ldr	r7, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009b56:	ea42 020c 	orr.w	r2, r2, ip
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009b5a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009b5e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009b60:	691a      	ldr	r2, [r3, #16]
 8009b62:	4032      	ands	r2, r6
 8009b64:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009b66:	6918      	ldr	r0, [r3, #16]
 8009b68:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
  tmp = (hltdc->Init.TotalWidth << 16);
 8009b6c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009b6e:	ea40 000c 	orr.w	r0, r0, ip
 8009b72:	6118      	str	r0, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009b74:	6958      	ldr	r0, [r3, #20]
 8009b76:	4006      	ands	r6, r0
 8009b78:	615e      	str	r6, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009b7a:	695a      	ldr	r2, [r3, #20]
 8009b7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b7e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8009b82:	4302      	orrs	r2, r0
 8009b84:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009b86:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8);
 8009b88:	f894 7035 	ldrb.w	r7, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009b8c:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16);
 8009b90:	f894 6036 	ldrb.w	r6, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009b94:	62d8      	str	r0, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009b96:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8009b98:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8009b9c:	4302      	orrs	r2, r0

  return HAL_OK;
 8009b9e:	4608      	mov	r0, r1
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009ba0:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8009ba4:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
 8009ba8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE);
 8009baa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009bac:	f042 0204 	orr.w	r2, r2, #4
 8009bb0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_FU);
 8009bb2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009bb4:	f042 0202 	orr.w	r2, r2, #2
 8009bb8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8009bba:	699a      	ldr	r2, [r3, #24]
 8009bbc:	432a      	orrs	r2, r5
 8009bbe:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;  
 8009bc0:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8009bc4:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
}
 8009bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hltdc->Lock = HAL_UNLOCKED;
 8009bca:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8009bce:	f002 f9e5 	bl	800bf9c <HAL_LTDC_MspInit>
 8009bd2:	e795      	b.n	8009b00 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 8009bd4:	2001      	movs	r0, #1
}
 8009bd6:	4770      	bx	lr
 8009bd8:	f000f800 	.word	0xf000f800

08009bdc <HAL_LTDC_ConfigLayer>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{   
  /* Process locked */
  __HAL_LOCK(hltdc);
 8009bdc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009be0:	2b01      	cmp	r3, #1
 8009be2:	f000 80b9 	beq.w	8009d58 <HAL_LTDC_ConfigLayer+0x17c>
  uint32_t tmp1 = 0;
  uint32_t tmp2 = 0;

  /* Configures the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009be6:	ea4f 1cc2 	mov.w	ip, r2, lsl #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009bea:	2302      	movs	r3, #2
{   
 8009bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009bf0:	f10c 0c84 	add.w	ip, ip, #132	; 0x84
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009bf4:	6806      	ldr	r6, [r0, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 8009bf6:	f04f 0834 	mov.w	r8, #52	; 0x34
 8009bfa:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009bfc:	eb06 040c 	add.w	r4, r6, ip
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009c00:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 8009c04:	fb08 0202 	mla	r2, r8, r2, r0
 8009c08:	4689      	mov	r9, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009c0a:	68f1      	ldr	r1, [r6, #12]
 8009c0c:	4607      	mov	r7, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009c0e:	6863      	ldr	r3, [r4, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 8009c10:	f102 0838 	add.w	r8, r2, #56	; 0x38
  __HAL_LOCK(hltdc);
 8009c14:	f04f 0201 	mov.w	r2, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009c18:	f3c1 4a0b 	ubfx	sl, r1, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009c1c:	f403 4e70 	and.w	lr, r3, #61440	; 0xf000
  __HAL_LOCK(hltdc);
 8009c20:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 8009c24:	e8b9 000f 	ldmia.w	r9!, {r0, r1, r2, r3}
 8009c28:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8009c2c:	e8b9 000f 	ldmia.w	r9!, {r0, r1, r2, r3}
 8009c30:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8009c34:	e8b9 000f 	ldmia.w	r9!, {r0, r1, r2, r3}
 8009c38:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8009c3c:	f8d9 3000 	ldr.w	r3, [r9]
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009c40:	4848      	ldr	r0, [pc, #288]	; (8009d64 <HAL_LTDC_ConfigLayer+0x188>)
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 8009c42:	f8c8 3000 	str.w	r3, [r8]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009c46:	686b      	ldr	r3, [r5, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009c48:	f8c4 e004 	str.w	lr, [r4, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c4c:	f8d5 e000 	ldr.w	lr, [r5]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009c50:	449a      	add	sl, r3
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c52:	68f1      	ldr	r1, [r6, #12]
 8009c54:	f10e 0801 	add.w	r8, lr, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009c58:	f8d5 900c 	ldr.w	r9, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c5c:	f3c1 410b 	ubfx	r1, r1, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009c60:	68aa      	ldr	r2, [r5, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c62:	4441      	add	r1, r8
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009c64:	f8d5 8010 	ldr.w	r8, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009c68:	3201      	adds	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c6a:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  tmp2 = (pLayerCfg->Alpha0 << 24);  
 8009c6e:	f8d5 a018 	ldr.w	sl, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009c72:	6061      	str	r1, [r4, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009c74:	68f1      	ldr	r1, [r6, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009c76:	f8d4 b008 	ldr.w	fp, [r4, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009c7a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009c7e:	f40b 4b70 	and.w	fp, fp, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009c82:	4449      	add	r1, r9
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009c84:	f8d5 9014 	ldr.w	r9, [r5, #20]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009c88:	f8c4 b008 	str.w	fp, [r4, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009c8c:	f8d6 b00c 	ldr.w	fp, [r6, #12]
 8009c90:	f3cb 0b0a 	ubfx	fp, fp, #0, #11
 8009c94:	445a      	add	r2, fp
 8009c96:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009c9a:	60a2      	str	r2, [r4, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009c9c:	6922      	ldr	r2, [r4, #16]
 8009c9e:	f022 0207 	bic.w	r2, r2, #7
 8009ca2:	6122      	str	r2, [r4, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009ca4:	f8c4 8010 	str.w	r8, [r4, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8009ca8:	69a2      	ldr	r2, [r4, #24]
 8009caa:	2200      	movs	r2, #0
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8);
 8009cac:	f895 1031 	ldrb.w	r1, [r5, #49]	; 0x31
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16);
 8009cb0:	f895 b032 	ldrb.w	fp, [r5, #50]	; 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8009cb4:	61a2      	str	r2, [r4, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009cb6:	f895 2030 	ldrb.w	r2, [r5, #48]	; 0x30
 8009cba:	ea42 620a 	orr.w	r2, r2, sl, lsl #24
 8009cbe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009cc2:	6a29      	ldr	r1, [r5, #32]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009cc4:	ea42 4a0b 	orr.w	sl, r2, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009cc8:	69ea      	ldr	r2, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009cca:	f8c4 a018 	str.w	sl, [r4, #24]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009cce:	4311      	orrs	r1, r2
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009cd0:	6962      	ldr	r2, [r4, #20]
 8009cd2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8009cd6:	6162      	str	r2, [r4, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009cd8:	f8c4 9014 	str.w	r9, [r4, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009cdc:	69e2      	ldr	r2, [r4, #28]
 8009cde:	4010      	ands	r0, r2
 8009ce0:	61e0      	str	r0, [r4, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009ce2:	61e1      	str	r1, [r4, #28]

  /* Configures the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009ce4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009ce6:	2200      	movs	r2, #0
 8009ce8:	62a2      	str	r2, [r4, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009cea:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8009cec:	62a2      	str	r2, [r4, #40]	; 0x28

  if(pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009cee:	f1b8 0f00 	cmp.w	r8, #0
 8009cf2:	d00b      	beq.n	8009d0c <HAL_LTDC_ConfigLayer+0x130>
  {
    tmp = 4;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8009cf4:	f1b8 0f01 	cmp.w	r8, #1
 8009cf8:	d030      	beq.n	8009d5c <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 3;
  }
  else if((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8009cfa:	f1a8 0202 	sub.w	r2, r8, #2
    (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
      (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8009cfe:	2a02      	cmp	r2, #2
 8009d00:	d902      	bls.n	8009d08 <HAL_LTDC_ConfigLayer+0x12c>
 8009d02:	f1b8 0f07 	cmp.w	r8, #7
 8009d06:	d12b      	bne.n	8009d60 <HAL_LTDC_ConfigLayer+0x184>
        (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2;
 8009d08:	2202      	movs	r2, #2
 8009d0a:	e000      	b.n	8009d0e <HAL_LTDC_ConfigLayer+0x132>
    tmp = 4;
 8009d0c:	2204      	movs	r2, #4
    tmp = 1;
  }

  /* Configures the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d0e:	eba3 030e 	sub.w	r3, r3, lr

  /* Configures the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009d12:	e9d5 1e0a 	ldrd	r1, lr, [r5, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d16:	fb02 f303 	mul.w	r3, r2, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009d1a:	2501      	movs	r5, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d1c:	fb01 f202 	mul.w	r2, r1, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009d20:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d22:	3303      	adds	r3, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009d24:	f001 21e0 	and.w	r1, r1, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009d2c:	4a0e      	ldr	r2, [pc, #56]	; (8009d68 <HAL_LTDC_ConfigLayer+0x18c>)
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009d2e:	62e1      	str	r1, [r4, #44]	; 0x2c
  __HAL_UNLOCK(hltdc);
 8009d30:	2100      	movs	r1, #0
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009d32:	62e3      	str	r3, [r4, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009d34:	6b23      	ldr	r3, [r4, #48]	; 0x30
  return HAL_OK;
 8009d36:	4608      	mov	r0, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009d38:	401a      	ands	r2, r3
 8009d3a:	6322      	str	r2, [r4, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009d3c:	f8c4 e030 	str.w	lr, [r4, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */  
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009d40:	f856 300c 	ldr.w	r3, [r6, ip]
 8009d44:	432b      	orrs	r3, r5
 8009d46:	f846 300c 	str.w	r3, [r6, ip]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009d4a:	6275      	str	r5, [r6, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8009d4c:	f887 50a1 	strb.w	r5, [r7, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009d50:	f887 10a0 	strb.w	r1, [r7, #160]	; 0xa0
}
 8009d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(hltdc);
 8009d58:	2002      	movs	r0, #2
}
 8009d5a:	4770      	bx	lr
    tmp = 3;
 8009d5c:	2203      	movs	r2, #3
 8009d5e:	e7d6      	b.n	8009d0e <HAL_LTDC_ConfigLayer+0x132>
    tmp = 1;
 8009d60:	2201      	movs	r2, #1
 8009d62:	e7d4      	b.n	8009d0e <HAL_LTDC_ConfigLayer+0x132>
 8009d64:	fffff8f8 	.word	0xfffff8f8
 8009d68:	fffff800 	.word	0xfffff800

08009d6c <HAL_LTDC_SetAlpha>:
  __HAL_LOCK(hltdc);
 8009d6c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009d70:	2b01      	cmp	r3, #1
{
 8009d72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d76:	b083      	sub	sp, #12
  __HAL_LOCK(hltdc);
 8009d78:	f000 80b4 	beq.w	8009ee4 <HAL_LTDC_SetAlpha+0x178>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d7c:	01d7      	lsls	r7, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009d7e:	6806      	ldr	r6, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009d80:	2302      	movs	r3, #2
  pLayerCfg->Alpha = Alpha;
 8009d82:	2434      	movs	r4, #52	; 0x34
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d84:	3784      	adds	r7, #132	; 0x84
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8009d86:	f04f 0800 	mov.w	r8, #0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009d8a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d8e:	19f3      	adds	r3, r6, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009d90:	68f5      	ldr	r5, [r6, #12]
  pLayerCfg->Alpha = Alpha;
 8009d92:	fb04 0402 	mla	r4, r4, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d96:	f8d3 9004 	ldr.w	r9, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009d9a:	f3c5 4c0b 	ubfx	ip, r5, #16, #12
 8009d9e:	6be5      	ldr	r5, [r4, #60]	; 0x3c
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009da0:	f409 4970 	and.w	r9, r9, #61440	; 0xf000
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009da4:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
  pLayerCfg->Alpha = Alpha;
 8009da8:	64e1      	str	r1, [r4, #76]	; 0x4c
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009daa:	eb0c 0a05 	add.w	sl, ip, r5
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dae:	f8c3 9004 	str.w	r9, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009db2:	f10e 0b01 	add.w	fp, lr, #1
 8009db6:	f8d6 c00c 	ldr.w	ip, [r6, #12]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009dba:	f8d4 9044 	ldr.w	r9, [r4, #68]	; 0x44
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009dbe:	f3cc 4c0b 	ubfx	ip, ip, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16)) << 16);
 8009dc2:	9501      	str	r5, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009dc4:	6c25      	ldr	r5, [r4, #64]	; 0x40
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009dc6:	44dc      	add	ip, fp
 8009dc8:	ea4c 4c0a 	orr.w	ip, ip, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009dcc:	f105 0a01 	add.w	sl, r5, #1
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009dd0:	6d25      	ldr	r5, [r4, #80]	; 0x50
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16) + 1) | tmp);
 8009dd2:	f8c3 c004 	str.w	ip, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009dd6:	f8d6 b00c 	ldr.w	fp, [r6, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009dda:	f8d3 c008 	ldr.w	ip, [r3, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009dde:	f3cb 0b0a 	ubfx	fp, fp, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009de2:	f40c 4c70 	and.w	ip, ip, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16);
 8009de6:	44d9      	add	r9, fp
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009de8:	f8c3 c008 	str.w	ip, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009dec:	f8d6 c00c 	ldr.w	ip, [r6, #12]
 8009df0:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8009df4:	44e2      	add	sl, ip
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009df6:	f894 c068 	ldrb.w	ip, [r4, #104]	; 0x68
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009dfa:	ea4a 4909 	orr.w	r9, sl, r9, lsl #16
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8);
 8009dfe:	f894 a069 	ldrb.w	sl, [r4, #105]	; 0x69
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009e02:	ea4c 6c05 	orr.w	ip, ip, r5, lsl #24
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1) | tmp);  
 8009e06:	f8c3 9008 	str.w	r9, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009e0a:	ea4c 2c0a 	orr.w	ip, ip, sl, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16);
 8009e0e:	f894 906a 	ldrb.w	r9, [r4, #106]	; 0x6a
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e12:	f8d3 a010 	ldr.w	sl, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009e16:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e1a:	f8d4 9048 	ldr.w	r9, [r4, #72]	; 0x48
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e1e:	f02a 0a07 	bic.w	sl, sl, #7
 8009e22:	f8c3 a010 	str.w	sl, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e26:	f8c3 9010 	str.w	r9, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8009e2a:	f8d3 a018 	ldr.w	sl, [r3, #24]
 8009e2e:	f8c3 8018 	str.w	r8, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 8009e32:	f8c3 c018 	str.w	ip, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009e36:	f8d3 c014 	ldr.w	ip, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e3a:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8009f00 <HAL_LTDC_SetAlpha+0x194>
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009e3e:	f02c 0cff 	bic.w	ip, ip, #255	; 0xff
 8009e42:	f8c3 c014 	str.w	ip, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009e46:	6159      	str	r1, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e48:	69d9      	ldr	r1, [r3, #28]
 8009e4a:	ea01 0a0a 	and.w	sl, r1, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009e4e:	e9d4 1c15 	ldrd	r1, ip, [r4, #84]	; 0x54
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e52:	6de4      	ldr	r4, [r4, #92]	; 0x5c
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009e54:	ea41 010c 	orr.w	r1, r1, ip
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e58:	f8c3 a01c 	str.w	sl, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009e5c:	61d9      	str	r1, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009e5e:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8009e60:	f8c3 8028 	str.w	r8, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e64:	629c      	str	r4, [r3, #40]	; 0x28
  if(pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009e66:	f1b9 0f00 	cmp.w	r9, #0
 8009e6a:	d00c      	beq.n	8009e86 <HAL_LTDC_SetAlpha+0x11a>
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8009e6c:	f1b9 0f01 	cmp.w	r9, #1
 8009e70:	d03d      	beq.n	8009eee <HAL_LTDC_SetAlpha+0x182>
  else if((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8009e72:	f1a9 0102 	sub.w	r1, r9, #2
      (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8009e76:	2902      	cmp	r1, #2
 8009e78:	d902      	bls.n	8009e80 <HAL_LTDC_SetAlpha+0x114>
 8009e7a:	f1b9 0f07 	cmp.w	r9, #7
 8009e7e:	d139      	bne.n	8009ef4 <HAL_LTDC_SetAlpha+0x188>
    tmp = 2;
 8009e80:	f04f 0c02 	mov.w	ip, #2
 8009e84:	e001      	b.n	8009e8a <HAL_LTDC_SetAlpha+0x11e>
    tmp = 4;
 8009e86:	f04f 0c04 	mov.w	ip, #4
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009e8a:	9901      	ldr	r1, [sp, #4]
 8009e8c:	2434      	movs	r4, #52	; 0x34
 8009e8e:	eba1 050e 	sub.w	r5, r1, lr
 8009e92:	fb04 0202 	mla	r2, r4, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009e96:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009e98:	6e14      	ldr	r4, [r2, #96]	; 0x60
 8009e9a:	fb0c f505 	mul.w	r5, ip, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009e9e:	f001 21e0 	and.w	r1, r1, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009ea2:	f8d2 e064 	ldr.w	lr, [r2, #100]	; 0x64
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009ea6:	fb04 f40c 	mul.w	r4, r4, ip
 8009eaa:	3503      	adds	r5, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009eac:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009eae:	f04f 0c01 	mov.w	ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009eb2:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009eb6:	4911      	ldr	r1, [pc, #68]	; (8009efc <HAL_LTDC_SetAlpha+0x190>)
  __HAL_UNLOCK(hltdc);
 8009eb8:	2200      	movs	r2, #0
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3));
 8009eba:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009ebc:	6b1d      	ldr	r5, [r3, #48]	; 0x30
  return HAL_OK;
 8009ebe:	4614      	mov	r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009ec0:	4029      	ands	r1, r5
 8009ec2:	6319      	str	r1, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009ec4:	f8c3 e030 	str.w	lr, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009ec8:	59f3      	ldr	r3, [r6, r7]
 8009eca:	ea43 030c 	orr.w	r3, r3, ip
 8009ece:	51f3      	str	r3, [r6, r7]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009ed0:	f8c6 c024 	str.w	ip, [r6, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8009ed4:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009ed8:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
}
 8009edc:	4620      	mov	r0, r4
 8009ede:	b003      	add	sp, #12
 8009ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(hltdc);
 8009ee4:	2402      	movs	r4, #2
}
 8009ee6:	4620      	mov	r0, r4
 8009ee8:	b003      	add	sp, #12
 8009eea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 3;
 8009eee:	f04f 0c03 	mov.w	ip, #3
 8009ef2:	e7ca      	b.n	8009e8a <HAL_LTDC_SetAlpha+0x11e>
    tmp = 1;
 8009ef4:	f04f 0c01 	mov.w	ip, #1
 8009ef8:	e7c7      	b.n	8009e8a <HAL_LTDC_SetAlpha+0x11e>
 8009efa:	bf00      	nop
 8009efc:	fffff800 	.word	0xfffff800
 8009f00:	fffff8f8 	.word	0xfffff8f8

08009f04 <HAL_LTDC_GetState>:
  return hltdc->State;
 8009f04:	f890 00a1 	ldrb.w	r0, [r0, #161]	; 0xa1
}
 8009f08:	4770      	bx	lr
 8009f0a:	bf00      	nop

08009f0c <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8009f0c:	4a1b      	ldr	r2, [pc, #108]	; (8009f7c <HAL_PWREx_EnableOverDrive+0x70>)
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8009f0e:	4b1c      	ldr	r3, [pc, #112]	; (8009f80 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8009f10:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8009f12:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
{
 8009f16:	b530      	push	{r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8009f18:	6411      	str	r1, [r2, #64]	; 0x40
{
 8009f1a:	b083      	sub	sp, #12
  __HAL_RCC_PWR_CLK_ENABLE();
 8009f1c:	6c12      	ldr	r2, [r2, #64]	; 0x40

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8009f1e:	461c      	mov	r4, r3
  __HAL_RCC_PWR_CLK_ENABLE();
 8009f20:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8009f24:	9201      	str	r2, [sp, #4]
 8009f26:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8009f28:	681a      	ldr	r2, [r3, #0]
 8009f2a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8009f2e:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8009f30:	f7ff f9e6 	bl	8009300 <HAL_GetTick>
 8009f34:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8009f36:	e005      	b.n	8009f44 <HAL_PWREx_EnableOverDrive+0x38>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8009f38:	f7ff f9e2 	bl	8009300 <HAL_GetTick>
 8009f3c:	1b40      	subs	r0, r0, r5
 8009f3e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8009f42:	d817      	bhi.n	8009f74 <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8009f44:	6863      	ldr	r3, [r4, #4]
 8009f46:	03da      	lsls	r2, r3, #15
 8009f48:	d5f6      	bpl.n	8009f38 <HAL_PWREx_EnableOverDrive+0x2c>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8009f4a:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8009f4c:	4d0c      	ldr	r5, [pc, #48]	; (8009f80 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8009f4e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009f52:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8009f54:	f7ff f9d4 	bl	8009300 <HAL_GetTick>
 8009f58:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8009f5a:	e005      	b.n	8009f68 <HAL_PWREx_EnableOverDrive+0x5c>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8009f5c:	f7ff f9d0 	bl	8009300 <HAL_GetTick>
 8009f60:	1b00      	subs	r0, r0, r4
 8009f62:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8009f66:	d805      	bhi.n	8009f74 <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8009f68:	686b      	ldr	r3, [r5, #4]
 8009f6a:	039b      	lsls	r3, r3, #14
 8009f6c:	d5f6      	bpl.n	8009f5c <HAL_PWREx_EnableOverDrive+0x50>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8009f6e:	2000      	movs	r0, #0
}
 8009f70:	b003      	add	sp, #12
 8009f72:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 8009f74:	2003      	movs	r0, #3
}
 8009f76:	b003      	add	sp, #12
 8009f78:	bd30      	pop	{r4, r5, pc}
 8009f7a:	bf00      	nop
 8009f7c:	40023800 	.word	0x40023800
 8009f80:	40007000 	.word	0x40007000

08009f84 <HAL_RCC_OscConfig>:
{
  uint32_t tickstart;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009f84:	2800      	cmp	r0, #0
 8009f86:	f000 8134 	beq.w	800a1f2 <HAL_RCC_OscConfig+0x26e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f8a:	6803      	ldr	r3, [r0, #0]
{
 8009f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f90:	07dd      	lsls	r5, r3, #31
{
 8009f92:	b082      	sub	sp, #8
 8009f94:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f96:	d535      	bpl.n	800a004 <HAL_RCC_OscConfig+0x80>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8009f98:	49ab      	ldr	r1, [pc, #684]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 8009f9a:	688a      	ldr	r2, [r1, #8]
 8009f9c:	f002 020c 	and.w	r2, r2, #12
 8009fa0:	2a04      	cmp	r2, #4
 8009fa2:	f000 80fe 	beq.w	800a1a2 <HAL_RCC_OscConfig+0x21e>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009fa6:	688a      	ldr	r2, [r1, #8]
 8009fa8:	f002 020c 	and.w	r2, r2, #12
 8009fac:	2a08      	cmp	r2, #8
 8009fae:	f000 80f4 	beq.w	800a19a <HAL_RCC_OscConfig+0x216>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009fb2:	6863      	ldr	r3, [r4, #4]
 8009fb4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009fb8:	d010      	beq.n	8009fdc <HAL_RCC_OscConfig+0x58>
 8009fba:	2b00      	cmp	r3, #0
 8009fbc:	f000 811b 	beq.w	800a1f6 <HAL_RCC_OscConfig+0x272>
 8009fc0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009fc4:	4ba0      	ldr	r3, [pc, #640]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 8009fc6:	681a      	ldr	r2, [r3, #0]
 8009fc8:	f000 8162 	beq.w	800a290 <HAL_RCC_OscConfig+0x30c>
 8009fcc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8009fd0:	601a      	str	r2, [r3, #0]
 8009fd2:	681a      	ldr	r2, [r3, #0]
 8009fd4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009fd8:	601a      	str	r2, [r3, #0]
 8009fda:	e004      	b.n	8009fe6 <HAL_RCC_OscConfig+0x62>
 8009fdc:	4a9a      	ldr	r2, [pc, #616]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 8009fde:	6813      	ldr	r3, [r2, #0]
 8009fe0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009fe4:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8009fe6:	f7ff f98b 	bl	8009300 <HAL_GetTick>

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009fea:	4d97      	ldr	r5, [pc, #604]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
        tickstart = HAL_GetTick();
 8009fec:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009fee:	e005      	b.n	8009ffc <HAL_RCC_OscConfig+0x78>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009ff0:	f7ff f986 	bl	8009300 <HAL_GetTick>
 8009ff4:	1b80      	subs	r0, r0, r6
 8009ff6:	2864      	cmp	r0, #100	; 0x64
 8009ff8:	f200 80ee 	bhi.w	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009ffc:	682b      	ldr	r3, [r5, #0]
 8009ffe:	039a      	lsls	r2, r3, #14
 800a000:	d5f6      	bpl.n	8009ff0 <HAL_RCC_OscConfig+0x6c>
 800a002:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800a004:	079f      	lsls	r7, r3, #30
 800a006:	d442      	bmi.n	800a08e <HAL_RCC_OscConfig+0x10a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a008:	071a      	lsls	r2, r3, #28
 800a00a:	d517      	bpl.n	800a03c <HAL_RCC_OscConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800a00c:	6963      	ldr	r3, [r4, #20]
 800a00e:	2b00      	cmp	r3, #0
 800a010:	f000 80b0 	beq.w	800a174 <HAL_RCC_OscConfig+0x1f0>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800a014:	4b8c      	ldr	r3, [pc, #560]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a016:	6f5a      	ldr	r2, [r3, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a018:	461d      	mov	r5, r3
      __HAL_RCC_LSI_ENABLE();
 800a01a:	f042 0201 	orr.w	r2, r2, #1
 800a01e:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 800a020:	f7ff f96e 	bl	8009300 <HAL_GetTick>
 800a024:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a026:	e005      	b.n	800a034 <HAL_RCC_OscConfig+0xb0>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a028:	f7ff f96a 	bl	8009300 <HAL_GetTick>
 800a02c:	1b80      	subs	r0, r0, r6
 800a02e:	2802      	cmp	r0, #2
 800a030:	f200 80d2 	bhi.w	800a1d8 <HAL_RCC_OscConfig+0x254>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a034:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800a036:	079b      	lsls	r3, r3, #30
 800a038:	d5f6      	bpl.n	800a028 <HAL_RCC_OscConfig+0xa4>
 800a03a:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a03c:	075d      	lsls	r5, r3, #29
 800a03e:	d56b      	bpl.n	800a118 <HAL_RCC_OscConfig+0x194>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a040:	4b81      	ldr	r3, [pc, #516]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a042:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a044:	00d0      	lsls	r0, r2, #3
 800a046:	f100 80ed 	bmi.w	800a224 <HAL_RCC_OscConfig+0x2a0>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 800a04a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 800a04c:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800a04e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a052:	641a      	str	r2, [r3, #64]	; 0x40
 800a054:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a056:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a05a:	9301      	str	r3, [sp, #4]
 800a05c:	9b01      	ldr	r3, [sp, #4]
    }

    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800a05e:	4b7b      	ldr	r3, [pc, #492]	; (800a24c <HAL_RCC_OscConfig+0x2c8>)
 800a060:	681a      	ldr	r2, [r3, #0]
 800a062:	05d1      	lsls	r1, r2, #23
 800a064:	f140 80a7 	bpl.w	800a1b6 <HAL_RCC_OscConfig+0x232>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a068:	68a3      	ldr	r3, [r4, #8]
 800a06a:	2b01      	cmp	r3, #1
 800a06c:	d039      	beq.n	800a0e2 <HAL_RCC_OscConfig+0x15e>
 800a06e:	2b00      	cmp	r3, #0
 800a070:	f000 80da 	beq.w	800a228 <HAL_RCC_OscConfig+0x2a4>
 800a074:	2b05      	cmp	r3, #5
 800a076:	4b74      	ldr	r3, [pc, #464]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a078:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a07a:	f000 8111 	beq.w	800a2a0 <HAL_RCC_OscConfig+0x31c>
 800a07e:	f022 0201 	bic.w	r2, r2, #1
 800a082:	671a      	str	r2, [r3, #112]	; 0x70
 800a084:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a086:	f022 0204 	bic.w	r2, r2, #4
 800a08a:	671a      	str	r2, [r3, #112]	; 0x70
 800a08c:	e02e      	b.n	800a0ec <HAL_RCC_OscConfig+0x168>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800a08e:	4a6e      	ldr	r2, [pc, #440]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a090:	6891      	ldr	r1, [r2, #8]
 800a092:	f011 0f0c 	tst.w	r1, #12
 800a096:	d062      	beq.n	800a15e <HAL_RCC_OscConfig+0x1da>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a098:	6891      	ldr	r1, [r2, #8]
 800a09a:	f001 010c 	and.w	r1, r1, #12
 800a09e:	2908      	cmp	r1, #8
 800a0a0:	d05a      	beq.n	800a158 <HAL_RCC_OscConfig+0x1d4>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800a0a2:	68e3      	ldr	r3, [r4, #12]
 800a0a4:	2b00      	cmp	r3, #0
 800a0a6:	f000 80df 	beq.w	800a268 <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_HSI_ENABLE();
 800a0aa:	4b67      	ldr	r3, [pc, #412]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a0ac:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a0ae:	461d      	mov	r5, r3
        __HAL_RCC_HSI_ENABLE();
 800a0b0:	f042 0201 	orr.w	r2, r2, #1
 800a0b4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a0b6:	f7ff f923 	bl	8009300 <HAL_GetTick>
 800a0ba:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a0bc:	e005      	b.n	800a0ca <HAL_RCC_OscConfig+0x146>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a0be:	f7ff f91f 	bl	8009300 <HAL_GetTick>
 800a0c2:	1b80      	subs	r0, r0, r6
 800a0c4:	2802      	cmp	r0, #2
 800a0c6:	f200 8087 	bhi.w	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a0ca:	682b      	ldr	r3, [r5, #0]
 800a0cc:	0798      	lsls	r0, r3, #30
 800a0ce:	d5f6      	bpl.n	800a0be <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a0d0:	682b      	ldr	r3, [r5, #0]
 800a0d2:	6922      	ldr	r2, [r4, #16]
 800a0d4:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800a0d8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800a0dc:	602b      	str	r3, [r5, #0]
 800a0de:	6823      	ldr	r3, [r4, #0]
 800a0e0:	e792      	b.n	800a008 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a0e2:	4a59      	ldr	r2, [pc, #356]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a0e4:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800a0e6:	f043 0301 	orr.w	r3, r3, #1
 800a0ea:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800a0ec:	f7ff f908 	bl	8009300 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a0f0:	4e55      	ldr	r6, [pc, #340]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
      tickstart = HAL_GetTick();
 800a0f2:	4680      	mov	r8, r0
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a0f4:	f241 3788 	movw	r7, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a0f8:	e005      	b.n	800a106 <HAL_RCC_OscConfig+0x182>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a0fa:	f7ff f901 	bl	8009300 <HAL_GetTick>
 800a0fe:	eba0 0008 	sub.w	r0, r0, r8
 800a102:	42b8      	cmp	r0, r7
 800a104:	d868      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a106:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800a108:	079b      	lsls	r3, r3, #30
 800a10a:	d5f6      	bpl.n	800a0fa <HAL_RCC_OscConfig+0x176>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800a10c:	b125      	cbz	r5, 800a118 <HAL_RCC_OscConfig+0x194>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800a10e:	4a4e      	ldr	r2, [pc, #312]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a110:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a112:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a116:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a118:	69a3      	ldr	r3, [r4, #24]
 800a11a:	b1cb      	cbz	r3, 800a150 <HAL_RCC_OscConfig+0x1cc>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800a11c:	4a4a      	ldr	r2, [pc, #296]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a11e:	6891      	ldr	r1, [r2, #8]
 800a120:	f001 010c 	and.w	r1, r1, #12
 800a124:	2908      	cmp	r1, #8
 800a126:	d021      	beq.n	800a16c <HAL_RCC_OscConfig+0x1e8>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a128:	2b02      	cmp	r3, #2
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a12a:	6813      	ldr	r3, [r2, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a12c:	f000 80c0 	beq.w	800a2b0 <HAL_RCC_OscConfig+0x32c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a130:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a134:	4614      	mov	r4, r2
        __HAL_RCC_PLL_DISABLE();
 800a136:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a138:	f7ff f8e2 	bl	8009300 <HAL_GetTick>
 800a13c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a13e:	e004      	b.n	800a14a <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a140:	f7ff f8de 	bl	8009300 <HAL_GetTick>
 800a144:	1b40      	subs	r0, r0, r5
 800a146:	2802      	cmp	r0, #2
 800a148:	d846      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a14a:	6823      	ldr	r3, [r4, #0]
 800a14c:	019b      	lsls	r3, r3, #6
 800a14e:	d4f7      	bmi.n	800a140 <HAL_RCC_OscConfig+0x1bc>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 800a150:	2000      	movs	r0, #0
}
 800a152:	b002      	add	sp, #8
 800a154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a158:	6852      	ldr	r2, [r2, #4]
 800a15a:	0256      	lsls	r6, r2, #9
 800a15c:	d4a1      	bmi.n	800a0a2 <HAL_RCC_OscConfig+0x11e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a15e:	4a3a      	ldr	r2, [pc, #232]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a160:	6812      	ldr	r2, [r2, #0]
 800a162:	0795      	lsls	r5, r2, #30
 800a164:	d53c      	bpl.n	800a1e0 <HAL_RCC_OscConfig+0x25c>
 800a166:	68e2      	ldr	r2, [r4, #12]
 800a168:	2a01      	cmp	r2, #1
 800a16a:	d039      	beq.n	800a1e0 <HAL_RCC_OscConfig+0x25c>
    return HAL_ERROR;
 800a16c:	2001      	movs	r0, #1
}
 800a16e:	b002      	add	sp, #8
 800a170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800a174:	4b34      	ldr	r3, [pc, #208]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a176:	6f5a      	ldr	r2, [r3, #116]	; 0x74
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a178:	461d      	mov	r5, r3
      __HAL_RCC_LSI_DISABLE();
 800a17a:	f022 0201 	bic.w	r2, r2, #1
 800a17e:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 800a180:	f7ff f8be 	bl	8009300 <HAL_GetTick>
 800a184:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a186:	e004      	b.n	800a192 <HAL_RCC_OscConfig+0x20e>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a188:	f7ff f8ba 	bl	8009300 <HAL_GetTick>
 800a18c:	1b80      	subs	r0, r0, r6
 800a18e:	2802      	cmp	r0, #2
 800a190:	d822      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a192:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800a194:	079f      	lsls	r7, r3, #30
 800a196:	d4f7      	bmi.n	800a188 <HAL_RCC_OscConfig+0x204>
 800a198:	e74f      	b.n	800a03a <HAL_RCC_OscConfig+0xb6>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a19a:	684a      	ldr	r2, [r1, #4]
 800a19c:	0250      	lsls	r0, r2, #9
 800a19e:	f57f af08 	bpl.w	8009fb2 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a1a2:	4a29      	ldr	r2, [pc, #164]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a1a4:	6812      	ldr	r2, [r2, #0]
 800a1a6:	0391      	lsls	r1, r2, #14
 800a1a8:	f57f af2c 	bpl.w	800a004 <HAL_RCC_OscConfig+0x80>
 800a1ac:	6862      	ldr	r2, [r4, #4]
 800a1ae:	2a00      	cmp	r2, #0
 800a1b0:	f47f af28 	bne.w	800a004 <HAL_RCC_OscConfig+0x80>
 800a1b4:	e7da      	b.n	800a16c <HAL_RCC_OscConfig+0x1e8>
      PWR->CR1 |= PWR_CR1_DBP;
 800a1b6:	681a      	ldr	r2, [r3, #0]
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800a1b8:	461e      	mov	r6, r3
      PWR->CR1 |= PWR_CR1_DBP;
 800a1ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a1be:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800a1c0:	f7ff f89e 	bl	8009300 <HAL_GetTick>
 800a1c4:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800a1c6:	6833      	ldr	r3, [r6, #0]
 800a1c8:	05da      	lsls	r2, r3, #23
 800a1ca:	f53f af4d 	bmi.w	800a068 <HAL_RCC_OscConfig+0xe4>
        if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800a1ce:	f7ff f897 	bl	8009300 <HAL_GetTick>
 800a1d2:	1bc0      	subs	r0, r0, r7
 800a1d4:	2864      	cmp	r0, #100	; 0x64
 800a1d6:	d9f6      	bls.n	800a1c6 <HAL_RCC_OscConfig+0x242>
            return HAL_TIMEOUT;
 800a1d8:	2003      	movs	r0, #3
}
 800a1da:	b002      	add	sp, #8
 800a1dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a1e0:	4919      	ldr	r1, [pc, #100]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a1e2:	6920      	ldr	r0, [r4, #16]
 800a1e4:	680a      	ldr	r2, [r1, #0]
 800a1e6:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800a1ea:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800a1ee:	600a      	str	r2, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a1f0:	e70a      	b.n	800a008 <HAL_RCC_OscConfig+0x84>
    return HAL_ERROR;
 800a1f2:	2001      	movs	r0, #1
}
 800a1f4:	4770      	bx	lr
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a1f6:	4b14      	ldr	r3, [pc, #80]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
 800a1f8:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a1fa:	461d      	mov	r5, r3
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a1fc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800a200:	601a      	str	r2, [r3, #0]
 800a202:	681a      	ldr	r2, [r3, #0]
 800a204:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800a208:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a20a:	f7ff f879 	bl	8009300 <HAL_GetTick>
 800a20e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a210:	e004      	b.n	800a21c <HAL_RCC_OscConfig+0x298>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a212:	f7ff f875 	bl	8009300 <HAL_GetTick>
 800a216:	1b80      	subs	r0, r0, r6
 800a218:	2864      	cmp	r0, #100	; 0x64
 800a21a:	d8dd      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a21c:	682b      	ldr	r3, [r5, #0]
 800a21e:	039b      	lsls	r3, r3, #14
 800a220:	d4f7      	bmi.n	800a212 <HAL_RCC_OscConfig+0x28e>
 800a222:	e6ee      	b.n	800a002 <HAL_RCC_OscConfig+0x7e>
  FlagStatus pwrclkchanged = RESET;
 800a224:	2500      	movs	r5, #0
 800a226:	e71a      	b.n	800a05e <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a228:	4b07      	ldr	r3, [pc, #28]	; (800a248 <HAL_RCC_OscConfig+0x2c4>)
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a22a:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a22e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a230:	461e      	mov	r6, r3
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a232:	f022 0201 	bic.w	r2, r2, #1
 800a236:	671a      	str	r2, [r3, #112]	; 0x70
 800a238:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a23a:	f022 0204 	bic.w	r2, r2, #4
 800a23e:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
 800a240:	f7ff f85e 	bl	8009300 <HAL_GetTick>
 800a244:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a246:	e008      	b.n	800a25a <HAL_RCC_OscConfig+0x2d6>
 800a248:	40023800 	.word	0x40023800
 800a24c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a250:	f7ff f856 	bl	8009300 <HAL_GetTick>
 800a254:	1bc0      	subs	r0, r0, r7
 800a256:	4540      	cmp	r0, r8
 800a258:	d8be      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a25a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800a25c:	0798      	lsls	r0, r3, #30
 800a25e:	d4f7      	bmi.n	800a250 <HAL_RCC_OscConfig+0x2cc>
    if(pwrclkchanged == SET)
 800a260:	2d00      	cmp	r5, #0
 800a262:	f43f af59 	beq.w	800a118 <HAL_RCC_OscConfig+0x194>
 800a266:	e752      	b.n	800a10e <HAL_RCC_OscConfig+0x18a>
        __HAL_RCC_HSI_DISABLE();
 800a268:	4b2b      	ldr	r3, [pc, #172]	; (800a318 <HAL_RCC_OscConfig+0x394>)
 800a26a:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a26c:	461d      	mov	r5, r3
        __HAL_RCC_HSI_DISABLE();
 800a26e:	f022 0201 	bic.w	r2, r2, #1
 800a272:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a274:	f7ff f844 	bl	8009300 <HAL_GetTick>
 800a278:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a27a:	e004      	b.n	800a286 <HAL_RCC_OscConfig+0x302>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a27c:	f7ff f840 	bl	8009300 <HAL_GetTick>
 800a280:	1b80      	subs	r0, r0, r6
 800a282:	2802      	cmp	r0, #2
 800a284:	d8a8      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a286:	682b      	ldr	r3, [r5, #0]
 800a288:	0799      	lsls	r1, r3, #30
 800a28a:	d4f7      	bmi.n	800a27c <HAL_RCC_OscConfig+0x2f8>
 800a28c:	6823      	ldr	r3, [r4, #0]
 800a28e:	e6bb      	b.n	800a008 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a290:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800a294:	601a      	str	r2, [r3, #0]
 800a296:	681a      	ldr	r2, [r3, #0]
 800a298:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800a29c:	601a      	str	r2, [r3, #0]
 800a29e:	e6a2      	b.n	8009fe6 <HAL_RCC_OscConfig+0x62>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a2a0:	f042 0204 	orr.w	r2, r2, #4
 800a2a4:	671a      	str	r2, [r3, #112]	; 0x70
 800a2a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a2a8:	f042 0201 	orr.w	r2, r2, #1
 800a2ac:	671a      	str	r2, [r3, #112]	; 0x70
 800a2ae:	e71d      	b.n	800a0ec <HAL_RCC_OscConfig+0x168>
        __HAL_RCC_PLL_DISABLE();
 800a2b0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a2b4:	4615      	mov	r5, r2
        __HAL_RCC_PLL_DISABLE();
 800a2b6:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a2b8:	f7ff f822 	bl	8009300 <HAL_GetTick>
 800a2bc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a2be:	e004      	b.n	800a2ca <HAL_RCC_OscConfig+0x346>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a2c0:	f7ff f81e 	bl	8009300 <HAL_GetTick>
 800a2c4:	1b80      	subs	r0, r0, r6
 800a2c6:	2802      	cmp	r0, #2
 800a2c8:	d886      	bhi.n	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a2ca:	682b      	ldr	r3, [r5, #0]
 800a2cc:	0199      	lsls	r1, r3, #6
 800a2ce:	d4f7      	bmi.n	800a2c0 <HAL_RCC_OscConfig+0x33c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800a2d0:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800a2d4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800a2d6:	4313      	orrs	r3, r2
 800a2d8:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800a2dc:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a2e0:	4c0d      	ldr	r4, [pc, #52]	; (800a318 <HAL_RCC_OscConfig+0x394>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800a2e2:	0852      	lsrs	r2, r2, #1
 800a2e4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a2e8:	3a01      	subs	r2, #1
 800a2ea:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800a2ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a2f2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800a2f4:	682b      	ldr	r3, [r5, #0]
 800a2f6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a2fa:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800a2fc:	f7ff f800 	bl	8009300 <HAL_GetTick>
 800a300:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a302:	e005      	b.n	800a310 <HAL_RCC_OscConfig+0x38c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a304:	f7fe fffc 	bl	8009300 <HAL_GetTick>
 800a308:	1b40      	subs	r0, r0, r5
 800a30a:	2802      	cmp	r0, #2
 800a30c:	f63f af64 	bhi.w	800a1d8 <HAL_RCC_OscConfig+0x254>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a310:	6823      	ldr	r3, [r4, #0]
 800a312:	019a      	lsls	r2, r3, #6
 800a314:	d5f6      	bpl.n	800a304 <HAL_RCC_OscConfig+0x380>
 800a316:	e71b      	b.n	800a150 <HAL_RCC_OscConfig+0x1cc>
 800a318:	40023800 	.word	0x40023800

0800a31c <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800a31c:	b178      	cbz	r0, 800a33e <HAL_RCC_ClockConfig+0x22>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a31e:	4a5e      	ldr	r2, [pc, #376]	; (800a498 <HAL_RCC_ClockConfig+0x17c>)
 800a320:	6813      	ldr	r3, [r2, #0]
 800a322:	f003 030f 	and.w	r3, r3, #15
 800a326:	428b      	cmp	r3, r1
 800a328:	d20b      	bcs.n	800a342 <HAL_RCC_ClockConfig+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a32a:	6813      	ldr	r3, [r2, #0]
 800a32c:	f023 030f 	bic.w	r3, r3, #15
 800a330:	430b      	orrs	r3, r1
 800a332:	6013      	str	r3, [r2, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a334:	6813      	ldr	r3, [r2, #0]
 800a336:	f003 030f 	and.w	r3, r3, #15
 800a33a:	428b      	cmp	r3, r1
 800a33c:	d001      	beq.n	800a342 <HAL_RCC_ClockConfig+0x26>
    return HAL_ERROR;
 800a33e:	2001      	movs	r0, #1

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);

  return HAL_OK;
}
 800a340:	4770      	bx	lr
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a342:	6803      	ldr	r3, [r0, #0]
{
 800a344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a348:	079d      	lsls	r5, r3, #30
 800a34a:	d514      	bpl.n	800a376 <HAL_RCC_ClockConfig+0x5a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a34c:	075c      	lsls	r4, r3, #29
 800a34e:	d504      	bpl.n	800a35a <HAL_RCC_ClockConfig+0x3e>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a350:	4c52      	ldr	r4, [pc, #328]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a352:	68a2      	ldr	r2, [r4, #8]
 800a354:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800a358:	60a2      	str	r2, [r4, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a35a:	071a      	lsls	r2, r3, #28
 800a35c:	d504      	bpl.n	800a368 <HAL_RCC_ClockConfig+0x4c>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a35e:	4c4f      	ldr	r4, [pc, #316]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a360:	68a2      	ldr	r2, [r4, #8]
 800a362:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800a366:	60a2      	str	r2, [r4, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a368:	4c4c      	ldr	r4, [pc, #304]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a36a:	6885      	ldr	r5, [r0, #8]
 800a36c:	68a2      	ldr	r2, [r4, #8]
 800a36e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a372:	432a      	orrs	r2, r5
 800a374:	60a2      	str	r2, [r4, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a376:	07df      	lsls	r7, r3, #31
 800a378:	4604      	mov	r4, r0
 800a37a:	460d      	mov	r5, r1
 800a37c:	d521      	bpl.n	800a3c2 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a37e:	6842      	ldr	r2, [r0, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a380:	4b46      	ldr	r3, [pc, #280]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a382:	2a01      	cmp	r2, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a384:	681b      	ldr	r3, [r3, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a386:	d063      	beq.n	800a450 <HAL_RCC_ClockConfig+0x134>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800a388:	2a02      	cmp	r2, #2
 800a38a:	d078      	beq.n	800a47e <HAL_RCC_ClockConfig+0x162>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a38c:	0799      	lsls	r1, r3, #30
 800a38e:	d528      	bpl.n	800a3e2 <HAL_RCC_ClockConfig+0xc6>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a390:	4942      	ldr	r1, [pc, #264]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a392:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a396:	688b      	ldr	r3, [r1, #8]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a398:	460e      	mov	r6, r1
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a39a:	f023 0303 	bic.w	r3, r3, #3
 800a39e:	4313      	orrs	r3, r2
 800a3a0:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 800a3a2:	f7fe ffad 	bl	8009300 <HAL_GetTick>
 800a3a6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a3a8:	e004      	b.n	800a3b4 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a3aa:	f7fe ffa9 	bl	8009300 <HAL_GetTick>
 800a3ae:	1bc0      	subs	r0, r0, r7
 800a3b0:	4540      	cmp	r0, r8
 800a3b2:	d862      	bhi.n	800a47a <HAL_RCC_ClockConfig+0x15e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a3b4:	68b3      	ldr	r3, [r6, #8]
 800a3b6:	6862      	ldr	r2, [r4, #4]
 800a3b8:	f003 030c 	and.w	r3, r3, #12
 800a3bc:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a3c0:	d1f3      	bne.n	800a3aa <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800a3c2:	4a35      	ldr	r2, [pc, #212]	; (800a498 <HAL_RCC_ClockConfig+0x17c>)
 800a3c4:	6813      	ldr	r3, [r2, #0]
 800a3c6:	f003 030f 	and.w	r3, r3, #15
 800a3ca:	42ab      	cmp	r3, r5
 800a3cc:	d90c      	bls.n	800a3e8 <HAL_RCC_ClockConfig+0xcc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a3ce:	6813      	ldr	r3, [r2, #0]
 800a3d0:	f023 030f 	bic.w	r3, r3, #15
 800a3d4:	432b      	orrs	r3, r5
 800a3d6:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a3d8:	6813      	ldr	r3, [r2, #0]
 800a3da:	f003 030f 	and.w	r3, r3, #15
 800a3de:	42ab      	cmp	r3, r5
 800a3e0:	d002      	beq.n	800a3e8 <HAL_RCC_ClockConfig+0xcc>
    return HAL_ERROR;
 800a3e2:	2001      	movs	r0, #1
}
 800a3e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a3e8:	6823      	ldr	r3, [r4, #0]
 800a3ea:	075a      	lsls	r2, r3, #29
 800a3ec:	d506      	bpl.n	800a3fc <HAL_RCC_ClockConfig+0xe0>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a3ee:	492b      	ldr	r1, [pc, #172]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a3f0:	68e0      	ldr	r0, [r4, #12]
 800a3f2:	688a      	ldr	r2, [r1, #8]
 800a3f4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800a3f8:	4302      	orrs	r2, r0
 800a3fa:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a3fc:	071b      	lsls	r3, r3, #28
 800a3fe:	d507      	bpl.n	800a410 <HAL_RCC_ClockConfig+0xf4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800a400:	4a26      	ldr	r2, [pc, #152]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a402:	6921      	ldr	r1, [r4, #16]
 800a404:	6893      	ldr	r3, [r2, #8]
 800a406:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800a40a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a40e:	6093      	str	r3, [r2, #8]
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a410:	4922      	ldr	r1, [pc, #136]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a412:	688b      	ldr	r3, [r1, #8]
 800a414:	f003 030c 	and.w	r3, r3, #12
 800a418:	2b04      	cmp	r3, #4
 800a41a:	d01c      	beq.n	800a456 <HAL_RCC_ClockConfig+0x13a>
 800a41c:	2b08      	cmp	r3, #8
 800a41e:	d12a      	bne.n	800a476 <HAL_RCC_ClockConfig+0x15a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a420:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800a422:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a424:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a428:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800a42a:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 800a42e:	d129      	bne.n	800a484 <HAL_RCC_ClockConfig+0x168>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a430:	481b      	ldr	r0, [pc, #108]	; (800a4a0 <HAL_RCC_ClockConfig+0x184>)
 800a432:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a436:	fba1 0100 	umull	r0, r1, r1, r0
 800a43a:	f7fd f99f 	bl	800777c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1 ) *2);
 800a43e:	4b17      	ldr	r3, [pc, #92]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
 800a440:	685b      	ldr	r3, [r3, #4]
 800a442:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a446:	3301      	adds	r3, #1
 800a448:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800a44a:	fbb0 f3f3 	udiv	r3, r0, r3
 800a44e:	e003      	b.n	800a458 <HAL_RCC_ClockConfig+0x13c>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a450:	039e      	lsls	r6, r3, #14
 800a452:	d49d      	bmi.n	800a390 <HAL_RCC_ClockConfig+0x74>
 800a454:	e7c5      	b.n	800a3e2 <HAL_RCC_ClockConfig+0xc6>
      sysclockfreq = HSE_VALUE;
 800a456:	4b13      	ldr	r3, [pc, #76]	; (800a4a4 <HAL_RCC_ClockConfig+0x188>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a458:	4a10      	ldr	r2, [pc, #64]	; (800a49c <HAL_RCC_ClockConfig+0x180>)
  HAL_InitTick (TICK_INT_PRIORITY);
 800a45a:	2000      	movs	r0, #0
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a45c:	4c12      	ldr	r4, [pc, #72]	; (800a4a8 <HAL_RCC_ClockConfig+0x18c>)
 800a45e:	6892      	ldr	r2, [r2, #8]
 800a460:	4912      	ldr	r1, [pc, #72]	; (800a4ac <HAL_RCC_ClockConfig+0x190>)
 800a462:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800a466:	5ca2      	ldrb	r2, [r4, r2]
 800a468:	40d3      	lsrs	r3, r2
 800a46a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 800a46c:	f7fe ff02 	bl	8009274 <HAL_InitTick>
  return HAL_OK;
 800a470:	2000      	movs	r0, #0
}
 800a472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      sysclockfreq = HSI_VALUE;
 800a476:	4b0a      	ldr	r3, [pc, #40]	; (800a4a0 <HAL_RCC_ClockConfig+0x184>)
 800a478:	e7ee      	b.n	800a458 <HAL_RCC_ClockConfig+0x13c>
        return HAL_TIMEOUT;
 800a47a:	2003      	movs	r0, #3
 800a47c:	e7b2      	b.n	800a3e4 <HAL_RCC_ClockConfig+0xc8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a47e:	0198      	lsls	r0, r3, #6
 800a480:	d486      	bmi.n	800a390 <HAL_RCC_ClockConfig+0x74>
 800a482:	e7ae      	b.n	800a3e2 <HAL_RCC_ClockConfig+0xc6>
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a484:	4807      	ldr	r0, [pc, #28]	; (800a4a4 <HAL_RCC_ClockConfig+0x188>)
 800a486:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a48a:	2300      	movs	r3, #0
 800a48c:	fba1 0100 	umull	r0, r1, r1, r0
 800a490:	f7fd f974 	bl	800777c <__aeabi_uldivmod>
 800a494:	e7d3      	b.n	800a43e <HAL_RCC_ClockConfig+0x122>
 800a496:	bf00      	nop
 800a498:	40023c00 	.word	0x40023c00
 800a49c:	40023800 	.word	0x40023800
 800a4a0:	00f42400 	.word	0x00f42400
 800a4a4:	017d7840 	.word	0x017d7840
 800a4a8:	0801cff8 	.word	0x0801cff8
 800a4ac:	20000014 	.word	0x20000014

0800a4b0 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a4b0:	4916      	ldr	r1, [pc, #88]	; (800a50c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800a4b2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a4b4:	688b      	ldr	r3, [r1, #8]
 800a4b6:	f003 030c 	and.w	r3, r3, #12
 800a4ba:	2b04      	cmp	r3, #4
 800a4bc:	d01b      	beq.n	800a4f6 <HAL_RCC_GetSysClockFreq+0x46>
 800a4be:	2b08      	cmp	r3, #8
 800a4c0:	d117      	bne.n	800a4f2 <HAL_RCC_GetSysClockFreq+0x42>
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a4c2:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800a4c4:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a4c6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4ca:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800a4cc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 800a4d0:	d113      	bne.n	800a4fa <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4d2:	480f      	ldr	r0, [pc, #60]	; (800a510 <HAL_RCC_GetSysClockFreq+0x60>)
 800a4d4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a4d8:	fba1 0100 	umull	r0, r1, r1, r0
 800a4dc:	f7fd f94e 	bl	800777c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1 ) *2);
 800a4e0:	4b0a      	ldr	r3, [pc, #40]	; (800a50c <HAL_RCC_GetSysClockFreq+0x5c>)
 800a4e2:	685b      	ldr	r3, [r3, #4]
 800a4e4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a4e8:	3301      	adds	r3, #1
 800a4ea:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 800a4ec:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800a4f0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800a4f2:	4807      	ldr	r0, [pc, #28]	; (800a510 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800a4f4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSE_VALUE;
 800a4f6:	4807      	ldr	r0, [pc, #28]	; (800a514 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800a4f8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4fa:	4806      	ldr	r0, [pc, #24]	; (800a514 <HAL_RCC_GetSysClockFreq+0x64>)
 800a4fc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a500:	2300      	movs	r3, #0
 800a502:	fba1 0100 	umull	r0, r1, r1, r0
 800a506:	f7fd f939 	bl	800777c <__aeabi_uldivmod>
 800a50a:	e7e9      	b.n	800a4e0 <HAL_RCC_GetSysClockFreq+0x30>
 800a50c:	40023800 	.word	0x40023800
 800a510:	00f42400 	.word	0x00f42400
 800a514:	017d7840 	.word	0x017d7840

0800a518 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a518:	4b04      	ldr	r3, [pc, #16]	; (800a52c <HAL_RCC_GetPCLK1Freq+0x14>)
 800a51a:	4a05      	ldr	r2, [pc, #20]	; (800a530 <HAL_RCC_GetPCLK1Freq+0x18>)
 800a51c:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 800a51e:	4905      	ldr	r1, [pc, #20]	; (800a534 <HAL_RCC_GetPCLK1Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a520:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a524:	6808      	ldr	r0, [r1, #0]
 800a526:	5cd3      	ldrb	r3, [r2, r3]
}
 800a528:	40d8      	lsrs	r0, r3
 800a52a:	4770      	bx	lr
 800a52c:	40023800 	.word	0x40023800
 800a530:	0801d008 	.word	0x0801d008
 800a534:	20000014 	.word	0x20000014

0800a538 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800a538:	4b04      	ldr	r3, [pc, #16]	; (800a54c <HAL_RCC_GetPCLK2Freq+0x14>)
 800a53a:	4a05      	ldr	r2, [pc, #20]	; (800a550 <HAL_RCC_GetPCLK2Freq+0x18>)
 800a53c:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 800a53e:	4905      	ldr	r1, [pc, #20]	; (800a554 <HAL_RCC_GetPCLK2Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800a540:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800a544:	6808      	ldr	r0, [r1, #0]
 800a546:	5cd3      	ldrb	r3, [r2, r3]
}
 800a548:	40d8      	lsrs	r0, r3
 800a54a:	4770      	bx	lr
 800a54c:	40023800 	.word	0x40023800
 800a550:	0801d008 	.word	0x0801d008
 800a554:	20000014 	.word	0x20000014

0800a558 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a558:	6803      	ldr	r3, [r0, #0]
{
 800a55a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a55e:	f013 0601 	ands.w	r6, r3, #1
{
 800a562:	b083      	sub	sp, #12
 800a564:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a566:	d00b      	beq.n	800a580 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 800a568:	4ab8      	ldr	r2, [pc, #736]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a56a:	6891      	ldr	r1, [r2, #8]
 800a56c:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 800a570:	6091      	str	r1, [r2, #8]
 800a572:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800a574:	6891      	ldr	r1, [r2, #8]
 800a576:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 800a578:	fab6 f686 	clz	r6, r6
 800a57c:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 800a57e:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 800a580:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 800a584:	d010      	beq.n	800a5a8 <HAL_RCCEx_PeriphCLKConfig+0x50>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800a586:	49b1      	ldr	r1, [pc, #708]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a588:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 800a58a:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 800a58e:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800a592:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800a596:	ea42 0205 	orr.w	r2, r2, r5
 800a59a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 800a59e:	f000 81b0 	beq.w	800a902 <HAL_RCCEx_PeriphCLKConfig+0x3aa>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 800a5a2:	fab5 f585 	clz	r5, r5
 800a5a6:	096d      	lsrs	r5, r5, #5
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 800a5a8:	02d9      	lsls	r1, r3, #11
 800a5aa:	d510      	bpl.n	800a5ce <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800a5ac:	48a7      	ldr	r0, [pc, #668]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a5ae:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a5b0:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800a5b4:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800a5b8:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800a5bc:	ea42 0201 	orr.w	r2, r2, r1
 800a5c0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800a5c4:	f000 819b 	beq.w	800a8fe <HAL_RCCEx_PeriphCLKConfig+0x3a6>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 800a5c8:	2900      	cmp	r1, #0
 800a5ca:	bf08      	it	eq
 800a5cc:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 800a5ce:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 800a5d2:	bf18      	it	ne
 800a5d4:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a5d6:	069a      	lsls	r2, r3, #26
 800a5d8:	f100 8149 	bmi.w	800a86e <HAL_RCCEx_PeriphCLKConfig+0x316>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a5dc:	06d9      	lsls	r1, r3, #27
 800a5de:	d50c      	bpl.n	800a5fa <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800a5e0:	4a9a      	ldr	r2, [pc, #616]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a5e2:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800a5e6:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 800a5ea:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 800a5ee:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800a5f2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a5f4:	4301      	orrs	r1, r0
 800a5f6:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800a5fa:	045a      	lsls	r2, r3, #17
 800a5fc:	d508      	bpl.n	800a610 <HAL_RCCEx_PeriphCLKConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800a5fe:	4993      	ldr	r1, [pc, #588]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a600:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800a602:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a606:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800a60a:	4302      	orrs	r2, r0
 800a60c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 800a610:	041f      	lsls	r7, r3, #16
 800a612:	d508      	bpl.n	800a626 <HAL_RCCEx_PeriphCLKConfig+0xce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800a614:	498d      	ldr	r1, [pc, #564]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a616:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 800a618:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a61c:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 800a620:	4302      	orrs	r2, r0
 800a622:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800a626:	03d8      	lsls	r0, r3, #15
 800a628:	d508      	bpl.n	800a63c <HAL_RCCEx_PeriphCLKConfig+0xe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 800a62a:	4988      	ldr	r1, [pc, #544]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a62c:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a62e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a632:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800a636:	4302      	orrs	r2, r0
 800a638:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 800a63c:	0399      	lsls	r1, r3, #14
 800a63e:	d508      	bpl.n	800a652 <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 800a640:	4982      	ldr	r1, [pc, #520]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a642:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800a644:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a648:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800a64c:	4302      	orrs	r2, r0
 800a64e:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800a652:	065a      	lsls	r2, r3, #25
 800a654:	d508      	bpl.n	800a668 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800a656:	497d      	ldr	r1, [pc, #500]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a658:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a65a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a65e:	f022 0203 	bic.w	r2, r2, #3
 800a662:	4302      	orrs	r2, r0
 800a664:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800a668:	061f      	lsls	r7, r3, #24
 800a66a:	d508      	bpl.n	800a67e <HAL_RCCEx_PeriphCLKConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 800a66c:	4977      	ldr	r1, [pc, #476]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a66e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a670:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a674:	f022 020c 	bic.w	r2, r2, #12
 800a678:	4302      	orrs	r2, r0
 800a67a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 800a67e:	05d8      	lsls	r0, r3, #23
 800a680:	d508      	bpl.n	800a694 <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 800a682:	4972      	ldr	r1, [pc, #456]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a684:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a686:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a68a:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 800a68e:	4302      	orrs	r2, r0
 800a690:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800a694:	0599      	lsls	r1, r3, #22
 800a696:	d508      	bpl.n	800a6aa <HAL_RCCEx_PeriphCLKConfig+0x152>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 800a698:	496c      	ldr	r1, [pc, #432]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a69a:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800a69c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a6a0:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800a6a4:	4302      	orrs	r2, r0
 800a6a6:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 800a6aa:	055a      	lsls	r2, r3, #21
 800a6ac:	d508      	bpl.n	800a6c0 <HAL_RCCEx_PeriphCLKConfig+0x168>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 800a6ae:	4967      	ldr	r1, [pc, #412]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a6b0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800a6b2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a6b6:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800a6ba:	4302      	orrs	r2, r0
 800a6bc:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 800a6c0:	051f      	lsls	r7, r3, #20
 800a6c2:	d508      	bpl.n	800a6d6 <HAL_RCCEx_PeriphCLKConfig+0x17e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 800a6c4:	4961      	ldr	r1, [pc, #388]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a6c6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a6c8:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a6cc:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800a6d0:	4302      	orrs	r2, r0
 800a6d2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 800a6d6:	04d8      	lsls	r0, r3, #19
 800a6d8:	d508      	bpl.n	800a6ec <HAL_RCCEx_PeriphCLKConfig+0x194>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 800a6da:	495c      	ldr	r1, [pc, #368]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a6dc:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800a6de:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a6e2:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800a6e6:	4302      	orrs	r2, r0
 800a6e8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 800a6ec:	0499      	lsls	r1, r3, #18
 800a6ee:	d508      	bpl.n	800a702 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 800a6f0:	4956      	ldr	r1, [pc, #344]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a6f2:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800a6f4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a6f8:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800a6fc:	4302      	orrs	r2, r0
 800a6fe:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 800a702:	025a      	lsls	r2, r3, #9
 800a704:	d508      	bpl.n	800a718 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800a706:	4951      	ldr	r1, [pc, #324]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a708:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800a70a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a70e:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800a712:	4302      	orrs	r2, r0
 800a714:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800a718:	029f      	lsls	r7, r3, #10
 800a71a:	d50c      	bpl.n	800a736 <HAL_RCCEx_PeriphCLKConfig+0x1de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800a71c:	494b      	ldr	r1, [pc, #300]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a71e:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 800a720:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 800a724:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800a728:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 800a72c:	bf08      	it	eq
 800a72e:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800a730:	4302      	orrs	r2, r0
 800a732:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 800a736:	f013 0f08 	tst.w	r3, #8
 800a73a:	bf18      	it	ne
 800a73c:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 800a73e:	0358      	lsls	r0, r3, #13
 800a740:	d508      	bpl.n	800a754 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800a742:	4942      	ldr	r1, [pc, #264]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a744:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a746:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a74a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800a74e:	4302      	orrs	r2, r0
 800a750:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 800a754:	0219      	lsls	r1, r3, #8
 800a756:	d40b      	bmi.n	800a770 <HAL_RCCEx_PeriphCLKConfig+0x218>
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
 800a758:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800a75c:	d016      	beq.n	800a78c <HAL_RCCEx_PeriphCLKConfig+0x234>
 800a75e:	07f2      	lsls	r2, r6, #31
 800a760:	d414      	bmi.n	800a78c <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 800a762:	2d01      	cmp	r5, #1
 800a764:	f000 80d0 	beq.w	800a908 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800a768:	2000      	movs	r0, #0
}
 800a76a:	b003      	add	sp, #12
 800a76c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800a770:	4936      	ldr	r1, [pc, #216]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
  if((plli2sused == 1) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
 800a772:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800a776:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 800a77a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800a77e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 800a782:	ea42 0200 	orr.w	r2, r2, r0
 800a786:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  if((plli2sused == 1) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
 800a78a:	d1e8      	bne.n	800a75e <HAL_RCCEx_PeriphCLKConfig+0x206>
    __HAL_RCC_PLLI2S_DISABLE();
 800a78c:	4b2f      	ldr	r3, [pc, #188]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a78e:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a790:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_DISABLE();
 800a792:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800a796:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800a798:	f7fe fdb2 	bl	8009300 <HAL_GetTick>
 800a79c:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a79e:	e004      	b.n	800a7aa <HAL_RCCEx_PeriphCLKConfig+0x252>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800a7a0:	f7fe fdae 	bl	8009300 <HAL_GetTick>
 800a7a4:	1bc0      	subs	r0, r0, r7
 800a7a6:	2864      	cmp	r0, #100	; 0x64
 800a7a8:	d85d      	bhi.n	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a7aa:	6833      	ldr	r3, [r6, #0]
 800a7ac:	011b      	lsls	r3, r3, #4
 800a7ae:	d4f7      	bmi.n	800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x248>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 800a7b0:	6823      	ldr	r3, [r4, #0]
 800a7b2:	07df      	lsls	r7, r3, #31
 800a7b4:	d512      	bpl.n	800a7dc <HAL_RCCEx_PeriphCLKConfig+0x284>
 800a7b6:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a7b8:	b982      	cbnz	r2, 800a7dc <HAL_RCCEx_PeriphCLKConfig+0x284>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800a7ba:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800a7be:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 800a7c2:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 800a7c6:	6860      	ldr	r0, [r4, #4]
 800a7c8:	f007 6770 	and.w	r7, r7, #251658240	; 0xf000000
 800a7cc:	68a1      	ldr	r1, [r4, #8]
 800a7ce:	433a      	orrs	r2, r7
 800a7d0:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 800a7d4:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
 800a7d8:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 800a7dc:	031e      	lsls	r6, r3, #12
 800a7de:	f100 8111 	bmi.w	800aa04 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 800a7e2:	02d8      	lsls	r0, r3, #11
 800a7e4:	d504      	bpl.n	800a7f0 <HAL_RCCEx_PeriphCLKConfig+0x298>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 800a7e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a7e8:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 800a7ec:	f000 810f 	beq.w	800aa0e <HAL_RCCEx_PeriphCLKConfig+0x4b6>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800a7f0:	01d9      	lsls	r1, r3, #7
 800a7f2:	d511      	bpl.n	800a818 <HAL_RCCEx_PeriphCLKConfig+0x2c0>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800a7f4:	4e15      	ldr	r6, [pc, #84]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 800a7f6:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800a7f8:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a7fc:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 800a800:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 800a804:	6921      	ldr	r1, [r4, #16]
 800a806:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 800a80a:	433a      	orrs	r2, r7
 800a80c:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 800a810:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a814:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a818:	019a      	lsls	r2, r3, #6
 800a81a:	d50d      	bpl.n	800a838 <HAL_RCCEx_PeriphCLKConfig+0x2e0>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800a81c:	6923      	ldr	r3, [r4, #16]
 800a81e:	6862      	ldr	r2, [r4, #4]
 800a820:	041b      	lsls	r3, r3, #16
 800a822:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
 800a826:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a82a:	4a08      	ldr	r2, [pc, #32]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a82c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800a830:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800a834:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800a838:	4b04      	ldr	r3, [pc, #16]	; (800a84c <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800a83a:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a83c:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_ENABLE();
 800a83e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800a842:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800a844:	f7fe fd5c 	bl	8009300 <HAL_GetTick>
 800a848:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a84a:	e006      	b.n	800a85a <HAL_RCCEx_PeriphCLKConfig+0x302>
 800a84c:	40023800 	.word	0x40023800
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800a850:	f7fe fd56 	bl	8009300 <HAL_GetTick>
 800a854:	1bc0      	subs	r0, r0, r7
 800a856:	2864      	cmp	r0, #100	; 0x64
 800a858:	d805      	bhi.n	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a85a:	6833      	ldr	r3, [r6, #0]
 800a85c:	011b      	lsls	r3, r3, #4
 800a85e:	d5f7      	bpl.n	800a850 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if(pllsaiused == 1)
 800a860:	2d01      	cmp	r5, #1
 800a862:	d181      	bne.n	800a768 <HAL_RCCEx_PeriphCLKConfig+0x210>
 800a864:	e050      	b.n	800a908 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
        return HAL_TIMEOUT;
 800a866:	2003      	movs	r0, #3
}
 800a868:	b003      	add	sp, #12
 800a86a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800a86e:	4a87      	ldr	r2, [pc, #540]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
    PWR->CR1 |= PWR_CR1_DBP;
 800a870:	4b87      	ldr	r3, [pc, #540]	; (800aa90 <HAL_RCCEx_PeriphCLKConfig+0x538>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a872:	6c11      	ldr	r1, [r2, #64]	; 0x40
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800a874:	461f      	mov	r7, r3
    __HAL_RCC_PWR_CLK_ENABLE();
 800a876:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800a87a:	6411      	str	r1, [r2, #64]	; 0x40
 800a87c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800a87e:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800a882:	9201      	str	r2, [sp, #4]
 800a884:	9a01      	ldr	r2, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 800a886:	681a      	ldr	r2, [r3, #0]
 800a888:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a88c:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800a88e:	f7fe fd37 	bl	8009300 <HAL_GetTick>
 800a892:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800a894:	e005      	b.n	800a8a2 <HAL_RCCEx_PeriphCLKConfig+0x34a>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a896:	f7fe fd33 	bl	8009300 <HAL_GetTick>
 800a89a:	eba0 0008 	sub.w	r0, r0, r8
 800a89e:	2864      	cmp	r0, #100	; 0x64
 800a8a0:	d8e1      	bhi.n	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800a8a2:	683b      	ldr	r3, [r7, #0]
 800a8a4:	05db      	lsls	r3, r3, #23
 800a8a6:	d5f6      	bpl.n	800a896 <HAL_RCCEx_PeriphCLKConfig+0x33e>
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a8a8:	4a78      	ldr	r2, [pc, #480]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800a8aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a8ac:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a8ae:	f403 7040 	and.w	r0, r3, #768	; 0x300
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a8b2:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 800a8b6:	d011      	beq.n	800a8dc <HAL_RCCEx_PeriphCLKConfig+0x384>
 800a8b8:	4281      	cmp	r1, r0
 800a8ba:	d00f      	beq.n	800a8dc <HAL_RCCEx_PeriphCLKConfig+0x384>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a8bc:	6f11      	ldr	r1, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800a8be:	6f17      	ldr	r7, [r2, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a8c0:	f421 7140 	bic.w	r1, r1, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 800a8c4:	f447 3780 	orr.w	r7, r7, #65536	; 0x10000
 800a8c8:	6717      	str	r7, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 800a8ca:	6f17      	ldr	r7, [r2, #112]	; 0x70
 800a8cc:	f427 3780 	bic.w	r7, r7, #65536	; 0x10000
 800a8d0:	6717      	str	r7, [r2, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 800a8d2:	6711      	str	r1, [r2, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800a8d4:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a8d6:	07cf      	lsls	r7, r1, #31
 800a8d8:	f100 80c3 	bmi.w	800aa62 <HAL_RCCEx_PeriphCLKConfig+0x50a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a8dc:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 800a8e0:	f000 80b1 	beq.w	800aa46 <HAL_RCCEx_PeriphCLKConfig+0x4ee>
 800a8e4:	4969      	ldr	r1, [pc, #420]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800a8e6:	688a      	ldr	r2, [r1, #8]
 800a8e8:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a8ec:	608a      	str	r2, [r1, #8]
 800a8ee:	4a67      	ldr	r2, [pc, #412]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800a8f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a8f4:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a8f6:	430b      	orrs	r3, r1
 800a8f8:	6713      	str	r3, [r2, #112]	; 0x70
 800a8fa:	6823      	ldr	r3, [r4, #0]
 800a8fc:	e66e      	b.n	800a5dc <HAL_RCCEx_PeriphCLKConfig+0x84>
      plli2sused = 1;
 800a8fe:	2601      	movs	r6, #1
 800a900:	e665      	b.n	800a5ce <HAL_RCCEx_PeriphCLKConfig+0x76>
  uint32_t pllsaiused = 0;
 800a902:	2500      	movs	r5, #0
      plli2sused = 1;
 800a904:	2601      	movs	r6, #1
 800a906:	e64f      	b.n	800a5a8 <HAL_RCCEx_PeriphCLKConfig+0x50>
    __HAL_RCC_PLLSAI_DISABLE();
 800a908:	4b60      	ldr	r3, [pc, #384]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800a90a:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a90c:	461d      	mov	r5, r3
    __HAL_RCC_PLLSAI_DISABLE();
 800a90e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 800a912:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800a914:	f7fe fcf4 	bl	8009300 <HAL_GetTick>
 800a918:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a91a:	e004      	b.n	800a926 <HAL_RCCEx_PeriphCLKConfig+0x3ce>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800a91c:	f7fe fcf0 	bl	8009300 <HAL_GetTick>
 800a920:	1b80      	subs	r0, r0, r6
 800a922:	2864      	cmp	r0, #100	; 0x64
 800a924:	d89f      	bhi.n	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a926:	682b      	ldr	r3, [r5, #0]
 800a928:	009f      	lsls	r7, r3, #2
 800a92a:	d4f7      	bmi.n	800a91c <HAL_RCCEx_PeriphCLKConfig+0x3c4>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 800a92c:	6823      	ldr	r3, [r4, #0]
 800a92e:	031d      	lsls	r5, r3, #12
 800a930:	f100 8092 	bmi.w	800aa58 <HAL_RCCEx_PeriphCLKConfig+0x500>
 800a934:	02d8      	lsls	r0, r3, #11
 800a936:	d51d      	bpl.n	800a974 <HAL_RCCEx_PeriphCLKConfig+0x41c>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 800a938:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a93a:	b9da      	cbnz	r2, 800a974 <HAL_RCCEx_PeriphCLKConfig+0x41c>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800a93c:	4953      	ldr	r1, [pc, #332]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a93e:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800a940:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a944:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a948:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 800a94c:	69a0      	ldr	r0, [r4, #24]
 800a94e:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 800a952:	4332      	orrs	r2, r6
 800a954:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800a958:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800a95c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a960:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 800a964:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a966:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800a96a:	3801      	subs	r0, #1
 800a96c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800a970:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 800a974:	0299      	lsls	r1, r3, #10
 800a976:	d515      	bpl.n	800a9a4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
 800a978:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 800a97a:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
 800a97e:	d111      	bne.n	800a9a4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a980:	4942      	ldr	r1, [pc, #264]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800a982:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a984:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a988:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800a98c:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 800a990:	6a20      	ldr	r0, [r4, #32]
 800a992:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 800a996:	4332      	orrs	r2, r6
 800a998:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800a99c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a9a0:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a9a4:	071a      	lsls	r2, r3, #28
 800a9a6:	d519      	bpl.n	800a9dc <HAL_RCCEx_PeriphCLKConfig+0x484>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a9a8:	4a38      	ldr	r2, [pc, #224]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800a9aa:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a9ac:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800a9b0:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800a9b4:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800a9b8:	69e0      	ldr	r0, [r4, #28]
 800a9ba:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800a9be:	430b      	orrs	r3, r1
 800a9c0:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800a9c4:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800a9c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a9cc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800a9d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a9d2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a9d6:	430b      	orrs	r3, r1
 800a9d8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800a9dc:	4b2b      	ldr	r3, [pc, #172]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800a9de:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a9e0:	461c      	mov	r4, r3
    __HAL_RCC_PLLSAI_ENABLE();
 800a9e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a9e6:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800a9e8:	f7fe fc8a 	bl	8009300 <HAL_GetTick>
 800a9ec:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a9ee:	e005      	b.n	800a9fc <HAL_RCCEx_PeriphCLKConfig+0x4a4>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800a9f0:	f7fe fc86 	bl	8009300 <HAL_GetTick>
 800a9f4:	1b40      	subs	r0, r0, r5
 800a9f6:	2864      	cmp	r0, #100	; 0x64
 800a9f8:	f63f af35 	bhi.w	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a9fc:	6823      	ldr	r3, [r4, #0]
 800a9fe:	009b      	lsls	r3, r3, #2
 800aa00:	d5f6      	bpl.n	800a9f0 <HAL_RCCEx_PeriphCLKConfig+0x498>
 800aa02:	e6b1      	b.n	800a768 <HAL_RCCEx_PeriphCLKConfig+0x210>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 800aa04:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800aa06:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 800aa0a:	f47f aeea 	bne.w	800a7e2 <HAL_RCCEx_PeriphCLKConfig+0x28a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800aa0e:	4e1f      	ldr	r6, [pc, #124]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800aa10:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800aa12:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800aa16:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800aa1a:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 800aa1e:	68e1      	ldr	r1, [r4, #12]
 800aa20:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 800aa24:	433a      	orrs	r2, r7
 800aa26:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 800aa2a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 800aa2e:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800aa32:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
 800aa36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa38:	f021 011f 	bic.w	r1, r1, #31
 800aa3c:	3a01      	subs	r2, #1
 800aa3e:	430a      	orrs	r2, r1
 800aa40:	f8c6 208c 	str.w	r2, [r6, #140]	; 0x8c
 800aa44:	e6d4      	b.n	800a7f0 <HAL_RCCEx_PeriphCLKConfig+0x298>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800aa46:	4811      	ldr	r0, [pc, #68]	; (800aa8c <HAL_RCCEx_PeriphCLKConfig+0x534>)
 800aa48:	4912      	ldr	r1, [pc, #72]	; (800aa94 <HAL_RCCEx_PeriphCLKConfig+0x53c>)
 800aa4a:	6882      	ldr	r2, [r0, #8]
 800aa4c:	4019      	ands	r1, r3
 800aa4e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800aa52:	430a      	orrs	r2, r1
 800aa54:	6082      	str	r2, [r0, #8]
 800aa56:	e74a      	b.n	800a8ee <HAL_RCCEx_PeriphCLKConfig+0x396>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 800aa58:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800aa5a:	2a00      	cmp	r2, #0
 800aa5c:	f43f af6e 	beq.w	800a93c <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 800aa60:	e768      	b.n	800a934 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aa62:	4617      	mov	r7, r2
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aa64:	f241 3888 	movw	r8, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800aa68:	f7fe fc4a 	bl	8009300 <HAL_GetTick>
 800aa6c:	4681      	mov	r9, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aa6e:	e006      	b.n	800aa7e <HAL_RCCEx_PeriphCLKConfig+0x526>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aa70:	f7fe fc46 	bl	8009300 <HAL_GetTick>
 800aa74:	eba0 0009 	sub.w	r0, r0, r9
 800aa78:	4540      	cmp	r0, r8
 800aa7a:	f63f aef4 	bhi.w	800a866 <HAL_RCCEx_PeriphCLKConfig+0x30e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aa7e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800aa80:	0798      	lsls	r0, r3, #30
 800aa82:	d5f5      	bpl.n	800aa70 <HAL_RCCEx_PeriphCLKConfig+0x518>
 800aa84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aa86:	f403 7040 	and.w	r0, r3, #768	; 0x300
 800aa8a:	e727      	b.n	800a8dc <HAL_RCCEx_PeriphCLKConfig+0x384>
 800aa8c:	40023800 	.word	0x40023800
 800aa90:	40007000 	.word	0x40007000
 800aa94:	0ffffcff 	.word	0x0ffffcff

0800aa98 <HAL_SDRAM_MspInit>:
  UNUSED(hsdram);
 
  /* NOTE: This function Should not be modified, when the callback is needed,
            the HAL_SDRAM_MspInit could be implemented in the user file
   */ 
}
 800aa98:	4770      	bx	lr
 800aa9a:	bf00      	nop

0800aa9c <HAL_SDRAM_Init>:
  if(hsdram == NULL)
 800aa9c:	b1e8      	cbz	r0, 800aada <HAL_SDRAM_Init+0x3e>
{   
 800aa9e:	b538      	push	{r3, r4, r5, lr}
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800aaa0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800aaa4:	4604      	mov	r4, r0
 800aaa6:	460d      	mov	r5, r1
 800aaa8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800aaac:	b183      	cbz	r3, 800aad0 <HAL_SDRAM_Init+0x34>
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800aaae:	2302      	movs	r3, #2
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800aab0:	1d21      	adds	r1, r4, #4
 800aab2:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800aab4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800aab8:	f000 faea 	bl	800b090 <FMC_SDRAM_Init>
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800aabc:	4629      	mov	r1, r5
 800aabe:	e9d4 0200 	ldrd	r0, r2, [r4]
 800aac2:	f000 fb23 	bl	800b10c <FMC_SDRAM_Timing_Init>
  hsdram->State = HAL_SDRAM_STATE_READY;
 800aac6:	2301      	movs	r3, #1
  return HAL_OK;
 800aac8:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 800aaca:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800aace:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800aad0:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800aad4:	f7ff ffe0 	bl	800aa98 <HAL_SDRAM_MspInit>
 800aad8:	e7e9      	b.n	800aaae <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800aada:	2001      	movs	r0, #1
}
 800aadc:	4770      	bx	lr
 800aade:	bf00      	nop

0800aae0 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800aae0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800aae2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800aae6:	b2db      	uxtb	r3, r3
 800aae8:	2b02      	cmp	r3, #2
 800aaea:	d010      	beq.n	800ab0e <HAL_SDRAM_SendCommand+0x2e>
 800aaec:	4604      	mov	r4, r0
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800aaee:	2302      	movs	r3, #2
 800aaf0:	460d      	mov	r5, r1
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800aaf2:	6800      	ldr	r0, [r0, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800aaf4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800aaf8:	f000 fb5a 	bl	800b1b0 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800aafc:	682b      	ldr	r3, [r5, #0]
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  
  return HAL_OK;  
 800aafe:	2000      	movs	r0, #0
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ab00:	2b02      	cmp	r3, #2
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ab02:	bf0c      	ite	eq
 800ab04:	2305      	moveq	r3, #5
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ab06:	2301      	movne	r3, #1
 800ab08:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800ab0c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_BUSY;
 800ab0e:	4618      	mov	r0, r3
}
 800ab10:	bd38      	pop	{r3, r4, r5, pc}
 800ab12:	bf00      	nop

0800ab14 <HAL_SDRAM_ProgramRefreshRate>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ab14:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ab18:	b2db      	uxtb	r3, r3
 800ab1a:	2b02      	cmp	r3, #2
 800ab1c:	d00c      	beq.n	800ab38 <HAL_SDRAM_ProgramRefreshRate+0x24>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ab1e:	2302      	movs	r3, #2
{
 800ab20:	b510      	push	{r4, lr}
 800ab22:	4604      	mov	r4, r0
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800ab24:	6800      	ldr	r0, [r0, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ab26:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800ab2a:	f000 fb57 	bl	800b1dc <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800ab2e:	2301      	movs	r3, #1
  
  return HAL_OK;   
 800ab30:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 800ab32:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800ab36:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800ab38:	4618      	mov	r0, r3
}
 800ab3a:	4770      	bx	lr

0800ab3c <HAL_UART_Transmit>:
  * @param Size Amount of data to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800ab3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab40:	461e      	mov	r6, r3
  uint16_t* tmp;
  uint32_t tickstart = 0U;

  /* Check that a Tx process is not already ongoing */
  if(huart->gState == HAL_UART_STATE_READY)
 800ab42:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
{
 800ab46:	b082      	sub	sp, #8
  if(huart->gState == HAL_UART_STATE_READY)
 800ab48:	2b20      	cmp	r3, #32
 800ab4a:	d147      	bne.n	800abdc <HAL_UART_Transmit+0xa0>
 800ab4c:	4688      	mov	r8, r1
  {
    if((pData == NULL ) || (Size == 0U))
 800ab4e:	2900      	cmp	r1, #0
 800ab50:	d048      	beq.n	800abe4 <HAL_UART_Transmit+0xa8>
 800ab52:	fab2 f382 	clz	r3, r2
 800ab56:	9201      	str	r2, [sp, #4]
 800ab58:	095b      	lsrs	r3, r3, #5
 800ab5a:	2b00      	cmp	r3, #0
 800ab5c:	d142      	bne.n	800abe4 <HAL_UART_Transmit+0xa8>
    {
      return  HAL_ERROR;
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 800ab5e:	f890 1068 	ldrb.w	r1, [r0, #104]	; 0x68
 800ab62:	4605      	mov	r5, r0
 800ab64:	2901      	cmp	r1, #1
 800ab66:	d039      	beq.n	800abdc <HAL_UART_Transmit+0xa0>

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ab68:	66c3      	str	r3, [r0, #108]	; 0x6c
    __HAL_LOCK(huart);
 800ab6a:	2101      	movs	r1, #1
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ab6c:	2321      	movs	r3, #33	; 0x21
    __HAL_LOCK(huart);
 800ab6e:	f880 1068 	strb.w	r1, [r0, #104]	; 0x68
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ab72:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69

    /* Init tickstart for timeout managment*/
    tickstart = HAL_GetTick();
 800ab76:	f7fe fbc3 	bl	8009300 <HAL_GetTick>

    huart->TxXferSize = Size;
 800ab7a:	9a01      	ldr	r2, [sp, #4]
    tickstart = HAL_GetTick();
 800ab7c:	4607      	mov	r7, r0
 800ab7e:	682c      	ldr	r4, [r5, #0]
    huart->TxXferSize = Size;
 800ab80:	f8a5 2050 	strh.w	r2, [r5, #80]	; 0x50
    huart->TxXferCount = Size;
 800ab84:	f8a5 2052 	strh.w	r2, [r5, #82]	; 0x52
    while(huart->TxXferCount > 0U)
 800ab88:	f8b5 3052 	ldrh.w	r3, [r5, #82]	; 0x52
 800ab8c:	b29b      	uxth	r3, r3
 800ab8e:	b1c3      	cbz	r3, 800abc2 <HAL_UART_Transmit+0x86>
    {
      huart->TxXferCount--;
 800ab90:	f8b5 2052 	ldrh.w	r2, [r5, #82]	; 0x52
 800ab94:	3a01      	subs	r2, #1
 800ab96:	b292      	uxth	r2, r2
 800ab98:	f8a5 2052 	strh.w	r2, [r5, #82]	; 0x52
 800ab9c:	1c72      	adds	r2, r6, #1
 800ab9e:	d125      	bne.n	800abec <HAL_UART_Transmit+0xb0>
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800aba0:	69e2      	ldr	r2, [r4, #28]
 800aba2:	0613      	lsls	r3, r2, #24
 800aba4:	d5fc      	bpl.n	800aba0 <HAL_UART_Transmit+0x64>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800aba6:	68ab      	ldr	r3, [r5, #8]
 800aba8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800abac:	d03c      	beq.n	800ac28 <HAL_UART_Transmit+0xec>
        huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 800abae:	f898 3000 	ldrb.w	r3, [r8]
 800abb2:	f108 0801 	add.w	r8, r8, #1
 800abb6:	62a3      	str	r3, [r4, #40]	; 0x28
    while(huart->TxXferCount > 0U)
 800abb8:	f8b5 3052 	ldrh.w	r3, [r5, #82]	; 0x52
 800abbc:	b29b      	uxth	r3, r3
 800abbe:	2b00      	cmp	r3, #0
 800abc0:	d1e6      	bne.n	800ab90 <HAL_UART_Transmit+0x54>
 800abc2:	1c71      	adds	r1, r6, #1
 800abc4:	d139      	bne.n	800ac3a <HAL_UART_Transmit+0xfe>
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800abc6:	69e3      	ldr	r3, [r4, #28]
 800abc8:	065a      	lsls	r2, r3, #25
 800abca:	d5fc      	bpl.n	800abc6 <HAL_UART_Transmit+0x8a>
    __HAL_UNLOCK(huart);
 800abcc:	2300      	movs	r3, #0
    huart->gState = HAL_UART_STATE_READY;
 800abce:	2220      	movs	r2, #32
    return HAL_OK;
 800abd0:	4618      	mov	r0, r3
    huart->gState = HAL_UART_STATE_READY;
 800abd2:	f885 2069 	strb.w	r2, [r5, #105]	; 0x69
    __HAL_UNLOCK(huart);
 800abd6:	f885 3068 	strb.w	r3, [r5, #104]	; 0x68
    return HAL_OK;
 800abda:	e000      	b.n	800abde <HAL_UART_Transmit+0xa2>
    return HAL_BUSY;
 800abdc:	2002      	movs	r0, #2
}
 800abde:	b002      	add	sp, #8
 800abe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 800abe4:	2001      	movs	r0, #1
}
 800abe6:	b002      	add	sp, #8
 800abe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800abec:	69e3      	ldr	r3, [r4, #28]
 800abee:	0618      	lsls	r0, r3, #24
 800abf0:	d4d9      	bmi.n	800aba6 <HAL_UART_Transmit+0x6a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
    {
      if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 800abf2:	b12e      	cbz	r6, 800ac00 <HAL_UART_Transmit+0xc4>
 800abf4:	f7fe fb84 	bl	8009300 <HAL_GetTick>
 800abf8:	1bc0      	subs	r0, r0, r7
 800abfa:	682c      	ldr	r4, [r5, #0]
 800abfc:	4286      	cmp	r6, r0
 800abfe:	d8cd      	bhi.n	800ab9c <HAL_UART_Transmit+0x60>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800ac00:	6823      	ldr	r3, [r4, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);

        huart->gState = HAL_UART_STATE_READY;
 800ac02:	2220      	movs	r2, #32
        huart->RxState = HAL_UART_STATE_READY;

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 800ac04:	2100      	movs	r1, #0
      return HAL_TIMEOUT;
 800ac06:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800ac08:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800ac0c:	6023      	str	r3, [r4, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800ac0e:	68a3      	ldr	r3, [r4, #8]
 800ac10:	f023 0301 	bic.w	r3, r3, #1
 800ac14:	60a3      	str	r3, [r4, #8]
        huart->gState = HAL_UART_STATE_READY;
 800ac16:	f885 2069 	strb.w	r2, [r5, #105]	; 0x69
        __HAL_UNLOCK(huart);
 800ac1a:	f885 1068 	strb.w	r1, [r5, #104]	; 0x68
        huart->RxState = HAL_UART_STATE_READY;
 800ac1e:	f885 206a 	strb.w	r2, [r5, #106]	; 0x6a
}
 800ac22:	b002      	add	sp, #8
 800ac24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800ac28:	692b      	ldr	r3, [r5, #16]
 800ac2a:	2b00      	cmp	r3, #0
 800ac2c:	d1bf      	bne.n	800abae <HAL_UART_Transmit+0x72>
        huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 800ac2e:	f838 3b02 	ldrh.w	r3, [r8], #2
 800ac32:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800ac36:	62a3      	str	r3, [r4, #40]	; 0x28
        pData += 2;
 800ac38:	e7a6      	b.n	800ab88 <HAL_UART_Transmit+0x4c>
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800ac3a:	69e3      	ldr	r3, [r4, #28]
 800ac3c:	065b      	lsls	r3, r3, #25
 800ac3e:	d4c5      	bmi.n	800abcc <HAL_UART_Transmit+0x90>
      if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 800ac40:	2e00      	cmp	r6, #0
 800ac42:	d0dd      	beq.n	800ac00 <HAL_UART_Transmit+0xc4>
 800ac44:	f7fe fb5c 	bl	8009300 <HAL_GetTick>
 800ac48:	1bc0      	subs	r0, r0, r7
 800ac4a:	682c      	ldr	r4, [r5, #0]
 800ac4c:	4286      	cmp	r6, r0
 800ac4e:	d8b8      	bhi.n	800abc2 <HAL_UART_Transmit+0x86>
 800ac50:	e7d6      	b.n	800ac00 <HAL_UART_Transmit+0xc4>
 800ac52:	bf00      	nop

0800ac54 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800ac54:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800ac56:	07da      	lsls	r2, r3, #31
{
 800ac58:	b410      	push	{r4}
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800ac5a:	d506      	bpl.n	800ac6a <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800ac5c:	6801      	ldr	r1, [r0, #0]
 800ac5e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac60:	684a      	ldr	r2, [r1, #4]
 800ac62:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800ac66:	4322      	orrs	r2, r4
 800ac68:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800ac6a:	079c      	lsls	r4, r3, #30
 800ac6c:	d506      	bpl.n	800ac7c <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800ac6e:	6801      	ldr	r1, [r0, #0]
 800ac70:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800ac72:	684a      	ldr	r2, [r1, #4]
 800ac74:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800ac78:	4322      	orrs	r2, r4
 800ac7a:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800ac7c:	0759      	lsls	r1, r3, #29
 800ac7e:	d506      	bpl.n	800ac8e <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800ac80:	6801      	ldr	r1, [r0, #0]
 800ac82:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800ac84:	684a      	ldr	r2, [r1, #4]
 800ac86:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ac8a:	4322      	orrs	r2, r4
 800ac8c:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800ac8e:	071a      	lsls	r2, r3, #28
 800ac90:	d506      	bpl.n	800aca0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800ac92:	6801      	ldr	r1, [r0, #0]
 800ac94:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ac96:	684a      	ldr	r2, [r1, #4]
 800ac98:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ac9c:	4322      	orrs	r2, r4
 800ac9e:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800aca0:	06dc      	lsls	r4, r3, #27
 800aca2:	d506      	bpl.n	800acb2 <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800aca4:	6801      	ldr	r1, [r0, #0]
 800aca6:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800aca8:	688a      	ldr	r2, [r1, #8]
 800acaa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800acae:	4322      	orrs	r2, r4
 800acb0:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800acb2:	0699      	lsls	r1, r3, #26
 800acb4:	d506      	bpl.n	800acc4 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800acb6:	6801      	ldr	r1, [r0, #0]
 800acb8:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800acba:	688a      	ldr	r2, [r1, #8]
 800acbc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800acc0:	4322      	orrs	r2, r4
 800acc2:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800acc4:	065a      	lsls	r2, r3, #25
 800acc6:	d50a      	bpl.n	800acde <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800acc8:	6801      	ldr	r1, [r0, #0]
 800acca:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800accc:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800acce:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800acd2:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800acd6:	ea42 0204 	orr.w	r2, r2, r4
 800acda:	604a      	str	r2, [r1, #4]
    if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800acdc:	d00b      	beq.n	800acf6 <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800acde:	061b      	lsls	r3, r3, #24
 800ace0:	d506      	bpl.n	800acf0 <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800ace2:	6802      	ldr	r2, [r0, #0]
 800ace4:	6c81      	ldr	r1, [r0, #72]	; 0x48
 800ace6:	6853      	ldr	r3, [r2, #4]
 800ace8:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800acec:	430b      	orrs	r3, r1
 800acee:	6053      	str	r3, [r2, #4]
  }
}
 800acf0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800acf4:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800acf6:	684a      	ldr	r2, [r1, #4]
 800acf8:	6c44      	ldr	r4, [r0, #68]	; 0x44
 800acfa:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 800acfe:	4322      	orrs	r2, r4
 800ad00:	604a      	str	r2, [r1, #4]
 800ad02:	e7ec      	b.n	800acde <UART_AdvFeatureConfig+0x8a>

0800ad04 <HAL_UART_Init>:
  if(huart == NULL)
 800ad04:	2800      	cmp	r0, #0
 800ad06:	f000 8129 	beq.w	800af5c <HAL_UART_Init+0x258>
{
 800ad0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(huart->gState == HAL_UART_STATE_RESET)
 800ad0c:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 800ad10:	4604      	mov	r4, r0
 800ad12:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ad16:	2b00      	cmp	r3, #0
 800ad18:	d047      	beq.n	800adaa <HAL_UART_Init+0xa6>
  __HAL_UART_DISABLE(huart);
 800ad1a:	6823      	ldr	r3, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800ad1c:	2124      	movs	r1, #36	; 0x24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad1e:	6920      	ldr	r0, [r4, #16]
  huart->gState = HAL_UART_STATE_BUSY;
 800ad20:	f884 1069 	strb.w	r1, [r4, #105]	; 0x69
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad24:	68a2      	ldr	r2, [r4, #8]
  __HAL_UART_DISABLE(huart);
 800ad26:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad28:	4302      	orrs	r2, r0
 800ad2a:	6960      	ldr	r0, [r4, #20]
  __HAL_UART_DISABLE(huart);
 800ad2c:	f021 0101 	bic.w	r1, r1, #1
  MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 800ad30:	4dbb      	ldr	r5, [pc, #748]	; (800b020 <HAL_UART_Init+0x31c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad32:	4302      	orrs	r2, r0
 800ad34:	69e0      	ldr	r0, [r4, #28]
  __HAL_UART_DISABLE(huart);
 800ad36:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 800ad38:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad3a:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ad3c:	68e6      	ldr	r6, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 800ad3e:	400d      	ands	r5, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 800ad40:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 800ad42:	432a      	orrs	r2, r5
  tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 800ad44:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 800ad46:	601a      	str	r2, [r3, #0]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 800ad48:	ea41 0205 	orr.w	r2, r1, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ad4c:	6859      	ldr	r1, [r3, #4]
  UART_GETCLOCKSOURCE(huart, clocksource);
 800ad4e:	4db5      	ldr	r5, [pc, #724]	; (800b024 <HAL_UART_Init+0x320>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ad50:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
  UART_GETCLOCKSOURCE(huart, clocksource);
 800ad54:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ad56:	ea41 0106 	orr.w	r1, r1, r6
 800ad5a:	6059      	str	r1, [r3, #4]
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 800ad5c:	6899      	ldr	r1, [r3, #8]
 800ad5e:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 800ad62:	ea42 0201 	orr.w	r2, r2, r1
 800ad66:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 800ad68:	d024      	beq.n	800adb4 <HAL_UART_Init+0xb0>
 800ad6a:	4aaf      	ldr	r2, [pc, #700]	; (800b028 <HAL_UART_Init+0x324>)
 800ad6c:	4293      	cmp	r3, r2
 800ad6e:	d043      	beq.n	800adf8 <HAL_UART_Init+0xf4>
 800ad70:	4aae      	ldr	r2, [pc, #696]	; (800b02c <HAL_UART_Init+0x328>)
 800ad72:	4293      	cmp	r3, r2
 800ad74:	f000 80a2 	beq.w	800aebc <HAL_UART_Init+0x1b8>
 800ad78:	4aad      	ldr	r2, [pc, #692]	; (800b030 <HAL_UART_Init+0x32c>)
 800ad7a:	4293      	cmp	r3, r2
 800ad7c:	d045      	beq.n	800ae0a <HAL_UART_Init+0x106>
 800ad7e:	4aad      	ldr	r2, [pc, #692]	; (800b034 <HAL_UART_Init+0x330>)
 800ad80:	4293      	cmp	r3, r2
 800ad82:	f000 80b2 	beq.w	800aeea <HAL_UART_Init+0x1e6>
 800ad86:	4aac      	ldr	r2, [pc, #688]	; (800b038 <HAL_UART_Init+0x334>)
 800ad88:	4293      	cmp	r3, r2
 800ad8a:	f000 8134 	beq.w	800aff6 <HAL_UART_Init+0x2f2>
 800ad8e:	4aab      	ldr	r2, [pc, #684]	; (800b03c <HAL_UART_Init+0x338>)
 800ad90:	4293      	cmp	r3, r2
 800ad92:	f000 8163 	beq.w	800b05c <HAL_UART_Init+0x358>
 800ad96:	4aaa      	ldr	r2, [pc, #680]	; (800b040 <HAL_UART_Init+0x33c>)
 800ad98:	4293      	cmp	r3, r2
 800ad9a:	f000 8119 	beq.w	800afd0 <HAL_UART_Init+0x2cc>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ad9e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800ada2:	f000 8170 	beq.w	800b086 <HAL_UART_Init+0x382>
    return HAL_ERROR;
 800ada6:	2001      	movs	r0, #1
}
 800ada8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    huart->Lock = HAL_UNLOCKED;
 800adaa:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
    HAL_UART_MspInit(huart);
 800adae:	f001 f885 	bl	800bebc <HAL_UART_MspInit>
 800adb2:	e7b2      	b.n	800ad1a <HAL_UART_Init+0x16>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800adb4:	4aa3      	ldr	r2, [pc, #652]	; (800b044 <HAL_UART_Init+0x340>)
 800adb6:	49a4      	ldr	r1, [pc, #656]	; (800b048 <HAL_UART_Init+0x344>)
 800adb8:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800adbc:	f002 0203 	and.w	r2, r2, #3
 800adc0:	5c8a      	ldrb	r2, [r1, r2]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800adc2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800adc6:	d02f      	beq.n	800ae28 <HAL_UART_Init+0x124>
    switch (clocksource)
 800adc8:	2a08      	cmp	r2, #8
 800adca:	d8ec      	bhi.n	800ada6 <HAL_UART_Init+0xa2>
 800adcc:	a101      	add	r1, pc, #4	; (adr r1, 800add4 <HAL_UART_Init+0xd0>)
 800adce:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800add2:	bf00      	nop
 800add4:	0800aeb7 	.word	0x0800aeb7
 800add8:	0800ae51 	.word	0x0800ae51
 800addc:	0800aed9 	.word	0x0800aed9
 800ade0:	0800ada7 	.word	0x0800ada7
 800ade4:	0800af03 	.word	0x0800af03
 800ade8:	0800ada7 	.word	0x0800ada7
 800adec:	0800ada7 	.word	0x0800ada7
 800adf0:	0800ada7 	.word	0x0800ada7
 800adf4:	0800af09 	.word	0x0800af09
  UART_GETCLOCKSOURCE(huart, clocksource);
 800adf8:	f502 32fa 	add.w	r2, r2, #128000	; 0x1f400
 800adfc:	4993      	ldr	r1, [pc, #588]	; (800b04c <HAL_UART_Init+0x348>)
 800adfe:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800ae02:	f002 020c 	and.w	r2, r2, #12
 800ae06:	5c8a      	ldrb	r2, [r1, r2]
 800ae08:	e7db      	b.n	800adc2 <HAL_UART_Init+0xbe>
 800ae0a:	f502 32f6 	add.w	r2, r2, #125952	; 0x1ec00
 800ae0e:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800ae12:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 800ae16:	2a40      	cmp	r2, #64	; 0x40
 800ae18:	d070      	beq.n	800aefc <HAL_UART_Init+0x1f8>
 800ae1a:	d945      	bls.n	800aea8 <HAL_UART_Init+0x1a4>
 800ae1c:	2a80      	cmp	r2, #128	; 0x80
 800ae1e:	d058      	beq.n	800aed2 <HAL_UART_Init+0x1ce>
 800ae20:	2ac0      	cmp	r2, #192	; 0xc0
 800ae22:	f000 80a5 	beq.w	800af70 <HAL_UART_Init+0x26c>
 800ae26:	e7ba      	b.n	800ad9e <HAL_UART_Init+0x9a>
    switch (clocksource)
 800ae28:	2a08      	cmp	r2, #8
 800ae2a:	f200 812c 	bhi.w	800b086 <HAL_UART_Init+0x382>
 800ae2e:	e8df f012 	tbh	[pc, r2, lsl #1]
 800ae32:	00cc      	.short	0x00cc
 800ae34:	00c700b0 	.word	0x00c700b0
 800ae38:	00c4012a 	.word	0x00c4012a
 800ae3c:	012a012a 	.word	0x012a012a
 800ae40:	00a2012a 	.word	0x00a2012a
  UART_GETCLOCKSOURCE(huart, clocksource);
 800ae44:	2a00      	cmp	r2, #0
 800ae46:	d1aa      	bne.n	800ad9e <HAL_UART_Init+0x9a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ae48:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800ae4c:	f000 80a1 	beq.w	800af92 <HAL_UART_Init+0x28e>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 800ae50:	f7ff fb72 	bl	800a538 <HAL_RCC_GetPCLK2Freq>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 800ae54:	e9d4 3100 	ldrd	r3, r1, [r4]
 800ae58:	eb00 0251 	add.w	r2, r0, r1, lsr #1
 800ae5c:	fbb2 f2f1 	udiv	r2, r2, r1
 800ae60:	b292      	uxth	r2, r2
 800ae62:	60da      	str	r2, [r3, #12]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800ae64:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae66:	2a00      	cmp	r2, #0
 800ae68:	d157      	bne.n	800af1a <HAL_UART_Init+0x216>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800ae6a:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
  uint32_t tickstart = 0U;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ae6c:	2100      	movs	r1, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800ae6e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800ae72:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800ae74:	689a      	ldr	r2, [r3, #8]
 800ae76:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800ae7a:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 800ae7c:	681a      	ldr	r2, [r3, #0]
 800ae7e:	f042 0201 	orr.w	r2, r2, #1
 800ae82:	601a      	str	r2, [r3, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ae84:	66e1      	str	r1, [r4, #108]	; 0x6c

  /* Init tickstart for timeout managment*/
  tickstart = HAL_GetTick();
 800ae86:	f7fe fa3b 	bl	8009300 <HAL_GetTick>

  /* Check if the Transmitter is enabled */
  if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800ae8a:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800ae8c:	4606      	mov	r6, r0
  if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800ae8e:	681a      	ldr	r2, [r3, #0]
 800ae90:	0712      	lsls	r2, r2, #28
 800ae92:	d447      	bmi.n	800af24 <HAL_UART_Init+0x220>
      return HAL_TIMEOUT;
    }
  }

  /* Initialize the UART State */
  huart->gState= HAL_UART_STATE_READY;
 800ae94:	2220      	movs	r2, #32
  huart->RxState= HAL_UART_STATE_READY;

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800ae96:	2300      	movs	r3, #0
  huart->gState= HAL_UART_STATE_READY;
 800ae98:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69

  return HAL_OK;
 800ae9c:	4618      	mov	r0, r3
  huart->RxState= HAL_UART_STATE_READY;
 800ae9e:	f884 206a 	strb.w	r2, [r4, #106]	; 0x6a
  __HAL_UNLOCK(huart);
 800aea2:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
}
 800aea6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 800aea8:	2a00      	cmp	r2, #0
 800aeaa:	f47f af78 	bne.w	800ad9e <HAL_UART_Init+0x9a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800aeae:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800aeb2:	f000 808a 	beq.w	800afca <HAL_UART_Init+0x2c6>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 800aeb6:	f7ff fb2f 	bl	800a518 <HAL_RCC_GetPCLK1Freq>
 800aeba:	e7cb      	b.n	800ae54 <HAL_UART_Init+0x150>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800aebc:	f502 32f8 	add.w	r2, r2, #126976	; 0x1f000
 800aec0:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800aec4:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800aec8:	2a10      	cmp	r2, #16
 800aeca:	d017      	beq.n	800aefc <HAL_UART_Init+0x1f8>
 800aecc:	d9ec      	bls.n	800aea8 <HAL_UART_Init+0x1a4>
 800aece:	2a20      	cmp	r2, #32
 800aed0:	d170      	bne.n	800afb4 <HAL_UART_Init+0x2b0>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800aed2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800aed6:	d073      	beq.n	800afc0 <HAL_UART_Init+0x2bc>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 800aed8:	6861      	ldr	r1, [r4, #4]
 800aeda:	4a5d      	ldr	r2, [pc, #372]	; (800b050 <HAL_UART_Init+0x34c>)
 800aedc:	eb02 0251 	add.w	r2, r2, r1, lsr #1
 800aee0:	fbb2 f2f1 	udiv	r2, r2, r1
 800aee4:	b292      	uxth	r2, r2
 800aee6:	60da      	str	r2, [r3, #12]
 800aee8:	e7bc      	b.n	800ae64 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800aeea:	f502 32f4 	add.w	r2, r2, #124928	; 0x1e800
 800aeee:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800aef2:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800aef6:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800aefa:	d131      	bne.n	800af60 <HAL_UART_Init+0x25c>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800aefc:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800af00:	d05b      	beq.n	800afba <HAL_UART_Init+0x2b6>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 800af02:	f7ff fad5 	bl	800a4b0 <HAL_RCC_GetSysClockFreq>
 800af06:	e7a5      	b.n	800ae54 <HAL_UART_Init+0x150>
        huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 800af08:	6861      	ldr	r1, [r4, #4]
 800af0a:	084a      	lsrs	r2, r1, #1
 800af0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800af10:	fbb2 f2f1 	udiv	r2, r2, r1
 800af14:	b292      	uxth	r2, r2
 800af16:	60da      	str	r2, [r3, #12]
 800af18:	e7a4      	b.n	800ae64 <HAL_UART_Init+0x160>
    UART_AdvFeatureConfig(huart);
 800af1a:	4620      	mov	r0, r4
 800af1c:	f7ff fe9a 	bl	800ac54 <UART_AdvFeatureConfig>
 800af20:	6823      	ldr	r3, [r4, #0]
 800af22:	e7a2      	b.n	800ae6a <HAL_UART_Init+0x166>
      if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 800af24:	4f4b      	ldr	r7, [pc, #300]	; (800b054 <HAL_UART_Init+0x350>)
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800af26:	69dd      	ldr	r5, [r3, #28]
 800af28:	f415 1500 	ands.w	r5, r5, #2097152	; 0x200000
 800af2c:	d1b2      	bne.n	800ae94 <HAL_UART_Init+0x190>
      if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 800af2e:	f7fe f9e7 	bl	8009300 <HAL_GetTick>
 800af32:	1b80      	subs	r0, r0, r6
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800af34:	6823      	ldr	r3, [r4, #0]
      if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 800af36:	42b8      	cmp	r0, r7
 800af38:	d9f5      	bls.n	800af26 <HAL_UART_Init+0x222>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800af3a:	681a      	ldr	r2, [r3, #0]
        huart->gState = HAL_UART_STATE_READY;
 800af3c:	2120      	movs	r1, #32
      return HAL_TIMEOUT;
 800af3e:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800af40:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800af44:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800af46:	689a      	ldr	r2, [r3, #8]
 800af48:	f022 0201 	bic.w	r2, r2, #1
 800af4c:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 800af4e:	f884 1069 	strb.w	r1, [r4, #105]	; 0x69
        __HAL_UNLOCK(huart);
 800af52:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
        huart->RxState = HAL_UART_STATE_READY;
 800af56:	f884 106a 	strb.w	r1, [r4, #106]	; 0x6a
}
 800af5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
 800af5c:	2001      	movs	r0, #1
}
 800af5e:	4770      	bx	lr
  UART_GETCLOCKSOURCE(huart, clocksource);
 800af60:	d9a2      	bls.n	800aea8 <HAL_UART_Init+0x1a4>
 800af62:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800af66:	d0b4      	beq.n	800aed2 <HAL_UART_Init+0x1ce>
 800af68:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800af6c:	f47f af17 	bne.w	800ad9e <HAL_UART_Init+0x9a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800af70:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800af74:	d1c8      	bne.n	800af08 <HAL_UART_Init+0x204>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800af76:	6861      	ldr	r1, [r4, #4]
 800af78:	084a      	lsrs	r2, r1, #1
 800af7a:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 800af7e:	fbb2 f2f1 	udiv	r2, r2, r1
    brrtemp = usartdiv & 0xFFF0U;
 800af82:	f022 010f 	bic.w	r1, r2, #15
    brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800af86:	f3c2 0242 	ubfx	r2, r2, #1, #3
    brrtemp = usartdiv & 0xFFF0U;
 800af8a:	b289      	uxth	r1, r1
    huart->Instance->BRR = brrtemp;
 800af8c:	430a      	orrs	r2, r1
 800af8e:	60da      	str	r2, [r3, #12]
 800af90:	e768      	b.n	800ae64 <HAL_UART_Init+0x160>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 800af92:	f7ff fad1 	bl	800a538 <HAL_RCC_GetPCLK2Freq>
    huart->Instance->BRR = brrtemp;
 800af96:	e9d4 3100 	ldrd	r3, r1, [r4]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 800af9a:	084a      	lsrs	r2, r1, #1
 800af9c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800afa0:	fbb0 f0f1 	udiv	r0, r0, r1
    brrtemp = usartdiv & 0xFFF0U;
 800afa4:	f020 020f 	bic.w	r2, r0, #15
    brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800afa8:	f3c0 0042 	ubfx	r0, r0, #1, #3
    brrtemp = usartdiv & 0xFFF0U;
 800afac:	b292      	uxth	r2, r2
    huart->Instance->BRR = brrtemp;
 800afae:	4310      	orrs	r0, r2
 800afb0:	60d8      	str	r0, [r3, #12]
 800afb2:	e757      	b.n	800ae64 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800afb4:	2a30      	cmp	r2, #48	; 0x30
 800afb6:	d0db      	beq.n	800af70 <HAL_UART_Init+0x26c>
 800afb8:	e6f1      	b.n	800ad9e <HAL_UART_Init+0x9a>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 800afba:	f7ff fa79 	bl	800a4b0 <HAL_RCC_GetSysClockFreq>
 800afbe:	e7ea      	b.n	800af96 <HAL_UART_Init+0x292>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 800afc0:	6861      	ldr	r1, [r4, #4]
 800afc2:	4a25      	ldr	r2, [pc, #148]	; (800b058 <HAL_UART_Init+0x354>)
 800afc4:	eb02 0251 	add.w	r2, r2, r1, lsr #1
 800afc8:	e7d9      	b.n	800af7e <HAL_UART_Init+0x27a>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 800afca:	f7ff faa5 	bl	800a518 <HAL_RCC_GetPCLK1Freq>
 800afce:	e7e2      	b.n	800af96 <HAL_UART_Init+0x292>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800afd0:	f502 32de 	add.w	r2, r2, #113664	; 0x1bc00
 800afd4:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800afd8:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 800afdc:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800afe0:	d08c      	beq.n	800aefc <HAL_UART_Init+0x1f8>
 800afe2:	f67f af61 	bls.w	800aea8 <HAL_UART_Init+0x1a4>
 800afe6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800afea:	f43f af72 	beq.w	800aed2 <HAL_UART_Init+0x1ce>
 800afee:	f5b2 4f40 	cmp.w	r2, #49152	; 0xc000
 800aff2:	d0bd      	beq.n	800af70 <HAL_UART_Init+0x26c>
 800aff4:	e6d3      	b.n	800ad9e <HAL_UART_Init+0x9a>
 800aff6:	f502 3292 	add.w	r2, r2, #74752	; 0x12400
 800affa:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800affe:	f402 6240 	and.w	r2, r2, #3072	; 0xc00
 800b002:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b006:	f43f af79 	beq.w	800aefc <HAL_UART_Init+0x1f8>
 800b00a:	f67f af1b 	bls.w	800ae44 <HAL_UART_Init+0x140>
 800b00e:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 800b012:	f43f af5e 	beq.w	800aed2 <HAL_UART_Init+0x1ce>
 800b016:	f5b2 6f40 	cmp.w	r2, #3072	; 0xc00
 800b01a:	d0a9      	beq.n	800af70 <HAL_UART_Init+0x26c>
 800b01c:	e6bf      	b.n	800ad9e <HAL_UART_Init+0x9a>
 800b01e:	bf00      	nop
 800b020:	efff69f3 	.word	0xefff69f3
 800b024:	40011000 	.word	0x40011000
 800b028:	40004400 	.word	0x40004400
 800b02c:	40004800 	.word	0x40004800
 800b030:	40004c00 	.word	0x40004c00
 800b034:	40005000 	.word	0x40005000
 800b038:	40011400 	.word	0x40011400
 800b03c:	40007800 	.word	0x40007800
 800b040:	40007c00 	.word	0x40007c00
 800b044:	40023800 	.word	0x40023800
 800b048:	08011f70 	.word	0x08011f70
 800b04c:	08011f74 	.word	0x08011f74
 800b050:	00f42400 	.word	0x00f42400
 800b054:	01fffffe 	.word	0x01fffffe
 800b058:	01e84800 	.word	0x01e84800
 800b05c:	f502 32e0 	add.w	r2, r2, #114688	; 0x1c000
 800b060:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 800b064:	f402 5240 	and.w	r2, r2, #12288	; 0x3000
 800b068:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800b06c:	f43f af46 	beq.w	800aefc <HAL_UART_Init+0x1f8>
 800b070:	f67f af1a 	bls.w	800aea8 <HAL_UART_Init+0x1a4>
 800b074:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b078:	f43f af2b 	beq.w	800aed2 <HAL_UART_Init+0x1ce>
 800b07c:	f5b2 5f40 	cmp.w	r2, #12288	; 0x3000
 800b080:	f43f af76 	beq.w	800af70 <HAL_UART_Init+0x26c>
 800b084:	e68b      	b.n	800ad9e <HAL_UART_Init+0x9a>
    huart->Instance->BRR = brrtemp;
 800b086:	2200      	movs	r2, #0
    return HAL_ERROR;
 800b088:	2001      	movs	r0, #1
    huart->Instance->BRR = brrtemp;
 800b08a:	60da      	str	r2, [r3, #12]
}
 800b08c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b08e:	bf00      	nop

0800b090 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800b090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800b094:	680f      	ldr	r7, [r1, #0]
 800b096:	f8d1 e024 	ldr.w	lr, [r1, #36]	; 0x24
 800b09a:	2f01      	cmp	r7, #1
 800b09c:	e9d1 3207 	ldrd	r3, r2, [r1, #28]
 800b0a0:	e9d1 4801 	ldrd	r4, r8, [r1, #4]
 800b0a4:	e9d1 c603 	ldrd	ip, r6, [r1, #12]
 800b0a8:	e9d1 5105 	ldrd	r5, r1, [r1, #20]
 800b0ac:	d012      	beq.n	800b0d4 <FMC_SDRAM_Init+0x44>
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP   | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0ae:	431a      	orrs	r2, r3
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800b0b0:	4f15      	ldr	r7, [pc, #84]	; (800b108 <FMC_SDRAM_Init+0x78>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800b0b2:	6803      	ldr	r3, [r0, #0]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0b4:	ea42 020e 	orr.w	r2, r2, lr
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800b0b8:	401f      	ands	r7, r3
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0ba:	4322      	orrs	r2, r4
 800b0bc:	ea42 0308 	orr.w	r3, r2, r8
 800b0c0:	ea43 030c 	orr.w	r3, r3, ip
 800b0c4:	4333      	orrs	r3, r6
 800b0c6:	432b      	orrs	r3, r5
 800b0c8:	430b      	orrs	r3, r1
 800b0ca:	433b      	orrs	r3, r7
                        Init->WriteProtection    |\
                        Init->SDClockPeriod      |\
                        Init->ReadBurst          |\
                        Init->ReadPipeDelay
                        );                                      
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800b0cc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }
  
  return HAL_OK;
}
 800b0ce:	2000      	movs	r0, #0
 800b0d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0d4:	ea44 0408 	orr.w	r4, r4, r8
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800b0d8:	431a      	orrs	r2, r3
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800b0da:	6807      	ldr	r7, [r0, #0]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0dc:	ea44 030c 	orr.w	r3, r4, ip
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800b0e0:	f8d0 c004 	ldr.w	ip, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800b0e4:	4c08      	ldr	r4, [pc, #32]	; (800b108 <FMC_SDRAM_Init+0x78>)
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800b0e6:	ea42 020e 	orr.w	r2, r2, lr
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0ea:	4333      	orrs	r3, r6
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800b0ec:	f427 46f8 	bic.w	r6, r7, #31744	; 0x7c00
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800b0f0:	ea0c 0404 	and.w	r4, ip, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0f4:	432b      	orrs	r3, r5
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800b0f6:	4332      	orrs	r2, r6
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0f8:	430b      	orrs	r3, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800b0fa:	6002      	str	r2, [r0, #0]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800b0fc:	4323      	orrs	r3, r4
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800b0fe:	6043      	str	r3, [r0, #4]
}
 800b100:	2000      	movs	r0, #0
 800b102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b106:	bf00      	nop
 800b108:	ffff8000 	.word	0xffff8000

0800b10c <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800b10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b110:	690b      	ldr	r3, [r1, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800b112:	2a01      	cmp	r2, #1
 800b114:	68cf      	ldr	r7, [r1, #12]
 800b116:	694e      	ldr	r6, [r1, #20]
 800b118:	f103 33ff 	add.w	r3, r3, #4294967295
 800b11c:	684d      	ldr	r5, [r1, #4]
 800b11e:	f107 37ff 	add.w	r7, r7, #4294967295
 800b122:	688c      	ldr	r4, [r1, #8]
 800b124:	f106 36ff 	add.w	r6, r6, #4294967295
 800b128:	f8d1 c018 	ldr.w	ip, [r1, #24]
 800b12c:	f105 35ff 	add.w	r5, r5, #4294967295
 800b130:	6809      	ldr	r1, [r1, #0]
 800b132:	f104 34ff 	add.w	r4, r4, #4294967295
 800b136:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b13a:	ea4f 3707 	mov.w	r7, r7, lsl #12
 800b13e:	f101 38ff 	add.w	r8, r1, #4294967295
 800b142:	ea4f 5606 	mov.w	r6, r6, lsl #20
 800b146:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800b14a:	ea4f 2104 	mov.w	r1, r4, lsl #8
 800b14e:	ea4f 4e03 	mov.w	lr, r3, lsl #16
 800b152:	ea4f 6c0c 	mov.w	ip, ip, lsl #24
 800b156:	d012      	beq.n	800b17e <FMC_SDRAM_Timing_Init+0x72>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b158:	ea47 0206 	orr.w	r2, r7, r6
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800b15c:	6884      	ldr	r4, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b15e:	ea42 0208 	orr.w	r2, r2, r8
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800b162:	f004 4470 	and.w	r4, r4, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b166:	ea42 0305 	orr.w	r3, r2, r5
 800b16a:	430b      	orrs	r3, r1
 800b16c:	ea43 030e 	orr.w	r3, r3, lr
 800b170:	ea43 030c 	orr.w	r3, r3, ip
 800b174:	4323      	orrs	r3, r4
                       (((Timing->SelfRefreshTime)-1) << 8)      |\
                       (((Timing->RowCycleDelay)-1) << 12)       |\
                       (((Timing->WriteRecoveryTime)-1) <<16)    |\
                       (((Timing->RPDelay)-1) << 20)             |\
                       (((Timing->RCDDelay)-1) << 24));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800b176:	6083      	str	r3, [r0, #8]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  
  return HAL_OK;
}
 800b178:	2000      	movs	r0, #0
 800b17a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b17e:	4329      	orrs	r1, r5
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1) << 12)       |\
 800b180:	ea47 0206 	orr.w	r2, r7, r6
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800b184:	6885      	ldr	r5, [r0, #8]
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b186:	ea41 0108 	orr.w	r1, r1, r8
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800b18a:	68c4      	ldr	r4, [r0, #12]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800b18c:	4e07      	ldr	r6, [pc, #28]	; (800b1ac <FMC_SDRAM_Timing_Init+0xa0>)
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b18e:	ea41 030e 	orr.w	r3, r1, lr
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800b192:	f004 4470 	and.w	r4, r4, #4026531840	; 0xf0000000
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800b196:	402e      	ands	r6, r5
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b198:	ea43 030c 	orr.w	r3, r3, ip
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1) << 12)       |\
 800b19c:	4316      	orrs	r6, r2
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 800b19e:	4323      	orrs	r3, r4
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800b1a0:	6086      	str	r6, [r0, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800b1a2:	60c3      	str	r3, [r0, #12]
}
 800b1a4:	2000      	movs	r0, #0
 800b1a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1aa:	bf00      	nop
 800b1ac:	ff0f0fff 	.word	0xff0f0fff

0800b1b0 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b1b0:	b430      	push	{r4, r5}
  __IO uint32_t tmpr = 0;
 800b1b2:	2200      	movs	r2, #0
{
 800b1b4:	b082      	sub	sp, #8
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800b1b6:	684d      	ldr	r5, [r1, #4]
{
 800b1b8:	4604      	mov	r4, r0
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800b1ba:	680b      	ldr	r3, [r1, #0]
                    );
    
  Device->SDCMR = tmpr;
  
  return HAL_OK;  
}
 800b1bc:	4610      	mov	r0, r2
  __IO uint32_t tmpr = 0;
 800b1be:	9201      	str	r2, [sp, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800b1c0:	432b      	orrs	r3, r5
                    (((Command->AutoRefreshNumber)-1) << 5) |\
 800b1c2:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800b1c6:	ea43 2345 	orr.w	r3, r3, r5, lsl #9
                    (((Command->AutoRefreshNumber)-1) << 5) |\
 800b1ca:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800b1cc:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b1d0:	9301      	str	r3, [sp, #4]
  Device->SDCMR = tmpr;
 800b1d2:	9b01      	ldr	r3, [sp, #4]
 800b1d4:	6123      	str	r3, [r4, #16]
}
 800b1d6:	b002      	add	sp, #8
 800b1d8:	bc30      	pop	{r4, r5}
 800b1da:	4770      	bx	lr

0800b1dc <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance  
  * @param  RefreshRate The SDRAM refresh rate value.       
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 800b1dc:	4602      	mov	r2, r0
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1);
  
  return HAL_OK;   
}
 800b1de:	2000      	movs	r0, #0
  Device->SDRTR |= (RefreshRate<<1);
 800b1e0:	6953      	ldr	r3, [r2, #20]
 800b1e2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800b1e6:	6151      	str	r1, [r2, #20]
}
 800b1e8:	4770      	bx	lr
 800b1ea:	bf00      	nop

0800b1ec <_Z8printLogPKc>:
#include "profile.h"

void printLog(const char *s) {
 800b1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	static int is_initialized = 0;
	if (!is_initialized) {
 800b1f0:	4d11      	ldr	r5, [pc, #68]	; (800b238 <_Z8printLogPKc+0x4c>)
void printLog(const char *s) {
 800b1f2:	4604      	mov	r4, r0
	if (!is_initialized) {
 800b1f4:	682b      	ldr	r3, [r5, #0]
 800b1f6:	b99b      	cbnz	r3, 800b220 <_Z8printLogPKc+0x34>
		UART.Instance = USART1;
 800b1f8:	4a10      	ldr	r2, [pc, #64]	; (800b23c <_Z8printLogPKc+0x50>)
		UART.Init.BaudRate = 115200;
		UART.Init.WordLength = UART_WORDLENGTH_8B;
		UART.Init.StopBits = UART_STOPBITS_1;
		UART.Init.Parity = UART_PARITY_NONE;
		UART.Init.Mode = UART_MODE_TX_RX;
 800b1fa:	210c      	movs	r1, #12
		UART.Init.BaudRate = 115200;
 800b1fc:	f44f 36e1 	mov.w	r6, #115200	; 0x1c200
		UART.Instance = USART1;
 800b200:	4f0f      	ldr	r7, [pc, #60]	; (800b240 <_Z8printLogPKc+0x54>)
		UART.Init.HwFlowCtl = UART_HWCONTROL_NONE;
		UART.Init.OverSampling = UART_OVERSAMPLING_16;
		UART.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
		UART.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
		if (HAL_UART_Init(&UART) != HAL_OK) {
 800b202:	4610      	mov	r0, r2
		UART.Init.Parity = UART_PARITY_NONE;
 800b204:	6113      	str	r3, [r2, #16]
		UART.Init.Mode = UART_MODE_TX_RX;
 800b206:	6151      	str	r1, [r2, #20]
		UART.Init.StopBits = UART_STOPBITS_1;
 800b208:	e9c2 3302 	strd	r3, r3, [r2, #8]
		UART.Init.OverSampling = UART_OVERSAMPLING_16;
 800b20c:	e9c2 3306 	strd	r3, r3, [r2, #24]
		UART.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800b210:	e9c2 3308 	strd	r3, r3, [r2, #32]
		UART.Init.BaudRate = 115200;
 800b214:	e9c2 7600 	strd	r7, r6, [r2]
		if (HAL_UART_Init(&UART) != HAL_OK) {
 800b218:	f7ff fd74 	bl	800ad04 <HAL_UART_Init>
			//Error handling
		}
		is_initialized = 1;
 800b21c:	2301      	movs	r3, #1
 800b21e:	602b      	str	r3, [r5, #0]
	}
	HAL_UART_Transmit(&UART, (uint8_t*) s, strlen(s), 10);
 800b220:	4620      	mov	r0, r4
 800b222:	f7fb fdbf 	bl	8006da4 <strlen>
 800b226:	4621      	mov	r1, r4
 800b228:	b282      	uxth	r2, r0
 800b22a:	230a      	movs	r3, #10
 800b22c:	4803      	ldr	r0, [pc, #12]	; (800b23c <_Z8printLogPKc+0x50>)
//	HAL_UART_Transmit(&UART, (uint8_t*) "\n\r", 2, 10);


}
 800b22e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	HAL_UART_Transmit(&UART, (uint8_t*) s, strlen(s), 10);
 800b232:	f7ff bc83 	b.w	800ab3c <HAL_UART_Transmit>
 800b236:	bf00      	nop
 800b238:	20000cac 	.word	0x20000cac
 800b23c:	20000c3c 	.word	0x20000c3c
 800b240:	40011000 	.word	0x40011000

0800b244 <_Z25multi_head_self_attentionPfS_>:
        output[i] /= sum;
    }
}
// Multi-head Self Attention Layer
//void multi_head_self_attention(q7_t* input, q7_t* output, uint16_t size, int num_heads) {
void multi_head_self_attention(float* input, float* output) {
 800b244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b248:	4604      	mov	r4, r0
 800b24a:	460f      	mov	r7, r1
	printLog("multi_head_self_attention \n\r");
 800b24c:	482c      	ldr	r0, [pc, #176]	; (800b300 <_Z25multi_head_self_attentionPfS_+0xbc>)
 800b24e:	463d      	mov	r5, r7
 800b250:	463e      	mov	r6, r7
void multi_head_self_attention(float* input, float* output) {
 800b252:	ed2d 8b02 	vpush	{d8}
 800b256:	b082      	sub	sp, #8
	printLog("multi_head_self_attention \n\r");
 800b258:	f7ff ffc8 	bl	800b1ec <_Z8printLogPKc>
 800b25c:	4622      	mov	r2, r4
 800b25e:	f504 70a0 	add.w	r0, r4, #320	; 0x140
    for(int i = 0; i < _size; i++) {
    	q7_t sum = 0.0f;
        for(int j = 0; j < _size; j++) {
            sum += Q[i] * K[j];
        }
        output[i] = sum / sqrtf(_size);
 800b262:	ed9f 6a28 	vldr	s12, [pc, #160]	; 800b304 <_Z25multi_head_self_attentionPfS_+0xc0>
 800b266:	f504 7420 	add.w	r4, r4, #640	; 0x280
            sum += Q[i] * K[j];
 800b26a:	ecf2 6a01 	vldmia	r2!, {s13}
 800b26e:	4603      	mov	r3, r0
    	q7_t sum = 0.0f;
 800b270:	eddf 7a25 	vldr	s15, [pc, #148]	; 800b308 <_Z25multi_head_self_attentionPfS_+0xc4>
            sum += Q[i] * K[j];
 800b274:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b278:	ecb3 7a01 	vldmia	r3!, {s14}
        for(int j = 0; j < _size; j++) {
 800b27c:	429c      	cmp	r4, r3
            sum += Q[i] * K[j];
 800b27e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800b282:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b286:	edcd 7a01 	vstr	s15, [sp, #4]
 800b28a:	f99d 1004 	ldrsb.w	r1, [sp, #4]
 800b28e:	ee07 1a90 	vmov	s15, r1
        for(int j = 0; j < _size; j++) {
 800b292:	d1ef      	bne.n	800b274 <_Z25multi_head_self_attentionPfS_+0x30>
        output[i] = sum / sqrtf(_size);
 800b294:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    for(int i = 0; i < _size; i++) {
 800b298:	4290      	cmp	r0, r2
        output[i] = sum / sqrtf(_size);
 800b29a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800b29e:	ece6 7a01 	vstmia	r6!, {s15}
    for(int i = 0; i < _size; i++) {
 800b2a2:	d1e2      	bne.n	800b26a <_Z25multi_head_self_attentionPfS_+0x26>
	printLog("arm_softmax_f32 \n\r");
 800b2a4:	4819      	ldr	r0, [pc, #100]	; (800b30c <_Z25multi_head_self_attentionPfS_+0xc8>)
 800b2a6:	f507 78a0 	add.w	r8, r7, #320	; 0x140
    float sum = 0.0f;
 800b2aa:	ed9f 8a19 	vldr	s16, [pc, #100]	; 800b310 <_Z25multi_head_self_attentionPfS_+0xcc>
	printLog("arm_softmax_f32 \n\r");
 800b2ae:	463e      	mov	r6, r7
 800b2b0:	f7ff ff9c 	bl	800b1ec <_Z8printLogPKc>
        output[i] = expf(input[i]);
 800b2b4:	ed96 0a00 	vldr	s0, [r6]
 800b2b8:	f002 f860 	bl	800d37c <expf>
 800b2bc:	eca6 0a01 	vstmia	r6!, {s0}
    for (int i = 0; i < length; i++) {
 800b2c0:	45b0      	cmp	r8, r6
        sum += output[i];
 800b2c2:	ee38 8a00 	vadd.f32	s16, s16, s0
    for (int i = 0; i < length; i++) {
 800b2c6:	d1f5      	bne.n	800b2b4 <_Z25multi_head_self_attentionPfS_+0x70>
 800b2c8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b2cc:	463b      	mov	r3, r7
 800b2ce:	ee87 7a88 	vdiv.f32	s14, s15, s16
        output[i] /= sum;
 800b2d2:	edd3 7a00 	vldr	s15, [r3]
 800b2d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800b2da:	ece3 7a01 	vstmia	r3!, {s15}
    for (int i = 0; i < length; i++) {
 800b2de:	429e      	cmp	r6, r3
 800b2e0:	d1f7      	bne.n	800b2d2 <_Z25multi_head_self_attentionPfS_+0x8e>
    arm_softmax_f32(output, _size, output);


    // Multiply with V
    for(int i = 0; i < _size; i++) {
        output[i] *= V[i];
 800b2e2:	edd5 7a00 	vldr	s15, [r5]
 800b2e6:	ecb4 7a01 	vldmia	r4!, {s14}
 800b2ea:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b2ee:	ece5 7a01 	vstmia	r5!, {s15}
    for(int i = 0; i < _size; i++) {
 800b2f2:	42ab      	cmp	r3, r5
 800b2f4:	d1f5      	bne.n	800b2e2 <_Z25multi_head_self_attentionPfS_+0x9e>
    }
}
 800b2f6:	b002      	add	sp, #8
 800b2f8:	ecbd 8b02 	vpop	{d8}
 800b2fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b300:	08012034 	.word	0x08012034
 800b304:	3de4f92e 	.word	0x3de4f92e
 800b308:	00000000 	.word	0x00000000
 800b30c:	08011f94 	.word	0x08011f94
 800b310:	00000000 	.word	0x00000000

0800b314 <_Z23main_vision_transformerPt>:

    return class_index;
}

static float float_image_test[6400] = {0.0f}; //80 x 80 image
int main_vision_transformer(uint16_t* input){
 800b314:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b316:	4604      	mov	r4, r0
 800b318:	4e33      	ldr	r6, [pc, #204]	; (800b3e8 <_Z23main_vision_transformerPt+0xd4>)
 800b31a:	b0b3      	sub	sp, #204	; 0xcc
	printLog("main_vision_transformer \n\r");
 800b31c:	4833      	ldr	r0, [pc, #204]	; (800b3ec <_Z23main_vision_transformerPt+0xd8>)
 800b31e:	f7ff ff65 	bl	800b1ec <_Z8printLogPKc>
 800b322:	1ea2      	subs	r2, r4, #2
 800b324:	f506 41c8 	add.w	r1, r6, #25600	; 0x6400
 800b328:	4633      	mov	r3, r6

	for(int i = 0; i < 6400; i++) {
		float_image_test[i] = (float)input[i];
 800b32a:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800b32e:	ee07 0a90 	vmov	s15, r0
 800b332:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800b336:	ece3 7a01 	vstmia	r3!, {s15}
	for(int i = 0; i < 6400; i++) {
 800b33a:	4299      	cmp	r1, r3
 800b33c:	d1f5      	bne.n	800b32a <_Z23main_vision_transformerPt+0x16>
	}

	printLog("before vision_transformer \n\r");
 800b33e:	482c      	ldr	r0, [pc, #176]	; (800b3f0 <_Z23main_vision_transformerPt+0xdc>)
 800b340:	f7ff ff54 	bl	800b1ec <_Z8printLogPKc>
	printLog("vision_transformer \n\r");
 800b344:	482b      	ldr	r0, [pc, #172]	; (800b3f4 <_Z23main_vision_transformerPt+0xe0>)
 800b346:	f7ff ff51 	bl	800b1ec <_Z8printLogPKc>
    float* output = new float[area];
 800b34a:	f44f 40c8 	mov.w	r0, #25600	; 0x6400
 800b34e:	f000 ff47 	bl	800c1e0 <_Znaj>
 800b352:	4607      	mov	r7, r0
	printLog("linear_layer \n\r");
 800b354:	4828      	ldr	r0, [pc, #160]	; (800b3f8 <_Z23main_vision_transformerPt+0xe4>)
 800b356:	f7ff ff49 	bl	800b1ec <_Z8printLogPKc>
 800b35a:	4828      	ldr	r0, [pc, #160]	; (800b3fc <_Z23main_vision_transformerPt+0xe8>)
 800b35c:	463d      	mov	r5, r7
 800b35e:	4c28      	ldr	r4, [pc, #160]	; (800b400 <_Z23main_vision_transformerPt+0xec>)
 800b360:	f500 7ca0 	add.w	ip, r0, #320	; 0x140
 800b364:	f506 71a0 	add.w	r1, r6, #320	; 0x140
	printLog("main_vision_transformer \n\r");
 800b368:	4622      	mov	r2, r4
 800b36a:	4633      	mov	r3, r6
 800b36c:	eddf 7a25 	vldr	s15, [pc, #148]	; 800b404 <_Z23main_vision_transformerPt+0xf0>
            output[i] += input[j] * _weights[i * _size + j];
 800b370:	ecf3 6a01 	vldmia	r3!, {s13}
 800b374:	ecb2 7a01 	vldmia	r2!, {s14}
        for(int j = 0; j < _size; j++) {
 800b378:	428b      	cmp	r3, r1
            output[i] += input[j] * _weights[i * _size + j];
 800b37a:	eee6 7a87 	vfma.f32	s15, s13, s14
        for(int j = 0; j < _size; j++) {
 800b37e:	d1f7      	bne.n	800b370 <_Z23main_vision_transformerPt+0x5c>
        output[i] += _bias[i];
 800b380:	ecb0 7a01 	vldmia	r0!, {s14}
 800b384:	f504 74a0 	add.w	r4, r4, #320	; 0x140
 800b388:	edc5 7a00 	vstr	s15, [r5]
 800b38c:	ee77 7a87 	vadd.f32	s15, s15, s14
    for(int i = 0; i < _size; i++) {
 800b390:	4584      	cmp	ip, r0
        output[i] += _bias[i];
 800b392:	ece5 7a01 	vstmia	r5!, {s15}
    for(int i = 0; i < _size; i++) {
 800b396:	d1e7      	bne.n	800b368 <_Z23main_vision_transformerPt+0x54>
    multi_head_self_attention(output, output);
 800b398:	4639      	mov	r1, r7
 800b39a:	4638      	mov	r0, r7
 800b39c:	f7ff ff52 	bl	800b244 <_Z25multi_head_self_attentionPfS_>
	printLog("classification_layer \n\r");
 800b3a0:	4819      	ldr	r0, [pc, #100]	; (800b408 <_Z23main_vision_transformerPt+0xf4>)
 800b3a2:	f7ff ff23 	bl	800b1ec <_Z8printLogPKc>
    float max_value = input[0];
 800b3a6:	463a      	mov	r2, r7
    int max_index = 0;
 800b3a8:	2400      	movs	r4, #0
    for(int i = 1; i < _size; i++) {
 800b3aa:	2301      	movs	r3, #1
    float max_value = input[0];
 800b3ac:	ecb2 7a01 	vldmia	r2!, {s14}
        if(input[i] > max_value) {
 800b3b0:	ecf2 7a01 	vldmia	r2!, {s15}
 800b3b4:	eef4 7ac7 	vcmpe.f32	s15, s14
 800b3b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3bc:	dd02      	ble.n	800b3c4 <_Z23main_vision_transformerPt+0xb0>
 800b3be:	eeb0 7a67 	vmov.f32	s14, s15
 800b3c2:	461c      	mov	r4, r3
    for(int i = 1; i < _size; i++) {
 800b3c4:	3301      	adds	r3, #1
 800b3c6:	2b50      	cmp	r3, #80	; 0x50
 800b3c8:	d1f2      	bne.n	800b3b0 <_Z23main_vision_transformerPt+0x9c>
    sprintf(str, "classification_layer : %d \n\r", class_index);
 800b3ca:	4622      	mov	r2, r4
 800b3cc:	490f      	ldr	r1, [pc, #60]	; (800b40c <_Z23main_vision_transformerPt+0xf8>)
 800b3ce:	4668      	mov	r0, sp
 800b3d0:	f003 f88e 	bl	800e4f0 <sprintf>
    printLog(str);
 800b3d4:	4668      	mov	r0, sp
 800b3d6:	f7ff ff09 	bl	800b1ec <_Z8printLogPKc>
    delete[] output;
 800b3da:	4638      	mov	r0, r7
 800b3dc:	f000 fefe 	bl	800c1dc <_ZdaPv>
	int ret = vision_transformer(float_image_test);

	return ret;
};
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	b033      	add	sp, #204	; 0xcc
 800b3e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3e6:	bf00      	nop
 800b3e8:	20000cb0 	.word	0x20000cb0
 800b3ec:	08011ff8 	.word	0x08011ff8
 800b3f0:	08012014 	.word	0x08012014
 800b3f4:	08011fa8 	.word	0x08011fa8
 800b3f8:	08011f84 	.word	0x08011f84
 800b3fc:	08012054 	.word	0x08012054
 800b400:	08012054 	.word	0x08012054
 800b404:	00000000 	.word	0x00000000
 800b408:	08011fe0 	.word	0x08011fe0
 800b40c:	08011fc0 	.word	0x08011fc0

0800b410 <_Z13loadRGB565LCDmmmmPth>:
#include "stm32f7xx_hal.h"

#define TRANS 128

void loadRGB565LCD(uint32_t x, uint32_t y, uint32_t width, uint32_t height,
                   uint16_t *src, uint8_t resize) {
 800b410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b414:	b08b      	sub	sp, #44	; 0x2c
 800b416:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800b418:	f89d b054 	ldrb.w	fp, [sp, #84]	; 0x54
  for (int i = 0; i < height; i++) {
 800b41c:	2b00      	cmp	r3, #0
 800b41e:	d052      	beq.n	800b4c6 <_Z13loadRGB565LCDmmmmPth+0xb6>
 800b420:	2a00      	cmp	r2, #0
 800b422:	d050      	beq.n	800b4c6 <_Z13loadRGB565LCDmmmmPth+0xb6>
 800b424:	f1bb 0f00 	cmp.w	fp, #0
 800b428:	d04d      	beq.n	800b4c6 <_Z13loadRGB565LCDmmmmPth+0xb6>
 800b42a:	2500      	movs	r5, #0
 800b42c:	9309      	str	r3, [sp, #36]	; 0x24
 800b42e:	4613      	mov	r3, r2
 800b430:	4602      	mov	r2, r0
 800b432:	fa1f f08b 	uxth.w	r0, fp
 800b436:	9504      	str	r5, [sp, #16]
 800b438:	ebc3 75c3 	rsb	r5, r3, r3, lsl #31
 800b43c:	4402      	add	r2, r0
 800b43e:	9002      	str	r0, [sp, #8]
 800b440:	ebc3 7083 	rsb	r0, r3, r3, lsl #30
 800b444:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800b448:	fa1f f981 	uxth.w	r9, r1
 800b44c:	9303      	str	r3, [sp, #12]
 800b44e:	b293      	uxth	r3, r2
 800b450:	9307      	str	r3, [sp, #28]
 800b452:	006b      	lsls	r3, r5, #1
 800b454:	9306      	str	r3, [sp, #24]
 800b456:	0083      	lsls	r3, r0, #2
 800b458:	9308      	str	r3, [sp, #32]
 800b45a:	9b03      	ldr	r3, [sp, #12]
 800b45c:	9a06      	ldr	r2, [sp, #24]
 800b45e:	9d07      	ldr	r5, [sp, #28]
 800b460:	4413      	add	r3, r2
 800b462:	9305      	str	r3, [sp, #20]
 800b464:	9301      	str	r3, [sp, #4]
 800b466:	9b02      	ldr	r3, [sp, #8]
    for (int j = 0; j < width; j++) {

      uint16_t color = src[i * width + j];

      for (int ti = 0; ti < resize; ti++) {
 800b468:	2700      	movs	r7, #0
 800b46a:	eba5 0803 	sub.w	r8, r5, r3
      uint16_t color = src[i * width + j];
 800b46e:	9b01      	ldr	r3, [sp, #4]
 800b470:	fa1f f888 	uxth.w	r8, r8
 800b474:	f833 6b02 	ldrh.w	r6, [r3], #2
 800b478:	9301      	str	r3, [sp, #4]
 800b47a:	eb09 0a07 	add.w	sl, r9, r7
      for (int ti = 0; ti < resize; ti++) {
 800b47e:	4644      	mov	r4, r8
 800b480:	fa1f fa8a 	uxth.w	sl, sl
        for (int tj = 0; tj < resize; tj++) {
          BSP_LCD_DrawPixel(x + j * resize + tj, y + i * resize + ti, color);
 800b484:	4620      	mov	r0, r4
 800b486:	3401      	adds	r4, #1
 800b488:	4632      	mov	r2, r6
 800b48a:	4651      	mov	r1, sl
 800b48c:	b2a4      	uxth	r4, r4
 800b48e:	f7fd fc5f 	bl	8008d50 <BSP_LCD_DrawPixel>
        for (int tj = 0; tj < resize; tj++) {
 800b492:	42a5      	cmp	r5, r4
 800b494:	d1f6      	bne.n	800b484 <_Z13loadRGB565LCDmmmmPth+0x74>
      for (int ti = 0; ti < resize; ti++) {
 800b496:	3701      	adds	r7, #1
 800b498:	455f      	cmp	r7, fp
 800b49a:	d1ee      	bne.n	800b47a <_Z13loadRGB565LCDmmmmPth+0x6a>
 800b49c:	9b02      	ldr	r3, [sp, #8]
    for (int j = 0; j < width; j++) {
 800b49e:	9a03      	ldr	r2, [sp, #12]
 800b4a0:	441d      	add	r5, r3
 800b4a2:	9b01      	ldr	r3, [sp, #4]
 800b4a4:	4293      	cmp	r3, r2
 800b4a6:	b2ad      	uxth	r5, r5
 800b4a8:	d1dd      	bne.n	800b466 <_Z13loadRGB565LCDmmmmPth+0x56>
 800b4aa:	9b02      	ldr	r3, [sp, #8]
 800b4ac:	9a05      	ldr	r2, [sp, #20]
 800b4ae:	9908      	ldr	r1, [sp, #32]
 800b4b0:	4499      	add	r9, r3
  for (int i = 0; i < height; i++) {
 800b4b2:	9b04      	ldr	r3, [sp, #16]
 800b4b4:	1a52      	subs	r2, r2, r1
 800b4b6:	fa1f f989 	uxth.w	r9, r9
 800b4ba:	3301      	adds	r3, #1
 800b4bc:	9203      	str	r2, [sp, #12]
 800b4be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b4c0:	9304      	str	r3, [sp, #16]
 800b4c2:	429a      	cmp	r2, r3
 800b4c4:	d1c9      	bne.n	800b45a <_Z13loadRGB565LCDmmmmPth+0x4a>
        }
      }
    }
  }
}
 800b4c6:	b00b      	add	sp, #44	; 0x2c
 800b4c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b4cc <_Z13displaystringPcii>:
    for (int j = y1 - 1; j < y2; j++) {
      BSP_LCD_DrawPixel(i, j, black);
    }
}

void displaystring(char *buf, int x, int y) {
 800b4cc:	b430      	push	{r4, r5}
  BSP_LCD_DisplayStringAt(x, y, buf, LEFT_MODE);
 800b4ce:	b295      	uxth	r5, r2
 800b4d0:	2303      	movs	r3, #3
 800b4d2:	b28c      	uxth	r4, r1
 800b4d4:	4602      	mov	r2, r0
 800b4d6:	4629      	mov	r1, r5
 800b4d8:	4620      	mov	r0, r4
}
 800b4da:	bc30      	pop	{r4, r5}
  BSP_LCD_DisplayStringAt(x, y, buf, LEFT_MODE);
 800b4dc:	f7fd bbdc 	b.w	8008c98 <BSP_LCD_DisplayStringAt>

0800b4e0 <_Z14detectResponseifiii>:
#define USENEW
int unper_cnt = 0;

#ifdef USENEW
void detectResponse(int person, float ms, int training_mode, int pred,
                    int label) {
 800b4e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4e4:	4616      	mov	r6, r2
 800b4e6:	461d      	mov	r5, r3
 800b4e8:	ed2d 8b02 	vpush	{d8}
 800b4ec:	eeb0 8a40 	vmov.f32	s16, s0
 800b4f0:	b088      	sub	sp, #32
  char buf[20];
  if (person) {
 800b4f2:	2800      	cmp	r0, #0
 800b4f4:	d05b      	beq.n	800b5ae <_Z14detectResponseifiii+0xce>
    unper_cnt = 0;
 800b4f6:	4bc0      	ldr	r3, [pc, #768]	; (800b7f8 <_Z14detectResponseifiii+0x318>)
 800b4f8:	2200      	movs	r2, #0
 800b4fa:	601a      	str	r2, [r3, #0]
    if (training_mode) {
 800b4fc:	2900      	cmp	r1, #0
 800b4fe:	f000 813d 	beq.w	800b77c <_Z14detectResponseifiii+0x29c>
  for (int i = x1 - 1; i < x2; i++)
 800b502:	f240 180d 	movw	r8, #269	; 0x10d
 800b506:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b50a:	2427      	movs	r4, #39	; 0x27
      BSP_LCD_DrawPixel(i, j, green);
 800b50c:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b50e:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, green);
 800b510:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
 800b514:	4638      	mov	r0, r7
 800b516:	f7fd fc1b 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b51a:	2c64      	cmp	r4, #100	; 0x64
 800b51c:	d1f6      	bne.n	800b50c <_Z14detectResponseifiii+0x2c>
  for (int i = x1 - 1; i < x2; i++)
 800b51e:	f108 0801 	add.w	r8, r8, #1
 800b522:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b526:	d1ee      	bne.n	800b506 <_Z14detectResponseifiii+0x26>
 800b528:	f240 180d 	movw	r8, #269	; 0x10d
 800b52c:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b530:	247c      	movs	r4, #124	; 0x7c
      BSP_LCD_DrawPixel(i, j, green);
 800b532:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b534:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, green);
 800b536:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
 800b53a:	4638      	mov	r0, r7
 800b53c:	f7fd fc08 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b540:	2cb4      	cmp	r4, #180	; 0xb4
 800b542:	d1f6      	bne.n	800b532 <_Z14detectResponseifiii+0x52>
  for (int i = x1 - 1; i < x2; i++)
 800b544:	f108 0801 	add.w	r8, r8, #1
 800b548:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b54c:	d1ee      	bne.n	800b52c <_Z14detectResponseifiii+0x4c>
 800b54e:	f240 180d 	movw	r8, #269	; 0x10d
 800b552:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b556:	24cc      	movs	r4, #204	; 0xcc
      BSP_LCD_DrawPixel(i, j, green);
 800b558:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b55a:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, green);
 800b55c:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
 800b560:	4638      	mov	r0, r7
 800b562:	f7fd fbf5 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b566:	2cfa      	cmp	r4, #250	; 0xfa
 800b568:	d1f6      	bne.n	800b558 <_Z14detectResponseifiii+0x78>
  for (int i = x1 - 1; i < x2; i++)
 800b56a:	f108 0801 	add.w	r8, r8, #1
 800b56e:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b572:	d1ee      	bne.n	800b552 <_Z14detectResponseifiii+0x72>
      drawGreenBackground(270, 480, 40, 100);
      drawGreenBackground(270, 480, 125, 180);
      drawGreenBackground(270, 480, 205, 250);
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b574:	48a1      	ldr	r0, [pc, #644]	; (800b7fc <_Z14detectResponseifiii+0x31c>)
      sprintf(buf, " Prediction:");
 800b576:	ac03      	add	r4, sp, #12
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b578:	f7fd fac2 	bl	8008b00 <BSP_LCD_SetTextColor>
      sprintf(buf, " Prediction:");
 800b57c:	4ba0      	ldr	r3, [pc, #640]	; (800b800 <_Z14detectResponseifiii+0x320>)
 800b57e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800b580:	c407      	stmia	r4!, {r0, r1, r2}
      BSP_LCD_DisplayStringAt(273, 80, buf, LEFT_MODE);
 800b582:	aa03      	add	r2, sp, #12
      sprintf(buf, " Prediction:");
 800b584:	7023      	strb	r3, [r4, #0]
      BSP_LCD_DisplayStringAt(273, 80, buf, LEFT_MODE);
 800b586:	2150      	movs	r1, #80	; 0x50
 800b588:	2303      	movs	r3, #3
 800b58a:	f240 1011 	movw	r0, #273	; 0x111
 800b58e:	f7fd fb83 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      sprintf(buf, "  class %d  ", pred);
 800b592:	4632      	mov	r2, r6
 800b594:	499b      	ldr	r1, [pc, #620]	; (800b804 <_Z14detectResponseifiii+0x324>)
 800b596:	a803      	add	r0, sp, #12
 800b598:	f002 ffaa 	bl	800e4f0 <sprintf>
      BSP_LCD_DisplayStringAt(273, 100, buf, LEFT_MODE);
 800b59c:	2303      	movs	r3, #3
 800b59e:	aa03      	add	r2, sp, #12
 800b5a0:	2164      	movs	r1, #100	; 0x64
 800b5a2:	f240 1011 	movw	r0, #273	; 0x111
 800b5a6:	f7fd fb77 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      sprintf(buf, "Ground True:");
 800b5aa:	4b97      	ldr	r3, [pc, #604]	; (800b808 <_Z14detectResponseifiii+0x328>)
 800b5ac:	e057      	b.n	800b65e <_Z14detectResponseifiii+0x17e>
      drawBlueBackground(270, 480, 205, 250);
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
      BSP_LCD_DisplayStringAt(273, 100, "   Person   ", LEFT_MODE);
    }
  } else {
    if (training_mode) {
 800b5ae:	2900      	cmp	r1, #0
 800b5b0:	f000 80a0 	beq.w	800b6f4 <_Z14detectResponseifiii+0x214>
  for (int i = x1 - 1; i < x2; i++)
 800b5b4:	f240 180d 	movw	r8, #269	; 0x10d
 800b5b8:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b5bc:	2427      	movs	r4, #39	; 0x27
      BSP_LCD_DrawPixel(i, j, red);
 800b5be:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b5c0:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, red);
 800b5c2:	f44f 4278 	mov.w	r2, #63488	; 0xf800
 800b5c6:	4638      	mov	r0, r7
 800b5c8:	f7fd fbc2 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b5cc:	2c64      	cmp	r4, #100	; 0x64
 800b5ce:	d1f6      	bne.n	800b5be <_Z14detectResponseifiii+0xde>
  for (int i = x1 - 1; i < x2; i++)
 800b5d0:	f108 0801 	add.w	r8, r8, #1
 800b5d4:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b5d8:	d1ee      	bne.n	800b5b8 <_Z14detectResponseifiii+0xd8>
 800b5da:	f240 180d 	movw	r8, #269	; 0x10d
 800b5de:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b5e2:	247c      	movs	r4, #124	; 0x7c
      BSP_LCD_DrawPixel(i, j, red);
 800b5e4:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b5e6:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, red);
 800b5e8:	f44f 4278 	mov.w	r2, #63488	; 0xf800
 800b5ec:	4638      	mov	r0, r7
 800b5ee:	f7fd fbaf 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b5f2:	2cb4      	cmp	r4, #180	; 0xb4
 800b5f4:	d1f6      	bne.n	800b5e4 <_Z14detectResponseifiii+0x104>
  for (int i = x1 - 1; i < x2; i++)
 800b5f6:	f108 0801 	add.w	r8, r8, #1
 800b5fa:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b5fe:	d1ee      	bne.n	800b5de <_Z14detectResponseifiii+0xfe>
 800b600:	f240 180d 	movw	r8, #269	; 0x10d
 800b604:	fa1f f788 	uxth.w	r7, r8
    for (int j = y1 - 1; j < y2; j++) {
 800b608:	24cc      	movs	r4, #204	; 0xcc
      BSP_LCD_DrawPixel(i, j, red);
 800b60a:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b60c:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, red);
 800b60e:	f44f 4278 	mov.w	r2, #63488	; 0xf800
 800b612:	4638      	mov	r0, r7
 800b614:	f7fd fb9c 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b618:	2cfa      	cmp	r4, #250	; 0xfa
 800b61a:	d1f6      	bne.n	800b60a <_Z14detectResponseifiii+0x12a>
  for (int i = x1 - 1; i < x2; i++)
 800b61c:	f108 0801 	add.w	r8, r8, #1
 800b620:	f5b8 7ff0 	cmp.w	r8, #480	; 0x1e0
 800b624:	d1ee      	bne.n	800b604 <_Z14detectResponseifiii+0x124>
      drawRedBackground(270, 480, 40, 100);
      drawRedBackground(270, 480, 125, 180);
      drawRedBackground(270, 480, 205, 250);
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b626:	4875      	ldr	r0, [pc, #468]	; (800b7fc <_Z14detectResponseifiii+0x31c>)
      sprintf(buf, " Prediction:");
 800b628:	ac03      	add	r4, sp, #12
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b62a:	f7fd fa69 	bl	8008b00 <BSP_LCD_SetTextColor>
      sprintf(buf, " Prediction:");
 800b62e:	4b74      	ldr	r3, [pc, #464]	; (800b800 <_Z14detectResponseifiii+0x320>)
 800b630:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800b632:	c407      	stmia	r4!, {r0, r1, r2}
      BSP_LCD_DisplayStringAt(273, 80, buf, LEFT_MODE);
 800b634:	aa03      	add	r2, sp, #12
      sprintf(buf, " Prediction:");
 800b636:	7023      	strb	r3, [r4, #0]
      BSP_LCD_DisplayStringAt(273, 80, buf, LEFT_MODE);
 800b638:	2150      	movs	r1, #80	; 0x50
 800b63a:	2303      	movs	r3, #3
 800b63c:	f240 1011 	movw	r0, #273	; 0x111
 800b640:	f7fd fb2a 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      sprintf(buf, "  class %d   ", pred);
 800b644:	4632      	mov	r2, r6
 800b646:	4971      	ldr	r1, [pc, #452]	; (800b80c <_Z14detectResponseifiii+0x32c>)
 800b648:	a803      	add	r0, sp, #12
 800b64a:	f002 ff51 	bl	800e4f0 <sprintf>
      BSP_LCD_DisplayStringAt(273, 100, buf, LEFT_MODE);
 800b64e:	2303      	movs	r3, #3
 800b650:	aa03      	add	r2, sp, #12
 800b652:	2164      	movs	r1, #100	; 0x64
 800b654:	f240 1011 	movw	r0, #273	; 0x111
 800b658:	f7fd fb1e 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      sprintf(buf, "Ground-Truth");
 800b65c:	4b6c      	ldr	r3, [pc, #432]	; (800b810 <_Z14detectResponseifiii+0x330>)
 800b65e:	ae03      	add	r6, sp, #12
 800b660:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800b662:	c607      	stmia	r6!, {r0, r1, r2}
 800b664:	7023      	strb	r3, [r4, #0]
      BSP_LCD_DisplayStringAt(273, 120, buf, LEFT_MODE);
 800b666:	aa03      	add	r2, sp, #12
 800b668:	2303      	movs	r3, #3
 800b66a:	2178      	movs	r1, #120	; 0x78
 800b66c:	f240 1011 	movw	r0, #273	; 0x111
 800b670:	f7fd fb12 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      sprintf(buf, "  class %d   ", label);
 800b674:	462a      	mov	r2, r5
 800b676:	4965      	ldr	r1, [pc, #404]	; (800b80c <_Z14detectResponseifiii+0x32c>)
 800b678:	a803      	add	r0, sp, #12
 800b67a:	f002 ff39 	bl	800e4f0 <sprintf>
      BSP_LCD_DisplayStringAt(273, 140, buf, LEFT_MODE);
 800b67e:	aa03      	add	r2, sp, #12
 800b680:	2303      	movs	r3, #3
 800b682:	218c      	movs	r1, #140	; 0x8c
 800b684:	f240 1011 	movw	r0, #273	; 0x111
 800b688:	f7fd fb06 	bl	8008c98 <BSP_LCD_DisplayStringAt>
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
      BSP_LCD_DisplayStringAt(273, 100, "  No Person ", LEFT_MODE);
    }
  }

  if (ms == 0)
 800b68c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800b690:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b694:	d06d      	beq.n	800b772 <_Z14detectResponseifiii+0x292>
    return;
  BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
 800b696:	485f      	ldr	r0, [pc, #380]	; (800b814 <_Z14detectResponseifiii+0x334>)
 800b698:	f7fd fa32 	bl	8008b00 <BSP_LCD_SetTextColor>
  volatile float rate = 1000 / ms;
 800b69c:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800b818 <_Z14detectResponseifiii+0x338>
  volatile int decimal = (int)rate;
  volatile int floating = (int)((rate - (float)decimal) * 1000);
  sprintf(buf, "  fps:%d.%03d ", decimal, floating);
 800b6a0:	a803      	add	r0, sp, #12
 800b6a2:	495e      	ldr	r1, [pc, #376]	; (800b81c <_Z14detectResponseifiii+0x33c>)
  volatile float rate = 1000 / ms;
 800b6a4:	eec6 7a88 	vdiv.f32	s15, s13, s16
 800b6a8:	edcd 7a00 	vstr	s15, [sp]
  volatile int decimal = (int)rate;
 800b6ac:	eddd 7a00 	vldr	s15, [sp]
 800b6b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b6b4:	edcd 7a01 	vstr	s15, [sp, #4]
  volatile int floating = (int)((rate - (float)decimal) * 1000);
 800b6b8:	ed9d 7a00 	vldr	s14, [sp]
 800b6bc:	eddd 7a01 	vldr	s15, [sp, #4]
 800b6c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b6c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800b6cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b6d0:	edcd 7a02 	vstr	s15, [sp, #8]
  sprintf(buf, "  fps:%d.%03d ", decimal, floating);
 800b6d4:	9a01      	ldr	r2, [sp, #4]
 800b6d6:	9b02      	ldr	r3, [sp, #8]
 800b6d8:	f002 ff0a 	bl	800e4f0 <sprintf>
  BSP_LCD_DisplayStringAt(273, 180, buf, LEFT_MODE);
 800b6dc:	aa03      	add	r2, sp, #12
 800b6de:	2303      	movs	r3, #3
 800b6e0:	21b4      	movs	r1, #180	; 0xb4
 800b6e2:	f240 1011 	movw	r0, #273	; 0x111
 800b6e6:	f7fd fad7 	bl	8008c98 <BSP_LCD_DisplayStringAt>
}
 800b6ea:	b008      	add	sp, #32
 800b6ec:	ecbd 8b02 	vpop	{d8}
 800b6f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  for (int i = x1 - 1; i < x2; i++)
 800b6f4:	f240 160d 	movw	r6, #269	; 0x10d
 800b6f8:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b6fa:	2427      	movs	r4, #39	; 0x27
      BSP_LCD_DrawPixel(i, j, black);
 800b6fc:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b6fe:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, black);
 800b700:	2200      	movs	r2, #0
 800b702:	4628      	mov	r0, r5
 800b704:	f7fd fb24 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b708:	2c64      	cmp	r4, #100	; 0x64
 800b70a:	d1f7      	bne.n	800b6fc <_Z14detectResponseifiii+0x21c>
  for (int i = x1 - 1; i < x2; i++)
 800b70c:	3601      	adds	r6, #1
 800b70e:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b712:	d1f1      	bne.n	800b6f8 <_Z14detectResponseifiii+0x218>
 800b714:	f240 160d 	movw	r6, #269	; 0x10d
 800b718:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b71a:	247c      	movs	r4, #124	; 0x7c
      BSP_LCD_DrawPixel(i, j, black);
 800b71c:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b71e:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, black);
 800b720:	2200      	movs	r2, #0
 800b722:	4628      	mov	r0, r5
 800b724:	f7fd fb14 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b728:	2cb4      	cmp	r4, #180	; 0xb4
 800b72a:	d1f7      	bne.n	800b71c <_Z14detectResponseifiii+0x23c>
  for (int i = x1 - 1; i < x2; i++)
 800b72c:	3601      	adds	r6, #1
 800b72e:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b732:	d1f1      	bne.n	800b718 <_Z14detectResponseifiii+0x238>
 800b734:	f240 160d 	movw	r6, #269	; 0x10d
 800b738:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b73a:	24cc      	movs	r4, #204	; 0xcc
      BSP_LCD_DrawPixel(i, j, black);
 800b73c:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b73e:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, black);
 800b740:	2200      	movs	r2, #0
 800b742:	4628      	mov	r0, r5
 800b744:	f7fd fb04 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b748:	2cfa      	cmp	r4, #250	; 0xfa
 800b74a:	d1f7      	bne.n	800b73c <_Z14detectResponseifiii+0x25c>
  for (int i = x1 - 1; i < x2; i++)
 800b74c:	3601      	adds	r6, #1
 800b74e:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b752:	d1f1      	bne.n	800b738 <_Z14detectResponseifiii+0x258>
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b754:	4829      	ldr	r0, [pc, #164]	; (800b7fc <_Z14detectResponseifiii+0x31c>)
 800b756:	f7fd f9d3 	bl	8008b00 <BSP_LCD_SetTextColor>
      BSP_LCD_DisplayStringAt(273, 100, "  No Person ", LEFT_MODE);
 800b75a:	2303      	movs	r3, #3
 800b75c:	4a30      	ldr	r2, [pc, #192]	; (800b820 <_Z14detectResponseifiii+0x340>)
 800b75e:	2164      	movs	r1, #100	; 0x64
 800b760:	f240 1011 	movw	r0, #273	; 0x111
 800b764:	f7fd fa98 	bl	8008c98 <BSP_LCD_DisplayStringAt>
  if (ms == 0)
 800b768:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800b76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b770:	d191      	bne.n	800b696 <_Z14detectResponseifiii+0x1b6>
}
 800b772:	b008      	add	sp, #32
 800b774:	ecbd 8b02 	vpop	{d8}
 800b778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  for (int i = x1 - 1; i < x2; i++)
 800b77c:	f240 160d 	movw	r6, #269	; 0x10d
 800b780:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b782:	2427      	movs	r4, #39	; 0x27
      BSP_LCD_DrawPixel(i, j, blue);
 800b784:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b786:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, blue);
 800b788:	f64f 72e0 	movw	r2, #65504	; 0xffe0
 800b78c:	4628      	mov	r0, r5
 800b78e:	f7fd fadf 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b792:	2c64      	cmp	r4, #100	; 0x64
 800b794:	d1f6      	bne.n	800b784 <_Z14detectResponseifiii+0x2a4>
  for (int i = x1 - 1; i < x2; i++)
 800b796:	3601      	adds	r6, #1
 800b798:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b79c:	d1f0      	bne.n	800b780 <_Z14detectResponseifiii+0x2a0>
 800b79e:	f240 160d 	movw	r6, #269	; 0x10d
 800b7a2:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b7a4:	247c      	movs	r4, #124	; 0x7c
      BSP_LCD_DrawPixel(i, j, blue);
 800b7a6:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b7a8:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, blue);
 800b7aa:	f64f 72e0 	movw	r2, #65504	; 0xffe0
 800b7ae:	4628      	mov	r0, r5
 800b7b0:	f7fd face 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b7b4:	2cb4      	cmp	r4, #180	; 0xb4
 800b7b6:	d1f6      	bne.n	800b7a6 <_Z14detectResponseifiii+0x2c6>
  for (int i = x1 - 1; i < x2; i++)
 800b7b8:	3601      	adds	r6, #1
 800b7ba:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b7be:	d1f0      	bne.n	800b7a2 <_Z14detectResponseifiii+0x2c2>
 800b7c0:	f240 160d 	movw	r6, #269	; 0x10d
 800b7c4:	b2b5      	uxth	r5, r6
    for (int j = y1 - 1; j < y2; j++) {
 800b7c6:	24cc      	movs	r4, #204	; 0xcc
      BSP_LCD_DrawPixel(i, j, blue);
 800b7c8:	b2a1      	uxth	r1, r4
    for (int j = y1 - 1; j < y2; j++) {
 800b7ca:	3401      	adds	r4, #1
      BSP_LCD_DrawPixel(i, j, blue);
 800b7cc:	f64f 72e0 	movw	r2, #65504	; 0xffe0
 800b7d0:	4628      	mov	r0, r5
 800b7d2:	f7fd fabd 	bl	8008d50 <BSP_LCD_DrawPixel>
    for (int j = y1 - 1; j < y2; j++) {
 800b7d6:	2cfa      	cmp	r4, #250	; 0xfa
 800b7d8:	d1f6      	bne.n	800b7c8 <_Z14detectResponseifiii+0x2e8>
  for (int i = x1 - 1; i < x2; i++)
 800b7da:	3601      	adds	r6, #1
 800b7dc:	f5b6 7ff0 	cmp.w	r6, #480	; 0x1e0
 800b7e0:	d1f0      	bne.n	800b7c4 <_Z14detectResponseifiii+0x2e4>
      BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800b7e2:	4806      	ldr	r0, [pc, #24]	; (800b7fc <_Z14detectResponseifiii+0x31c>)
 800b7e4:	f7fd f98c 	bl	8008b00 <BSP_LCD_SetTextColor>
      BSP_LCD_DisplayStringAt(273, 100, "   Person   ", LEFT_MODE);
 800b7e8:	2303      	movs	r3, #3
 800b7ea:	4a0e      	ldr	r2, [pc, #56]	; (800b824 <_Z14detectResponseifiii+0x344>)
 800b7ec:	2164      	movs	r1, #100	; 0x64
 800b7ee:	f240 1011 	movw	r0, #273	; 0x111
 800b7f2:	f7fd fa51 	bl	8008c98 <BSP_LCD_DisplayStringAt>
 800b7f6:	e7b7      	b.n	800b768 <_Z14detectResponseifiii+0x288>
 800b7f8:	200070b0 	.word	0x200070b0
 800b7fc:	ffff0000 	.word	0xffff0000
 800b800:	08018454 	.word	0x08018454
 800b804:	08018464 	.word	0x08018464
 800b808:	08018474 	.word	0x08018474
 800b80c:	08018484 	.word	0x08018484
 800b810:	080184a4 	.word	0x080184a4
 800b814:	ff0000ff 	.word	0xff0000ff
 800b818:	447a0000 	.word	0x447a0000
 800b81c:	080184c4 	.word	0x080184c4
 800b820:	080184b4 	.word	0x080184b4
 800b824:	08018494 	.word	0x08018494

0800b828 <_Z8lcdsetupv>:
  sprintf(buf, "  fps:%d.%03d ", decimal, floating);
  BSP_LCD_DisplayStringAt(273, 180, buf, LEFT_MODE);
}
#endif

void lcdsetup() {
 800b828:	b510      	push	{r4, lr}
 800b82a:	b0a2      	sub	sp, #136	; 0x88
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;

  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 800b82c:	2205      	movs	r2, #5
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 800b82e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800b832:	21c0      	movs	r1, #192	; 0xc0
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800b834:	2408      	movs	r4, #8
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 800b836:	a801      	add	r0, sp, #4
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 800b838:	9208      	str	r2, [sp, #32]
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 800b83a:	930c      	str	r3, [sp, #48]	; 0x30
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800b83c:	9106      	str	r1, [sp, #24]
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800b83e:	9401      	str	r4, [sp, #4]
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 800b840:	f7fe fe8a 	bl	800a558 <HAL_RCCEx_PeriphCLKConfig>

  BSP_LCD_Init();
 800b844:	f7fd fb76 	bl	8008f34 <BSP_LCD_Init>

  BSP_LCD_LayerRgb565Init(0, LCD_FB_START_ADDRESS);
 800b848:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800b84c:	2000      	movs	r0, #0
 800b84e:	f7fd f90b 	bl	8008a68 <BSP_LCD_LayerRgb565Init>
  BSP_LCD_LayerRgb565Init(1, LCD_FB_START_ADDRESS +
                                 (BSP_LCD_GetXSize() * BSP_LCD_GetYSize() * 4));
 800b852:	f7fd f8f1 	bl	8008a38 <BSP_LCD_GetXSize>
 800b856:	4604      	mov	r4, r0
 800b858:	f7fd f8fa 	bl	8008a50 <BSP_LCD_GetYSize>
 800b85c:	fb00 f104 	mul.w	r1, r0, r4
  BSP_LCD_LayerRgb565Init(1, LCD_FB_START_ADDRESS +
 800b860:	2001      	movs	r0, #1
 800b862:	f101 5140 	add.w	r1, r1, #805306368	; 0x30000000
 800b866:	0089      	lsls	r1, r1, #2
 800b868:	f7fd f8fe 	bl	8008a68 <BSP_LCD_LayerRgb565Init>

  BSP_LCD_DisplayOn();
 800b86c:	f7fd fa8c 	bl	8008d88 <BSP_LCD_DisplayOn>

  BSP_LCD_SelectLayer(0);
 800b870:	2000      	movs	r0, #0
 800b872:	f7fd f939 	bl	8008ae8 <BSP_LCD_SelectLayer>

  BSP_LCD_Clear(LCD_COLOR_BLACK);
 800b876:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800b87a:	f7fd f94d 	bl	8008b18 <BSP_LCD_Clear>

  BSP_LCD_SelectLayer(1);
 800b87e:	2001      	movs	r0, #1
 800b880:	f7fd f932 	bl	8008ae8 <BSP_LCD_SelectLayer>

  BSP_LCD_Clear(LCD_COLOR_BLACK);
 800b884:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800b888:	f7fd f946 	bl	8008b18 <BSP_LCD_Clear>

  BSP_LCD_SetTransparency(0, 0);
 800b88c:	2100      	movs	r1, #0
 800b88e:	4608      	mov	r0, r1
 800b890:	f7fd f930 	bl	8008af4 <BSP_LCD_SetTransparency>
  BSP_LCD_SetTransparency(1, 100);
 800b894:	2164      	movs	r1, #100	; 0x64
 800b896:	2001      	movs	r0, #1
 800b898:	f7fd f92c 	bl	8008af4 <BSP_LCD_SetTransparency>

  BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
 800b89c:	4802      	ldr	r0, [pc, #8]	; (800b8a8 <_Z8lcdsetupv+0x80>)
 800b89e:	f7fd f92f 	bl	8008b00 <BSP_LCD_SetTextColor>
}
 800b8a2:	b022      	add	sp, #136	; 0x88
 800b8a4:	bd10      	pop	{r4, pc}
 800b8a6:	bf00      	nop
 800b8a8:	ff0000ff 	.word	0xff0000ff

0800b8ac <main>:

uint16_t *RGBbuf;

//SPI_HandleTypeDef flash_conf;

int main(void) {
 800b8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
//  char buf[150];
  char showbuf[150];

  printf("test\n");
 800b8b0:	483b      	ldr	r0, [pc, #236]	; (800b9a0 <main+0xf4>)
int main(void) {
 800b8b2:	b0bb      	sub	sp, #236	; 0xec
  printf("test\n");
 800b8b4:	f002 fc0e 	bl	800e0d4 <puts>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800b8b8:	4b3a      	ldr	r3, [pc, #232]	; (800b9a4 <main+0xf8>)
 800b8ba:	695a      	ldr	r2, [r3, #20]
 800b8bc:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 800b8c0:	d111      	bne.n	800b8e6 <main+0x3a>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800b8c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b8c6:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800b8ca:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800b8ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b8d2:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 800b8d6:	695a      	ldr	r2, [r3, #20]
 800b8d8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800b8dc:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800b8de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b8e2:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 800b8e6:	4a2f      	ldr	r2, [pc, #188]	; (800b9a4 <main+0xf8>)
 800b8e8:	6953      	ldr	r3, [r2, #20]
 800b8ea:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 800b8ee:	d128      	bne.n	800b942 <main+0x96>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800b8f0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800b8f4:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800b8f8:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800b8fc:	f643 7ce0 	movw	ip, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800b900:	f3c3 06c9 	ubfx	r6, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800b904:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800b908:	07b7      	lsls	r7, r6, #30
 800b90a:	0159      	lsls	r1, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800b90c:	ea01 050c 	and.w	r5, r1, ip
 800b910:	463c      	mov	r4, r7
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800b912:	4630      	mov	r0, r6
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800b914:	ea45 0304 	orr.w	r3, r5, r4
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800b918:	3801      	subs	r0, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800b91a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 800b91e:	f8c2 3260 	str.w	r3, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 800b922:	1c43      	adds	r3, r0, #1
 800b924:	d1f6      	bne.n	800b914 <main+0x68>
 800b926:	3920      	subs	r1, #32
    } while(sets-- != 0U);
 800b928:	f111 0f20 	cmn.w	r1, #32
 800b92c:	d1ee      	bne.n	800b90c <main+0x60>
 800b92e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800b932:	6953      	ldr	r3, [r2, #20]
 800b934:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b938:	6153      	str	r3, [r2, #20]
 800b93a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b93e:	f3bf 8f6f 	isb	sy

  CPU_CACHE_Enable();
  HAL_Init();
 800b942:	f7fd fcbb 	bl	80092bc <HAL_Init>
void SystemClock_Config(void) {
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_OscInitTypeDef RCC_OscInitStruct;
  HAL_StatusTypeDef ret = HAL_OK;

  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800b946:	2701      	movs	r7, #1
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800b948:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLM = 25;
  RCC_OscInitStruct.PLL.PLLN = 432;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 9;

  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 800b94c:	ad14      	add	r5, sp, #80	; 0x50
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800b94e:	2602      	movs	r6, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800b950:	f44f 0480 	mov.w	r4, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLM = 25;
 800b954:	2119      	movs	r1, #25
  RCC_OscInitStruct.PLL.PLLN = 432;
 800b956:	f44f 72d8 	mov.w	r2, #432	; 0x1b0
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 800b95a:	4628      	mov	r0, r5
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800b95c:	961a      	str	r6, [sp, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800b95e:	961e      	str	r6, [sp, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLN = 432;
 800b960:	921d      	str	r2, [sp, #116]	; 0x74
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800b962:	e9cd 7314 	strd	r7, r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLQ = 9;
 800b966:	2309      	movs	r3, #9
  RCC_OscInitStruct.PLL.PLLM = 25;
 800b968:	e9cd 411b 	strd	r4, r1, [sp, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLQ = 9;
 800b96c:	931f      	str	r3, [sp, #124]	; 0x7c
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 800b96e:	f7fe fb09 	bl	8009f84 <HAL_RCC_OscConfig>
  if (ret != HAL_OK) {
 800b972:	b100      	cbz	r0, 800b976 <main+0xca>
 800b974:	e7fe      	b.n	800b974 <main+0xc8>
    while (1) {
      ;
    }
  }

  ret = HAL_PWREx_EnableOverDrive();
 800b976:	f7fe fac9 	bl	8009f0c <HAL_PWREx_EnableOverDrive>
  if (ret != HAL_OK) {
 800b97a:	b100      	cbz	r0, 800b97e <main+0xd2>
 800b97c:	e7fe      	b.n	800b97c <main+0xd0>
    while (1) {
      ;
    }
  }

  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK |
 800b97e:	220f      	movs	r2, #15
                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800b980:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800b984:	f44f 5a80 	mov.w	sl, #4096	; 0x1000

  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
 800b988:	2107      	movs	r1, #7
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK |
 800b98a:	920f      	str	r2, [sp, #60]	; 0x3c
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800b98c:	e9cd 6010 	strd	r6, r0, [sp, #64]	; 0x40
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
 800b990:	a80f      	add	r0, sp, #60	; 0x3c
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800b992:	e9cd 3a12 	strd	r3, sl, [sp, #72]	; 0x48
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
 800b996:	f7fe fcc1 	bl	800a31c <HAL_RCC_ClockConfig>
  if (ret != HAL_OK) {
 800b99a:	4604      	mov	r4, r0
 800b99c:	b120      	cbz	r0, 800b9a8 <main+0xfc>
 800b99e:	e7fe      	b.n	800b99e <main+0xf2>
 800b9a0:	0801cfd4 	.word	0x0801cfd4
 800b9a4:	e000ed00 	.word	0xe000ed00
}

static void MX_GPIO_Init(void) {
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  __HAL_RCC_GPIOE_CLK_ENABLE();
 800b9a8:	4bd8      	ldr	r3, [pc, #864]	; (800bd0c <main+0x460>)
  __HAL_RCC_GPIOI_CLK_ENABLE();
  __HAL_RCC_GPIOK_CLK_ENABLE();
  __HAL_RCC_GPIOF_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();

  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin,
 800b9aa:	2120      	movs	r1, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800b9ac:	6028      	str	r0, [r5, #0]
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin,
 800b9ae:	463a      	mov	r2, r7
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800b9b0:	60e8      	str	r0, [r5, #12]
  HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);

  GPIO_InitStruct.Pin = RMII_TXD1_Pin | RMII_TXD0_Pin | RMII_TX_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800b9b2:	f04f 0803 	mov.w	r8, #3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800b9b6:	6128      	str	r0, [r5, #16]
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800b9b8:	f04f 0b0b 	mov.w	fp, #11
  GPIO_InitStruct.Pin = ULPI_D7_Pin | ULPI_D6_Pin | ULPI_D5_Pin | ULPI_D3_Pin |
                        ULPI_D2_Pin | ULPI_D1_Pin | ULPI_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 800b9bc:	f04f 090a 	mov.w	r9, #10
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800b9c0:	e9c5 0001 	strd	r0, r0, [r5, #4]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800b9c4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800b9c6:	f040 0c10 	orr.w	ip, r0, #16
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin,
 800b9ca:	48d1      	ldr	r0, [pc, #836]	; (800bd10 <main+0x464>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800b9cc:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800b9d0:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800b9d4:	f00c 0c10 	and.w	ip, ip, #16
 800b9d8:	f8cd c014 	str.w	ip, [sp, #20]
 800b9dc:	f8dd c014 	ldr.w	ip, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800b9e0:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800b9e4:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
 800b9e8:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800b9ec:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800b9f0:	f00c 0c40 	and.w	ip, ip, #64	; 0x40
 800b9f4:	f8cd c018 	str.w	ip, [sp, #24]
 800b9f8:	f8dd c018 	ldr.w	ip, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800b9fc:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba00:	f04c 0c02 	orr.w	ip, ip, #2
 800ba04:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba08:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba0c:	f00c 0c02 	and.w	ip, ip, #2
 800ba10:	f8cd c01c 	str.w	ip, [sp, #28]
 800ba14:	f8dd c01c 	ldr.w	ip, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800ba18:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba1c:	f04c 0c08 	orr.w	ip, ip, #8
 800ba20:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba24:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba28:	f00c 0c08 	and.w	ip, ip, #8
 800ba2c:	f8cd c020 	str.w	ip, [sp, #32]
 800ba30:	f8dd c020 	ldr.w	ip, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800ba34:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba38:	f04c 0c04 	orr.w	ip, ip, #4
 800ba3c:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba40:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba44:	f00c 0c04 	and.w	ip, ip, #4
 800ba48:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 800ba4c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800ba50:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba54:	f04c 0c01 	orr.w	ip, ip, #1
 800ba58:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba5c:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba60:	f00c 0c01 	and.w	ip, ip, #1
 800ba64:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
 800ba68:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800ba6c:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba70:	f44c 7c00 	orr.w	ip, ip, #512	; 0x200
 800ba74:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba78:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba7c:	f40c 7c00 	and.w	ip, ip, #512	; 0x200
 800ba80:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800ba84:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800ba88:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba8c:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
 800ba90:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800ba94:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800ba98:	f40c 7c80 	and.w	ip, ip, #256	; 0x100
 800ba9c:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
 800baa0:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800baa4:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800baa8:	f44c 6c80 	orr.w	ip, ip, #1024	; 0x400
 800baac:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800bab0:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800bab4:	f40c 6c80 	and.w	ip, ip, #1024	; 0x400
 800bab8:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
 800babc:	f8dd c034 	ldr.w	ip, [sp, #52]	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800bac0:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800bac4:	ea4c 0c01 	orr.w	ip, ip, r1
 800bac8:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800bacc:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800bad0:	ea0c 0c01 	and.w	ip, ip, r1
 800bad4:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
 800bad8:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800badc:	f8d3 c030 	ldr.w	ip, [r3, #48]	; 0x30
 800bae0:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 800bae4:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
 800bae8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800baea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800baee:	930f      	str	r3, [sp, #60]	; 0x3c
 800baf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin,
 800baf2:	f7fd fff7 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin | ARDUINO_D8_Pin, GPIO_PIN_RESET);
 800baf6:	4622      	mov	r2, r4
 800baf8:	210c      	movs	r1, #12
 800bafa:	4886      	ldr	r0, [pc, #536]	; (800bd14 <main+0x468>)
 800bafc:	f7fd fff2 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 800bb00:	463a      	mov	r2, r7
 800bb02:	2108      	movs	r1, #8
 800bb04:	4884      	ldr	r0, [pc, #528]	; (800bd18 <main+0x46c>)
 800bb06:	f7fd ffed 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 800bb0a:	463a      	mov	r2, r7
 800bb0c:	4651      	mov	r1, sl
 800bb0e:	4881      	ldr	r0, [pc, #516]	; (800bd14 <main+0x468>)
 800bb10:	f7fd ffe8 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 800bb14:	4622      	mov	r2, r4
 800bb16:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800bb1a:	4880      	ldr	r0, [pc, #512]	; (800bd1c <main+0x470>)
 800bb1c:	f7fd ffe2 	bl	8009ae4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin,
 800bb20:	4622      	mov	r2, r4
 800bb22:	21c8      	movs	r1, #200	; 0xc8
 800bb24:	487e      	ldr	r0, [pc, #504]	; (800bd20 <main+0x474>)
 800bb26:	f7fd ffdd 	bl	8009ae4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 800bb2a:	2308      	movs	r3, #8
  HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800bb2c:	4629      	mov	r1, r5
 800bb2e:	487d      	ldr	r0, [pc, #500]	; (800bd24 <main+0x478>)
  GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 800bb30:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb32:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800bb36:	f7fd feb7 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RMII_TXD1_Pin | RMII_TXD0_Pin | RMII_TX_EN_Pin;
 800bb3a:	f44f 43d0 	mov.w	r3, #26624	; 0x6800
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800bb3e:	4629      	mov	r1, r5
 800bb40:	4877      	ldr	r0, [pc, #476]	; (800bd20 <main+0x474>)
  GPIO_InitStruct.Pin = RMII_TXD1_Pin | RMII_TXD0_Pin | RMII_TX_EN_Pin;
 800bb42:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb44:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800bb48:	e9cd 8b17 	strd	r8, fp, [sp, #92]	; 0x5c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800bb4c:	f7fd feac 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_D7_Pin | ULPI_D6_Pin | ULPI_D5_Pin | ULPI_D3_Pin |
 800bb50:	f643 4323 	movw	r3, #15395	; 0x3c23
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800bb54:	4629      	mov	r1, r5
 800bb56:	4874      	ldr	r0, [pc, #464]	; (800bd28 <main+0x47c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800bb58:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pin = ULPI_D7_Pin | ULPI_D6_Pin | ULPI_D5_Pin | ULPI_D3_Pin |
 800bb5c:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 800bb5e:	f8cd 9060 	str.w	r9, [sp, #96]	; 0x60
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb62:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800bb66:	f7fd fe9f 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = SPDIF_RX0_Pin;
 800bb6a:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF8_SPDIFRX;
 800bb6c:	2208      	movs	r2, #8
  HAL_GPIO_Init(SPDIF_RX0_GPIO_Port, &GPIO_InitStruct);
 800bb6e:	4629      	mov	r1, r5
 800bb70:	4867      	ldr	r0, [pc, #412]	; (800bd10 <main+0x464>)
  GPIO_InitStruct.Alternate = GPIO_AF8_SPDIFRX;
 800bb72:	9218      	str	r2, [sp, #96]	; 0x60
  GPIO_InitStruct.Pin = SPDIF_RX0_Pin;
 800bb74:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bb76:	9417      	str	r4, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb78:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(SPDIF_RX0_GPIO_Port, &GPIO_InitStruct);
 800bb7c:	f7fd fe94 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 800bb80:	4629      	mov	r1, r5
 800bb82:	486a      	ldr	r0, [pc, #424]	; (800bd2c <main+0x480>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb84:	9416      	str	r4, [sp, #88]	; 0x58
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800bb86:	e9cd a414 	strd	sl, r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 800bb8a:	f7fd fe8d 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = Audio_INT_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800bb8e:	4b68      	ldr	r3, [pc, #416]	; (800bd30 <main+0x484>)
  GPIO_InitStruct.Pin = Audio_INT_Pin;
 800bb90:	2240      	movs	r2, #64	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 800bb92:	4629      	mov	r1, r5
 800bb94:	485e      	ldr	r0, [pc, #376]	; (800bd10 <main+0x464>)
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800bb96:	9315      	str	r3, [sp, #84]	; 0x54
 800bb98:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bb9a:	9416      	str	r4, [sp, #88]	; 0x58
  GPIO_InitStruct.Pin = Audio_INT_Pin;
 800bb9c:	9214      	str	r2, [sp, #80]	; 0x50
  HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 800bb9e:	f7fd fe83 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = OTG_FS_P_Pin | OTG_FS_N_Pin | OTG_FS_ID_Pin;
 800bba2:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bba6:	4629      	mov	r1, r5
 800bba8:	4862      	ldr	r0, [pc, #392]	; (800bd34 <main+0x488>)
  GPIO_InitStruct.Pin = OTG_FS_P_Pin | OTG_FS_N_Pin | OTG_FS_ID_Pin;
 800bbaa:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800bbac:	e9cd 8917 	strd	r8, r9, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bbb0:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bbb4:	f7fd fe78 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 800bbb8:	2220      	movs	r2, #32
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 800bbba:	4629      	mov	r1, r5
 800bbbc:	4854      	ldr	r0, [pc, #336]	; (800bd10 <main+0x464>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bbbe:	9417      	str	r4, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 800bbc0:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bbc2:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 800bbc6:	f7fd fe6f 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ARDUINO_D7_Pin | ARDUINO_D8_Pin | LCD_DISP_Pin;
 800bbca:	f241 020c 	movw	r2, #4108	; 0x100c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800bbce:	4629      	mov	r1, r5
 800bbd0:	4850      	ldr	r0, [pc, #320]	; (800bd14 <main+0x468>)
  GPIO_InitStruct.Pin = ARDUINO_D7_Pin | ARDUINO_D8_Pin | LCD_DISP_Pin;
 800bbd2:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bbd4:	9417      	str	r4, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bbd6:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800bbda:	f7fd fe65 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = uSD_Detect_Pin;
 800bbde:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 800bbe2:	4629      	mov	r1, r5
 800bbe4:	4854      	ldr	r0, [pc, #336]	; (800bd38 <main+0x48c>)
  GPIO_InitStruct.Pin = uSD_Detect_Pin;
 800bbe6:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bbe8:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 800bbec:	f7fd fe5c 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 800bbf0:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 800bbf2:	4629      	mov	r1, r5
 800bbf4:	4848      	ldr	r0, [pc, #288]	; (800bd18 <main+0x46c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800bbf6:	e9cd 3714 	strd	r3, r7, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bbfa:	e9cd 4416 	strd	r4, r4, [sp, #88]	; 0x58
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 800bbfe:	f7fd fe53 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 800bc02:	2310      	movs	r3, #16
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800bc04:	4629      	mov	r1, r5
 800bc06:	4842      	ldr	r0, [pc, #264]	; (800bd10 <main+0x464>)
  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 800bc08:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc0a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800bc0e:	f7fd fe4b 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = TP3_Pin | NC2_Pin;
 800bc12:	f248 0204 	movw	r2, #32772	; 0x8004
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800bc16:	4629      	mov	r1, r5
 800bc18:	4840      	ldr	r0, [pc, #256]	; (800bd1c <main+0x470>)
  GPIO_InitStruct.Pin = TP3_Pin | NC2_Pin;
 800bc1a:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc1c:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800bc20:	f7fd fe42 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ARDUINO_SCK_D13_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800bc24:	2305      	movs	r3, #5
  HAL_GPIO_Init(ARDUINO_SCK_D13_GPIO_Port, &GPIO_InitStruct);
 800bc26:	4629      	mov	r1, r5
 800bc28:	483a      	ldr	r0, [pc, #232]	; (800bd14 <main+0x468>)
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800bc2a:	9318      	str	r3, [sp, #96]	; 0x60
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bc2c:	e9cd 6614 	strd	r6, r6, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bc30:	e9cd 4416 	strd	r4, r4, [sp, #88]	; 0x58
  HAL_GPIO_Init(ARDUINO_SCK_D13_GPIO_Port, &GPIO_InitStruct);
 800bc34:	f7fd fe38 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 800bc38:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 800bc3c:	4629      	mov	r1, r5
 800bc3e:	4837      	ldr	r0, [pc, #220]	; (800bd1c <main+0x470>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800bc40:	e9cd 3714 	strd	r3, r7, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bc44:	e9cd 4416 	strd	r4, r4, [sp, #88]	; 0x58
  HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 800bc48:	f7fd fe2e 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_11;
 800bc4c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800bc50:	4629      	mov	r1, r5
 800bc52:	4830      	ldr	r0, [pc, #192]	; (800bd14 <main+0x468>)
  GPIO_InitStruct.Pin = GPIO_PIN_11;
 800bc54:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc56:	e9cd 8415 	strd	r8, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800bc5a:	f7fd fe25 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = LCD_INT_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800bc5e:	9b03      	ldr	r3, [sp, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 800bc60:	4629      	mov	r1, r5
 800bc62:	482c      	ldr	r0, [pc, #176]	; (800bd14 <main+0x468>)
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800bc64:	9315      	str	r3, [sp, #84]	; 0x54
  GPIO_InitStruct.Pin = LCD_INT_Pin;
 800bc66:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc6a:	9416      	str	r4, [sp, #88]	; 0x58
  GPIO_InitStruct.Pin = LCD_INT_Pin;
 800bc6c:	9314      	str	r3, [sp, #80]	; 0x50
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 800bc6e:	f7fd fe1b 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 800bc72:	2310      	movs	r3, #16
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 800bc74:	4629      	mov	r1, r5
 800bc76:	4829      	ldr	r0, [pc, #164]	; (800bd1c <main+0x470>)
  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 800bc78:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 800bc7a:	e9cd 8917 	strd	r8, r9, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc7e:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 800bc82:	f7fd fe11 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin;
 800bc86:	23c8      	movs	r3, #200	; 0xc8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800bc88:	4629      	mov	r1, r5
 800bc8a:	4825      	ldr	r0, [pc, #148]	; (800bd20 <main+0x474>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bc8c:	9417      	str	r4, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pin = ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin;
 800bc8e:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bc90:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800bc94:	f7fd fe08 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ULPI_STP_Pin | ULPI_DIR_Pin;
 800bc98:	2305      	movs	r3, #5
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bc9a:	4629      	mov	r1, r5
 800bc9c:	4826      	ldr	r0, [pc, #152]	; (800bd38 <main+0x48c>)
  GPIO_InitStruct.Pin = ULPI_STP_Pin | ULPI_DIR_Pin;
 800bc9e:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 800bca0:	e9cd 8917 	strd	r8, r9, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bca4:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bca8:	f7fd fdfe 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin;
 800bcac:	2332      	movs	r3, #50	; 0x32
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bcae:	4629      	mov	r1, r5
 800bcb0:	4821      	ldr	r0, [pc, #132]	; (800bd38 <main+0x48c>)
  GPIO_InitStruct.Pin = RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin;
 800bcb2:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bcb4:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800bcb8:	e9cd 8b17 	strd	r8, fp, [sp, #92]	; 0x5c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bcbc:	f7fd fdf4 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = RMII_RXER_Pin;
 800bcc0:	2304      	movs	r3, #4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 800bcc2:	4629      	mov	r1, r5
 800bcc4:	4816      	ldr	r0, [pc, #88]	; (800bd20 <main+0x474>)
  GPIO_InitStruct.Pin = RMII_RXER_Pin;
 800bcc6:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bcc8:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 800bccc:	f7fd fdec 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin;
 800bcd0:	2386      	movs	r3, #134	; 0x86
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bcd2:	4629      	mov	r1, r5
 800bcd4:	4817      	ldr	r0, [pc, #92]	; (800bd34 <main+0x488>)
  GPIO_InitStruct.Pin = RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin;
 800bcd6:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bcd8:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800bcdc:	e9cd 8b17 	strd	r8, fp, [sp, #92]	; 0x5c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bce0:	f7fd fde2 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ULPI_CLK_Pin | ULPI_D0_Pin;
 800bce4:	2328      	movs	r3, #40	; 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bce6:	4629      	mov	r1, r5
 800bce8:	4812      	ldr	r0, [pc, #72]	; (800bd34 <main+0x488>)
  GPIO_InitStruct.Pin = ULPI_CLK_Pin | ULPI_D0_Pin;
 800bcea:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800bcec:	e9cd 8917 	strd	r8, r9, [sp, #92]	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bcf0:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800bcf4:	f7fd fdd8 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin | ARDUINO_MOSI_PWM_D11_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800bcf8:	2205      	movs	r2, #5
  GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin | ARDUINO_MOSI_PWM_D11_Pin;
 800bcfa:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800bcfe:	4629      	mov	r1, r5
 800bd00:	4809      	ldr	r0, [pc, #36]	; (800bd28 <main+0x47c>)
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800bd02:	9218      	str	r2, [sp, #96]	; 0x60
  GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin | ARDUINO_MOSI_PWM_D11_Pin;
 800bd04:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bd06:	9417      	str	r4, [sp, #92]	; 0x5c
 800bd08:	e018      	b.n	800bd3c <main+0x490>
 800bd0a:	bf00      	nop
 800bd0c:	40023800 	.word	0x40023800
 800bd10:	40020c00 	.word	0x40020c00
 800bd14:	40022000 	.word	0x40022000
 800bd18:	40022800 	.word	0x40022800
 800bd1c:	40021c00 	.word	0x40021c00
 800bd20:	40021800 	.word	0x40021800
 800bd24:	40021000 	.word	0x40021000
 800bd28:	40020400 	.word	0x40020400
 800bd2c:	40022400 	.word	0x40022400
 800bd30:	10120000 	.word	0x10120000
 800bd34:	40020000 	.word	0x40020000
 800bd38:	40020800 	.word	0x40020800
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800bd3c:	e9cd 6415 	strd	r6, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800bd40:	f7fd fdb2 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = BUTTON1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(BUTTON1_GPIO_Port, &GPIO_InitStruct);
 800bd44:	4629      	mov	r1, r5
 800bd46:	4840      	ldr	r0, [pc, #256]	; (800be48 <main+0x59c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800bd48:	9716      	str	r7, [sp, #88]	; 0x58
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800bd4a:	e9cd 7414 	strd	r7, r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(BUTTON1_GPIO_Port, &GPIO_InitStruct);
 800bd4e:	f7fd fdab 	bl	80098a8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = BUTTON2_Pin;
 800bd52:	f44f 6380 	mov.w	r3, #1024	; 0x400
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(BUTTON2_GPIO_Port, &GPIO_InitStruct);
 800bd56:	4629      	mov	r1, r5
 800bd58:	483c      	ldr	r0, [pc, #240]	; (800be4c <main+0x5a0>)
  GPIO_InitStruct.Pin = BUTTON2_Pin;
 800bd5a:	9314      	str	r3, [sp, #80]	; 0x50
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800bd5c:	e9cd 4715 	strd	r4, r7, [sp, #84]	; 0x54
  RGBbuf = (uint16_t *)&input[80 * 80 * 4];
 800bd60:	4f3b      	ldr	r7, [pc, #236]	; (800be50 <main+0x5a4>)
  HAL_GPIO_Init(BUTTON2_GPIO_Port, &GPIO_InitStruct);
 800bd62:	f7fd fda1 	bl	80098a8 <HAL_GPIO_Init>
  BSP_PB_Init(BUTTON_KEY, BUTTON_MODE_GPIO);
 800bd66:	4621      	mov	r1, r4
 800bd68:	4630      	mov	r0, r6
  RGBbuf = (uint16_t *)&input[80 * 80 * 4];
 800bd6a:	4c3a      	ldr	r4, [pc, #232]	; (800be54 <main+0x5a8>)
  BSP_PB_Init(BUTTON_KEY, BUTTON_MODE_GPIO);
 800bd6c:	f7fc fe0c 	bl	8008988 <BSP_PB_Init>
  lcdsetup();
 800bd70:	f7ff fd5a 	bl	800b828 <_Z8lcdsetupv>
 800bd74:	f44f 4296 	mov.w	r2, #19200	; 0x4b00
 800bd78:	4937      	ldr	r1, [pc, #220]	; (800be58 <main+0x5ac>)
 800bd7a:	f5a7 40c8 	sub.w	r0, r7, #25600	; 0x6400
 800bd7e:	f002 f8f6 	bl	800df6e <memcpy>
  RGBbuf = (uint16_t *)&input[80 * 80 * 4];
 800bd82:	6027      	str	r7, [r4, #0]
  start = HAL_GetTick();
 800bd84:	f7fd fabc 	bl	8009300 <HAL_GetTick>
      RGBbuf[j + RES_W * i] = (uint16_t)(r | g | b);
 800bd88:	f8d4 e000 	ldr.w	lr, [r4]
  start = HAL_GetTick();
 800bd8c:	4606      	mov	r6, r0
 800bd8e:	f5a7 59c8 	sub.w	r9, r7, #6400	; 0x1900
 800bd92:	f5a7 40c8 	sub.w	r0, r7, #25600	; 0x6400
 800bd96:	f1ae 0802 	sub.w	r8, lr, #2
 800bd9a:	f100 01f0 	add.w	r1, r0, #240	; 0xf0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800bd9e:	4642      	mov	r2, r8
      uint8_t red = (int32_t)input[(80 * i + j) * 3] + 128;
 800bda0:	7803      	ldrb	r3, [r0, #0]
 800bda2:	3003      	adds	r0, #3
      uint8_t green = (int32_t)input[(80 * i + j) * 3 + 1] + 128;
 800bda4:	f810 7c02 	ldrb.w	r7, [r0, #-2]
      uint16_t r = ((red >> 3) & 0x1f) << 11;
 800bda8:	f083 0380 	eor.w	r3, r3, #128	; 0x80
      uint8_t blue = (int32_t)input[(80 * i + j) * 3 + 2] + 128;
 800bdac:	f810 cc01 	ldrb.w	ip, [r0, #-1]
      uint16_t g = ((green >> 2) & 0x3f) << 5;
 800bdb0:	f087 0780 	eor.w	r7, r7, #128	; 0x80
    for (int j = 0; j < RES_W; j++) {
 800bdb4:	4281      	cmp	r1, r0
      uint16_t r = ((red >> 3) & 0x1f) << 11;
 800bdb6:	ea4f 03d3 	mov.w	r3, r3, lsr #3
      uint16_t b = (blue >> 3) & 0x1f;
 800bdba:	f08c 0c80 	eor.w	ip, ip, #128	; 0x80
      uint16_t g = ((green >> 2) & 0x3f) << 5;
 800bdbe:	ea4f 0797 	mov.w	r7, r7, lsr #2
      uint16_t r = ((red >> 3) & 0x1f) << 11;
 800bdc2:	ea4f 23c3 	mov.w	r3, r3, lsl #11
      RGBbuf[j + RES_W * i] = (uint16_t)(r | g | b);
 800bdc6:	ea43 1347 	orr.w	r3, r3, r7, lsl #5
 800bdca:	ea43 03dc 	orr.w	r3, r3, ip, lsr #3
 800bdce:	f822 3f02 	strh.w	r3, [r2, #2]!
    for (int j = 0; j < RES_W; j++) {
 800bdd2:	d1e5      	bne.n	800bda0 <main+0x4f4>
  for (int i = 0; i < RES_W; i++) {
 800bdd4:	4589      	cmp	r9, r1
 800bdd6:	f108 08a0 	add.w	r8, r8, #160	; 0xa0
 800bdda:	d1de      	bne.n	800bd9a <main+0x4ee>
  loadRGB565LCD(10, 10, RES_W, RES_W, RGBbuf, 3);
 800bddc:	210a      	movs	r1, #10
 800bdde:	2350      	movs	r3, #80	; 0x50
 800bde0:	2203      	movs	r2, #3
 800bde2:	4608      	mov	r0, r1
 800bde4:	e9cd e200 	strd	lr, r2, [sp]
 800bde8:	461a      	mov	r2, r3
 800bdea:	f7ff fb11 	bl	800b410 <_Z13loadRGB565LCDmmmmPth>
  main_vision_transformer(RGBbuf);
 800bdee:	6820      	ldr	r0, [r4, #0]
 800bdf0:	f7ff fa90 	bl	800b314 <_Z23main_vision_transformerPt>
	if (out_int[0] > out_int[1]) {
 800bdf4:	4b19      	ldr	r3, [pc, #100]	; (800be5c <main+0x5b0>)
 800bdf6:	f993 7000 	ldrsb.w	r7, [r3]
 800bdfa:	f993 3001 	ldrsb.w	r3, [r3, #1]
 800bdfe:	429f      	cmp	r7, r3
 800be00:	bfcc      	ite	gt
 800be02:	2700      	movgt	r7, #0
 800be04:	2701      	movle	r7, #1
	end = HAL_GetTick();
 800be06:	f7fd fa7b 	bl	8009300 <HAL_GetTick>
	sprintf(showbuf, " Inference ");
 800be0a:	4b15      	ldr	r3, [pc, #84]	; (800be60 <main+0x5b4>)
	end = HAL_GetTick();
 800be0c:	4604      	mov	r4, r0
	sprintf(showbuf, " Inference ");
 800be0e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800be12:	e885 0007 	stmia.w	r5, {r0, r1, r2}
	printLog("Inference \n\r");
 800be16:	4813      	ldr	r0, [pc, #76]	; (800be64 <main+0x5b8>)
 800be18:	f7ff f9e8 	bl	800b1ec <_Z8printLogPKc>
	displaystring(showbuf, 273, 10);
 800be1c:	4628      	mov	r0, r5
 800be1e:	220a      	movs	r2, #10
 800be20:	f240 1111 	movw	r1, #273	; 0x111
 800be24:	f7ff fb52 	bl	800b4cc <_Z13displaystringPcii>
	detectResponse(person, end - start, t_mode, 0, 0);
 800be28:	1ba3      	subs	r3, r4, r6
 800be2a:	4638      	mov	r0, r7
 800be2c:	ee00 3a10 	vmov	s0, r3
 800be30:	2300      	movs	r3, #0
 800be32:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 800be36:	461a      	mov	r2, r3
 800be38:	4619      	mov	r1, r3
 800be3a:	f7ff fb51 	bl	800b4e0 <_Z14detectResponseifiii>
}
 800be3e:	2000      	movs	r0, #0
 800be40:	b03b      	add	sp, #236	; 0xec
 800be42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be46:	bf00      	nop
 800be48:	40020000 	.word	0x40020000
 800be4c:	40021400 	.word	0x40021400
 800be50:	2000d4b8 	.word	0x2000d4b8
 800be54:	200070b4 	.word	0x200070b4
 800be58:	080184d4 	.word	0x080184d4
 800be5c:	2001dfe0 	.word	0x2001dfe0
 800be60:	0801cfdc 	.word	0x0801cfdc
 800be64:	0801cfe8 	.word	0x0801cfe8

0800be68 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800be68:	f8df d034 	ldr.w	sp, [pc, #52]	; 800bea0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800be6c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800be6e:	e003      	b.n	800be78 <LoopCopyDataInit>

0800be70 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800be70:	4b0c      	ldr	r3, [pc, #48]	; (800bea4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800be72:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800be74:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800be76:	3104      	adds	r1, #4

0800be78 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800be78:	480b      	ldr	r0, [pc, #44]	; (800bea8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800be7a:	4b0c      	ldr	r3, [pc, #48]	; (800beac <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800be7c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800be7e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800be80:	d3f6      	bcc.n	800be70 <CopyDataInit>
  ldr  r2, =_sbss
 800be82:	4a0b      	ldr	r2, [pc, #44]	; (800beb0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800be84:	e002      	b.n	800be8c <LoopFillZerobss>

0800be86 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800be86:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800be88:	f842 3b04 	str.w	r3, [r2], #4

0800be8c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800be8c:	4b09      	ldr	r3, [pc, #36]	; (800beb4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800be8e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800be90:	d3f9      	bcc.n	800be86 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800be92:	f000 f929 	bl	800c0e8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800be96:	f001 fded 	bl	800da74 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800be9a:	f7ff fd07 	bl	800b8ac <main>
  bx  lr    
 800be9e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 800bea0:	2004ffff 	.word	0x2004ffff
  ldr  r3, =_sidata
 800bea4:	0801faa4 	.word	0x0801faa4
  ldr  r0, =_sdata
 800bea8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800beac:	200009d8 	.word	0x200009d8
  ldr  r2, =_sbss
 800beb0:	200009d8 	.word	0x200009d8
  ldr  r3, = _ebss
 800beb4:	2001e058 	.word	0x2001e058

0800beb8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800beb8:	e7fe      	b.n	800beb8 <ADC_IRQHandler>
	...

0800bebc <HAL_UART_MspInit>:
}

void HAL_UART_MspInit(UART_HandleTypeDef *huart) {

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if (huart->Instance == USART1) {
 800bebc:	6803      	ldr	r3, [r0, #0]
 800bebe:	4a31      	ldr	r2, [pc, #196]	; (800bf84 <HAL_UART_MspInit+0xc8>)
void HAL_UART_MspInit(UART_HandleTypeDef *huart) {
 800bec0:	b570      	push	{r4, r5, r6, lr}
  if (huart->Instance == USART1) {
 800bec2:	4293      	cmp	r3, r2
void HAL_UART_MspInit(UART_HandleTypeDef *huart) {
 800bec4:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800bec6:	f04f 0400 	mov.w	r4, #0
 800beca:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800bece:	e9cd 4407 	strd	r4, r4, [sp, #28]
 800bed2:	9409      	str	r4, [sp, #36]	; 0x24
  if (huart->Instance == USART1) {
 800bed4:	d025      	beq.n	800bf22 <HAL_UART_MspInit+0x66>
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);

  } else if (huart->Instance == USART6) {
 800bed6:	4a2c      	ldr	r2, [pc, #176]	; (800bf88 <HAL_UART_MspInit+0xcc>)
 800bed8:	4293      	cmp	r3, r2
 800beda:	d001      	beq.n	800bee0 <HAL_UART_MspInit+0x24>
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  }
}
 800bedc:	b00a      	add	sp, #40	; 0x28
 800bede:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_USART6_CLK_ENABLE();
 800bee0:	4b2a      	ldr	r3, [pc, #168]	; (800bf8c <HAL_UART_MspInit+0xd0>)
    GPIO_InitStruct.Pin = ARDUINO_RX_D0_Pin | ARDUINO_TX_D1_Pin;
 800bee2:	20c0      	movs	r0, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bee4:	2602      	movs	r6, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bee6:	a905      	add	r1, sp, #20
    __HAL_RCC_USART6_CLK_ENABLE();
 800bee8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800beea:	2503      	movs	r5, #3
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 800beec:	2408      	movs	r4, #8
    __HAL_RCC_USART6_CLK_ENABLE();
 800beee:	f042 0220 	orr.w	r2, r2, #32
 800bef2:	645a      	str	r2, [r3, #68]	; 0x44
 800bef4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800bef6:	f002 0220 	and.w	r2, r2, #32
 800befa:	9203      	str	r2, [sp, #12]
 800befc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800befe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bf00:	f042 0204 	orr.w	r2, r2, #4
 800bf04:	631a      	str	r2, [r3, #48]	; 0x30
 800bf06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pin = ARDUINO_RX_D0_Pin | ARDUINO_TX_D1_Pin;
 800bf08:	9005      	str	r0, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800bf0a:	f003 0304 	and.w	r3, r3, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bf0e:	4820      	ldr	r0, [pc, #128]	; (800bf90 <HAL_UART_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bf10:	9606      	str	r6, [sp, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800bf12:	9304      	str	r3, [sp, #16]
 800bf14:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 800bf16:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800bf1a:	f7fd fcc5 	bl	80098a8 <HAL_GPIO_Init>
}
 800bf1e:	b00a      	add	sp, #40	; 0x28
 800bf20:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 800bf22:	4b1a      	ldr	r3, [pc, #104]	; (800bf8c <HAL_UART_MspInit+0xd0>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bf24:	2602      	movs	r6, #2
    GPIO_InitStruct.Pin = VCP_RX_Pin;
 800bf26:	2080      	movs	r0, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800bf28:	2507      	movs	r5, #7
    __HAL_RCC_USART1_CLK_ENABLE();
 800bf2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 800bf2c:	a905      	add	r1, sp, #20
    __HAL_RCC_USART1_CLK_ENABLE();
 800bf2e:	f042 0210 	orr.w	r2, r2, #16
 800bf32:	645a      	str	r2, [r3, #68]	; 0x44
 800bf34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800bf36:	f002 0210 	and.w	r2, r2, #16
 800bf3a:	9200      	str	r2, [sp, #0]
 800bf3c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800bf3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bf40:	4332      	orrs	r2, r6
 800bf42:	631a      	str	r2, [r3, #48]	; 0x30
 800bf44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bf46:	4032      	ands	r2, r6
 800bf48:	9201      	str	r2, [sp, #4]
 800bf4a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800bf4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bf4e:	f042 0201 	orr.w	r2, r2, #1
 800bf52:	631a      	str	r2, [r3, #48]	; 0x30
 800bf54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pin = VCP_RX_Pin;
 800bf56:	9005      	str	r0, [sp, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800bf58:	f003 0301 	and.w	r3, r3, #1
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 800bf5c:	480d      	ldr	r0, [pc, #52]	; (800bf94 <HAL_UART_MspInit+0xd8>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bf5e:	9606      	str	r6, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800bf60:	9302      	str	r3, [sp, #8]
 800bf62:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800bf64:	9509      	str	r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 800bf66:	f7fd fc9f 	bl	80098a8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = VCP_TX_Pin;
 800bf6a:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 800bf6e:	a905      	add	r1, sp, #20
 800bf70:	4809      	ldr	r0, [pc, #36]	; (800bf98 <HAL_UART_MspInit+0xdc>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800bf72:	9606      	str	r6, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800bf74:	9509      	str	r5, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = VCP_TX_Pin;
 800bf76:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800bf78:	e9cd 4407 	strd	r4, r4, [sp, #28]
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 800bf7c:	f7fd fc94 	bl	80098a8 <HAL_GPIO_Init>
}
 800bf80:	b00a      	add	sp, #40	; 0x28
 800bf82:	bd70      	pop	{r4, r5, r6, pc}
 800bf84:	40011000 	.word	0x40011000
 800bf88:	40011400 	.word	0x40011400
 800bf8c:	40023800 	.word	0x40023800
 800bf90:	40020800 	.word	0x40020800
 800bf94:	40020400 	.word	0x40020400
 800bf98:	40020000 	.word	0x40020000

0800bf9c <HAL_LTDC_MspInit>:
  }
}
void HAL_LTDC_MspInit(LTDC_HandleTypeDef *hltdc) {
  GPIO_InitTypeDef GPIO_Init_Structure;

  __HAL_RCC_LTDC_CLK_ENABLE();
 800bf9c:	4b43      	ldr	r3, [pc, #268]	; (800c0ac <HAL_LTDC_MspInit+0x110>)
  GPIO_Init_Structure.Pin = GPIO_PIN_4;
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
  GPIO_Init_Structure.Pull = GPIO_NOPULL;
  GPIO_Init_Structure.Speed = GPIO_SPEED_FAST;
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
  HAL_GPIO_Init(GPIOE, &GPIO_Init_Structure);
 800bf9e:	4844      	ldr	r0, [pc, #272]	; (800c0b0 <HAL_LTDC_MspInit+0x114>)
  __HAL_RCC_LTDC_CLK_ENABLE();
 800bfa0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800bfa2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
void HAL_LTDC_MspInit(LTDC_HandleTypeDef *hltdc) {
 800bfa6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __HAL_RCC_LTDC_CLK_ENABLE();
 800bfaa:	645a      	str	r2, [r3, #68]	; 0x44
void HAL_LTDC_MspInit(LTDC_HandleTypeDef *hltdc) {
 800bfac:	b08d      	sub	sp, #52	; 0x34
  __HAL_RCC_LTDC_CLK_ENABLE();
 800bfae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  GPIO_Init_Structure.Pin = GPIO_PIN_4;
 800bfb0:	2510      	movs	r5, #16
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
 800bfb2:	2402      	movs	r4, #2
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
 800bfb4:	260e      	movs	r6, #14
  __HAL_RCC_LTDC_CLK_ENABLE();
 800bfb6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
  GPIO_Init_Structure.Pull = GPIO_NOPULL;
 800bfba:	2700      	movs	r7, #0
  HAL_GPIO_Init(GPIOE, &GPIO_Init_Structure);
 800bfbc:	a907      	add	r1, sp, #28

  GPIO_Init_Structure.Pin = GPIO_PIN_12;
 800bfbe:	f44f 5980 	mov.w	r9, #4096	; 0x1000
  __HAL_RCC_LTDC_CLK_ENABLE();
 800bfc2:	9201      	str	r2, [sp, #4]
 800bfc4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800bfc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30

  GPIO_Init_Structure.Pin = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 |
                            GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);
 800bfc8:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 800c0c0 <HAL_LTDC_MspInit+0x124>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800bfcc:	432a      	orrs	r2, r5
 800bfce:	631a      	str	r2, [r3, #48]	; 0x30
 800bfd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfd2:	402a      	ands	r2, r5
 800bfd4:	9202      	str	r2, [sp, #8]
 800bfd6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800bfd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfda:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800bfde:	631a      	str	r2, [r3, #48]	; 0x30
 800bfe0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfe2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800bfe6:	9203      	str	r2, [sp, #12]
 800bfe8:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800bfea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfec:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bff0:	631a      	str	r2, [r3, #48]	; 0x30
 800bff2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bff4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800bff8:	9204      	str	r2, [sp, #16]
 800bffa:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800bffc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bffe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c002:	631a      	str	r2, [r3, #48]	; 0x30
 800c004:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c006:	f402 7200 	and.w	r2, r2, #512	; 0x200
 800c00a:	9205      	str	r2, [sp, #20]
 800c00c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800c00e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c010:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c014:	631a      	str	r2, [r3, #48]	; 0x30
 800c016:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  GPIO_Init_Structure.Pin = GPIO_PIN_4;
 800c018:	9507      	str	r5, [sp, #28]
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);

  GPIO_Init_Structure.Pin = GPIO_PIN_12;
  GPIO_Init_Structure.Mode = GPIO_MODE_OUTPUT_PP;
 800c01a:	2501      	movs	r5, #1
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800c01c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
 800c020:	9408      	str	r4, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800c022:	9306      	str	r3, [sp, #24]
 800c024:	9b06      	ldr	r3, [sp, #24]
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
 800c026:	960b      	str	r6, [sp, #44]	; 0x2c
  GPIO_Init_Structure.Speed = GPIO_SPEED_FAST;
 800c028:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_Init_Structure);
 800c02c:	f7fd fc3c 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_Init_Structure.Alternate = GPIO_AF9_LTDC;
 800c030:	2309      	movs	r3, #9
  HAL_GPIO_Init(GPIOG, &GPIO_Init_Structure);
 800c032:	a907      	add	r1, sp, #28
 800c034:	481f      	ldr	r0, [pc, #124]	; (800c0b4 <HAL_LTDC_MspInit+0x118>)
  GPIO_Init_Structure.Alternate = GPIO_AF9_LTDC;
 800c036:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);
 800c038:	4f1f      	ldr	r7, [pc, #124]	; (800c0b8 <HAL_LTDC_MspInit+0x11c>)
  GPIO_Init_Structure.Pin = GPIO_PIN_12;
 800c03a:	e9cd 9407 	strd	r9, r4, [sp, #28]
  HAL_GPIO_Init(GPIOG, &GPIO_Init_Structure);
 800c03e:	f7fd fc33 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_Init_Structure.Pin = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 |
 800c042:	f44f 4367 	mov.w	r3, #59136	; 0xe700
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);
 800c046:	a907      	add	r1, sp, #28
 800c048:	4640      	mov	r0, r8
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
 800c04a:	9408      	str	r4, [sp, #32]
  GPIO_Init_Structure.Pin = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 |
 800c04c:	9307      	str	r3, [sp, #28]
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
 800c04e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);
 800c050:	f7fd fc2a 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_Init_Structure.Pin =
 800c054:	f64e 73ff 	movw	r3, #61439	; 0xefff
  HAL_GPIO_Init(GPIOJ, &GPIO_Init_Structure);
 800c058:	a907      	add	r1, sp, #28
 800c05a:	4818      	ldr	r0, [pc, #96]	; (800c0bc <HAL_LTDC_MspInit+0x120>)
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
 800c05c:	9408      	str	r4, [sp, #32]
  GPIO_Init_Structure.Pin =
 800c05e:	9307      	str	r3, [sp, #28]
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
 800c060:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOJ, &GPIO_Init_Structure);
 800c062:	f7fd fc21 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_Init_Structure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 |
 800c066:	23f7      	movs	r3, #247	; 0xf7
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);
 800c068:	a907      	add	r1, sp, #28
 800c06a:	4638      	mov	r0, r7
  GPIO_Init_Structure.Mode = GPIO_MODE_AF_PP;
 800c06c:	9408      	str	r4, [sp, #32]
  GPIO_Init_Structure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 |
 800c06e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);

  GPIO_Init_Structure.Pin = GPIO_PIN_3;
 800c070:	2408      	movs	r4, #8
  GPIO_Init_Structure.Alternate = GPIO_AF14_LTDC;
 800c072:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);
 800c074:	f7fd fc18 	bl	80098a8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);
 800c078:	a907      	add	r1, sp, #28
 800c07a:	4640      	mov	r0, r8
  GPIO_Init_Structure.Mode = GPIO_MODE_OUTPUT_PP;
 800c07c:	e9cd 9507 	strd	r9, r5, [sp, #28]
  HAL_GPIO_Init(GPIOI, &GPIO_Init_Structure);
 800c080:	f7fd fc12 	bl	80098a8 <HAL_GPIO_Init>
  GPIO_Init_Structure.Mode = GPIO_MODE_OUTPUT_PP;
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);
 800c084:	a907      	add	r1, sp, #28
 800c086:	4638      	mov	r0, r7
  GPIO_Init_Structure.Pin = GPIO_PIN_3;
 800c088:	e9cd 4507 	strd	r4, r5, [sp, #28]
  HAL_GPIO_Init(GPIOK, &GPIO_Init_Structure);
 800c08c:	f7fd fc0c 	bl	80098a8 <HAL_GPIO_Init>

  HAL_GPIO_WritePin(LCD_DISP_GPIO_PORT, LCD_DISP_PIN, GPIO_PIN_SET);
 800c090:	462a      	mov	r2, r5
 800c092:	4649      	mov	r1, r9
 800c094:	4640      	mov	r0, r8
 800c096:	f7fd fd25 	bl	8009ae4 <HAL_GPIO_WritePin>

  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);
 800c09a:	462a      	mov	r2, r5
 800c09c:	4621      	mov	r1, r4
 800c09e:	4638      	mov	r0, r7
 800c0a0:	f7fd fd20 	bl	8009ae4 <HAL_GPIO_WritePin>
}
 800c0a4:	b00d      	add	sp, #52	; 0x34
 800c0a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c0aa:	bf00      	nop
 800c0ac:	40023800 	.word	0x40023800
 800c0b0:	40021000 	.word	0x40021000
 800c0b4:	40021800 	.word	0x40021800
 800c0b8:	40022800 	.word	0x40022800
 800c0bc:	40022400 	.word	0x40022400
 800c0c0:	40022000 	.word	0x40022000

0800c0c4 <NMI_Handler>:
 * Target ISA:  ARMv7E-M
 * -------------------------------------------------------------------- */
  
#include "stm32f7xx_it.h"
#include "main.h"
void NMI_Handler(void) {}
 800c0c4:	4770      	bx	lr
 800c0c6:	bf00      	nop

0800c0c8 <HardFault_Handler>:

void HardFault_Handler(void) {
 800c0c8:	e7fe      	b.n	800c0c8 <HardFault_Handler>
 800c0ca:	bf00      	nop

0800c0cc <MemManage_Handler>:

  while (1) {
  }
}

void MemManage_Handler(void) {
 800c0cc:	e7fe      	b.n	800c0cc <MemManage_Handler>
 800c0ce:	bf00      	nop

0800c0d0 <BusFault_Handler>:

  while (1) {
  }
}

void BusFault_Handler(void) {
 800c0d0:	e7fe      	b.n	800c0d0 <BusFault_Handler>
 800c0d2:	bf00      	nop

0800c0d4 <UsageFault_Handler>:

  while (1) {
  }
}

void UsageFault_Handler(void) {
 800c0d4:	e7fe      	b.n	800c0d4 <UsageFault_Handler>
 800c0d6:	bf00      	nop

0800c0d8 <SVC_Handler>:
 800c0d8:	4770      	bx	lr
 800c0da:	bf00      	nop

0800c0dc <DebugMon_Handler>:
 800c0dc:	4770      	bx	lr
 800c0de:	bf00      	nop

0800c0e0 <PendSV_Handler>:
 800c0e0:	4770      	bx	lr
 800c0e2:	bf00      	nop

0800c0e4 <SysTick_Handler>:

void DebugMon_Handler(void) {}

void PendSV_Handler(void) {}

void SysTick_Handler(void) { HAL_IncTick(); }
 800c0e4:	f7fd b900 	b.w	80092e8 <HAL_IncTick>

0800c0e8 <SystemInit>:
                                   1, 2, 3, 4, 6, 7, 8, 9};
const uint8_t APBPrescTable[8] = {0, 0, 0, 0, 1, 2, 3, 4};
void SystemInit(void) {

#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2));
 800c0e8:	4a0f      	ldr	r2, [pc, #60]	; (800c128 <SystemInit+0x40>)
#endif

  RCC->CR |= (uint32_t)0x00000001;
 800c0ea:	4b10      	ldr	r3, [pc, #64]	; (800c12c <SystemInit+0x44>)
  SCB->CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2));
 800c0ec:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88

  RCC->CFGR = 0x00000000;

  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800c0f0:	490f      	ldr	r1, [pc, #60]	; (800c130 <SystemInit+0x48>)
  SCB->CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2));
 800c0f2:	f440 0070 	orr.w	r0, r0, #15728640	; 0xf00000
void SystemInit(void) {
 800c0f6:	b470      	push	{r4, r5, r6}
  SCB->CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2));
 800c0f8:	f8c2 0088 	str.w	r0, [r2, #136]	; 0x88
  RCC->CFGR = 0x00000000;
 800c0fc:	2400      	movs	r4, #0
  RCC->CR |= (uint32_t)0x00000001;
 800c0fe:	6818      	ldr	r0, [r3, #0]
  RCC->CIR = 0x00000000;

#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET;
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET;
 800c100:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
  RCC->PLLCFGR = 0x24003010;
 800c104:	4e0b      	ldr	r6, [pc, #44]	; (800c134 <SystemInit+0x4c>)
  RCC->CR |= (uint32_t)0x00000001;
 800c106:	f040 0001 	orr.w	r0, r0, #1
 800c10a:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
 800c10c:	609c      	str	r4, [r3, #8]
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800c10e:	6818      	ldr	r0, [r3, #0]
 800c110:	4001      	ands	r1, r0
 800c112:	6019      	str	r1, [r3, #0]
  RCC->PLLCFGR = 0x24003010;
 800c114:	605e      	str	r6, [r3, #4]
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800c116:	6819      	ldr	r1, [r3, #0]
 800c118:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 800c11c:	6019      	str	r1, [r3, #0]
  RCC->CIR = 0x00000000;
 800c11e:	60dc      	str	r4, [r3, #12]
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET;
 800c120:	6095      	str	r5, [r2, #8]
#endif
}
 800c122:	bc70      	pop	{r4, r5, r6}
 800c124:	4770      	bx	lr
 800c126:	bf00      	nop
 800c128:	e000ed00 	.word	0xe000ed00
 800c12c:	40023800 	.word	0x40023800
 800c130:	fef6ffff 	.word	0xfef6ffff
 800c134:	24003010 	.word	0x24003010

0800c138 <__io_putchar>:
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800c138:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800c13c:	f8d3 2e80 	ldr.w	r2, [r3, #3712]	; 0xe80
 800c140:	07d1      	lsls	r1, r2, #31
 800c142:	d503      	bpl.n	800c14c <__io_putchar+0x14>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 800c144:	f8d3 2e00 	ldr.w	r2, [r3, #3584]	; 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800c148:	07d2      	lsls	r2, r2, #31
 800c14a:	d401      	bmi.n	800c150 <__io_putchar+0x18>
  
#include "stm32746g_discovery.h"

volatile int32_t ITM_RxBuffer;

int __io_putchar(int ch) { return ITM_SendChar(ch); }
 800c14c:	4770      	bx	lr
  {
    while (ITM->PORT[0U].u32 == 0UL)
    {
      __NOP();
 800c14e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800c150:	681a      	ldr	r2, [r3, #0]
 800c152:	2a00      	cmp	r2, #0
 800c154:	d0fb      	beq.n	800c14e <__io_putchar+0x16>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800c156:	b2c3      	uxtb	r3, r0
 800c158:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800c15c:	7013      	strb	r3, [r2, #0]
 800c15e:	4770      	bx	lr

0800c160 <__io_getchar>:
 */
__STATIC_INLINE int32_t ITM_ReceiveChar (void)
{
  int32_t ch = -1;                           /* no character available */

  if (ITM_RxBuffer != ITM_RXBUFFER_EMPTY)
 800c160:	4b05      	ldr	r3, [pc, #20]	; (800c178 <__io_getchar+0x18>)
 800c162:	4a06      	ldr	r2, [pc, #24]	; (800c17c <__io_getchar+0x1c>)
 800c164:	6819      	ldr	r1, [r3, #0]
 800c166:	4291      	cmp	r1, r2
 800c168:	d002      	beq.n	800c170 <__io_getchar+0x10>
  {
    ch = ITM_RxBuffer;
 800c16a:	6818      	ldr	r0, [r3, #0]
    ITM_RxBuffer = ITM_RXBUFFER_EMPTY;       /* ready for next character */
 800c16c:	601a      	str	r2, [r3, #0]
 800c16e:	4770      	bx	lr
  int32_t ch = -1;                           /* no character available */
 800c170:	f04f 30ff 	mov.w	r0, #4294967295

int __io_getchar(void) { return ITM_ReceiveChar(); }
 800c174:	4770      	bx	lr
 800c176:	bf00      	nop
 800c178:	2001e044 	.word	0x2001e044
 800c17c:	5aa55aa5 	.word	0x5aa55aa5

0800c180 <_write>:

extern int errno;
extern int __io_putchar(int ch) __attribute__((weak));
extern int __io_getchar(void) __attribute__((weak));

int _write(int fd, const void *buffer, unsigned int count) {
 800c180:	b570      	push	{r4, r5, r6, lr}
  unsigned int i;

  for (i = 0; i < count; i++) {
 800c182:	4616      	mov	r6, r2
 800c184:	b142      	cbz	r2, 800c198 <_write+0x18>
 800c186:	188d      	adds	r5, r1, r2
 800c188:	1e4c      	subs	r4, r1, #1
 800c18a:	3d01      	subs	r5, #1
    __io_putchar(((char *)buffer)[i]);
 800c18c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 800c190:	f7ff ffd2 	bl	800c138 <__io_putchar>
  for (i = 0; i < count; i++) {
 800c194:	42ac      	cmp	r4, r5
 800c196:	d1f9      	bne.n	800c18c <_write+0xc>
  }

  return count;
}
 800c198:	4630      	mov	r0, r6
 800c19a:	bd70      	pop	{r4, r5, r6, pc}

0800c19c <_read>:

int _read(int fd, void *buffer, unsigned int count) {
 800c19c:	b570      	push	{r4, r5, r6, lr}
  unsigned int i;

  for (i = 0; i < count; i++) {
 800c19e:	4616      	mov	r6, r2
 800c1a0:	b142      	cbz	r2, 800c1b4 <_read+0x18>
 800c1a2:	188d      	adds	r5, r1, r2
 800c1a4:	1e4c      	subs	r4, r1, #1
 800c1a6:	3d01      	subs	r5, #1
    ((char *)buffer)[i] = __io_getchar();
 800c1a8:	f7ff ffda 	bl	800c160 <__io_getchar>
 800c1ac:	f804 0f01 	strb.w	r0, [r4, #1]!
  for (i = 0; i < count; i++) {
 800c1b0:	42ac      	cmp	r4, r5
 800c1b2:	d1f9      	bne.n	800c1a8 <_read+0xc>
  }

  return count;
}
 800c1b4:	4630      	mov	r0, r6
 800c1b6:	bd70      	pop	{r4, r5, r6, pc}

0800c1b8 <_close>:

int _close(int fd) { return -1; }
 800c1b8:	f04f 30ff 	mov.w	r0, #4294967295
 800c1bc:	4770      	bx	lr
 800c1be:	bf00      	nop

0800c1c0 <_fstat>:

int _fstat(int fd, void *buffer) { return -1; }
 800c1c0:	f04f 30ff 	mov.w	r0, #4294967295
 800c1c4:	4770      	bx	lr
 800c1c6:	bf00      	nop

0800c1c8 <_isatty>:
 800c1c8:	f04f 30ff 	mov.w	r0, #4294967295
 800c1cc:	4770      	bx	lr
 800c1ce:	bf00      	nop

0800c1d0 <_lseek>:

int _isatty(int fd) { return -1; }

long _lseek(int fd, long offset, int origin) { return -1; }
 800c1d0:	f04f 30ff 	mov.w	r0, #4294967295
 800c1d4:	4770      	bx	lr
 800c1d6:	bf00      	nop

0800c1d8 <_exit>:

void _exit(int status) {}
 800c1d8:	4770      	bx	lr
 800c1da:	bf00      	nop

0800c1dc <_ZdaPv>:
 800c1dc:	f000 b828 	b.w	800c230 <_ZdlPv>

0800c1e0 <_Znaj>:
 800c1e0:	f000 b800 	b.w	800c1e4 <_Znwj>

0800c1e4 <_Znwj>:
 800c1e4:	b510      	push	{r4, lr}
 800c1e6:	2800      	cmp	r0, #0
 800c1e8:	bf14      	ite	ne
 800c1ea:	4604      	movne	r4, r0
 800c1ec:	2401      	moveq	r4, #1
 800c1ee:	4620      	mov	r0, r4
 800c1f0:	f001 fc68 	bl	800dac4 <malloc>
 800c1f4:	b100      	cbz	r0, 800c1f8 <_Znwj+0x14>
 800c1f6:	bd10      	pop	{r4, pc}
 800c1f8:	f000 f812 	bl	800c220 <_ZSt15get_new_handlerv>
 800c1fc:	b108      	cbz	r0, 800c202 <_Znwj+0x1e>
 800c1fe:	4780      	blx	r0
 800c200:	e7f5      	b.n	800c1ee <_Znwj+0xa>
 800c202:	2004      	movs	r0, #4
 800c204:	f000 f890 	bl	800c328 <__cxa_allocate_exception>
 800c208:	4b02      	ldr	r3, [pc, #8]	; (800c214 <_Znwj+0x30>)
 800c20a:	6003      	str	r3, [r0, #0]
 800c20c:	4a02      	ldr	r2, [pc, #8]	; (800c218 <_Znwj+0x34>)
 800c20e:	4903      	ldr	r1, [pc, #12]	; (800c21c <_Znwj+0x38>)
 800c210:	f000 f932 	bl	800c478 <__cxa_throw>
 800c214:	0801eafc 	.word	0x0801eafc
 800c218:	0800c3a9 	.word	0x0800c3a9
 800c21c:	0801ead8 	.word	0x0801ead8

0800c220 <_ZSt15get_new_handlerv>:
 800c220:	4b02      	ldr	r3, [pc, #8]	; (800c22c <_ZSt15get_new_handlerv+0xc>)
 800c222:	6818      	ldr	r0, [r3, #0]
 800c224:	f3bf 8f5b 	dmb	ish
 800c228:	4770      	bx	lr
 800c22a:	bf00      	nop
 800c22c:	2001dfe4 	.word	0x2001dfe4

0800c230 <_ZdlPv>:
 800c230:	f001 bc50 	b.w	800dad4 <free>

0800c234 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 800c234:	b4f0      	push	{r4, r5, r6, r7}
 800c236:	4c22      	ldr	r4, [pc, #136]	; (800c2c0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>)
 800c238:	6863      	ldr	r3, [r4, #4]
 800c23a:	f1a0 0608 	sub.w	r6, r0, #8
 800c23e:	b31b      	cbz	r3, 800c288 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800c240:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800c244:	19f5      	adds	r5, r6, r7
 800c246:	42ab      	cmp	r3, r5
 800c248:	d81e      	bhi.n	800c288 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800c24a:	d022      	beq.n	800c292 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5e>
 800c24c:	6859      	ldr	r1, [r3, #4]
 800c24e:	2900      	cmp	r1, #0
 800c250:	d031      	beq.n	800c2b6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x82>
 800c252:	428d      	cmp	r5, r1
 800c254:	d303      	bcc.n	800c25e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x2a>
 800c256:	e02e      	b.n	800c2b6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x82>
 800c258:	4295      	cmp	r5, r2
 800c25a:	d205      	bcs.n	800c268 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800c25c:	4611      	mov	r1, r2
 800c25e:	684a      	ldr	r2, [r1, #4]
 800c260:	1d1c      	adds	r4, r3, #4
 800c262:	460b      	mov	r3, r1
 800c264:	2a00      	cmp	r2, #0
 800c266:	d1f7      	bne.n	800c258 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x24>
 800c268:	4295      	cmp	r5, r2
 800c26a:	d01c      	beq.n	800c2a6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x72>
 800c26c:	6823      	ldr	r3, [r4, #0]
 800c26e:	681a      	ldr	r2, [r3, #0]
 800c270:	1899      	adds	r1, r3, r2
 800c272:	428e      	cmp	r6, r1
 800c274:	d01c      	beq.n	800c2b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x7c>
 800c276:	685b      	ldr	r3, [r3, #4]
 800c278:	f840 3c04 	str.w	r3, [r0, #-4]
 800c27c:	6823      	ldr	r3, [r4, #0]
 800c27e:	f840 7c08 	str.w	r7, [r0, #-8]
 800c282:	605e      	str	r6, [r3, #4]
 800c284:	bcf0      	pop	{r4, r5, r6, r7}
 800c286:	4770      	bx	lr
 800c288:	f840 3c04 	str.w	r3, [r0, #-4]
 800c28c:	6066      	str	r6, [r4, #4]
 800c28e:	bcf0      	pop	{r4, r5, r6, r7}
 800c290:	4770      	bx	lr
 800c292:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c296:	4417      	add	r7, r2
 800c298:	f840 7c08 	str.w	r7, [r0, #-8]
 800c29c:	f840 3c04 	str.w	r3, [r0, #-4]
 800c2a0:	6066      	str	r6, [r4, #4]
 800c2a2:	bcf0      	pop	{r4, r5, r6, r7}
 800c2a4:	4770      	bx	lr
 800c2a6:	e9d5 3200 	ldrd	r3, r2, [r5]
 800c2aa:	604a      	str	r2, [r1, #4]
 800c2ac:	441f      	add	r7, r3
 800c2ae:	e7dd      	b.n	800c26c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 800c2b0:	4417      	add	r7, r2
 800c2b2:	601f      	str	r7, [r3, #0]
 800c2b4:	e7eb      	b.n	800c28e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5a>
 800c2b6:	460a      	mov	r2, r1
 800c2b8:	3404      	adds	r4, #4
 800c2ba:	4619      	mov	r1, r3
 800c2bc:	e7d4      	b.n	800c268 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800c2be:	bf00      	nop
 800c2c0:	2001dfe8 	.word	0x2001dfe8

0800c2c4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 800c2c4:	b430      	push	{r4, r5}
 800c2c6:	4c17      	ldr	r4, [pc, #92]	; (800c324 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x60>)
 800c2c8:	f100 0208 	add.w	r2, r0, #8
 800c2cc:	6863      	ldr	r3, [r4, #4]
 800c2ce:	2a08      	cmp	r2, #8
 800c2d0:	bf38      	it	cc
 800c2d2:	2208      	movcc	r2, #8
 800c2d4:	b303      	cbz	r3, 800c318 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x54>
 800c2d6:	3207      	adds	r2, #7
 800c2d8:	6819      	ldr	r1, [r3, #0]
 800c2da:	f022 0207 	bic.w	r2, r2, #7
 800c2de:	428a      	cmp	r2, r1
 800c2e0:	d804      	bhi.n	800c2ec <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x28>
 800c2e2:	e01b      	b.n	800c31c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 800c2e4:	6801      	ldr	r1, [r0, #0]
 800c2e6:	428a      	cmp	r2, r1
 800c2e8:	d905      	bls.n	800c2f6 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 800c2ea:	4603      	mov	r3, r0
 800c2ec:	6858      	ldr	r0, [r3, #4]
 800c2ee:	2800      	cmp	r0, #0
 800c2f0:	d1f8      	bne.n	800c2e4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x20>
 800c2f2:	bc30      	pop	{r4, r5}
 800c2f4:	4770      	bx	lr
 800c2f6:	3304      	adds	r3, #4
 800c2f8:	1a8c      	subs	r4, r1, r2
 800c2fa:	2c07      	cmp	r4, #7
 800c2fc:	6845      	ldr	r5, [r0, #4]
 800c2fe:	d908      	bls.n	800c312 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4e>
 800c300:	1881      	adds	r1, r0, r2
 800c302:	604d      	str	r5, [r1, #4]
 800c304:	5084      	str	r4, [r0, r2]
 800c306:	6818      	ldr	r0, [r3, #0]
 800c308:	6002      	str	r2, [r0, #0]
 800c30a:	6019      	str	r1, [r3, #0]
 800c30c:	3008      	adds	r0, #8
 800c30e:	bc30      	pop	{r4, r5}
 800c310:	4770      	bx	lr
 800c312:	6001      	str	r1, [r0, #0]
 800c314:	601d      	str	r5, [r3, #0]
 800c316:	e7f9      	b.n	800c30c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 800c318:	4618      	mov	r0, r3
 800c31a:	e7ea      	b.n	800c2f2 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2e>
 800c31c:	4618      	mov	r0, r3
 800c31e:	1d23      	adds	r3, r4, #4
 800c320:	e7ea      	b.n	800c2f8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
 800c322:	bf00      	nop
 800c324:	2001dfe8 	.word	0x2001dfe8

0800c328 <__cxa_allocate_exception>:
 800c328:	b510      	push	{r4, lr}
 800c32a:	f100 0480 	add.w	r4, r0, #128	; 0x80
 800c32e:	4620      	mov	r0, r4
 800c330:	f001 fbc8 	bl	800dac4 <malloc>
 800c334:	b138      	cbz	r0, 800c346 <__cxa_allocate_exception+0x1e>
 800c336:	4603      	mov	r3, r0
 800c338:	2280      	movs	r2, #128	; 0x80
 800c33a:	2100      	movs	r1, #0
 800c33c:	4618      	mov	r0, r3
 800c33e:	f001 fe3a 	bl	800dfb6 <memset>
 800c342:	3080      	adds	r0, #128	; 0x80
 800c344:	bd10      	pop	{r4, pc}
 800c346:	4620      	mov	r0, r4
 800c348:	f7ff ffbc 	bl	800c2c4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800c34c:	4603      	mov	r3, r0
 800c34e:	2800      	cmp	r0, #0
 800c350:	d1f2      	bne.n	800c338 <__cxa_allocate_exception+0x10>
 800c352:	f000 fa09 	bl	800c768 <_ZSt9terminatev>
 800c356:	bf00      	nop

0800c358 <__cxa_free_exception>:
 800c358:	4a06      	ldr	r2, [pc, #24]	; (800c374 <__cxa_free_exception+0x1c>)
 800c35a:	6893      	ldr	r3, [r2, #8]
 800c35c:	3880      	subs	r0, #128	; 0x80
 800c35e:	4298      	cmp	r0, r3
 800c360:	d903      	bls.n	800c36a <__cxa_free_exception+0x12>
 800c362:	68d2      	ldr	r2, [r2, #12]
 800c364:	4413      	add	r3, r2
 800c366:	4298      	cmp	r0, r3
 800c368:	d301      	bcc.n	800c36e <__cxa_free_exception+0x16>
 800c36a:	f001 bbb3 	b.w	800dad4 <free>
 800c36e:	f7ff bf61 	b.w	800c234 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800c372:	bf00      	nop
 800c374:	2001dfe8 	.word	0x2001dfe8

0800c378 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800c378:	b538      	push	{r3, r4, r5, lr}
 800c37a:	4c08      	ldr	r4, [pc, #32]	; (800c39c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800c37c:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800c380:	4628      	mov	r0, r5
 800c382:	60e5      	str	r5, [r4, #12]
 800c384:	f001 fb9e 	bl	800dac4 <malloc>
 800c388:	60a0      	str	r0, [r4, #8]
 800c38a:	b120      	cbz	r0, 800c396 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800c38c:	2300      	movs	r3, #0
 800c38e:	6060      	str	r0, [r4, #4]
 800c390:	e9c0 5300 	strd	r5, r3, [r0]
 800c394:	bd38      	pop	{r3, r4, r5, pc}
 800c396:	60e0      	str	r0, [r4, #12]
 800c398:	6060      	str	r0, [r4, #4]
 800c39a:	bd38      	pop	{r3, r4, r5, pc}
 800c39c:	2001dfe8 	.word	0x2001dfe8

0800c3a0 <_ZNKSt9bad_alloc4whatEv>:
 800c3a0:	4800      	ldr	r0, [pc, #0]	; (800c3a4 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800c3a2:	4770      	bx	lr
 800c3a4:	0801eac8 	.word	0x0801eac8

0800c3a8 <_ZNSt9bad_allocD1Ev>:
 800c3a8:	b510      	push	{r4, lr}
 800c3aa:	4b03      	ldr	r3, [pc, #12]	; (800c3b8 <_ZNSt9bad_allocD1Ev+0x10>)
 800c3ac:	6003      	str	r3, [r0, #0]
 800c3ae:	4604      	mov	r4, r0
 800c3b0:	f000 fa02 	bl	800c7b8 <_ZNSt9exceptionD1Ev>
 800c3b4:	4620      	mov	r0, r4
 800c3b6:	bd10      	pop	{r4, pc}
 800c3b8:	0801eafc 	.word	0x0801eafc

0800c3bc <_ZNSt9bad_allocD0Ev>:
 800c3bc:	b510      	push	{r4, lr}
 800c3be:	4b05      	ldr	r3, [pc, #20]	; (800c3d4 <_ZNSt9bad_allocD0Ev+0x18>)
 800c3c0:	6003      	str	r3, [r0, #0]
 800c3c2:	4604      	mov	r4, r0
 800c3c4:	f000 f9f8 	bl	800c7b8 <_ZNSt9exceptionD1Ev>
 800c3c8:	4620      	mov	r0, r4
 800c3ca:	2104      	movs	r1, #4
 800c3cc:	f000 f804 	bl	800c3d8 <_ZdlPvj>
 800c3d0:	4620      	mov	r0, r4
 800c3d2:	bd10      	pop	{r4, pc}
 800c3d4:	0801eafc 	.word	0x0801eafc

0800c3d8 <_ZdlPvj>:
 800c3d8:	f7ff bf2a 	b.w	800c230 <_ZdlPv>

0800c3dc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800c3dc:	2801      	cmp	r0, #1
 800c3de:	b510      	push	{r4, lr}
 800c3e0:	d81a      	bhi.n	800c418 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3c>
 800c3e2:	f3bf 8f5b 	dmb	ish
 800c3e6:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800c3ea:	e853 2f00 	ldrex	r2, [r3]
 800c3ee:	3a01      	subs	r2, #1
 800c3f0:	e843 2000 	strex	r0, r2, [r3]
 800c3f4:	2800      	cmp	r0, #0
 800c3f6:	d1f8      	bne.n	800c3ea <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 800c3f8:	f3bf 8f5b 	dmb	ish
 800c3fc:	b95a      	cbnz	r2, 800c416 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 800c3fe:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800c402:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800c406:	b10b      	cbz	r3, 800c40c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x30>
 800c408:	4620      	mov	r0, r4
 800c40a:	4798      	blx	r3
 800c40c:	4620      	mov	r0, r4
 800c40e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c412:	f7ff bfa1 	b.w	800c358 <__cxa_free_exception>
 800c416:	bd10      	pop	{r4, pc}
 800c418:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800c41c:	f000 f990 	bl	800c740 <_ZN10__cxxabiv111__terminateEPFvvE>

0800c420 <__cxa_init_primary_exception>:
 800c420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c422:	2500      	movs	r5, #0
 800c424:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 800c428:	f840 5c80 	str.w	r5, [r0, #-128]
 800c42c:	4604      	mov	r4, r0
 800c42e:	f000 f9bb 	bl	800c7a8 <_ZSt14get_unexpectedv>
 800c432:	f844 0c70 	str.w	r0, [r4, #-112]
 800c436:	f000 f9af 	bl	800c798 <_ZSt13get_terminatev>
 800c43a:	2347      	movs	r3, #71	; 0x47
 800c43c:	2243      	movs	r2, #67	; 0x43
 800c43e:	274e      	movs	r7, #78	; 0x4e
 800c440:	2655      	movs	r6, #85	; 0x55
 800c442:	490c      	ldr	r1, [pc, #48]	; (800c474 <__cxa_init_primary_exception+0x54>)
 800c444:	f804 3c58 	strb.w	r3, [r4, #-88]
 800c448:	232b      	movs	r3, #43	; 0x2b
 800c44a:	f804 5c51 	strb.w	r5, [r4, #-81]
 800c44e:	f804 7c57 	strb.w	r7, [r4, #-87]
 800c452:	f804 6c56 	strb.w	r6, [r4, #-86]
 800c456:	f844 1c50 	str.w	r1, [r4, #-80]
 800c45a:	f804 2c55 	strb.w	r2, [r4, #-85]
 800c45e:	f804 2c54 	strb.w	r2, [r4, #-84]
 800c462:	f804 3c53 	strb.w	r3, [r4, #-83]
 800c466:	f804 3c52 	strb.w	r3, [r4, #-82]
 800c46a:	f844 0c6c 	str.w	r0, [r4, #-108]
 800c46e:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 800c472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c474:	0800c3dd 	.word	0x0800c3dd

0800c478 <__cxa_throw>:
 800c478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c47a:	4605      	mov	r5, r0
 800c47c:	460e      	mov	r6, r1
 800c47e:	4617      	mov	r7, r2
 800c480:	f000 fb2c 	bl	800cadc <__cxa_get_globals>
 800c484:	6843      	ldr	r3, [r0, #4]
 800c486:	4604      	mov	r4, r0
 800c488:	3301      	adds	r3, #1
 800c48a:	463a      	mov	r2, r7
 800c48c:	4631      	mov	r1, r6
 800c48e:	6063      	str	r3, [r4, #4]
 800c490:	4628      	mov	r0, r5
 800c492:	f7ff ffc5 	bl	800c420 <__cxa_init_primary_exception>
 800c496:	4604      	mov	r4, r0
 800c498:	2301      	movs	r3, #1
 800c49a:	f844 3b28 	str.w	r3, [r4], #40
 800c49e:	4620      	mov	r0, r4
 800c4a0:	f7fc f85c 	bl	800855c <_Unwind_RaiseException>
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	f000 f83b 	bl	800c520 <__cxa_begin_catch>
 800c4aa:	f000 f95d 	bl	800c768 <_ZSt9terminatev>
 800c4ae:	bf00      	nop

0800c4b0 <__cxa_rethrow>:
 800c4b0:	b510      	push	{r4, lr}
 800c4b2:	f000 fb13 	bl	800cadc <__cxa_get_globals>
 800c4b6:	e9d0 4200 	ldrd	r4, r2, [r0]
 800c4ba:	3201      	adds	r2, #1
 800c4bc:	6042      	str	r2, [r0, #4]
 800c4be:	b164      	cbz	r4, 800c4da <__cxa_rethrow+0x2a>
 800c4c0:	f894 2020 	ldrb.w	r2, [r4, #32]
 800c4c4:	2a47      	cmp	r2, #71	; 0x47
 800c4c6:	d00a      	beq.n	800c4de <__cxa_rethrow+0x2e>
 800c4c8:	2200      	movs	r2, #0
 800c4ca:	6002      	str	r2, [r0, #0]
 800c4cc:	3420      	adds	r4, #32
 800c4ce:	4620      	mov	r0, r4
 800c4d0:	f7fc f868 	bl	80085a4 <_Unwind_Resume_or_Rethrow>
 800c4d4:	4620      	mov	r0, r4
 800c4d6:	f000 f823 	bl	800c520 <__cxa_begin_catch>
 800c4da:	f000 f945 	bl	800c768 <_ZSt9terminatev>
 800c4de:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800c4e2:	2a4e      	cmp	r2, #78	; 0x4e
 800c4e4:	d1f0      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c4e6:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800c4ea:	2a55      	cmp	r2, #85	; 0x55
 800c4ec:	d1ec      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c4ee:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800c4f2:	2a43      	cmp	r2, #67	; 0x43
 800c4f4:	d1e8      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c4f6:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800c4fa:	2a43      	cmp	r2, #67	; 0x43
 800c4fc:	d1e4      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c4fe:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800c502:	2a2b      	cmp	r2, #43	; 0x2b
 800c504:	d1e0      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c506:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800c50a:	2a2b      	cmp	r2, #43	; 0x2b
 800c50c:	d1dc      	bne.n	800c4c8 <__cxa_rethrow+0x18>
 800c50e:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800c512:	2a01      	cmp	r2, #1
 800c514:	d8d8      	bhi.n	800c4c8 <__cxa_rethrow+0x18>
 800c516:	6962      	ldr	r2, [r4, #20]
 800c518:	4252      	negs	r2, r2
 800c51a:	6162      	str	r2, [r4, #20]
 800c51c:	e7d6      	b.n	800c4cc <__cxa_rethrow+0x1c>
 800c51e:	bf00      	nop

0800c520 <__cxa_begin_catch>:
 800c520:	b538      	push	{r3, r4, r5, lr}
 800c522:	4604      	mov	r4, r0
 800c524:	f000 fada 	bl	800cadc <__cxa_get_globals>
 800c528:	7822      	ldrb	r2, [r4, #0]
 800c52a:	6803      	ldr	r3, [r0, #0]
 800c52c:	2a47      	cmp	r2, #71	; 0x47
 800c52e:	f1a4 0120 	sub.w	r1, r4, #32
 800c532:	d004      	beq.n	800c53e <__cxa_begin_catch+0x1e>
 800c534:	bb8b      	cbnz	r3, 800c59a <__cxa_begin_catch+0x7a>
 800c536:	461c      	mov	r4, r3
 800c538:	6001      	str	r1, [r0, #0]
 800c53a:	4620      	mov	r0, r4
 800c53c:	bd38      	pop	{r3, r4, r5, pc}
 800c53e:	7862      	ldrb	r2, [r4, #1]
 800c540:	2a4e      	cmp	r2, #78	; 0x4e
 800c542:	d1f7      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c544:	78a2      	ldrb	r2, [r4, #2]
 800c546:	2a55      	cmp	r2, #85	; 0x55
 800c548:	d1f4      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c54a:	78e2      	ldrb	r2, [r4, #3]
 800c54c:	2a43      	cmp	r2, #67	; 0x43
 800c54e:	d1f1      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c550:	7922      	ldrb	r2, [r4, #4]
 800c552:	2a43      	cmp	r2, #67	; 0x43
 800c554:	d1ee      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c556:	7962      	ldrb	r2, [r4, #5]
 800c558:	2a2b      	cmp	r2, #43	; 0x2b
 800c55a:	d1eb      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c55c:	79a2      	ldrb	r2, [r4, #6]
 800c55e:	2a2b      	cmp	r2, #43	; 0x2b
 800c560:	d1e8      	bne.n	800c534 <__cxa_begin_catch+0x14>
 800c562:	79e2      	ldrb	r2, [r4, #7]
 800c564:	2a01      	cmp	r2, #1
 800c566:	d8e5      	bhi.n	800c534 <__cxa_begin_catch+0x14>
 800c568:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800c56c:	2a00      	cmp	r2, #0
 800c56e:	db11      	blt.n	800c594 <__cxa_begin_catch+0x74>
 800c570:	3201      	adds	r2, #1
 800c572:	6845      	ldr	r5, [r0, #4]
 800c574:	f844 2c0c 	str.w	r2, [r4, #-12]
 800c578:	428b      	cmp	r3, r1
 800c57a:	f105 35ff 	add.w	r5, r5, #4294967295
 800c57e:	6045      	str	r5, [r0, #4]
 800c580:	bf1c      	itt	ne
 800c582:	f844 3c10 	strne.w	r3, [r4, #-16]
 800c586:	6001      	strne	r1, [r0, #0]
 800c588:	4620      	mov	r0, r4
 800c58a:	6a64      	ldr	r4, [r4, #36]	; 0x24
 800c58c:	f7fb fc34 	bl	8007df8 <_Unwind_Complete>
 800c590:	4620      	mov	r0, r4
 800c592:	bd38      	pop	{r3, r4, r5, pc}
 800c594:	f1c2 0201 	rsb	r2, r2, #1
 800c598:	e7eb      	b.n	800c572 <__cxa_begin_catch+0x52>
 800c59a:	f000 f8e5 	bl	800c768 <_ZSt9terminatev>
 800c59e:	bf00      	nop

0800c5a0 <__cxa_end_catch>:
 800c5a0:	b508      	push	{r3, lr}
 800c5a2:	f000 fa97 	bl	800cad4 <__cxa_get_globals_fast>
 800c5a6:	4602      	mov	r2, r0
 800c5a8:	6800      	ldr	r0, [r0, #0]
 800c5aa:	b370      	cbz	r0, 800c60a <__cxa_end_catch+0x6a>
 800c5ac:	f890 3020 	ldrb.w	r3, [r0, #32]
 800c5b0:	2b47      	cmp	r3, #71	; 0x47
 800c5b2:	d006      	beq.n	800c5c2 <__cxa_end_catch+0x22>
 800c5b4:	2300      	movs	r3, #0
 800c5b6:	6013      	str	r3, [r2, #0]
 800c5b8:	3020      	adds	r0, #32
 800c5ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c5be:	f7fb bc1d 	b.w	8007dfc <_Unwind_DeleteException>
 800c5c2:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800c5c6:	2b4e      	cmp	r3, #78	; 0x4e
 800c5c8:	d1f4      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5ca:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800c5ce:	2b55      	cmp	r3, #85	; 0x55
 800c5d0:	d1f0      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5d2:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800c5d6:	2b43      	cmp	r3, #67	; 0x43
 800c5d8:	d1ec      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5da:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c5de:	2b43      	cmp	r3, #67	; 0x43
 800c5e0:	d1e8      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c5e6:	2b2b      	cmp	r3, #43	; 0x2b
 800c5e8:	d1e4      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5ea:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c5ee:	2b2b      	cmp	r3, #43	; 0x2b
 800c5f0:	d1e0      	bne.n	800c5b4 <__cxa_end_catch+0x14>
 800c5f2:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c5f6:	2b01      	cmp	r3, #1
 800c5f8:	d8dc      	bhi.n	800c5b4 <__cxa_end_catch+0x14>
 800c5fa:	6943      	ldr	r3, [r0, #20]
 800c5fc:	2b00      	cmp	r3, #0
 800c5fe:	db05      	blt.n	800c60c <__cxa_end_catch+0x6c>
 800c600:	3b01      	subs	r3, #1
 800c602:	2b00      	cmp	r3, #0
 800c604:	d007      	beq.n	800c616 <__cxa_end_catch+0x76>
 800c606:	db0d      	blt.n	800c624 <__cxa_end_catch+0x84>
 800c608:	6143      	str	r3, [r0, #20]
 800c60a:	bd08      	pop	{r3, pc}
 800c60c:	3301      	adds	r3, #1
 800c60e:	d1fb      	bne.n	800c608 <__cxa_end_catch+0x68>
 800c610:	6901      	ldr	r1, [r0, #16]
 800c612:	6011      	str	r1, [r2, #0]
 800c614:	e7f8      	b.n	800c608 <__cxa_end_catch+0x68>
 800c616:	6903      	ldr	r3, [r0, #16]
 800c618:	6013      	str	r3, [r2, #0]
 800c61a:	3020      	adds	r0, #32
 800c61c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c620:	f7fb bbec 	b.w	8007dfc <_Unwind_DeleteException>
 800c624:	f000 f8a0 	bl	800c768 <_ZSt9terminatev>

0800c628 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800c628:	b510      	push	{r4, lr}
 800c62a:	4b03      	ldr	r3, [pc, #12]	; (800c638 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800c62c:	6003      	str	r3, [r0, #0]
 800c62e:	4604      	mov	r4, r0
 800c630:	f000 fdb2 	bl	800d198 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c634:	4620      	mov	r0, r4
 800c636:	bd10      	pop	{r4, pc}
 800c638:	0801eb44 	.word	0x0801eb44

0800c63c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800c63c:	b510      	push	{r4, lr}
 800c63e:	4b05      	ldr	r3, [pc, #20]	; (800c654 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800c640:	6003      	str	r3, [r0, #0]
 800c642:	4604      	mov	r4, r0
 800c644:	f000 fda8 	bl	800d198 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c648:	4620      	mov	r0, r4
 800c64a:	210c      	movs	r1, #12
 800c64c:	f7ff fec4 	bl	800c3d8 <_ZdlPvj>
 800c650:	4620      	mov	r0, r4
 800c652:	bd10      	pop	{r4, pc}
 800c654:	0801eb44 	.word	0x0801eb44

0800c658 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800c658:	b570      	push	{r4, r5, r6, lr}
 800c65a:	b082      	sub	sp, #8
 800c65c:	460e      	mov	r6, r1
 800c65e:	9c06      	ldr	r4, [sp, #24]
 800c660:	4294      	cmp	r4, r2
 800c662:	4605      	mov	r5, r0
 800c664:	d009      	beq.n	800c67a <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800c666:	68a8      	ldr	r0, [r5, #8]
 800c668:	6805      	ldr	r5, [r0, #0]
 800c66a:	9406      	str	r4, [sp, #24]
 800c66c:	6a2c      	ldr	r4, [r5, #32]
 800c66e:	4631      	mov	r1, r6
 800c670:	46a4      	mov	ip, r4
 800c672:	b002      	add	sp, #8
 800c674:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c678:	4760      	bx	ip
 800c67a:	4619      	mov	r1, r3
 800c67c:	9201      	str	r2, [sp, #4]
 800c67e:	9300      	str	r3, [sp, #0]
 800c680:	f000 f8ae 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800c684:	e9dd 3200 	ldrd	r3, r2, [sp]
 800c688:	2800      	cmp	r0, #0
 800c68a:	d0ec      	beq.n	800c666 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800c68c:	2006      	movs	r0, #6
 800c68e:	b002      	add	sp, #8
 800c690:	bd70      	pop	{r4, r5, r6, pc}
 800c692:	bf00      	nop

0800c694 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800c694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c698:	460e      	mov	r6, r1
 800c69a:	b081      	sub	sp, #4
 800c69c:	4619      	mov	r1, r3
 800c69e:	461f      	mov	r7, r3
 800c6a0:	4691      	mov	r9, r2
 800c6a2:	4683      	mov	fp, r0
 800c6a4:	e9dd 4a0a 	ldrd	r4, sl, [sp, #40]	; 0x28
 800c6a8:	e9dd 850c 	ldrd	r8, r5, [sp, #48]	; 0x30
 800c6ac:	f000 f898 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800c6b0:	b170      	cbz	r0, 800c6d0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3c>
 800c6b2:	2e00      	cmp	r6, #0
 800c6b4:	602c      	str	r4, [r5, #0]
 800c6b6:	f885 9004 	strb.w	r9, [r5, #4]
 800c6ba:	db1d      	blt.n	800c6f8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x64>
 800c6bc:	4434      	add	r4, r6
 800c6be:	45a0      	cmp	r8, r4
 800c6c0:	bf0c      	ite	eq
 800c6c2:	2406      	moveq	r4, #6
 800c6c4:	2401      	movne	r4, #1
 800c6c6:	71ac      	strb	r4, [r5, #6]
 800c6c8:	2000      	movs	r0, #0
 800c6ca:	b001      	add	sp, #4
 800c6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6d0:	4544      	cmp	r4, r8
 800c6d2:	d016      	beq.n	800c702 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6e>
 800c6d4:	f8db 0008 	ldr.w	r0, [fp, #8]
 800c6d8:	f8d0 c000 	ldr.w	ip, [r0]
 800c6dc:	e9cd 850c 	strd	r8, r5, [sp, #48]	; 0x30
 800c6e0:	e9cd 4a0a 	strd	r4, sl, [sp, #40]	; 0x28
 800c6e4:	f8dc 401c 	ldr.w	r4, [ip, #28]
 800c6e8:	463b      	mov	r3, r7
 800c6ea:	464a      	mov	r2, r9
 800c6ec:	4631      	mov	r1, r6
 800c6ee:	46a4      	mov	ip, r4
 800c6f0:	b001      	add	sp, #4
 800c6f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6f6:	4760      	bx	ip
 800c6f8:	3602      	adds	r6, #2
 800c6fa:	d1e5      	bne.n	800c6c8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 800c6fc:	2301      	movs	r3, #1
 800c6fe:	71ab      	strb	r3, [r5, #6]
 800c700:	e7e2      	b.n	800c6c8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 800c702:	4651      	mov	r1, sl
 800c704:	4658      	mov	r0, fp
 800c706:	f000 f86b 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800c70a:	2800      	cmp	r0, #0
 800c70c:	d0e2      	beq.n	800c6d4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800c70e:	f885 9005 	strb.w	r9, [r5, #5]
 800c712:	e7d9      	b.n	800c6c8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>

0800c714 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800c714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c718:	4607      	mov	r7, r0
 800c71a:	460c      	mov	r4, r1
 800c71c:	4615      	mov	r5, r2
 800c71e:	461e      	mov	r6, r3
 800c720:	f000 fd74 	bl	800d20c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800c724:	b108      	cbz	r0, 800c72a <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x16>
 800c726:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c72a:	68b8      	ldr	r0, [r7, #8]
 800c72c:	6807      	ldr	r7, [r0, #0]
 800c72e:	4621      	mov	r1, r4
 800c730:	69bc      	ldr	r4, [r7, #24]
 800c732:	4633      	mov	r3, r6
 800c734:	462a      	mov	r2, r5
 800c736:	46a4      	mov	ip, r4
 800c738:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c73c:	4760      	bx	ip
 800c73e:	bf00      	nop

0800c740 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800c740:	b508      	push	{r3, lr}
 800c742:	4780      	blx	r0
 800c744:	f000 ff74 	bl	800d630 <abort>
 800c748:	f7ff feea 	bl	800c520 <__cxa_begin_catch>
 800c74c:	f000 ff70 	bl	800d630 <abort>
 800c750:	460d      	mov	r5, r1
 800c752:	4604      	mov	r4, r0
 800c754:	f7ff ff24 	bl	800c5a0 <__cxa_end_catch>
 800c758:	3501      	adds	r5, #1
 800c75a:	d001      	beq.n	800c760 <_ZN10__cxxabiv111__terminateEPFvvE+0x20>
 800c75c:	f000 f8f2 	bl	800c944 <__cxa_end_cleanup>
 800c760:	4620      	mov	r0, r4
 800c762:	f000 f881 	bl	800c868 <__cxa_call_unexpected>
 800c766:	bf00      	nop

0800c768 <_ZSt9terminatev>:
 800c768:	b508      	push	{r3, lr}
 800c76a:	4b03      	ldr	r3, [pc, #12]	; (800c778 <_ZSt9terminatev+0x10>)
 800c76c:	6818      	ldr	r0, [r3, #0]
 800c76e:	f3bf 8f5b 	dmb	ish
 800c772:	f7ff ffe5 	bl	800c740 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c776:	bf00      	nop
 800c778:	20000024 	.word	0x20000024

0800c77c <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800c77c:	b508      	push	{r3, lr}
 800c77e:	4780      	blx	r0
 800c780:	f7ff fff2 	bl	800c768 <_ZSt9terminatev>

0800c784 <_ZSt10unexpectedv>:
 800c784:	b508      	push	{r3, lr}
 800c786:	4b03      	ldr	r3, [pc, #12]	; (800c794 <_ZSt10unexpectedv+0x10>)
 800c788:	6818      	ldr	r0, [r3, #0]
 800c78a:	f3bf 8f5b 	dmb	ish
 800c78e:	f7ff fff5 	bl	800c77c <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c792:	bf00      	nop
 800c794:	20000020 	.word	0x20000020

0800c798 <_ZSt13get_terminatev>:
 800c798:	4b02      	ldr	r3, [pc, #8]	; (800c7a4 <_ZSt13get_terminatev+0xc>)
 800c79a:	6818      	ldr	r0, [r3, #0]
 800c79c:	f3bf 8f5b 	dmb	ish
 800c7a0:	4770      	bx	lr
 800c7a2:	bf00      	nop
 800c7a4:	20000024 	.word	0x20000024

0800c7a8 <_ZSt14get_unexpectedv>:
 800c7a8:	4b02      	ldr	r3, [pc, #8]	; (800c7b4 <_ZSt14get_unexpectedv+0xc>)
 800c7aa:	6818      	ldr	r0, [r3, #0]
 800c7ac:	f3bf 8f5b 	dmb	ish
 800c7b0:	4770      	bx	lr
 800c7b2:	bf00      	nop
 800c7b4:	20000020 	.word	0x20000020

0800c7b8 <_ZNSt9exceptionD1Ev>:
 800c7b8:	4770      	bx	lr
 800c7ba:	bf00      	nop

0800c7bc <_ZNSt13bad_exceptionD1Ev>:
 800c7bc:	4770      	bx	lr
 800c7be:	bf00      	nop

0800c7c0 <_ZGTtNKSt13bad_exception4whatEv>:
 800c7c0:	4800      	ldr	r0, [pc, #0]	; (800c7c4 <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800c7c2:	4770      	bx	lr
 800c7c4:	0801eb68 	.word	0x0801eb68

0800c7c8 <_ZNSt13bad_exceptionD0Ev>:
 800c7c8:	b510      	push	{r4, lr}
 800c7ca:	2104      	movs	r1, #4
 800c7cc:	4604      	mov	r4, r0
 800c7ce:	f7ff fe03 	bl	800c3d8 <_ZdlPvj>
 800c7d2:	4620      	mov	r0, r4
 800c7d4:	bd10      	pop	{r4, pc}
 800c7d6:	bf00      	nop

0800c7d8 <_ZNSt9type_infoD1Ev>:
 800c7d8:	4770      	bx	lr
 800c7da:	bf00      	nop

0800c7dc <_ZNKSt9type_info14__is_pointer_pEv>:
 800c7dc:	2000      	movs	r0, #0
 800c7de:	4770      	bx	lr

0800c7e0 <_ZNKSt9type_infoeqERKS_>:
 800c7e0:	4281      	cmp	r1, r0
 800c7e2:	d00f      	beq.n	800c804 <_ZNKSt9type_infoeqERKS_+0x24>
 800c7e4:	b508      	push	{r3, lr}
 800c7e6:	6840      	ldr	r0, [r0, #4]
 800c7e8:	7803      	ldrb	r3, [r0, #0]
 800c7ea:	2b2a      	cmp	r3, #42	; 0x2a
 800c7ec:	d00c      	beq.n	800c808 <_ZNKSt9type_infoeqERKS_+0x28>
 800c7ee:	6849      	ldr	r1, [r1, #4]
 800c7f0:	780b      	ldrb	r3, [r1, #0]
 800c7f2:	2b2a      	cmp	r3, #42	; 0x2a
 800c7f4:	bf08      	it	eq
 800c7f6:	3101      	addeq	r1, #1
 800c7f8:	f7fa faca 	bl	8006d90 <strcmp>
 800c7fc:	fab0 f080 	clz	r0, r0
 800c800:	0940      	lsrs	r0, r0, #5
 800c802:	bd08      	pop	{r3, pc}
 800c804:	2001      	movs	r0, #1
 800c806:	4770      	bx	lr
 800c808:	2000      	movs	r0, #0
 800c80a:	bd08      	pop	{r3, pc}

0800c80c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800c80c:	7803      	ldrb	r3, [r0, #0]
 800c80e:	2b47      	cmp	r3, #71	; 0x47
 800c810:	d001      	beq.n	800c816 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800c812:	2000      	movs	r0, #0
 800c814:	4770      	bx	lr
 800c816:	7843      	ldrb	r3, [r0, #1]
 800c818:	2b4e      	cmp	r3, #78	; 0x4e
 800c81a:	d1fa      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c81c:	7883      	ldrb	r3, [r0, #2]
 800c81e:	2b55      	cmp	r3, #85	; 0x55
 800c820:	d1f7      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c822:	78c3      	ldrb	r3, [r0, #3]
 800c824:	2b43      	cmp	r3, #67	; 0x43
 800c826:	d1f4      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c828:	7903      	ldrb	r3, [r0, #4]
 800c82a:	2b43      	cmp	r3, #67	; 0x43
 800c82c:	d1f1      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c82e:	7943      	ldrb	r3, [r0, #5]
 800c830:	2b2b      	cmp	r3, #43	; 0x2b
 800c832:	d1ee      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c834:	7983      	ldrb	r3, [r0, #6]
 800c836:	2b2b      	cmp	r3, #43	; 0x2b
 800c838:	d1eb      	bne.n	800c812 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c83a:	79c0      	ldrb	r0, [r0, #7]
 800c83c:	2801      	cmp	r0, #1
 800c83e:	bf8c      	ite	hi
 800c840:	2000      	movhi	r0, #0
 800c842:	2001      	movls	r0, #1
 800c844:	4770      	bx	lr
 800c846:	bf00      	nop

0800c848 <__cxa_call_terminate>:
 800c848:	b510      	push	{r4, lr}
 800c84a:	b130      	cbz	r0, 800c85a <__cxa_call_terminate+0x12>
 800c84c:	4604      	mov	r4, r0
 800c84e:	f7ff fe67 	bl	800c520 <__cxa_begin_catch>
 800c852:	4620      	mov	r0, r4
 800c854:	f7ff ffda 	bl	800c80c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c858:	b908      	cbnz	r0, 800c85e <__cxa_call_terminate+0x16>
 800c85a:	f7ff ff85 	bl	800c768 <_ZSt9terminatev>
 800c85e:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800c862:	f7ff ff6d 	bl	800c740 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c866:	bf00      	nop

0800c868 <__cxa_call_unexpected>:
 800c868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c86c:	b085      	sub	sp, #20
 800c86e:	4602      	mov	r2, r0
 800c870:	f7ff ffcc 	bl	800c80c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c874:	b150      	cbz	r0, 800c88c <__cxa_call_unexpected+0x24>
 800c876:	e952 8506 	ldrd	r8, r5, [r2, #-24]
 800c87a:	4610      	mov	r0, r2
 800c87c:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800c87e:	e9d2 740c 	ldrd	r7, r4, [r2, #48]	; 0x30
 800c882:	f7ff fe4d 	bl	800c520 <__cxa_begin_catch>
 800c886:	4640      	mov	r0, r8
 800c888:	f7ff ff78 	bl	800c77c <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c88c:	4610      	mov	r0, r2
 800c88e:	f7ff fe47 	bl	800c520 <__cxa_begin_catch>
 800c892:	f7ff ff77 	bl	800c784 <_ZSt10unexpectedv>
 800c896:	f7ff fe43 	bl	800c520 <__cxa_begin_catch>
 800c89a:	f7ff ff65 	bl	800c768 <_ZSt9terminatev>
 800c89e:	f7ff fe3f 	bl	800c520 <__cxa_begin_catch>
 800c8a2:	f000 f917 	bl	800cad4 <__cxa_get_globals_fast>
 800c8a6:	6803      	ldr	r3, [r0, #0]
 800c8a8:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800c8ac:	f10d 0a10 	add.w	sl, sp, #16
 800c8b0:	2a01      	cmp	r2, #1
 800c8b2:	bf0c      	ite	eq
 800c8b4:	681a      	ldreq	r2, [r3, #0]
 800c8b6:	f103 0278 	addne.w	r2, r3, #120	; 0x78
 800c8ba:	f04f 0800 	mov.w	r8, #0
 800c8be:	3320      	adds	r3, #32
 800c8c0:	f84a 2d08 	str.w	r2, [sl, #-8]!
 800c8c4:	f027 0b03 	bic.w	fp, r7, #3
 800c8c8:	9301      	str	r3, [sp, #4]
 800c8ca:	46c1      	mov	r9, r8
 800c8cc:	45b1      	cmp	r9, r6
 800c8ce:	da1b      	bge.n	800c908 <__cxa_call_unexpected+0xa0>
 800c8d0:	6827      	ldr	r7, [r4, #0]
 800c8d2:	b107      	cbz	r7, 800c8d6 <__cxa_call_unexpected+0x6e>
 800c8d4:	4427      	add	r7, r4
 800c8d6:	4653      	mov	r3, sl
 800c8d8:	2200      	movs	r2, #0
 800c8da:	4639      	mov	r1, r7
 800c8dc:	9801      	ldr	r0, [sp, #4]
 800c8de:	f000 f837 	bl	800c950 <__cxa_type_match>
 800c8e2:	b9e8      	cbnz	r0, 800c920 <__cxa_call_unexpected+0xb8>
 800c8e4:	683b      	ldr	r3, [r7, #0]
 800c8e6:	4914      	ldr	r1, [pc, #80]	; (800c938 <__cxa_call_unexpected+0xd0>)
 800c8e8:	691b      	ldr	r3, [r3, #16]
 800c8ea:	9300      	str	r3, [sp, #0]
 800c8ec:	aa04      	add	r2, sp, #16
 800c8ee:	2301      	movs	r3, #1
 800c8f0:	f842 0d04 	str.w	r0, [r2, #-4]!
 800c8f4:	4638      	mov	r0, r7
 800c8f6:	9f00      	ldr	r7, [sp, #0]
 800c8f8:	47b8      	blx	r7
 800c8fa:	2800      	cmp	r0, #0
 800c8fc:	bf18      	it	ne
 800c8fe:	4680      	movne	r8, r0
 800c900:	f109 0901 	add.w	r9, r9, #1
 800c904:	445c      	add	r4, fp
 800c906:	e7e1      	b.n	800c8cc <__cxa_call_unexpected+0x64>
 800c908:	f1b8 0f00 	cmp.w	r8, #0
 800c90c:	d010      	beq.n	800c930 <__cxa_call_unexpected+0xc8>
 800c90e:	2004      	movs	r0, #4
 800c910:	f7ff fd0a 	bl	800c328 <__cxa_allocate_exception>
 800c914:	4b09      	ldr	r3, [pc, #36]	; (800c93c <__cxa_call_unexpected+0xd4>)
 800c916:	6003      	str	r3, [r0, #0]
 800c918:	4a09      	ldr	r2, [pc, #36]	; (800c940 <__cxa_call_unexpected+0xd8>)
 800c91a:	4907      	ldr	r1, [pc, #28]	; (800c938 <__cxa_call_unexpected+0xd0>)
 800c91c:	f7ff fdac 	bl	800c478 <__cxa_throw>
 800c920:	f7ff fdc6 	bl	800c4b0 <__cxa_rethrow>
 800c924:	f7ff fe3c 	bl	800c5a0 <__cxa_end_catch>
 800c928:	f7ff fe3a 	bl	800c5a0 <__cxa_end_catch>
 800c92c:	f000 f80a 	bl	800c944 <__cxa_end_cleanup>
 800c930:	4628      	mov	r0, r5
 800c932:	f7ff ff05 	bl	800c740 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c936:	bf00      	nop
 800c938:	0801eb8c 	.word	0x0801eb8c
 800c93c:	0801ec10 	.word	0x0801ec10
 800c940:	0800c7bd 	.word	0x0800c7bd

0800c944 <__cxa_end_cleanup>:
 800c944:	b41e      	push	{r1, r2, r3, r4}
 800c946:	f000 f88d 	bl	800ca64 <__gnu_end_cleanup>
 800c94a:	bc1e      	pop	{r1, r2, r3, r4}
 800c94c:	f7fb fe18 	bl	8008580 <_Unwind_Resume>

0800c950 <__cxa_type_match>:
 800c950:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c952:	7802      	ldrb	r2, [r0, #0]
 800c954:	2a47      	cmp	r2, #71	; 0x47
 800c956:	b083      	sub	sp, #12
 800c958:	460d      	mov	r5, r1
 800c95a:	461f      	mov	r7, r3
 800c95c:	d01e      	beq.n	800c99c <__cxa_type_match+0x4c>
 800c95e:	2300      	movs	r3, #0
 800c960:	4c25      	ldr	r4, [pc, #148]	; (800c9f8 <__cxa_type_match+0xa8>)
 800c962:	9301      	str	r3, [sp, #4]
 800c964:	6823      	ldr	r3, [r4, #0]
 800c966:	4620      	mov	r0, r4
 800c968:	689b      	ldr	r3, [r3, #8]
 800c96a:	4798      	blx	r3
 800c96c:	b180      	cbz	r0, 800c990 <__cxa_type_match+0x40>
 800c96e:	9b01      	ldr	r3, [sp, #4]
 800c970:	681b      	ldr	r3, [r3, #0]
 800c972:	9301      	str	r3, [sp, #4]
 800c974:	2602      	movs	r6, #2
 800c976:	682b      	ldr	r3, [r5, #0]
 800c978:	4621      	mov	r1, r4
 800c97a:	4628      	mov	r0, r5
 800c97c:	691c      	ldr	r4, [r3, #16]
 800c97e:	aa01      	add	r2, sp, #4
 800c980:	2301      	movs	r3, #1
 800c982:	47a0      	blx	r4
 800c984:	b130      	cbz	r0, 800c994 <__cxa_type_match+0x44>
 800c986:	9b01      	ldr	r3, [sp, #4]
 800c988:	603b      	str	r3, [r7, #0]
 800c98a:	4630      	mov	r0, r6
 800c98c:	b003      	add	sp, #12
 800c98e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c990:	2601      	movs	r6, #1
 800c992:	e7f0      	b.n	800c976 <__cxa_type_match+0x26>
 800c994:	4606      	mov	r6, r0
 800c996:	4630      	mov	r0, r6
 800c998:	b003      	add	sp, #12
 800c99a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c99c:	7843      	ldrb	r3, [r0, #1]
 800c99e:	2b4e      	cmp	r3, #78	; 0x4e
 800c9a0:	d1dd      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9a2:	7883      	ldrb	r3, [r0, #2]
 800c9a4:	2b55      	cmp	r3, #85	; 0x55
 800c9a6:	d1da      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9a8:	78c3      	ldrb	r3, [r0, #3]
 800c9aa:	2b43      	cmp	r3, #67	; 0x43
 800c9ac:	d1d7      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9ae:	7903      	ldrb	r3, [r0, #4]
 800c9b0:	2b46      	cmp	r3, #70	; 0x46
 800c9b2:	d015      	beq.n	800c9e0 <__cxa_type_match+0x90>
 800c9b4:	7903      	ldrb	r3, [r0, #4]
 800c9b6:	2b43      	cmp	r3, #67	; 0x43
 800c9b8:	d1d1      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9ba:	7943      	ldrb	r3, [r0, #5]
 800c9bc:	2b2b      	cmp	r3, #43	; 0x2b
 800c9be:	d1ce      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9c0:	7983      	ldrb	r3, [r0, #6]
 800c9c2:	2b2b      	cmp	r3, #43	; 0x2b
 800c9c4:	d1cb      	bne.n	800c95e <__cxa_type_match+0xe>
 800c9c6:	79c3      	ldrb	r3, [r0, #7]
 800c9c8:	2b01      	cmp	r3, #1
 800c9ca:	d8c8      	bhi.n	800c95e <__cxa_type_match+0xe>
 800c9cc:	f850 4c20 	ldr.w	r4, [r0, #-32]
 800c9d0:	d002      	beq.n	800c9d8 <__cxa_type_match+0x88>
 800c9d2:	3058      	adds	r0, #88	; 0x58
 800c9d4:	9001      	str	r0, [sp, #4]
 800c9d6:	e7c5      	b.n	800c964 <__cxa_type_match+0x14>
 800c9d8:	4620      	mov	r0, r4
 800c9da:	f854 4c78 	ldr.w	r4, [r4, #-120]
 800c9de:	e7f9      	b.n	800c9d4 <__cxa_type_match+0x84>
 800c9e0:	7943      	ldrb	r3, [r0, #5]
 800c9e2:	2b4f      	cmp	r3, #79	; 0x4f
 800c9e4:	d1e6      	bne.n	800c9b4 <__cxa_type_match+0x64>
 800c9e6:	7983      	ldrb	r3, [r0, #6]
 800c9e8:	2b52      	cmp	r3, #82	; 0x52
 800c9ea:	d1e3      	bne.n	800c9b4 <__cxa_type_match+0x64>
 800c9ec:	79c3      	ldrb	r3, [r0, #7]
 800c9ee:	2b00      	cmp	r3, #0
 800c9f0:	d1e0      	bne.n	800c9b4 <__cxa_type_match+0x64>
 800c9f2:	9301      	str	r3, [sp, #4]
 800c9f4:	4c01      	ldr	r4, [pc, #4]	; (800c9fc <__cxa_type_match+0xac>)
 800c9f6:	e7b5      	b.n	800c964 <__cxa_type_match+0x14>
 800c9f8:	0801eb84 	.word	0x0801eb84
 800c9fc:	0801eb7c 	.word	0x0801eb7c

0800ca00 <__cxa_begin_cleanup>:
 800ca00:	b510      	push	{r4, lr}
 800ca02:	4604      	mov	r4, r0
 800ca04:	f000 f86a 	bl	800cadc <__cxa_get_globals>
 800ca08:	7823      	ldrb	r3, [r4, #0]
 800ca0a:	2b47      	cmp	r3, #71	; 0x47
 800ca0c:	f1a4 0220 	sub.w	r2, r4, #32
 800ca10:	d004      	beq.n	800ca1c <__cxa_begin_cleanup+0x1c>
 800ca12:	6883      	ldr	r3, [r0, #8]
 800ca14:	bb23      	cbnz	r3, 800ca60 <__cxa_begin_cleanup+0x60>
 800ca16:	6082      	str	r2, [r0, #8]
 800ca18:	2001      	movs	r0, #1
 800ca1a:	bd10      	pop	{r4, pc}
 800ca1c:	7863      	ldrb	r3, [r4, #1]
 800ca1e:	2b4e      	cmp	r3, #78	; 0x4e
 800ca20:	d1f7      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca22:	78a3      	ldrb	r3, [r4, #2]
 800ca24:	2b55      	cmp	r3, #85	; 0x55
 800ca26:	d1f4      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca28:	78e3      	ldrb	r3, [r4, #3]
 800ca2a:	2b43      	cmp	r3, #67	; 0x43
 800ca2c:	d1f1      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca2e:	7923      	ldrb	r3, [r4, #4]
 800ca30:	2b43      	cmp	r3, #67	; 0x43
 800ca32:	d1ee      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca34:	7963      	ldrb	r3, [r4, #5]
 800ca36:	2b2b      	cmp	r3, #43	; 0x2b
 800ca38:	d1eb      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca3a:	79a3      	ldrb	r3, [r4, #6]
 800ca3c:	2b2b      	cmp	r3, #43	; 0x2b
 800ca3e:	d1e8      	bne.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca40:	79e3      	ldrb	r3, [r4, #7]
 800ca42:	2b01      	cmp	r3, #1
 800ca44:	d8e5      	bhi.n	800ca12 <__cxa_begin_cleanup+0x12>
 800ca46:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ca4a:	3301      	adds	r3, #1
 800ca4c:	2b01      	cmp	r3, #1
 800ca4e:	f844 3c04 	str.w	r3, [r4, #-4]
 800ca52:	d1e1      	bne.n	800ca18 <__cxa_begin_cleanup+0x18>
 800ca54:	6883      	ldr	r3, [r0, #8]
 800ca56:	f844 3c08 	str.w	r3, [r4, #-8]
 800ca5a:	6082      	str	r2, [r0, #8]
 800ca5c:	2001      	movs	r0, #1
 800ca5e:	bd10      	pop	{r4, pc}
 800ca60:	f7ff fe82 	bl	800c768 <_ZSt9terminatev>

0800ca64 <__gnu_end_cleanup>:
 800ca64:	b508      	push	{r3, lr}
 800ca66:	f000 f839 	bl	800cadc <__cxa_get_globals>
 800ca6a:	6883      	ldr	r3, [r0, #8]
 800ca6c:	b383      	cbz	r3, 800cad0 <__gnu_end_cleanup+0x6c>
 800ca6e:	f893 2020 	ldrb.w	r2, [r3, #32]
 800ca72:	2a47      	cmp	r2, #71	; 0x47
 800ca74:	d004      	beq.n	800ca80 <__gnu_end_cleanup+0x1c>
 800ca76:	2200      	movs	r2, #0
 800ca78:	6082      	str	r2, [r0, #8]
 800ca7a:	f103 0020 	add.w	r0, r3, #32
 800ca7e:	bd08      	pop	{r3, pc}
 800ca80:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800ca84:	2a4e      	cmp	r2, #78	; 0x4e
 800ca86:	d1f6      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800ca88:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800ca8c:	2a55      	cmp	r2, #85	; 0x55
 800ca8e:	d1f2      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800ca90:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800ca94:	2a43      	cmp	r2, #67	; 0x43
 800ca96:	d1ee      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800ca98:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800ca9c:	2a43      	cmp	r2, #67	; 0x43
 800ca9e:	d1ea      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800caa0:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800caa4:	2a2b      	cmp	r2, #43	; 0x2b
 800caa6:	d1e6      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800caa8:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800caac:	2a2b      	cmp	r2, #43	; 0x2b
 800caae:	d1e2      	bne.n	800ca76 <__gnu_end_cleanup+0x12>
 800cab0:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800cab4:	2a01      	cmp	r2, #1
 800cab6:	d8de      	bhi.n	800ca76 <__gnu_end_cleanup+0x12>
 800cab8:	69da      	ldr	r2, [r3, #28]
 800caba:	3a01      	subs	r2, #1
 800cabc:	61da      	str	r2, [r3, #28]
 800cabe:	2a00      	cmp	r2, #0
 800cac0:	d1db      	bne.n	800ca7a <__gnu_end_cleanup+0x16>
 800cac2:	699a      	ldr	r2, [r3, #24]
 800cac4:	6082      	str	r2, [r0, #8]
 800cac6:	2200      	movs	r2, #0
 800cac8:	619a      	str	r2, [r3, #24]
 800caca:	f103 0020 	add.w	r0, r3, #32
 800cace:	bd08      	pop	{r3, pc}
 800cad0:	f7ff fe4a 	bl	800c768 <_ZSt9terminatev>

0800cad4 <__cxa_get_globals_fast>:
 800cad4:	4800      	ldr	r0, [pc, #0]	; (800cad8 <__cxa_get_globals_fast+0x4>)
 800cad6:	4770      	bx	lr
 800cad8:	2001dff8 	.word	0x2001dff8

0800cadc <__cxa_get_globals>:
 800cadc:	4800      	ldr	r0, [pc, #0]	; (800cae0 <__cxa_get_globals+0x4>)
 800cade:	4770      	bx	lr
 800cae0:	2001dff8 	.word	0x2001dff8

0800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800cae4:	2850      	cmp	r0, #80	; 0x50
 800cae6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cae8:	d01c      	beq.n	800cb24 <_ZL28read_encoded_value_with_basehjPKhPj+0x40>
 800caea:	f000 040f 	and.w	r4, r0, #15
 800caee:	2c0c      	cmp	r4, #12
 800caf0:	d856      	bhi.n	800cba0 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
 800caf2:	e8df f004 	tbb	[pc, r4]
 800caf6:	4107      	.short	0x4107
 800caf8:	551f0751 	.word	0x551f0751
 800cafc:	27555555 	.word	0x27555555
 800cb00:	0723      	.short	0x0723
 800cb02:	1f          	.byte	0x1f
 800cb03:	00          	.byte	0x00
 800cb04:	4614      	mov	r4, r2
 800cb06:	f854 5b04 	ldr.w	r5, [r4], #4
 800cb0a:	b145      	cbz	r5, 800cb1e <_ZL28read_encoded_value_with_basehjPKhPj+0x3a>
 800cb0c:	f000 0670 	and.w	r6, r0, #112	; 0x70
 800cb10:	2e10      	cmp	r6, #16
 800cb12:	bf08      	it	eq
 800cb14:	4611      	moveq	r1, r2
 800cb16:	440d      	add	r5, r1
 800cb18:	0602      	lsls	r2, r0, #24
 800cb1a:	bf48      	it	mi
 800cb1c:	682d      	ldrmi	r5, [r5, #0]
 800cb1e:	601d      	str	r5, [r3, #0]
 800cb20:	4620      	mov	r0, r4
 800cb22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb24:	3203      	adds	r2, #3
 800cb26:	f022 0403 	bic.w	r4, r2, #3
 800cb2a:	f854 5b04 	ldr.w	r5, [r4], #4
 800cb2e:	601d      	str	r5, [r3, #0]
 800cb30:	4620      	mov	r0, r4
 800cb32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb34:	4614      	mov	r4, r2
 800cb36:	f854 5b08 	ldr.w	r5, [r4], #8
 800cb3a:	e7e6      	b.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb3c:	4614      	mov	r4, r2
 800cb3e:	f934 5b02 	ldrsh.w	r5, [r4], #2
 800cb42:	e7e2      	b.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb44:	2500      	movs	r5, #0
 800cb46:	462f      	mov	r7, r5
 800cb48:	4614      	mov	r4, r2
 800cb4a:	f814 cb01 	ldrb.w	ip, [r4], #1
 800cb4e:	f00c 067f 	and.w	r6, ip, #127	; 0x7f
 800cb52:	40be      	lsls	r6, r7
 800cb54:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cb58:	ea45 0506 	orr.w	r5, r5, r6
 800cb5c:	f107 0707 	add.w	r7, r7, #7
 800cb60:	d1f3      	bne.n	800cb4a <_ZL28read_encoded_value_with_basehjPKhPj+0x66>
 800cb62:	2f1f      	cmp	r7, #31
 800cb64:	d8d1      	bhi.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb66:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800cb6a:	d0ce      	beq.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb6c:	f04f 36ff 	mov.w	r6, #4294967295
 800cb70:	fa06 f707 	lsl.w	r7, r6, r7
 800cb74:	433d      	orrs	r5, r7
 800cb76:	e7c9      	b.n	800cb0c <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800cb78:	2500      	movs	r5, #0
 800cb7a:	462f      	mov	r7, r5
 800cb7c:	4614      	mov	r4, r2
 800cb7e:	f814 cb01 	ldrb.w	ip, [r4], #1
 800cb82:	f00c 067f 	and.w	r6, ip, #127	; 0x7f
 800cb86:	40be      	lsls	r6, r7
 800cb88:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cb8c:	ea45 0506 	orr.w	r5, r5, r6
 800cb90:	f107 0707 	add.w	r7, r7, #7
 800cb94:	d1f3      	bne.n	800cb7e <_ZL28read_encoded_value_with_basehjPKhPj+0x9a>
 800cb96:	e7b8      	b.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb98:	4614      	mov	r4, r2
 800cb9a:	f834 5b02 	ldrh.w	r5, [r4], #2
 800cb9e:	e7b4      	b.n	800cb0a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cba0:	f000 fd46 	bl	800d630 <abort>

0800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>:
 800cba4:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800cba8:	2820      	cmp	r0, #32
 800cbaa:	d011      	beq.n	800cbd0 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x2c>
 800cbac:	d90b      	bls.n	800cbc6 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x22>
 800cbae:	2840      	cmp	r0, #64	; 0x40
 800cbb0:	d006      	beq.n	800cbc0 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x1c>
 800cbb2:	2850      	cmp	r0, #80	; 0x50
 800cbb4:	d00a      	beq.n	800cbcc <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x28>
 800cbb6:	2830      	cmp	r0, #48	; 0x30
 800cbb8:	d10d      	bne.n	800cbd6 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x32>
 800cbba:	4608      	mov	r0, r1
 800cbbc:	f7fb beda 	b.w	8008974 <_Unwind_GetDataRelBase>
 800cbc0:	4608      	mov	r0, r1
 800cbc2:	f7fb bec7 	b.w	8008954 <_Unwind_GetRegionStart>
 800cbc6:	b108      	cbz	r0, 800cbcc <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x28>
 800cbc8:	2810      	cmp	r0, #16
 800cbca:	d104      	bne.n	800cbd6 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x32>
 800cbcc:	2000      	movs	r0, #0
 800cbce:	4770      	bx	lr
 800cbd0:	4608      	mov	r0, r1
 800cbd2:	f7fb bed3 	b.w	800897c <_Unwind_GetTextRelBase>
 800cbd6:	b508      	push	{r3, lr}
 800cbd8:	f000 fd2a 	bl	800d630 <abort>

0800cbdc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800cbdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbde:	460c      	mov	r4, r1
 800cbe0:	4615      	mov	r5, r2
 800cbe2:	4607      	mov	r7, r0
 800cbe4:	b108      	cbz	r0, 800cbea <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xe>
 800cbe6:	f7fb feb5 	bl	8008954 <_Unwind_GetRegionStart>
 800cbea:	6028      	str	r0, [r5, #0]
 800cbec:	7826      	ldrb	r6, [r4, #0]
 800cbee:	2eff      	cmp	r6, #255	; 0xff
 800cbf0:	f104 0401 	add.w	r4, r4, #1
 800cbf4:	d129      	bne.n	800cc4a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x6e>
 800cbf6:	6068      	str	r0, [r5, #4]
 800cbf8:	7823      	ldrb	r3, [r4, #0]
 800cbfa:	752b      	strb	r3, [r5, #20]
 800cbfc:	2bff      	cmp	r3, #255	; 0xff
 800cbfe:	f104 0001 	add.w	r0, r4, #1
 800cc02:	d032      	beq.n	800cc6a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8e>
 800cc04:	2310      	movs	r3, #16
 800cc06:	2400      	movs	r4, #0
 800cc08:	752b      	strb	r3, [r5, #20]
 800cc0a:	4622      	mov	r2, r4
 800cc0c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800cc10:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800cc14:	4093      	lsls	r3, r2
 800cc16:	0609      	lsls	r1, r1, #24
 800cc18:	ea44 0403 	orr.w	r4, r4, r3
 800cc1c:	f102 0207 	add.w	r2, r2, #7
 800cc20:	d4f4      	bmi.n	800cc0c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x30>
 800cc22:	4404      	add	r4, r0
 800cc24:	60ec      	str	r4, [r5, #12]
 800cc26:	7803      	ldrb	r3, [r0, #0]
 800cc28:	756b      	strb	r3, [r5, #21]
 800cc2a:	2400      	movs	r4, #0
 800cc2c:	3001      	adds	r0, #1
 800cc2e:	4622      	mov	r2, r4
 800cc30:	f810 1b01 	ldrb.w	r1, [r0], #1
 800cc34:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800cc38:	4093      	lsls	r3, r2
 800cc3a:	431c      	orrs	r4, r3
 800cc3c:	060b      	lsls	r3, r1, #24
 800cc3e:	f102 0207 	add.w	r2, r2, #7
 800cc42:	d4f5      	bmi.n	800cc30 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x54>
 800cc44:	4404      	add	r4, r0
 800cc46:	612c      	str	r4, [r5, #16]
 800cc48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc4a:	4639      	mov	r1, r7
 800cc4c:	4630      	mov	r0, r6
 800cc4e:	f7ff ffa9 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cc52:	4622      	mov	r2, r4
 800cc54:	4601      	mov	r1, r0
 800cc56:	1d2b      	adds	r3, r5, #4
 800cc58:	4630      	mov	r0, r6
 800cc5a:	f7ff ff43 	bl	800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cc5e:	4604      	mov	r4, r0
 800cc60:	1c60      	adds	r0, r4, #1
 800cc62:	7823      	ldrb	r3, [r4, #0]
 800cc64:	752b      	strb	r3, [r5, #20]
 800cc66:	2bff      	cmp	r3, #255	; 0xff
 800cc68:	d1cc      	bne.n	800cc04 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x28>
 800cc6a:	2300      	movs	r3, #0
 800cc6c:	60eb      	str	r3, [r5, #12]
 800cc6e:	e7da      	b.n	800cc26 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x4a>

0800cc70 <__gxx_personality_v0>:
 800cc70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc74:	f000 0403 	and.w	r4, r0, #3
 800cc78:	b099      	sub	sp, #100	; 0x64
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	2c01      	cmp	r4, #1
 800cc7e:	4688      	mov	r8, r1
 800cc80:	4617      	mov	r7, r2
 800cc82:	930c      	str	r3, [sp, #48]	; 0x30
 800cc84:	f000 8096 	beq.w	800cdb4 <__gxx_personality_v0+0x144>
 800cc88:	d30d      	bcc.n	800cca6 <__gxx_personality_v0+0x36>
 800cc8a:	2c02      	cmp	r4, #2
 800cc8c:	f040 825f 	bne.w	800d14e <__gxx_personality_v0+0x4de>
 800cc90:	4639      	mov	r1, r7
 800cc92:	4640      	mov	r0, r8
 800cc94:	f7fb fe4a 	bl	800892c <__gnu_unwind_frame>
 800cc98:	2800      	cmp	r0, #0
 800cc9a:	f000 809b 	beq.w	800cdd4 <__gxx_personality_v0+0x164>
 800cc9e:	2009      	movs	r0, #9
 800cca0:	b019      	add	sp, #100	; 0x64
 800cca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cca6:	0702      	lsls	r2, r0, #28
 800cca8:	d4f2      	bmi.n	800cc90 <__gxx_personality_v0+0x20>
 800ccaa:	2301      	movs	r3, #1
 800ccac:	9304      	str	r3, [sp, #16]
 800ccae:	aa18      	add	r2, sp, #96	; 0x60
 800ccb0:	2300      	movs	r3, #0
 800ccb2:	f842 8d2c 	str.w	r8, [r2, #-44]!
 800ccb6:	4619      	mov	r1, r3
 800ccb8:	9200      	str	r2, [sp, #0]
 800ccba:	4638      	mov	r0, r7
 800ccbc:	220c      	movs	r2, #12
 800ccbe:	f7fb f8c5 	bl	8007e4c <_Unwind_VRS_Set>
 800ccc2:	4638      	mov	r0, r7
 800ccc4:	f7fb fe4c 	bl	8008960 <_Unwind_GetLanguageSpecificData>
 800ccc8:	9005      	str	r0, [sp, #20]
 800ccca:	2800      	cmp	r0, #0
 800cccc:	d0e0      	beq.n	800cc90 <__gxx_personality_v0+0x20>
 800ccce:	ab12      	add	r3, sp, #72	; 0x48
 800ccd0:	461a      	mov	r2, r3
 800ccd2:	9905      	ldr	r1, [sp, #20]
 800ccd4:	9306      	str	r3, [sp, #24]
 800ccd6:	4638      	mov	r0, r7
 800ccd8:	f7ff ff80 	bl	800cbdc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800ccdc:	4605      	mov	r5, r0
 800ccde:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800cce2:	28ff      	cmp	r0, #255	; 0xff
 800cce4:	f000 80e5 	beq.w	800ceb2 <__gxx_personality_v0+0x242>
 800cce8:	4639      	mov	r1, r7
 800ccea:	f7ff ff5b 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800ccee:	4604      	mov	r4, r0
 800ccf0:	2300      	movs	r3, #0
 800ccf2:	f10d 0b44 	add.w	fp, sp, #68	; 0x44
 800ccf6:	4619      	mov	r1, r3
 800ccf8:	f8cd b000 	str.w	fp, [sp]
 800ccfc:	220f      	movs	r2, #15
 800ccfe:	4638      	mov	r0, r7
 800cd00:	9414      	str	r4, [sp, #80]	; 0x50
 800cd02:	f7fb f881 	bl	8007e08 <_Unwind_VRS_Get>
 800cd06:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd08:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cd0a:	f026 0601 	bic.w	r6, r6, #1
 800cd0e:	429d      	cmp	r5, r3
 800cd10:	f106 36ff 	add.w	r6, r6, #4294967295
 800cd14:	f080 80d4 	bcs.w	800cec0 <__gxx_personality_v0+0x250>
 800cd18:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800cd1c:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800cd20:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800cd24:	2cff      	cmp	r4, #255	; 0xff
 800cd26:	f04f 0100 	mov.w	r1, #0
 800cd2a:	d003      	beq.n	800cd34 <__gxx_personality_v0+0xc4>
 800cd2c:	4620      	mov	r0, r4
 800cd2e:	f7ff ff39 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cd32:	4601      	mov	r1, r0
 800cd34:	462a      	mov	r2, r5
 800cd36:	4620      	mov	r0, r4
 800cd38:	4653      	mov	r3, sl
 800cd3a:	f7ff fed3 	bl	800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cd3e:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800cd42:	2cff      	cmp	r4, #255	; 0xff
 800cd44:	4605      	mov	r5, r0
 800cd46:	f04f 0100 	mov.w	r1, #0
 800cd4a:	d003      	beq.n	800cd54 <__gxx_personality_v0+0xe4>
 800cd4c:	4620      	mov	r0, r4
 800cd4e:	f7ff ff29 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cd52:	4601      	mov	r1, r0
 800cd54:	462a      	mov	r2, r5
 800cd56:	4620      	mov	r0, r4
 800cd58:	464b      	mov	r3, r9
 800cd5a:	f7ff fec3 	bl	800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cd5e:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800cd62:	2cff      	cmp	r4, #255	; 0xff
 800cd64:	4605      	mov	r5, r0
 800cd66:	f04f 0100 	mov.w	r1, #0
 800cd6a:	d003      	beq.n	800cd74 <__gxx_personality_v0+0x104>
 800cd6c:	4620      	mov	r0, r4
 800cd6e:	f7ff ff19 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cd72:	4601      	mov	r1, r0
 800cd74:	462a      	mov	r2, r5
 800cd76:	4620      	mov	r0, r4
 800cd78:	465b      	mov	r3, fp
 800cd7a:	f7ff feb3 	bl	800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cd7e:	2400      	movs	r4, #0
 800cd80:	4605      	mov	r5, r0
 800cd82:	4621      	mov	r1, r4
 800cd84:	f815 2b01 	ldrb.w	r2, [r5], #1
 800cd88:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 800cd8c:	408b      	lsls	r3, r1
 800cd8e:	431c      	orrs	r4, r3
 800cd90:	0613      	lsls	r3, r2, #24
 800cd92:	f101 0107 	add.w	r1, r1, #7
 800cd96:	d4f5      	bmi.n	800cd84 <__gxx_personality_v0+0x114>
 800cd98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cd9a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cd9c:	4413      	add	r3, r2
 800cd9e:	42b3      	cmp	r3, r6
 800cda0:	d91f      	bls.n	800cde2 <__gxx_personality_v0+0x172>
 800cda2:	9b04      	ldr	r3, [sp, #16]
 800cda4:	07db      	lsls	r3, r3, #31
 800cda6:	f100 8091 	bmi.w	800cecc <__gxx_personality_v0+0x25c>
 800cdaa:	9b04      	ldr	r3, [sp, #16]
 800cdac:	071c      	lsls	r4, r3, #28
 800cdae:	d515      	bpl.n	800cddc <__gxx_personality_v0+0x16c>
 800cdb0:	f7ff fcda 	bl	800c768 <_ZSt9terminatev>
 800cdb4:	f010 0408 	ands.w	r4, r0, #8
 800cdb8:	d01c      	beq.n	800cdf4 <__gxx_personality_v0+0x184>
 800cdba:	aa18      	add	r2, sp, #96	; 0x60
 800cdbc:	f044 0402 	orr.w	r4, r4, #2
 800cdc0:	f842 1d2c 	str.w	r1, [r2, #-44]!
 800cdc4:	4638      	mov	r0, r7
 800cdc6:	9200      	str	r2, [sp, #0]
 800cdc8:	4619      	mov	r1, r3
 800cdca:	220c      	movs	r2, #12
 800cdcc:	9404      	str	r4, [sp, #16]
 800cdce:	f7fb f83d 	bl	8007e4c <_Unwind_VRS_Set>
 800cdd2:	e776      	b.n	800ccc2 <__gxx_personality_v0+0x52>
 800cdd4:	2008      	movs	r0, #8
 800cdd6:	b019      	add	sp, #100	; 0x64
 800cdd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cddc:	4640      	mov	r0, r8
 800cdde:	f7ff fd33 	bl	800c848 <__cxa_call_terminate>
 800cde2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cde4:	4413      	add	r3, r2
 800cde6:	42b3      	cmp	r3, r6
 800cde8:	f200 8088 	bhi.w	800cefc <__gxx_personality_v0+0x28c>
 800cdec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cdee:	42ab      	cmp	r3, r5
 800cdf0:	d896      	bhi.n	800cd20 <__gxx_personality_v0+0xb0>
 800cdf2:	e7d6      	b.n	800cda2 <__gxx_personality_v0+0x132>
 800cdf4:	ab12      	add	r3, sp, #72	; 0x48
 800cdf6:	9300      	str	r3, [sp, #0]
 800cdf8:	9306      	str	r3, [sp, #24]
 800cdfa:	220d      	movs	r2, #13
 800cdfc:	4623      	mov	r3, r4
 800cdfe:	4621      	mov	r1, r4
 800ce00:	4638      	mov	r0, r7
 800ce02:	f8d8 5020 	ldr.w	r5, [r8, #32]
 800ce06:	f7fa ffff 	bl	8007e08 <_Unwind_VRS_Get>
 800ce0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ce0c:	429d      	cmp	r5, r3
 800ce0e:	d002      	beq.n	800ce16 <__gxx_personality_v0+0x1a6>
 800ce10:	2302      	movs	r3, #2
 800ce12:	9304      	str	r3, [sp, #16]
 800ce14:	e74b      	b.n	800ccae <__gxx_personality_v0+0x3e>
 800ce16:	aa18      	add	r2, sp, #96	; 0x60
 800ce18:	4623      	mov	r3, r4
 800ce1a:	f842 8d2c 	str.w	r8, [r2, #-44]!
 800ce1e:	4621      	mov	r1, r4
 800ce20:	9200      	str	r2, [sp, #0]
 800ce22:	4638      	mov	r0, r7
 800ce24:	220c      	movs	r2, #12
 800ce26:	f7fb f811 	bl	8007e4c <_Unwind_VRS_Set>
 800ce2a:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800ce2e:	9303      	str	r3, [sp, #12]
 800ce30:	2b00      	cmp	r3, #0
 800ce32:	d0d3      	beq.n	800cddc <__gxx_personality_v0+0x16c>
 800ce34:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
 800ce38:	461a      	mov	r2, r3
 800ce3a:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800ce3e:	9305      	str	r3, [sp, #20]
 800ce40:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800ce44:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800ce48:	4613      	mov	r3, r2
 800ce4a:	2b00      	cmp	r3, #0
 800ce4c:	461c      	mov	r4, r3
 800ce4e:	f2c0 8127 	blt.w	800d0a0 <__gxx_personality_v0+0x430>
 800ce52:	2503      	movs	r5, #3
 800ce54:	a918      	add	r1, sp, #96	; 0x60
 800ce56:	2300      	movs	r3, #0
 800ce58:	f841 8d28 	str.w	r8, [r1, #-40]!
 800ce5c:	461a      	mov	r2, r3
 800ce5e:	9100      	str	r1, [sp, #0]
 800ce60:	4638      	mov	r0, r7
 800ce62:	4619      	mov	r1, r3
 800ce64:	f7fa fff2 	bl	8007e4c <_Unwind_VRS_Set>
 800ce68:	2300      	movs	r3, #0
 800ce6a:	4619      	mov	r1, r3
 800ce6c:	2201      	movs	r2, #1
 800ce6e:	f8cd a000 	str.w	sl, [sp]
 800ce72:	4638      	mov	r0, r7
 800ce74:	940f      	str	r4, [sp, #60]	; 0x3c
 800ce76:	f7fa ffe9 	bl	8007e4c <_Unwind_VRS_Set>
 800ce7a:	2300      	movs	r3, #0
 800ce7c:	4619      	mov	r1, r3
 800ce7e:	220f      	movs	r2, #15
 800ce80:	f8cd 9000 	str.w	r9, [sp]
 800ce84:	4638      	mov	r0, r7
 800ce86:	f7fa ffbf 	bl	8007e08 <_Unwind_VRS_Get>
 800ce8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce8c:	9a03      	ldr	r2, [sp, #12]
 800ce8e:	f8cd 9000 	str.w	r9, [sp]
 800ce92:	f003 0401 	and.w	r4, r3, #1
 800ce96:	2300      	movs	r3, #0
 800ce98:	4314      	orrs	r4, r2
 800ce9a:	4638      	mov	r0, r7
 800ce9c:	4619      	mov	r1, r3
 800ce9e:	220f      	movs	r2, #15
 800cea0:	9410      	str	r4, [sp, #64]	; 0x40
 800cea2:	f7fa ffd3 	bl	8007e4c <_Unwind_VRS_Set>
 800cea6:	2d02      	cmp	r5, #2
 800cea8:	d005      	beq.n	800ceb6 <__gxx_personality_v0+0x246>
 800ceaa:	2007      	movs	r0, #7
 800ceac:	b019      	add	sp, #100	; 0x64
 800ceae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ceb2:	2400      	movs	r4, #0
 800ceb4:	e71c      	b.n	800ccf0 <__gxx_personality_v0+0x80>
 800ceb6:	4640      	mov	r0, r8
 800ceb8:	f7ff fda2 	bl	800ca00 <__cxa_begin_cleanup>
 800cebc:	2007      	movs	r0, #7
 800cebe:	e6ef      	b.n	800cca0 <__gxx_personality_v0+0x30>
 800cec0:	9b04      	ldr	r3, [sp, #16]
 800cec2:	07d9      	lsls	r1, r3, #31
 800cec4:	f57f af71 	bpl.w	800cdaa <__gxx_personality_v0+0x13a>
 800cec8:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800cecc:	2400      	movs	r4, #0
 800cece:	9403      	str	r4, [sp, #12]
 800ced0:	2300      	movs	r3, #0
 800ced2:	4619      	mov	r1, r3
 800ced4:	220d      	movs	r2, #13
 800ced6:	f8cd 9000 	str.w	r9, [sp]
 800ceda:	4638      	mov	r0, r7
 800cedc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800cede:	f7fa ff93 	bl	8007e08 <_Unwind_VRS_Get>
 800cee2:	9a05      	ldr	r2, [sp, #20]
 800cee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cee6:	f8c8 202c 	str.w	r2, [r8, #44]	; 0x2c
 800ceea:	9a03      	ldr	r2, [sp, #12]
 800ceec:	f8c8 2030 	str.w	r2, [r8, #48]	; 0x30
 800cef0:	e9c8 5409 	strd	r5, r4, [r8, #36]	; 0x24
 800cef4:	f8c8 3020 	str.w	r3, [r8, #32]
 800cef8:	2006      	movs	r0, #6
 800cefa:	e6d1      	b.n	800cca0 <__gxx_personality_v0+0x30>
 800cefc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	f43f aec6 	beq.w	800cc90 <__gxx_personality_v0+0x20>
 800cf04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cf06:	189a      	adds	r2, r3, r2
 800cf08:	9203      	str	r2, [sp, #12]
 800cf0a:	2c00      	cmp	r4, #0
 800cf0c:	f000 80f0 	beq.w	800d0f0 <__gxx_personality_v0+0x480>
 800cf10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cf12:	3c01      	subs	r4, #1
 800cf14:	4423      	add	r3, r4
 800cf16:	2a00      	cmp	r2, #0
 800cf18:	f43f aeba 	beq.w	800cc90 <__gxx_personality_v0+0x20>
 800cf1c:	2b00      	cmp	r3, #0
 800cf1e:	f000 80f8 	beq.w	800d112 <__gxx_personality_v0+0x4a2>
 800cf22:	9a04      	ldr	r2, [sp, #16]
 800cf24:	f012 0208 	ands.w	r2, r2, #8
 800cf28:	9209      	str	r2, [sp, #36]	; 0x24
 800cf2a:	f000 8103 	beq.w	800d134 <__gxx_personality_v0+0x4c4>
 800cf2e:	2147      	movs	r1, #71	; 0x47
 800cf30:	224e      	movs	r2, #78	; 0x4e
 800cf32:	f888 1000 	strb.w	r1, [r8]
 800cf36:	f888 2001 	strb.w	r2, [r8, #1]
 800cf3a:	2155      	movs	r1, #85	; 0x55
 800cf3c:	2243      	movs	r2, #67	; 0x43
 800cf3e:	f888 1002 	strb.w	r1, [r8, #2]
 800cf42:	f888 2003 	strb.w	r2, [r8, #3]
 800cf46:	2146      	movs	r1, #70	; 0x46
 800cf48:	224f      	movs	r2, #79	; 0x4f
 800cf4a:	f888 1004 	strb.w	r1, [r8, #4]
 800cf4e:	f888 2005 	strb.w	r2, [r8, #5]
 800cf52:	2152      	movs	r1, #82	; 0x52
 800cf54:	2200      	movs	r2, #0
 800cf56:	f888 1006 	strb.w	r1, [r8, #6]
 800cf5a:	f888 2007 	strb.w	r2, [r8, #7]
 800cf5e:	e9cd 7a0a 	strd	r7, sl, [sp, #40]	; 0x28
 800cf62:	2200      	movs	r2, #0
 800cf64:	9207      	str	r2, [sp, #28]
 800cf66:	f8cd 9020 	str.w	r9, [sp, #32]
 800cf6a:	2400      	movs	r4, #0
 800cf6c:	4621      	mov	r1, r4
 800cf6e:	e000      	b.n	800cf72 <__gxx_personality_v0+0x302>
 800cf70:	462b      	mov	r3, r5
 800cf72:	461d      	mov	r5, r3
 800cf74:	f815 0b01 	ldrb.w	r0, [r5], #1
 800cf78:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800cf7c:	408a      	lsls	r2, r1
 800cf7e:	0606      	lsls	r6, r0, #24
 800cf80:	ea44 0402 	orr.w	r4, r4, r2
 800cf84:	f101 0107 	add.w	r1, r1, #7
 800cf88:	d4f2      	bmi.n	800cf70 <__gxx_personality_v0+0x300>
 800cf8a:	291f      	cmp	r1, #31
 800cf8c:	d805      	bhi.n	800cf9a <__gxx_personality_v0+0x32a>
 800cf8e:	0640      	lsls	r0, r0, #25
 800cf90:	d503      	bpl.n	800cf9a <__gxx_personality_v0+0x32a>
 800cf92:	2201      	movs	r2, #1
 800cf94:	408a      	lsls	r2, r1
 800cf96:	4252      	negs	r2, r2
 800cf98:	4314      	orrs	r4, r2
 800cf9a:	2600      	movs	r6, #0
 800cf9c:	4631      	mov	r1, r6
 800cf9e:	46a1      	mov	r9, r4
 800cfa0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800cfa4:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800cfa8:	408a      	lsls	r2, r1
 800cfaa:	4316      	orrs	r6, r2
 800cfac:	0602      	lsls	r2, r0, #24
 800cfae:	f101 0107 	add.w	r1, r1, #7
 800cfb2:	d4f5      	bmi.n	800cfa0 <__gxx_personality_v0+0x330>
 800cfb4:	291f      	cmp	r1, #31
 800cfb6:	d805      	bhi.n	800cfc4 <__gxx_personality_v0+0x354>
 800cfb8:	0647      	lsls	r7, r0, #25
 800cfba:	d503      	bpl.n	800cfc4 <__gxx_personality_v0+0x354>
 800cfbc:	2301      	movs	r3, #1
 800cfbe:	408b      	lsls	r3, r1
 800cfc0:	425b      	negs	r3, r3
 800cfc2:	431e      	orrs	r6, r3
 800cfc4:	2c00      	cmp	r4, #0
 800cfc6:	d04c      	beq.n	800d062 <__gxx_personality_v0+0x3f2>
 800cfc8:	dc4e      	bgt.n	800d068 <__gxx_personality_v0+0x3f8>
 800cfca:	f104 0a01 	add.w	sl, r4, #1
 800cfce:	ebca 728a 	rsb	r2, sl, sl, lsl #30
 800cfd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cfd4:	eb03 0782 	add.w	r7, r3, r2, lsl #2
 800cfd8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800cfdc:	f1b8 0f00 	cmp.w	r8, #0
 800cfe0:	d001      	beq.n	800cfe6 <__gxx_personality_v0+0x376>
 800cfe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cfe4:	b12b      	cbz	r3, 800cff2 <__gxx_personality_v0+0x382>
 800cfe6:	b351      	cbz	r1, 800d03e <__gxx_personality_v0+0x3ce>
 800cfe8:	2e00      	cmp	r6, #0
 800cfea:	f000 808b 	beq.w	800d104 <__gxx_personality_v0+0x494>
 800cfee:	19ab      	adds	r3, r5, r6
 800cff0:	e7bb      	b.n	800cf6a <__gxx_personality_v0+0x2fa>
 800cff2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cff4:	9311      	str	r3, [sp, #68]	; 0x44
 800cff6:	b929      	cbnz	r1, 800d004 <__gxx_personality_v0+0x394>
 800cff8:	e091      	b.n	800d11e <__gxx_personality_v0+0x4ae>
 800cffa:	f857 1f04 	ldr.w	r1, [r7, #4]!
 800cffe:	2900      	cmp	r1, #0
 800d000:	f000 808d 	beq.w	800d11e <__gxx_personality_v0+0x4ae>
 800d004:	4439      	add	r1, r7
 800d006:	465b      	mov	r3, fp
 800d008:	2200      	movs	r2, #0
 800d00a:	4640      	mov	r0, r8
 800d00c:	f7ff fca0 	bl	800c950 <__cxa_type_match>
 800d010:	2800      	cmp	r0, #0
 800d012:	d0f2      	beq.n	800cffa <__gxx_personality_v0+0x38a>
 800d014:	e7e8      	b.n	800cfe8 <__gxx_personality_v0+0x378>
 800d016:	00e2      	lsls	r2, r4, #3
 800d018:	4252      	negs	r2, r2
 800d01a:	e9dd 1314 	ldrd	r1, r3, [sp, #80]	; 0x50
 800d01e:	441a      	add	r2, r3
 800d020:	9b08      	ldr	r3, [sp, #32]
 800d022:	f7ff fd5f 	bl	800cae4 <_ZL28read_encoded_value_with_basehjPKhPj>
 800d026:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d028:	b149      	cbz	r1, 800d03e <__gxx_personality_v0+0x3ce>
 800d02a:	f1b8 0f00 	cmp.w	r8, #0
 800d02e:	d0db      	beq.n	800cfe8 <__gxx_personality_v0+0x378>
 800d030:	ab0c      	add	r3, sp, #48	; 0x30
 800d032:	2200      	movs	r2, #0
 800d034:	4640      	mov	r0, r8
 800d036:	f7ff fc8b 	bl	800c950 <__cxa_type_match>
 800d03a:	2800      	cmp	r0, #0
 800d03c:	d0d4      	beq.n	800cfe8 <__gxx_personality_v0+0x378>
 800d03e:	9b04      	ldr	r3, [sp, #16]
 800d040:	07d8      	lsls	r0, r3, #31
 800d042:	464a      	mov	r2, r9
 800d044:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
 800d048:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d04c:	f53f af40 	bmi.w	800ced0 <__gxx_personality_v0+0x260>
 800d050:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d052:	2b00      	cmp	r3, #0
 800d054:	f43f aef8 	beq.w	800ce48 <__gxx_personality_v0+0x1d8>
 800d058:	2c00      	cmp	r4, #0
 800d05a:	f6bf aefa 	bge.w	800ce52 <__gxx_personality_v0+0x1e2>
 800d05e:	f7ff fb91 	bl	800c784 <_ZSt10unexpectedv>
 800d062:	2301      	movs	r3, #1
 800d064:	9307      	str	r3, [sp, #28]
 800d066:	e7bf      	b.n	800cfe8 <__gxx_personality_v0+0x378>
 800d068:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800d06c:	28ff      	cmp	r0, #255	; 0xff
 800d06e:	d03b      	beq.n	800d0e8 <__gxx_personality_v0+0x478>
 800d070:	f000 0307 	and.w	r3, r0, #7
 800d074:	2b04      	cmp	r3, #4
 800d076:	d86a      	bhi.n	800d14e <__gxx_personality_v0+0x4de>
 800d078:	a201      	add	r2, pc, #4	; (adr r2, 800d080 <__gxx_personality_v0+0x410>)
 800d07a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d07e:	bf00      	nop
 800d080:	0800d09b 	.word	0x0800d09b
 800d084:	0800d14f 	.word	0x0800d14f
 800d088:	0800d095 	.word	0x0800d095
 800d08c:	0800d09b 	.word	0x0800d09b
 800d090:	0800d017 	.word	0x0800d017
 800d094:	0062      	lsls	r2, r4, #1
 800d096:	4252      	negs	r2, r2
 800d098:	e7bf      	b.n	800d01a <__gxx_personality_v0+0x3aa>
 800d09a:	00a2      	lsls	r2, r4, #2
 800d09c:	4252      	negs	r2, r2
 800d09e:	e7bc      	b.n	800d01a <__gxx_personality_v0+0x3aa>
 800d0a0:	3301      	adds	r3, #1
 800d0a2:	461d      	mov	r5, r3
 800d0a4:	e9dd 1205 	ldrd	r1, r2, [sp, #20]
 800d0a8:	4638      	mov	r0, r7
 800d0aa:	f7ff fd97 	bl	800cbdc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800d0ae:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800d0b2:	28ff      	cmp	r0, #255	; 0xff
 800d0b4:	d01a      	beq.n	800d0ec <__gxx_personality_v0+0x47c>
 800d0b6:	4639      	mov	r1, r7
 800d0b8:	f7ff fd74 	bl	800cba4 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800d0bc:	ebc5 7285 	rsb	r2, r5, r5, lsl #30
 800d0c0:	0092      	lsls	r2, r2, #2
 800d0c2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d0c4:	9014      	str	r0, [sp, #80]	; 0x50
 800d0c6:	58ab      	ldr	r3, [r5, r2]
 800d0c8:	4415      	add	r5, r2
 800d0ca:	b133      	cbz	r3, 800d0da <__gxx_personality_v0+0x46a>
 800d0cc:	462a      	mov	r2, r5
 800d0ce:	2300      	movs	r3, #0
 800d0d0:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800d0d4:	3301      	adds	r3, #1
 800d0d6:	2900      	cmp	r1, #0
 800d0d8:	d1fa      	bne.n	800d0d0 <__gxx_personality_v0+0x460>
 800d0da:	2204      	movs	r2, #4
 800d0dc:	e9c8 250c 	strd	r2, r5, [r8, #48]	; 0x30
 800d0e0:	e9c8 300a 	strd	r3, r0, [r8, #40]	; 0x28
 800d0e4:	2503      	movs	r5, #3
 800d0e6:	e6b5      	b.n	800ce54 <__gxx_personality_v0+0x1e4>
 800d0e8:	2200      	movs	r2, #0
 800d0ea:	e796      	b.n	800d01a <__gxx_personality_v0+0x3aa>
 800d0ec:	2000      	movs	r0, #0
 800d0ee:	e7e5      	b.n	800d0bc <__gxx_personality_v0+0x44c>
 800d0f0:	9b03      	ldr	r3, [sp, #12]
 800d0f2:	2b00      	cmp	r3, #0
 800d0f4:	f43f adcc 	beq.w	800cc90 <__gxx_personality_v0+0x20>
 800d0f8:	9b04      	ldr	r3, [sp, #16]
 800d0fa:	07da      	lsls	r2, r3, #31
 800d0fc:	f53f adc8 	bmi.w	800cc90 <__gxx_personality_v0+0x20>
 800d100:	2502      	movs	r5, #2
 800d102:	e6a7      	b.n	800ce54 <__gxx_personality_v0+0x1e4>
 800d104:	e9dd 3907 	ldrd	r3, r9, [sp, #28]
 800d108:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
 800d10c:	2b00      	cmp	r3, #0
 800d10e:	f43f adbf 	beq.w	800cc90 <__gxx_personality_v0+0x20>
 800d112:	9b04      	ldr	r3, [sp, #16]
 800d114:	07dd      	lsls	r5, r3, #31
 800d116:	f53f adbb 	bmi.w	800cc90 <__gxx_personality_v0+0x20>
 800d11a:	2400      	movs	r4, #0
 800d11c:	e7f0      	b.n	800d100 <__gxx_personality_v0+0x490>
 800d11e:	9b04      	ldr	r3, [sp, #16]
 800d120:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800d122:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d126:	07de      	lsls	r6, r3, #31
 800d128:	4655      	mov	r5, sl
 800d12a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d12e:	f53f aecf 	bmi.w	800ced0 <__gxx_personality_v0+0x260>
 800d132:	e7b7      	b.n	800d0a4 <__gxx_personality_v0+0x434>
 800d134:	f898 2007 	ldrb.w	r2, [r8, #7]
 800d138:	2a01      	cmp	r2, #1
 800d13a:	bf0c      	ite	eq
 800d13c:	f858 2c20 	ldreq.w	r2, [r8, #-32]
 800d140:	f108 0258 	addne.w	r2, r8, #88	; 0x58
 800d144:	920c      	str	r2, [sp, #48]	; 0x30
 800d146:	e70a      	b.n	800cf5e <__gxx_personality_v0+0x2ee>
 800d148:	f7ff f9ea 	bl	800c520 <__cxa_begin_catch>
 800d14c:	e630      	b.n	800cdb0 <__gxx_personality_v0+0x140>
 800d14e:	f000 fa6f 	bl	800d630 <abort>
 800d152:	bf00      	nop

0800d154 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800d154:	b570      	push	{r4, r5, r6, lr}
 800d156:	6803      	ldr	r3, [r0, #0]
 800d158:	b084      	sub	sp, #16
 800d15a:	2400      	movs	r4, #0
 800d15c:	699e      	ldr	r6, [r3, #24]
 800d15e:	9400      	str	r4, [sp, #0]
 800d160:	2310      	movs	r3, #16
 800d162:	4615      	mov	r5, r2
 800d164:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800d168:	6812      	ldr	r2, [r2, #0]
 800d16a:	f88d 4004 	strb.w	r4, [sp, #4]
 800d16e:	466b      	mov	r3, sp
 800d170:	47b0      	blx	r6
 800d172:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800d176:	f003 0306 	and.w	r3, r3, #6
 800d17a:	2b06      	cmp	r3, #6
 800d17c:	bf03      	ittte	eq
 800d17e:	9b00      	ldreq	r3, [sp, #0]
 800d180:	602b      	streq	r3, [r5, #0]
 800d182:	2001      	moveq	r0, #1
 800d184:	4620      	movne	r0, r4
 800d186:	b004      	add	sp, #16
 800d188:	bd70      	pop	{r4, r5, r6, pc}
 800d18a:	bf00      	nop

0800d18c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800d18c:	9800      	ldr	r0, [sp, #0]
 800d18e:	4290      	cmp	r0, r2
 800d190:	bf0c      	ite	eq
 800d192:	2006      	moveq	r0, #6
 800d194:	2001      	movne	r0, #1
 800d196:	4770      	bx	lr

0800d198 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800d198:	b510      	push	{r4, lr}
 800d19a:	4b03      	ldr	r3, [pc, #12]	; (800d1a8 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800d19c:	6003      	str	r3, [r0, #0]
 800d19e:	4604      	mov	r4, r0
 800d1a0:	f7ff fb1a 	bl	800c7d8 <_ZNSt9type_infoD1Ev>
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	bd10      	pop	{r4, pc}
 800d1a8:	0801ec6c 	.word	0x0801ec6c

0800d1ac <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800d1ac:	b510      	push	{r4, lr}
 800d1ae:	4b05      	ldr	r3, [pc, #20]	; (800d1c4 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800d1b0:	6003      	str	r3, [r0, #0]
 800d1b2:	4604      	mov	r4, r0
 800d1b4:	f7ff fb10 	bl	800c7d8 <_ZNSt9type_infoD1Ev>
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	2108      	movs	r1, #8
 800d1bc:	f7ff f90c 	bl	800c3d8 <_ZdlPvj>
 800d1c0:	4620      	mov	r0, r4
 800d1c2:	bd10      	pop	{r4, pc}
 800d1c4:	0801ec6c 	.word	0x0801ec6c

0800d1c8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800d1c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1cc:	e9dd 1408 	ldrd	r1, r4, [sp, #32]
 800d1d0:	9d06      	ldr	r5, [sp, #24]
 800d1d2:	428d      	cmp	r5, r1
 800d1d4:	4690      	mov	r8, r2
 800d1d6:	461f      	mov	r7, r3
 800d1d8:	4606      	mov	r6, r0
 800d1da:	d00c      	beq.n	800d1f6 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800d1dc:	4639      	mov	r1, r7
 800d1de:	4630      	mov	r0, r6
 800d1e0:	f7ff fafe 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800d1e4:	b120      	cbz	r0, 800d1f0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x28>
 800d1e6:	2301      	movs	r3, #1
 800d1e8:	6025      	str	r5, [r4, #0]
 800d1ea:	f884 8004 	strb.w	r8, [r4, #4]
 800d1ee:	71a3      	strb	r3, [r4, #6]
 800d1f0:	2000      	movs	r0, #0
 800d1f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1f6:	9907      	ldr	r1, [sp, #28]
 800d1f8:	f7ff faf2 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800d1fc:	2800      	cmp	r0, #0
 800d1fe:	d0ed      	beq.n	800d1dc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
 800d200:	f884 8005 	strb.w	r8, [r4, #5]
 800d204:	2000      	movs	r0, #0
 800d206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d20a:	bf00      	nop

0800d20c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800d20c:	b538      	push	{r3, r4, r5, lr}
 800d20e:	4615      	mov	r5, r2
 800d210:	461c      	mov	r4, r3
 800d212:	f7ff fae5 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800d216:	b120      	cbz	r0, 800d222 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 800d218:	2208      	movs	r2, #8
 800d21a:	2306      	movs	r3, #6
 800d21c:	6025      	str	r5, [r4, #0]
 800d21e:	60e2      	str	r2, [r4, #12]
 800d220:	7123      	strb	r3, [r4, #4]
 800d222:	bd38      	pop	{r3, r4, r5, pc}

0800d224 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800d224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d228:	4617      	mov	r7, r2
 800d22a:	461c      	mov	r4, r3
 800d22c:	4606      	mov	r6, r0
 800d22e:	460d      	mov	r5, r1
 800d230:	f7ff fad6 	bl	800c7e0 <_ZNKSt9type_infoeqERKS_>
 800d234:	b908      	cbnz	r0, 800d23a <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 800d236:	2c03      	cmp	r4, #3
 800d238:	d901      	bls.n	800d23e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x1a>
 800d23a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d23e:	682b      	ldr	r3, [r5, #0]
 800d240:	463a      	mov	r2, r7
 800d242:	4631      	mov	r1, r6
 800d244:	4628      	mov	r0, r5
 800d246:	695b      	ldr	r3, [r3, #20]
 800d248:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d24c:	4718      	bx	r3
 800d24e:	bf00      	nop

0800d250 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800d250:	b570      	push	{r4, r5, r6, lr}
 800d252:	4b3c      	ldr	r3, [pc, #240]	; (800d344 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800d254:	781a      	ldrb	r2, [r3, #0]
 800d256:	b082      	sub	sp, #8
 800d258:	2a00      	cmp	r2, #0
 800d25a:	d135      	bne.n	800d2c8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x78>
 800d25c:	2401      	movs	r4, #1
 800d25e:	701c      	strb	r4, [r3, #0]
 800d260:	f000 f87e 	bl	800d360 <__cxa_current_exception_type>
 800d264:	2800      	cmp	r0, #0
 800d266:	d03d      	beq.n	800d2e4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x94>
 800d268:	6844      	ldr	r4, [r0, #4]
 800d26a:	4d37      	ldr	r5, [pc, #220]	; (800d348 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d26c:	7823      	ldrb	r3, [r4, #0]
 800d26e:	2b2a      	cmp	r3, #42	; 0x2a
 800d270:	ab02      	add	r3, sp, #8
 800d272:	f04f 32ff 	mov.w	r2, #4294967295
 800d276:	bf08      	it	eq
 800d278:	3401      	addeq	r4, #1
 800d27a:	f843 2d04 	str.w	r2, [r3, #-4]!
 800d27e:	2200      	movs	r2, #0
 800d280:	4611      	mov	r1, r2
 800d282:	4620      	mov	r0, r4
 800d284:	f7f9 fcbc 	bl	8006c00 <__cxa_demangle>
 800d288:	682b      	ldr	r3, [r5, #0]
 800d28a:	4606      	mov	r6, r0
 800d28c:	68db      	ldr	r3, [r3, #12]
 800d28e:	482f      	ldr	r0, [pc, #188]	; (800d34c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800d290:	2230      	movs	r2, #48	; 0x30
 800d292:	2101      	movs	r1, #1
 800d294:	f000 fbe0 	bl	800da58 <fwrite>
 800d298:	9b01      	ldr	r3, [sp, #4]
 800d29a:	b17b      	cbz	r3, 800d2bc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800d29c:	682b      	ldr	r3, [r5, #0]
 800d29e:	4620      	mov	r0, r4
 800d2a0:	68d9      	ldr	r1, [r3, #12]
 800d2a2:	f000 fa39 	bl	800d718 <fputs>
 800d2a6:	682b      	ldr	r3, [r5, #0]
 800d2a8:	4829      	ldr	r0, [pc, #164]	; (800d350 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800d2aa:	68db      	ldr	r3, [r3, #12]
 800d2ac:	2202      	movs	r2, #2
 800d2ae:	2101      	movs	r1, #1
 800d2b0:	f000 fbd2 	bl	800da58 <fwrite>
 800d2b4:	9b01      	ldr	r3, [sp, #4]
 800d2b6:	b18b      	cbz	r3, 800d2dc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800d2b8:	f7ff f8fa 	bl	800c4b0 <__cxa_rethrow>
 800d2bc:	682b      	ldr	r3, [r5, #0]
 800d2be:	4630      	mov	r0, r6
 800d2c0:	68d9      	ldr	r1, [r3, #12]
 800d2c2:	f000 fa29 	bl	800d718 <fputs>
 800d2c6:	e7ee      	b.n	800d2a6 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x56>
 800d2c8:	4b1f      	ldr	r3, [pc, #124]	; (800d348 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d2ca:	4822      	ldr	r0, [pc, #136]	; (800d354 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800d2cc:	681b      	ldr	r3, [r3, #0]
 800d2ce:	221d      	movs	r2, #29
 800d2d0:	68db      	ldr	r3, [r3, #12]
 800d2d2:	2101      	movs	r1, #1
 800d2d4:	f000 fbc0 	bl	800da58 <fwrite>
 800d2d8:	f000 f9aa 	bl	800d630 <abort>
 800d2dc:	4630      	mov	r0, r6
 800d2de:	f000 fbf9 	bl	800dad4 <free>
 800d2e2:	e7e9      	b.n	800d2b8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x68>
 800d2e4:	4b18      	ldr	r3, [pc, #96]	; (800d348 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d2e6:	481c      	ldr	r0, [pc, #112]	; (800d358 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800d2e8:	681b      	ldr	r3, [r3, #0]
 800d2ea:	4621      	mov	r1, r4
 800d2ec:	68db      	ldr	r3, [r3, #12]
 800d2ee:	222d      	movs	r2, #45	; 0x2d
 800d2f0:	f000 fbb2 	bl	800da58 <fwrite>
 800d2f4:	f000 f99c 	bl	800d630 <abort>
 800d2f8:	2901      	cmp	r1, #1
 800d2fa:	460c      	mov	r4, r1
 800d2fc:	d119      	bne.n	800d332 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xe2>
 800d2fe:	f7ff f90f 	bl	800c520 <__cxa_begin_catch>
 800d302:	6803      	ldr	r3, [r0, #0]
 800d304:	689b      	ldr	r3, [r3, #8]
 800d306:	4798      	blx	r3
 800d308:	682b      	ldr	r3, [r5, #0]
 800d30a:	4606      	mov	r6, r0
 800d30c:	68db      	ldr	r3, [r3, #12]
 800d30e:	4813      	ldr	r0, [pc, #76]	; (800d35c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 800d310:	4621      	mov	r1, r4
 800d312:	220b      	movs	r2, #11
 800d314:	f000 fba0 	bl	800da58 <fwrite>
 800d318:	682b      	ldr	r3, [r5, #0]
 800d31a:	4630      	mov	r0, r6
 800d31c:	68d9      	ldr	r1, [r3, #12]
 800d31e:	f000 f9fb 	bl	800d718 <fputs>
 800d322:	682b      	ldr	r3, [r5, #0]
 800d324:	200a      	movs	r0, #10
 800d326:	68d9      	ldr	r1, [r3, #12]
 800d328:	f000 f9b4 	bl	800d694 <fputc>
 800d32c:	f7ff f938 	bl	800c5a0 <__cxa_end_catch>
 800d330:	e7e0      	b.n	800d2f4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa4>
 800d332:	f7ff f8f5 	bl	800c520 <__cxa_begin_catch>
 800d336:	f7ff f933 	bl	800c5a0 <__cxa_end_catch>
 800d33a:	e7db      	b.n	800d2f4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa4>
 800d33c:	f7ff f930 	bl	800c5a0 <__cxa_end_catch>
 800d340:	f7ff fb00 	bl	800c944 <__cxa_end_cleanup>
 800d344:	2001e004 	.word	0x2001e004
 800d348:	2000002c 	.word	0x2000002c
 800d34c:	0801ecb0 	.word	0x0801ecb0
 800d350:	0801ece4 	.word	0x0801ece4
 800d354:	0801ec90 	.word	0x0801ec90
 800d358:	0801ece8 	.word	0x0801ece8
 800d35c:	0801ed18 	.word	0x0801ed18

0800d360 <__cxa_current_exception_type>:
 800d360:	b508      	push	{r3, lr}
 800d362:	f7ff fbbb 	bl	800cadc <__cxa_get_globals>
 800d366:	6800      	ldr	r0, [r0, #0]
 800d368:	b130      	cbz	r0, 800d378 <__cxa_current_exception_type+0x18>
 800d36a:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800d36e:	6800      	ldr	r0, [r0, #0]
 800d370:	2b01      	cmp	r3, #1
 800d372:	bf08      	it	eq
 800d374:	f850 0c78 	ldreq.w	r0, [r0, #-120]
 800d378:	bd08      	pop	{r3, pc}
 800d37a:	bf00      	nop

0800d37c <expf>:
 800d37c:	b530      	push	{r4, r5, lr}
 800d37e:	ed2d 8b02 	vpush	{d8}
 800d382:	4d35      	ldr	r5, [pc, #212]	; (800d458 <expf+0xdc>)
 800d384:	b08b      	sub	sp, #44	; 0x2c
 800d386:	eeb0 8a40 	vmov.f32	s16, s0
 800d38a:	f000 f871 	bl	800d470 <__ieee754_expf>
 800d38e:	f995 3000 	ldrsb.w	r3, [r5]
 800d392:	3301      	adds	r3, #1
 800d394:	ee10 4a10 	vmov	r4, s0
 800d398:	d030      	beq.n	800d3fc <expf+0x80>
 800d39a:	eeb0 0a48 	vmov.f32	s0, s16
 800d39e:	f000 f93d 	bl	800d61c <finitef>
 800d3a2:	b358      	cbz	r0, 800d3fc <expf+0x80>
 800d3a4:	eddf 7a2d 	vldr	s15, [pc, #180]	; 800d45c <expf+0xe0>
 800d3a8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800d3ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d3b0:	dd35      	ble.n	800d41e <expf+0xa2>
 800d3b2:	2303      	movs	r3, #3
 800d3b4:	9300      	str	r3, [sp, #0]
 800d3b6:	4b2a      	ldr	r3, [pc, #168]	; (800d460 <expf+0xe4>)
 800d3b8:	9301      	str	r3, [sp, #4]
 800d3ba:	ee18 0a10 	vmov	r0, s16
 800d3be:	2300      	movs	r3, #0
 800d3c0:	9308      	str	r3, [sp, #32]
 800d3c2:	f7f9 fe5b 	bl	800707c <__aeabi_f2d>
 800d3c6:	f995 3000 	ldrsb.w	r3, [r5]
 800d3ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d3ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800d3d2:	b9cb      	cbnz	r3, 800d408 <expf+0x8c>
 800d3d4:	4b23      	ldr	r3, [pc, #140]	; (800d464 <expf+0xe8>)
 800d3d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800d3da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800d3de:	4668      	mov	r0, sp
 800d3e0:	f000 f91a 	bl	800d618 <matherr>
 800d3e4:	b1b0      	cbz	r0, 800d414 <expf+0x98>
 800d3e6:	9b08      	ldr	r3, [sp, #32]
 800d3e8:	b11b      	cbz	r3, 800d3f2 <expf+0x76>
 800d3ea:	f000 f929 	bl	800d640 <__errno>
 800d3ee:	9b08      	ldr	r3, [sp, #32]
 800d3f0:	6003      	str	r3, [r0, #0]
 800d3f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d3f6:	f7fa f971 	bl	80076dc <__aeabi_d2f>
 800d3fa:	4604      	mov	r4, r0
 800d3fc:	ee00 4a10 	vmov	s0, r4
 800d400:	b00b      	add	sp, #44	; 0x2c
 800d402:	ecbd 8b02 	vpop	{d8}
 800d406:	bd30      	pop	{r4, r5, pc}
 800d408:	4917      	ldr	r1, [pc, #92]	; (800d468 <expf+0xec>)
 800d40a:	2000      	movs	r0, #0
 800d40c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800d410:	2b02      	cmp	r3, #2
 800d412:	d1e4      	bne.n	800d3de <expf+0x62>
 800d414:	f000 f914 	bl	800d640 <__errno>
 800d418:	2322      	movs	r3, #34	; 0x22
 800d41a:	6003      	str	r3, [r0, #0]
 800d41c:	e7e3      	b.n	800d3e6 <expf+0x6a>
 800d41e:	eddf 7a13 	vldr	s15, [pc, #76]	; 800d46c <expf+0xf0>
 800d422:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800d426:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d42a:	d5e7      	bpl.n	800d3fc <expf+0x80>
 800d42c:	2304      	movs	r3, #4
 800d42e:	9300      	str	r3, [sp, #0]
 800d430:	4b0b      	ldr	r3, [pc, #44]	; (800d460 <expf+0xe4>)
 800d432:	9301      	str	r3, [sp, #4]
 800d434:	ee18 0a10 	vmov	r0, s16
 800d438:	2300      	movs	r3, #0
 800d43a:	9308      	str	r3, [sp, #32]
 800d43c:	f7f9 fe1e 	bl	800707c <__aeabi_f2d>
 800d440:	2300      	movs	r3, #0
 800d442:	2200      	movs	r2, #0
 800d444:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800d448:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d44c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800d450:	f995 3000 	ldrsb.w	r3, [r5]
 800d454:	e7dc      	b.n	800d410 <expf+0x94>
 800d456:	bf00      	nop
 800d458:	20000028 	.word	0x20000028
 800d45c:	42b17180 	.word	0x42b17180
 800d460:	0801f588 	.word	0x0801f588
 800d464:	47efffff 	.word	0x47efffff
 800d468:	7ff00000 	.word	0x7ff00000
 800d46c:	c2cff1b5 	.word	0xc2cff1b5

0800d470 <__ieee754_expf>:
 800d470:	ee10 2a10 	vmov	r2, s0
 800d474:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 800d478:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 800d47c:	d902      	bls.n	800d484 <__ieee754_expf+0x14>
 800d47e:	ee30 0a00 	vadd.f32	s0, s0, s0
 800d482:	4770      	bx	lr
 800d484:	ea4f 73d2 	mov.w	r3, r2, lsr #31
 800d488:	d106      	bne.n	800d498 <__ieee754_expf+0x28>
 800d48a:	eddf 7a51 	vldr	s15, [pc, #324]	; 800d5d0 <__ieee754_expf+0x160>
 800d48e:	2b00      	cmp	r3, #0
 800d490:	bf18      	it	ne
 800d492:	eeb0 0a67 	vmovne.f32	s0, s15
 800d496:	4770      	bx	lr
 800d498:	484e      	ldr	r0, [pc, #312]	; (800d5d4 <__ieee754_expf+0x164>)
 800d49a:	4282      	cmp	r2, r0
 800d49c:	dd04      	ble.n	800d4a8 <__ieee754_expf+0x38>
 800d49e:	ed9f 0a4e 	vldr	s0, [pc, #312]	; 800d5d8 <__ieee754_expf+0x168>
 800d4a2:	ee20 0a00 	vmul.f32	s0, s0, s0
 800d4a6:	4770      	bx	lr
 800d4a8:	2a00      	cmp	r2, #0
 800d4aa:	da03      	bge.n	800d4b4 <__ieee754_expf+0x44>
 800d4ac:	4a4b      	ldr	r2, [pc, #300]	; (800d5dc <__ieee754_expf+0x16c>)
 800d4ae:	4291      	cmp	r1, r2
 800d4b0:	f200 808a 	bhi.w	800d5c8 <__ieee754_expf+0x158>
 800d4b4:	4a4a      	ldr	r2, [pc, #296]	; (800d5e0 <__ieee754_expf+0x170>)
 800d4b6:	4291      	cmp	r1, r2
 800d4b8:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800d4bc:	d954      	bls.n	800d568 <__ieee754_expf+0xf8>
 800d4be:	4a49      	ldr	r2, [pc, #292]	; (800d5e4 <__ieee754_expf+0x174>)
 800d4c0:	4291      	cmp	r1, r2
 800d4c2:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800d4c6:	d836      	bhi.n	800d536 <__ieee754_expf+0xc6>
 800d4c8:	4947      	ldr	r1, [pc, #284]	; (800d5e8 <__ieee754_expf+0x178>)
 800d4ca:	4411      	add	r1, r2
 800d4cc:	ed91 7a00 	vldr	s14, [r1]
 800d4d0:	4946      	ldr	r1, [pc, #280]	; (800d5ec <__ieee754_expf+0x17c>)
 800d4d2:	440a      	add	r2, r1
 800d4d4:	edd2 7a00 	vldr	s15, [r2]
 800d4d8:	ee30 7a47 	vsub.f32	s14, s0, s14
 800d4dc:	f1c3 0201 	rsb	r2, r3, #1
 800d4e0:	1ad2      	subs	r2, r2, r3
 800d4e2:	ee37 0a67 	vsub.f32	s0, s14, s15
 800d4e6:	ee60 6a00 	vmul.f32	s13, s0, s0
 800d4ea:	eddf 5a41 	vldr	s11, [pc, #260]	; 800d5f0 <__ieee754_expf+0x180>
 800d4ee:	ed9f 5a41 	vldr	s10, [pc, #260]	; 800d5f4 <__ieee754_expf+0x184>
 800d4f2:	eea6 5aa5 	vfma.f32	s10, s13, s11
 800d4f6:	eddf 5a40 	vldr	s11, [pc, #256]	; 800d5f8 <__ieee754_expf+0x188>
 800d4fa:	eee5 5a26 	vfma.f32	s11, s10, s13
 800d4fe:	ed9f 5a3f 	vldr	s10, [pc, #252]	; 800d5fc <__ieee754_expf+0x18c>
 800d502:	eea5 5aa6 	vfma.f32	s10, s11, s13
 800d506:	eddf 5a3e 	vldr	s11, [pc, #248]	; 800d600 <__ieee754_expf+0x190>
 800d50a:	eee5 5a26 	vfma.f32	s11, s10, s13
 800d50e:	eeb0 5a40 	vmov.f32	s10, s0
 800d512:	eea5 5ae6 	vfms.f32	s10, s11, s13
 800d516:	eef0 5a00 	vmov.f32	s11, #0	; 0x40000000  2.0
 800d51a:	eef0 6a45 	vmov.f32	s13, s10
 800d51e:	ee20 5a05 	vmul.f32	s10, s0, s10
 800d522:	bb92      	cbnz	r2, 800d58a <__ieee754_expf+0x11a>
 800d524:	ee76 6ae5 	vsub.f32	s13, s13, s11
 800d528:	eec5 7a26 	vdiv.f32	s15, s10, s13
 800d52c:	ee37 0ac0 	vsub.f32	s0, s15, s0
 800d530:	ee36 0a40 	vsub.f32	s0, s12, s0
 800d534:	4770      	bx	lr
 800d536:	4b33      	ldr	r3, [pc, #204]	; (800d604 <__ieee754_expf+0x194>)
 800d538:	ed9f 7a33 	vldr	s14, [pc, #204]	; 800d608 <__ieee754_expf+0x198>
 800d53c:	4413      	add	r3, r2
 800d53e:	edd3 7a00 	vldr	s15, [r3]
 800d542:	eee0 7a07 	vfma.f32	s15, s0, s14
 800d546:	ed9f 7a31 	vldr	s14, [pc, #196]	; 800d60c <__ieee754_expf+0x19c>
 800d54a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d54e:	ee17 2a90 	vmov	r2, s15
 800d552:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d556:	eea7 0ac7 	vfms.f32	s0, s15, s14
 800d55a:	eeb0 7a40 	vmov.f32	s14, s0
 800d55e:	ed9f 0a2c 	vldr	s0, [pc, #176]	; 800d610 <__ieee754_expf+0x1a0>
 800d562:	ee67 7a80 	vmul.f32	s15, s15, s0
 800d566:	e7bc      	b.n	800d4e2 <__ieee754_expf+0x72>
 800d568:	f1b1 5f46 	cmp.w	r1, #830472192	; 0x31800000
 800d56c:	d20b      	bcs.n	800d586 <__ieee754_expf+0x116>
 800d56e:	eddf 6a1a 	vldr	s13, [pc, #104]	; 800d5d8 <__ieee754_expf+0x168>
 800d572:	ee70 6a26 	vadd.f32	s13, s0, s13
 800d576:	eef4 6ac6 	vcmpe.f32	s13, s12
 800d57a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d57e:	dd02      	ble.n	800d586 <__ieee754_expf+0x116>
 800d580:	ee30 0a06 	vadd.f32	s0, s0, s12
 800d584:	4770      	bx	lr
 800d586:	2200      	movs	r2, #0
 800d588:	e7ad      	b.n	800d4e6 <__ieee754_expf+0x76>
 800d58a:	ee75 6ae6 	vsub.f32	s13, s11, s13
 800d58e:	f112 0f7d 	cmn.w	r2, #125	; 0x7d
 800d592:	ee85 0a26 	vdiv.f32	s0, s10, s13
 800d596:	bfb8      	it	lt
 800d598:	3264      	addlt	r2, #100	; 0x64
 800d59a:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800d59e:	ee37 0ac7 	vsub.f32	s0, s15, s14
 800d5a2:	ee76 7a40 	vsub.f32	s15, s12, s0
 800d5a6:	ee17 3a90 	vmov	r3, s15
 800d5aa:	bfab      	itete	ge
 800d5ac:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 800d5b0:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 800d5b4:	ee00 3a10 	vmovge	s0, r3
 800d5b8:	eddf 7a16 	vldrlt	s15, [pc, #88]	; 800d614 <__ieee754_expf+0x1a4>
 800d5bc:	bfbc      	itt	lt
 800d5be:	ee00 3a10 	vmovlt	s0, r3
 800d5c2:	ee20 0a27 	vmullt.f32	s0, s0, s15
 800d5c6:	4770      	bx	lr
 800d5c8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800d5d0 <__ieee754_expf+0x160>
 800d5cc:	4770      	bx	lr
 800d5ce:	bf00      	nop
 800d5d0:	00000000 	.word	0x00000000
 800d5d4:	42b17217 	.word	0x42b17217
 800d5d8:	7149f2ca 	.word	0x7149f2ca
 800d5dc:	42cff1b5 	.word	0x42cff1b5
 800d5e0:	3eb17218 	.word	0x3eb17218
 800d5e4:	3f851591 	.word	0x3f851591
 800d5e8:	0801f598 	.word	0x0801f598
 800d5ec:	0801f5a0 	.word	0x0801f5a0
 800d5f0:	3331bb4c 	.word	0x3331bb4c
 800d5f4:	b5ddea0e 	.word	0xb5ddea0e
 800d5f8:	388ab355 	.word	0x388ab355
 800d5fc:	bb360b61 	.word	0xbb360b61
 800d600:	3e2aaaab 	.word	0x3e2aaaab
 800d604:	0801f590 	.word	0x0801f590
 800d608:	3fb8aa3b 	.word	0x3fb8aa3b
 800d60c:	3f317180 	.word	0x3f317180
 800d610:	3717f7d1 	.word	0x3717f7d1
 800d614:	0d800000 	.word	0x0d800000

0800d618 <matherr>:
 800d618:	2000      	movs	r0, #0
 800d61a:	4770      	bx	lr

0800d61c <finitef>:
 800d61c:	ee10 3a10 	vmov	r3, s0
 800d620:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
 800d624:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 800d628:	bfac      	ite	ge
 800d62a:	2000      	movge	r0, #0
 800d62c:	2001      	movlt	r0, #1
 800d62e:	4770      	bx	lr

0800d630 <abort>:
 800d630:	b508      	push	{r3, lr}
 800d632:	2006      	movs	r0, #6
 800d634:	f000 ff40 	bl	800e4b8 <raise>
 800d638:	2001      	movs	r0, #1
 800d63a:	f7fe fdcd 	bl	800c1d8 <_exit>
	...

0800d640 <__errno>:
 800d640:	4b01      	ldr	r3, [pc, #4]	; (800d648 <__errno+0x8>)
 800d642:	6818      	ldr	r0, [r3, #0]
 800d644:	4770      	bx	lr
 800d646:	bf00      	nop
 800d648:	2000002c 	.word	0x2000002c

0800d64c <_fputc_r>:
 800d64c:	b570      	push	{r4, r5, r6, lr}
 800d64e:	460e      	mov	r6, r1
 800d650:	4614      	mov	r4, r2
 800d652:	4605      	mov	r5, r0
 800d654:	b118      	cbz	r0, 800d65e <_fputc_r+0x12>
 800d656:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800d658:	b90b      	cbnz	r3, 800d65e <_fputc_r+0x12>
 800d65a:	f003 f99b 	bl	8010994 <__sinit>
 800d65e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d660:	07d8      	lsls	r0, r3, #31
 800d662:	d405      	bmi.n	800d670 <_fputc_r+0x24>
 800d664:	89a3      	ldrh	r3, [r4, #12]
 800d666:	0599      	lsls	r1, r3, #22
 800d668:	d402      	bmi.n	800d670 <_fputc_r+0x24>
 800d66a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d66c:	f000 fa28 	bl	800dac0 <__retarget_lock_acquire_recursive>
 800d670:	4622      	mov	r2, r4
 800d672:	4628      	mov	r0, r5
 800d674:	4631      	mov	r1, r6
 800d676:	f000 fcb3 	bl	800dfe0 <_putc_r>
 800d67a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d67c:	07da      	lsls	r2, r3, #31
 800d67e:	4605      	mov	r5, r0
 800d680:	d405      	bmi.n	800d68e <_fputc_r+0x42>
 800d682:	89a3      	ldrh	r3, [r4, #12]
 800d684:	059b      	lsls	r3, r3, #22
 800d686:	d402      	bmi.n	800d68e <_fputc_r+0x42>
 800d688:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d68a:	f000 fa1a 	bl	800dac2 <__retarget_lock_release_recursive>
 800d68e:	4628      	mov	r0, r5
 800d690:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d694 <fputc>:
 800d694:	4b02      	ldr	r3, [pc, #8]	; (800d6a0 <fputc+0xc>)
 800d696:	460a      	mov	r2, r1
 800d698:	4601      	mov	r1, r0
 800d69a:	6818      	ldr	r0, [r3, #0]
 800d69c:	f7ff bfd6 	b.w	800d64c <_fputc_r>
 800d6a0:	2000002c 	.word	0x2000002c

0800d6a4 <_fputs_r>:
 800d6a4:	b530      	push	{r4, r5, lr}
 800d6a6:	b087      	sub	sp, #28
 800d6a8:	4605      	mov	r5, r0
 800d6aa:	4608      	mov	r0, r1
 800d6ac:	4614      	mov	r4, r2
 800d6ae:	9101      	str	r1, [sp, #4]
 800d6b0:	f7f9 fb78 	bl	8006da4 <strlen>
 800d6b4:	ab01      	add	r3, sp, #4
 800d6b6:	9303      	str	r3, [sp, #12]
 800d6b8:	2301      	movs	r3, #1
 800d6ba:	9005      	str	r0, [sp, #20]
 800d6bc:	9002      	str	r0, [sp, #8]
 800d6be:	9304      	str	r3, [sp, #16]
 800d6c0:	b125      	cbz	r5, 800d6cc <_fputs_r+0x28>
 800d6c2:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d6c4:	b913      	cbnz	r3, 800d6cc <_fputs_r+0x28>
 800d6c6:	4628      	mov	r0, r5
 800d6c8:	f003 f964 	bl	8010994 <__sinit>
 800d6cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d6ce:	07db      	lsls	r3, r3, #31
 800d6d0:	d405      	bmi.n	800d6de <_fputs_r+0x3a>
 800d6d2:	89a3      	ldrh	r3, [r4, #12]
 800d6d4:	0598      	lsls	r0, r3, #22
 800d6d6:	d402      	bmi.n	800d6de <_fputs_r+0x3a>
 800d6d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d6da:	f000 f9f1 	bl	800dac0 <__retarget_lock_acquire_recursive>
 800d6de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6e2:	0499      	lsls	r1, r3, #18
 800d6e4:	d406      	bmi.n	800d6f4 <_fputs_r+0x50>
 800d6e6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d6ea:	81a3      	strh	r3, [r4, #12]
 800d6ec:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d6ee:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d6f2:	6663      	str	r3, [r4, #100]	; 0x64
 800d6f4:	aa03      	add	r2, sp, #12
 800d6f6:	4628      	mov	r0, r5
 800d6f8:	4621      	mov	r1, r4
 800d6fa:	f000 f815 	bl	800d728 <__sfvwrite_r>
 800d6fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d700:	07da      	lsls	r2, r3, #31
 800d702:	4605      	mov	r5, r0
 800d704:	d405      	bmi.n	800d712 <_fputs_r+0x6e>
 800d706:	89a3      	ldrh	r3, [r4, #12]
 800d708:	059b      	lsls	r3, r3, #22
 800d70a:	d402      	bmi.n	800d712 <_fputs_r+0x6e>
 800d70c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d70e:	f000 f9d8 	bl	800dac2 <__retarget_lock_release_recursive>
 800d712:	4628      	mov	r0, r5
 800d714:	b007      	add	sp, #28
 800d716:	bd30      	pop	{r4, r5, pc}

0800d718 <fputs>:
 800d718:	4b02      	ldr	r3, [pc, #8]	; (800d724 <fputs+0xc>)
 800d71a:	460a      	mov	r2, r1
 800d71c:	4601      	mov	r1, r0
 800d71e:	6818      	ldr	r0, [r3, #0]
 800d720:	f7ff bfc0 	b.w	800d6a4 <_fputs_r>
 800d724:	2000002c 	.word	0x2000002c

0800d728 <__sfvwrite_r>:
 800d728:	6893      	ldr	r3, [r2, #8]
 800d72a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d72e:	4680      	mov	r8, r0
 800d730:	460c      	mov	r4, r1
 800d732:	4691      	mov	r9, r2
 800d734:	b91b      	cbnz	r3, 800d73e <__sfvwrite_r+0x16>
 800d736:	2000      	movs	r0, #0
 800d738:	b003      	add	sp, #12
 800d73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d73e:	898b      	ldrh	r3, [r1, #12]
 800d740:	0718      	lsls	r0, r3, #28
 800d742:	d54f      	bpl.n	800d7e4 <__sfvwrite_r+0xbc>
 800d744:	690b      	ldr	r3, [r1, #16]
 800d746:	2b00      	cmp	r3, #0
 800d748:	d04c      	beq.n	800d7e4 <__sfvwrite_r+0xbc>
 800d74a:	89a5      	ldrh	r5, [r4, #12]
 800d74c:	f8d9 6000 	ldr.w	r6, [r9]
 800d750:	f015 0702 	ands.w	r7, r5, #2
 800d754:	d169      	bne.n	800d82a <__sfvwrite_r+0x102>
 800d756:	f015 0501 	ands.w	r5, r5, #1
 800d75a:	f000 809a 	beq.w	800d892 <__sfvwrite_r+0x16a>
 800d75e:	4638      	mov	r0, r7
 800d760:	46ba      	mov	sl, r7
 800d762:	46bb      	mov	fp, r7
 800d764:	f1bb 0f00 	cmp.w	fp, #0
 800d768:	f000 8103 	beq.w	800d972 <__sfvwrite_r+0x24a>
 800d76c:	b950      	cbnz	r0, 800d784 <__sfvwrite_r+0x5c>
 800d76e:	465a      	mov	r2, fp
 800d770:	210a      	movs	r1, #10
 800d772:	4650      	mov	r0, sl
 800d774:	f7f9 fabc 	bl	8006cf0 <memchr>
 800d778:	2800      	cmp	r0, #0
 800d77a:	f000 80ff 	beq.w	800d97c <__sfvwrite_r+0x254>
 800d77e:	3001      	adds	r0, #1
 800d780:	eba0 070a 	sub.w	r7, r0, sl
 800d784:	6820      	ldr	r0, [r4, #0]
 800d786:	6921      	ldr	r1, [r4, #16]
 800d788:	6962      	ldr	r2, [r4, #20]
 800d78a:	455f      	cmp	r7, fp
 800d78c:	463b      	mov	r3, r7
 800d78e:	bf28      	it	cs
 800d790:	465b      	movcs	r3, fp
 800d792:	4288      	cmp	r0, r1
 800d794:	f240 80f5 	bls.w	800d982 <__sfvwrite_r+0x25a>
 800d798:	68a5      	ldr	r5, [r4, #8]
 800d79a:	4415      	add	r5, r2
 800d79c:	42ab      	cmp	r3, r5
 800d79e:	f340 80f0 	ble.w	800d982 <__sfvwrite_r+0x25a>
 800d7a2:	4651      	mov	r1, sl
 800d7a4:	462a      	mov	r2, r5
 800d7a6:	f000 fbed 	bl	800df84 <memmove>
 800d7aa:	6823      	ldr	r3, [r4, #0]
 800d7ac:	442b      	add	r3, r5
 800d7ae:	6023      	str	r3, [r4, #0]
 800d7b0:	4621      	mov	r1, r4
 800d7b2:	4640      	mov	r0, r8
 800d7b4:	f003 f882 	bl	80108bc <_fflush_r>
 800d7b8:	2800      	cmp	r0, #0
 800d7ba:	d165      	bne.n	800d888 <__sfvwrite_r+0x160>
 800d7bc:	1b7f      	subs	r7, r7, r5
 800d7be:	f040 80fa 	bne.w	800d9b6 <__sfvwrite_r+0x28e>
 800d7c2:	4621      	mov	r1, r4
 800d7c4:	4640      	mov	r0, r8
 800d7c6:	f003 f879 	bl	80108bc <_fflush_r>
 800d7ca:	2800      	cmp	r0, #0
 800d7cc:	d15c      	bne.n	800d888 <__sfvwrite_r+0x160>
 800d7ce:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d7d2:	44aa      	add	sl, r5
 800d7d4:	ebab 0b05 	sub.w	fp, fp, r5
 800d7d8:	1b5d      	subs	r5, r3, r5
 800d7da:	f8c9 5008 	str.w	r5, [r9, #8]
 800d7de:	2d00      	cmp	r5, #0
 800d7e0:	d1c0      	bne.n	800d764 <__sfvwrite_r+0x3c>
 800d7e2:	e7a8      	b.n	800d736 <__sfvwrite_r+0xe>
 800d7e4:	4621      	mov	r1, r4
 800d7e6:	4640      	mov	r0, r8
 800d7e8:	f002 f93c 	bl	800fa64 <__swsetup_r>
 800d7ec:	2800      	cmp	r0, #0
 800d7ee:	d0ac      	beq.n	800d74a <__sfvwrite_r+0x22>
 800d7f0:	f04f 30ff 	mov.w	r0, #4294967295
 800d7f4:	e7a0      	b.n	800d738 <__sfvwrite_r+0x10>
 800d7f6:	e9d6 a700 	ldrd	sl, r7, [r6]
 800d7fa:	3608      	adds	r6, #8
 800d7fc:	2f00      	cmp	r7, #0
 800d7fe:	d0fa      	beq.n	800d7f6 <__sfvwrite_r+0xce>
 800d800:	455f      	cmp	r7, fp
 800d802:	463b      	mov	r3, r7
 800d804:	4652      	mov	r2, sl
 800d806:	bf28      	it	cs
 800d808:	465b      	movcs	r3, fp
 800d80a:	69e1      	ldr	r1, [r4, #28]
 800d80c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d80e:	4640      	mov	r0, r8
 800d810:	47a8      	blx	r5
 800d812:	2800      	cmp	r0, #0
 800d814:	dd38      	ble.n	800d888 <__sfvwrite_r+0x160>
 800d816:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d81a:	4482      	add	sl, r0
 800d81c:	1a3f      	subs	r7, r7, r0
 800d81e:	1a18      	subs	r0, r3, r0
 800d820:	f8c9 0008 	str.w	r0, [r9, #8]
 800d824:	2800      	cmp	r0, #0
 800d826:	d1e9      	bne.n	800d7fc <__sfvwrite_r+0xd4>
 800d828:	e785      	b.n	800d736 <__sfvwrite_r+0xe>
 800d82a:	f04f 0a00 	mov.w	sl, #0
 800d82e:	4657      	mov	r7, sl
 800d830:	f8df b18c 	ldr.w	fp, [pc, #396]	; 800d9c0 <__sfvwrite_r+0x298>
 800d834:	e7e2      	b.n	800d7fc <__sfvwrite_r+0xd4>
 800d836:	e9d6 5a00 	ldrd	r5, sl, [r6]
 800d83a:	3608      	adds	r6, #8
 800d83c:	f1ba 0f00 	cmp.w	sl, #0
 800d840:	d0f9      	beq.n	800d836 <__sfvwrite_r+0x10e>
 800d842:	89a2      	ldrh	r2, [r4, #12]
 800d844:	68a3      	ldr	r3, [r4, #8]
 800d846:	6820      	ldr	r0, [r4, #0]
 800d848:	0591      	lsls	r1, r2, #22
 800d84a:	d564      	bpl.n	800d916 <__sfvwrite_r+0x1ee>
 800d84c:	4553      	cmp	r3, sl
 800d84e:	d836      	bhi.n	800d8be <__sfvwrite_r+0x196>
 800d850:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800d854:	d033      	beq.n	800d8be <__sfvwrite_r+0x196>
 800d856:	6921      	ldr	r1, [r4, #16]
 800d858:	6967      	ldr	r7, [r4, #20]
 800d85a:	eba0 0b01 	sub.w	fp, r0, r1
 800d85e:	2302      	movs	r3, #2
 800d860:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 800d864:	fb97 f7f3 	sdiv	r7, r7, r3
 800d868:	f10b 0301 	add.w	r3, fp, #1
 800d86c:	4453      	add	r3, sl
 800d86e:	429f      	cmp	r7, r3
 800d870:	bf38      	it	cc
 800d872:	461f      	movcc	r7, r3
 800d874:	0553      	lsls	r3, r2, #21
 800d876:	d53e      	bpl.n	800d8f6 <__sfvwrite_r+0x1ce>
 800d878:	4639      	mov	r1, r7
 800d87a:	4640      	mov	r0, r8
 800d87c:	f000 f932 	bl	800dae4 <_malloc_r>
 800d880:	b948      	cbnz	r0, 800d896 <__sfvwrite_r+0x16e>
 800d882:	230c      	movs	r3, #12
 800d884:	f8c8 3000 	str.w	r3, [r8]
 800d888:	89a3      	ldrh	r3, [r4, #12]
 800d88a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d88e:	81a3      	strh	r3, [r4, #12]
 800d890:	e7ae      	b.n	800d7f0 <__sfvwrite_r+0xc8>
 800d892:	46aa      	mov	sl, r5
 800d894:	e7d2      	b.n	800d83c <__sfvwrite_r+0x114>
 800d896:	465a      	mov	r2, fp
 800d898:	6921      	ldr	r1, [r4, #16]
 800d89a:	9001      	str	r0, [sp, #4]
 800d89c:	f000 fb67 	bl	800df6e <memcpy>
 800d8a0:	89a2      	ldrh	r2, [r4, #12]
 800d8a2:	9b01      	ldr	r3, [sp, #4]
 800d8a4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800d8a8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800d8ac:	81a2      	strh	r2, [r4, #12]
 800d8ae:	6123      	str	r3, [r4, #16]
 800d8b0:	6167      	str	r7, [r4, #20]
 800d8b2:	445b      	add	r3, fp
 800d8b4:	eba7 070b 	sub.w	r7, r7, fp
 800d8b8:	6023      	str	r3, [r4, #0]
 800d8ba:	60a7      	str	r7, [r4, #8]
 800d8bc:	4653      	mov	r3, sl
 800d8be:	4553      	cmp	r3, sl
 800d8c0:	bf28      	it	cs
 800d8c2:	4653      	movcs	r3, sl
 800d8c4:	461a      	mov	r2, r3
 800d8c6:	4629      	mov	r1, r5
 800d8c8:	6820      	ldr	r0, [r4, #0]
 800d8ca:	9301      	str	r3, [sp, #4]
 800d8cc:	f000 fb5a 	bl	800df84 <memmove>
 800d8d0:	68a2      	ldr	r2, [r4, #8]
 800d8d2:	9b01      	ldr	r3, [sp, #4]
 800d8d4:	1ad2      	subs	r2, r2, r3
 800d8d6:	60a2      	str	r2, [r4, #8]
 800d8d8:	6822      	ldr	r2, [r4, #0]
 800d8da:	4413      	add	r3, r2
 800d8dc:	4657      	mov	r7, sl
 800d8de:	6023      	str	r3, [r4, #0]
 800d8e0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d8e4:	443d      	add	r5, r7
 800d8e6:	ebaa 0a07 	sub.w	sl, sl, r7
 800d8ea:	1bdf      	subs	r7, r3, r7
 800d8ec:	f8c9 7008 	str.w	r7, [r9, #8]
 800d8f0:	2f00      	cmp	r7, #0
 800d8f2:	d1a3      	bne.n	800d83c <__sfvwrite_r+0x114>
 800d8f4:	e71f      	b.n	800d736 <__sfvwrite_r+0xe>
 800d8f6:	463a      	mov	r2, r7
 800d8f8:	4640      	mov	r0, r8
 800d8fa:	f000 fbfb 	bl	800e0f4 <_realloc_r>
 800d8fe:	4603      	mov	r3, r0
 800d900:	2800      	cmp	r0, #0
 800d902:	d1d4      	bne.n	800d8ae <__sfvwrite_r+0x186>
 800d904:	6921      	ldr	r1, [r4, #16]
 800d906:	4640      	mov	r0, r8
 800d908:	f003 f8d4 	bl	8010ab4 <_free_r>
 800d90c:	89a3      	ldrh	r3, [r4, #12]
 800d90e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d912:	81a3      	strh	r3, [r4, #12]
 800d914:	e7b5      	b.n	800d882 <__sfvwrite_r+0x15a>
 800d916:	6922      	ldr	r2, [r4, #16]
 800d918:	4282      	cmp	r2, r0
 800d91a:	d302      	bcc.n	800d922 <__sfvwrite_r+0x1fa>
 800d91c:	6962      	ldr	r2, [r4, #20]
 800d91e:	4552      	cmp	r2, sl
 800d920:	d916      	bls.n	800d950 <__sfvwrite_r+0x228>
 800d922:	4553      	cmp	r3, sl
 800d924:	bf28      	it	cs
 800d926:	4653      	movcs	r3, sl
 800d928:	461a      	mov	r2, r3
 800d92a:	4629      	mov	r1, r5
 800d92c:	461f      	mov	r7, r3
 800d92e:	f000 fb29 	bl	800df84 <memmove>
 800d932:	68a3      	ldr	r3, [r4, #8]
 800d934:	6822      	ldr	r2, [r4, #0]
 800d936:	1bdb      	subs	r3, r3, r7
 800d938:	443a      	add	r2, r7
 800d93a:	60a3      	str	r3, [r4, #8]
 800d93c:	6022      	str	r2, [r4, #0]
 800d93e:	2b00      	cmp	r3, #0
 800d940:	d1ce      	bne.n	800d8e0 <__sfvwrite_r+0x1b8>
 800d942:	4621      	mov	r1, r4
 800d944:	4640      	mov	r0, r8
 800d946:	f002 ffb9 	bl	80108bc <_fflush_r>
 800d94a:	2800      	cmp	r0, #0
 800d94c:	d0c8      	beq.n	800d8e0 <__sfvwrite_r+0x1b8>
 800d94e:	e79b      	b.n	800d888 <__sfvwrite_r+0x160>
 800d950:	4b1a      	ldr	r3, [pc, #104]	; (800d9bc <__sfvwrite_r+0x294>)
 800d952:	6a67      	ldr	r7, [r4, #36]	; 0x24
 800d954:	69e1      	ldr	r1, [r4, #28]
 800d956:	459a      	cmp	sl, r3
 800d958:	bf94      	ite	ls
 800d95a:	4653      	movls	r3, sl
 800d95c:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
 800d960:	4640      	mov	r0, r8
 800d962:	fb93 f3f2 	sdiv	r3, r3, r2
 800d966:	4353      	muls	r3, r2
 800d968:	462a      	mov	r2, r5
 800d96a:	47b8      	blx	r7
 800d96c:	1e07      	subs	r7, r0, #0
 800d96e:	dcb7      	bgt.n	800d8e0 <__sfvwrite_r+0x1b8>
 800d970:	e78a      	b.n	800d888 <__sfvwrite_r+0x160>
 800d972:	e9d6 ab00 	ldrd	sl, fp, [r6]
 800d976:	2000      	movs	r0, #0
 800d978:	3608      	adds	r6, #8
 800d97a:	e6f3      	b.n	800d764 <__sfvwrite_r+0x3c>
 800d97c:	f10b 0701 	add.w	r7, fp, #1
 800d980:	e700      	b.n	800d784 <__sfvwrite_r+0x5c>
 800d982:	429a      	cmp	r2, r3
 800d984:	dc09      	bgt.n	800d99a <__sfvwrite_r+0x272>
 800d986:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d988:	69e1      	ldr	r1, [r4, #28]
 800d98a:	4613      	mov	r3, r2
 800d98c:	4640      	mov	r0, r8
 800d98e:	4652      	mov	r2, sl
 800d990:	47a8      	blx	r5
 800d992:	1e05      	subs	r5, r0, #0
 800d994:	f73f af12 	bgt.w	800d7bc <__sfvwrite_r+0x94>
 800d998:	e776      	b.n	800d888 <__sfvwrite_r+0x160>
 800d99a:	461a      	mov	r2, r3
 800d99c:	4651      	mov	r1, sl
 800d99e:	9301      	str	r3, [sp, #4]
 800d9a0:	f000 faf0 	bl	800df84 <memmove>
 800d9a4:	9b01      	ldr	r3, [sp, #4]
 800d9a6:	68a2      	ldr	r2, [r4, #8]
 800d9a8:	1ad2      	subs	r2, r2, r3
 800d9aa:	60a2      	str	r2, [r4, #8]
 800d9ac:	6822      	ldr	r2, [r4, #0]
 800d9ae:	441a      	add	r2, r3
 800d9b0:	6022      	str	r2, [r4, #0]
 800d9b2:	461d      	mov	r5, r3
 800d9b4:	e702      	b.n	800d7bc <__sfvwrite_r+0x94>
 800d9b6:	2001      	movs	r0, #1
 800d9b8:	e709      	b.n	800d7ce <__sfvwrite_r+0xa6>
 800d9ba:	bf00      	nop
 800d9bc:	7ffffffe 	.word	0x7ffffffe
 800d9c0:	7ffffc00 	.word	0x7ffffc00

0800d9c4 <_fwrite_r>:
 800d9c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9c8:	b086      	sub	sp, #24
 800d9ca:	fb02 f503 	mul.w	r5, r2, r3
 800d9ce:	461e      	mov	r6, r3
 800d9d0:	ab01      	add	r3, sp, #4
 800d9d2:	9303      	str	r3, [sp, #12]
 800d9d4:	2301      	movs	r3, #1
 800d9d6:	4617      	mov	r7, r2
 800d9d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d9da:	9101      	str	r1, [sp, #4]
 800d9dc:	9502      	str	r5, [sp, #8]
 800d9de:	9505      	str	r5, [sp, #20]
 800d9e0:	9304      	str	r3, [sp, #16]
 800d9e2:	4680      	mov	r8, r0
 800d9e4:	b118      	cbz	r0, 800d9ee <_fwrite_r+0x2a>
 800d9e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800d9e8:	b90b      	cbnz	r3, 800d9ee <_fwrite_r+0x2a>
 800d9ea:	f002 ffd3 	bl	8010994 <__sinit>
 800d9ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d9f0:	07d8      	lsls	r0, r3, #31
 800d9f2:	d405      	bmi.n	800da00 <_fwrite_r+0x3c>
 800d9f4:	89a3      	ldrh	r3, [r4, #12]
 800d9f6:	0599      	lsls	r1, r3, #22
 800d9f8:	d402      	bmi.n	800da00 <_fwrite_r+0x3c>
 800d9fa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d9fc:	f000 f860 	bl	800dac0 <__retarget_lock_acquire_recursive>
 800da00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800da04:	049a      	lsls	r2, r3, #18
 800da06:	d406      	bmi.n	800da16 <_fwrite_r+0x52>
 800da08:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800da0c:	81a3      	strh	r3, [r4, #12]
 800da0e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800da10:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800da14:	6663      	str	r3, [r4, #100]	; 0x64
 800da16:	aa03      	add	r2, sp, #12
 800da18:	4621      	mov	r1, r4
 800da1a:	4640      	mov	r0, r8
 800da1c:	f7ff fe84 	bl	800d728 <__sfvwrite_r>
 800da20:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800da22:	b958      	cbnz	r0, 800da3c <_fwrite_r+0x78>
 800da24:	07d8      	lsls	r0, r3, #31
 800da26:	d405      	bmi.n	800da34 <_fwrite_r+0x70>
 800da28:	89a3      	ldrh	r3, [r4, #12]
 800da2a:	0599      	lsls	r1, r3, #22
 800da2c:	d402      	bmi.n	800da34 <_fwrite_r+0x70>
 800da2e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800da30:	f000 f847 	bl	800dac2 <__retarget_lock_release_recursive>
 800da34:	4630      	mov	r0, r6
 800da36:	b006      	add	sp, #24
 800da38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da3c:	07da      	lsls	r2, r3, #31
 800da3e:	d405      	bmi.n	800da4c <_fwrite_r+0x88>
 800da40:	89a3      	ldrh	r3, [r4, #12]
 800da42:	059b      	lsls	r3, r3, #22
 800da44:	d402      	bmi.n	800da4c <_fwrite_r+0x88>
 800da46:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800da48:	f000 f83b 	bl	800dac2 <__retarget_lock_release_recursive>
 800da4c:	9b05      	ldr	r3, [sp, #20]
 800da4e:	1aed      	subs	r5, r5, r3
 800da50:	fbb5 f6f7 	udiv	r6, r5, r7
 800da54:	e7ee      	b.n	800da34 <_fwrite_r+0x70>
	...

0800da58 <fwrite>:
 800da58:	b507      	push	{r0, r1, r2, lr}
 800da5a:	9300      	str	r3, [sp, #0]
 800da5c:	4613      	mov	r3, r2
 800da5e:	460a      	mov	r2, r1
 800da60:	4601      	mov	r1, r0
 800da62:	4803      	ldr	r0, [pc, #12]	; (800da70 <fwrite+0x18>)
 800da64:	6800      	ldr	r0, [r0, #0]
 800da66:	f7ff ffad 	bl	800d9c4 <_fwrite_r>
 800da6a:	b003      	add	sp, #12
 800da6c:	f85d fb04 	ldr.w	pc, [sp], #4
 800da70:	2000002c 	.word	0x2000002c

0800da74 <__libc_init_array>:
 800da74:	b570      	push	{r4, r5, r6, lr}
 800da76:	4e0d      	ldr	r6, [pc, #52]	; (800daac <__libc_init_array+0x38>)
 800da78:	4c0d      	ldr	r4, [pc, #52]	; (800dab0 <__libc_init_array+0x3c>)
 800da7a:	1ba4      	subs	r4, r4, r6
 800da7c:	10a4      	asrs	r4, r4, #2
 800da7e:	2500      	movs	r5, #0
 800da80:	42a5      	cmp	r5, r4
 800da82:	d109      	bne.n	800da98 <__libc_init_array+0x24>
 800da84:	4e0b      	ldr	r6, [pc, #44]	; (800dab4 <__libc_init_array+0x40>)
 800da86:	4c0c      	ldr	r4, [pc, #48]	; (800dab8 <__libc_init_array+0x44>)
 800da88:	f003 fe8e 	bl	80117a8 <_init>
 800da8c:	1ba4      	subs	r4, r4, r6
 800da8e:	10a4      	asrs	r4, r4, #2
 800da90:	2500      	movs	r5, #0
 800da92:	42a5      	cmp	r5, r4
 800da94:	d105      	bne.n	800daa2 <__libc_init_array+0x2e>
 800da96:	bd70      	pop	{r4, r5, r6, pc}
 800da98:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800da9c:	4798      	blx	r3
 800da9e:	3501      	adds	r5, #1
 800daa0:	e7ee      	b.n	800da80 <__libc_init_array+0xc>
 800daa2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800daa6:	4798      	blx	r3
 800daa8:	3501      	adds	r5, #1
 800daaa:	e7f2      	b.n	800da92 <__libc_init_array+0x1e>
 800daac:	0801fa94 	.word	0x0801fa94
 800dab0:	0801fa94 	.word	0x0801fa94
 800dab4:	0801fa94 	.word	0x0801fa94
 800dab8:	0801faa0 	.word	0x0801faa0

0800dabc <__retarget_lock_init_recursive>:
 800dabc:	4770      	bx	lr

0800dabe <__retarget_lock_close_recursive>:
 800dabe:	4770      	bx	lr

0800dac0 <__retarget_lock_acquire_recursive>:
 800dac0:	4770      	bx	lr

0800dac2 <__retarget_lock_release_recursive>:
 800dac2:	4770      	bx	lr

0800dac4 <malloc>:
 800dac4:	4b02      	ldr	r3, [pc, #8]	; (800dad0 <malloc+0xc>)
 800dac6:	4601      	mov	r1, r0
 800dac8:	6818      	ldr	r0, [r3, #0]
 800daca:	f000 b80b 	b.w	800dae4 <_malloc_r>
 800dace:	bf00      	nop
 800dad0:	2000002c 	.word	0x2000002c

0800dad4 <free>:
 800dad4:	4b02      	ldr	r3, [pc, #8]	; (800dae0 <free+0xc>)
 800dad6:	4601      	mov	r1, r0
 800dad8:	6818      	ldr	r0, [r3, #0]
 800dada:	f002 bfeb 	b.w	8010ab4 <_free_r>
 800dade:	bf00      	nop
 800dae0:	2000002c 	.word	0x2000002c

0800dae4 <_malloc_r>:
 800dae4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dae8:	f101 050b 	add.w	r5, r1, #11
 800daec:	2d16      	cmp	r5, #22
 800daee:	4606      	mov	r6, r0
 800daf0:	d906      	bls.n	800db00 <_malloc_r+0x1c>
 800daf2:	f035 0507 	bics.w	r5, r5, #7
 800daf6:	d504      	bpl.n	800db02 <_malloc_r+0x1e>
 800daf8:	230c      	movs	r3, #12
 800dafa:	6033      	str	r3, [r6, #0]
 800dafc:	2400      	movs	r4, #0
 800dafe:	e1a8      	b.n	800de52 <_malloc_r+0x36e>
 800db00:	2510      	movs	r5, #16
 800db02:	428d      	cmp	r5, r1
 800db04:	d3f8      	bcc.n	800daf8 <_malloc_r+0x14>
 800db06:	4630      	mov	r0, r6
 800db08:	f000 fa5e 	bl	800dfc8 <__malloc_lock>
 800db0c:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 800db10:	4fc0      	ldr	r7, [pc, #768]	; (800de14 <_malloc_r+0x330>)
 800db12:	d238      	bcs.n	800db86 <_malloc_r+0xa2>
 800db14:	f105 0208 	add.w	r2, r5, #8
 800db18:	443a      	add	r2, r7
 800db1a:	f1a2 0108 	sub.w	r1, r2, #8
 800db1e:	6854      	ldr	r4, [r2, #4]
 800db20:	428c      	cmp	r4, r1
 800db22:	ea4f 03d5 	mov.w	r3, r5, lsr #3
 800db26:	d102      	bne.n	800db2e <_malloc_r+0x4a>
 800db28:	68d4      	ldr	r4, [r2, #12]
 800db2a:	42a2      	cmp	r2, r4
 800db2c:	d010      	beq.n	800db50 <_malloc_r+0x6c>
 800db2e:	6863      	ldr	r3, [r4, #4]
 800db30:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800db34:	f023 0303 	bic.w	r3, r3, #3
 800db38:	60ca      	str	r2, [r1, #12]
 800db3a:	4423      	add	r3, r4
 800db3c:	6091      	str	r1, [r2, #8]
 800db3e:	685a      	ldr	r2, [r3, #4]
 800db40:	f042 0201 	orr.w	r2, r2, #1
 800db44:	605a      	str	r2, [r3, #4]
 800db46:	4630      	mov	r0, r6
 800db48:	f000 fa44 	bl	800dfd4 <__malloc_unlock>
 800db4c:	3408      	adds	r4, #8
 800db4e:	e180      	b.n	800de52 <_malloc_r+0x36e>
 800db50:	3302      	adds	r3, #2
 800db52:	4ab1      	ldr	r2, [pc, #708]	; (800de18 <_malloc_r+0x334>)
 800db54:	693c      	ldr	r4, [r7, #16]
 800db56:	4294      	cmp	r4, r2
 800db58:	4611      	mov	r1, r2
 800db5a:	d075      	beq.n	800dc48 <_malloc_r+0x164>
 800db5c:	6860      	ldr	r0, [r4, #4]
 800db5e:	f020 0c03 	bic.w	ip, r0, #3
 800db62:	ebac 0005 	sub.w	r0, ip, r5
 800db66:	280f      	cmp	r0, #15
 800db68:	dd48      	ble.n	800dbfc <_malloc_r+0x118>
 800db6a:	1963      	adds	r3, r4, r5
 800db6c:	f045 0501 	orr.w	r5, r5, #1
 800db70:	6065      	str	r5, [r4, #4]
 800db72:	e9c7 3304 	strd	r3, r3, [r7, #16]
 800db76:	e9c3 2202 	strd	r2, r2, [r3, #8]
 800db7a:	f040 0201 	orr.w	r2, r0, #1
 800db7e:	605a      	str	r2, [r3, #4]
 800db80:	f844 000c 	str.w	r0, [r4, ip]
 800db84:	e7df      	b.n	800db46 <_malloc_r+0x62>
 800db86:	0a6b      	lsrs	r3, r5, #9
 800db88:	d02a      	beq.n	800dbe0 <_malloc_r+0xfc>
 800db8a:	2b04      	cmp	r3, #4
 800db8c:	d812      	bhi.n	800dbb4 <_malloc_r+0xd0>
 800db8e:	09ab      	lsrs	r3, r5, #6
 800db90:	3338      	adds	r3, #56	; 0x38
 800db92:	1c5a      	adds	r2, r3, #1
 800db94:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800db98:	f1a2 0c08 	sub.w	ip, r2, #8
 800db9c:	6854      	ldr	r4, [r2, #4]
 800db9e:	4564      	cmp	r4, ip
 800dba0:	d006      	beq.n	800dbb0 <_malloc_r+0xcc>
 800dba2:	6862      	ldr	r2, [r4, #4]
 800dba4:	f022 0203 	bic.w	r2, r2, #3
 800dba8:	1b50      	subs	r0, r2, r5
 800dbaa:	280f      	cmp	r0, #15
 800dbac:	dd1c      	ble.n	800dbe8 <_malloc_r+0x104>
 800dbae:	3b01      	subs	r3, #1
 800dbb0:	3301      	adds	r3, #1
 800dbb2:	e7ce      	b.n	800db52 <_malloc_r+0x6e>
 800dbb4:	2b14      	cmp	r3, #20
 800dbb6:	d801      	bhi.n	800dbbc <_malloc_r+0xd8>
 800dbb8:	335b      	adds	r3, #91	; 0x5b
 800dbba:	e7ea      	b.n	800db92 <_malloc_r+0xae>
 800dbbc:	2b54      	cmp	r3, #84	; 0x54
 800dbbe:	d802      	bhi.n	800dbc6 <_malloc_r+0xe2>
 800dbc0:	0b2b      	lsrs	r3, r5, #12
 800dbc2:	336e      	adds	r3, #110	; 0x6e
 800dbc4:	e7e5      	b.n	800db92 <_malloc_r+0xae>
 800dbc6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800dbca:	d802      	bhi.n	800dbd2 <_malloc_r+0xee>
 800dbcc:	0beb      	lsrs	r3, r5, #15
 800dbce:	3377      	adds	r3, #119	; 0x77
 800dbd0:	e7df      	b.n	800db92 <_malloc_r+0xae>
 800dbd2:	f240 5254 	movw	r2, #1364	; 0x554
 800dbd6:	4293      	cmp	r3, r2
 800dbd8:	d804      	bhi.n	800dbe4 <_malloc_r+0x100>
 800dbda:	0cab      	lsrs	r3, r5, #18
 800dbdc:	337c      	adds	r3, #124	; 0x7c
 800dbde:	e7d8      	b.n	800db92 <_malloc_r+0xae>
 800dbe0:	233f      	movs	r3, #63	; 0x3f
 800dbe2:	e7d6      	b.n	800db92 <_malloc_r+0xae>
 800dbe4:	237e      	movs	r3, #126	; 0x7e
 800dbe6:	e7d4      	b.n	800db92 <_malloc_r+0xae>
 800dbe8:	2800      	cmp	r0, #0
 800dbea:	68e1      	ldr	r1, [r4, #12]
 800dbec:	db04      	blt.n	800dbf8 <_malloc_r+0x114>
 800dbee:	68a3      	ldr	r3, [r4, #8]
 800dbf0:	60d9      	str	r1, [r3, #12]
 800dbf2:	608b      	str	r3, [r1, #8]
 800dbf4:	18a3      	adds	r3, r4, r2
 800dbf6:	e7a2      	b.n	800db3e <_malloc_r+0x5a>
 800dbf8:	460c      	mov	r4, r1
 800dbfa:	e7d0      	b.n	800db9e <_malloc_r+0xba>
 800dbfc:	2800      	cmp	r0, #0
 800dbfe:	e9c7 2204 	strd	r2, r2, [r7, #16]
 800dc02:	db07      	blt.n	800dc14 <_malloc_r+0x130>
 800dc04:	44a4      	add	ip, r4
 800dc06:	f8dc 3004 	ldr.w	r3, [ip, #4]
 800dc0a:	f043 0301 	orr.w	r3, r3, #1
 800dc0e:	f8cc 3004 	str.w	r3, [ip, #4]
 800dc12:	e798      	b.n	800db46 <_malloc_r+0x62>
 800dc14:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 800dc18:	6878      	ldr	r0, [r7, #4]
 800dc1a:	f080 8099 	bcs.w	800dd50 <_malloc_r+0x26c>
 800dc1e:	ea4f 0cdc 	mov.w	ip, ip, lsr #3
 800dc22:	ea4f 0eac 	mov.w	lr, ip, asr #2
 800dc26:	2201      	movs	r2, #1
 800dc28:	f10c 0c01 	add.w	ip, ip, #1
 800dc2c:	fa02 f20e 	lsl.w	r2, r2, lr
 800dc30:	4310      	orrs	r0, r2
 800dc32:	6078      	str	r0, [r7, #4]
 800dc34:	eb07 02cc 	add.w	r2, r7, ip, lsl #3
 800dc38:	f857 003c 	ldr.w	r0, [r7, ip, lsl #3]
 800dc3c:	3a08      	subs	r2, #8
 800dc3e:	e9c4 0202 	strd	r0, r2, [r4, #8]
 800dc42:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
 800dc46:	60c4      	str	r4, [r0, #12]
 800dc48:	2001      	movs	r0, #1
 800dc4a:	109a      	asrs	r2, r3, #2
 800dc4c:	fa00 f202 	lsl.w	r2, r0, r2
 800dc50:	6878      	ldr	r0, [r7, #4]
 800dc52:	4290      	cmp	r0, r2
 800dc54:	d326      	bcc.n	800dca4 <_malloc_r+0x1c0>
 800dc56:	4210      	tst	r0, r2
 800dc58:	d106      	bne.n	800dc68 <_malloc_r+0x184>
 800dc5a:	f023 0303 	bic.w	r3, r3, #3
 800dc5e:	0052      	lsls	r2, r2, #1
 800dc60:	4210      	tst	r0, r2
 800dc62:	f103 0304 	add.w	r3, r3, #4
 800dc66:	d0fa      	beq.n	800dc5e <_malloc_r+0x17a>
 800dc68:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
 800dc6c:	46e1      	mov	r9, ip
 800dc6e:	4698      	mov	r8, r3
 800dc70:	f8d9 400c 	ldr.w	r4, [r9, #12]
 800dc74:	454c      	cmp	r4, r9
 800dc76:	f040 80af 	bne.w	800ddd8 <_malloc_r+0x2f4>
 800dc7a:	f108 0801 	add.w	r8, r8, #1
 800dc7e:	f018 0f03 	tst.w	r8, #3
 800dc82:	f109 0908 	add.w	r9, r9, #8
 800dc86:	d1f3      	bne.n	800dc70 <_malloc_r+0x18c>
 800dc88:	0798      	lsls	r0, r3, #30
 800dc8a:	f040 80e8 	bne.w	800de5e <_malloc_r+0x37a>
 800dc8e:	687b      	ldr	r3, [r7, #4]
 800dc90:	ea23 0302 	bic.w	r3, r3, r2
 800dc94:	607b      	str	r3, [r7, #4]
 800dc96:	6878      	ldr	r0, [r7, #4]
 800dc98:	0052      	lsls	r2, r2, #1
 800dc9a:	4290      	cmp	r0, r2
 800dc9c:	d302      	bcc.n	800dca4 <_malloc_r+0x1c0>
 800dc9e:	2a00      	cmp	r2, #0
 800dca0:	f040 80ec 	bne.w	800de7c <_malloc_r+0x398>
 800dca4:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800dca8:	f8da 4004 	ldr.w	r4, [sl, #4]
 800dcac:	f024 0203 	bic.w	r2, r4, #3
 800dcb0:	42aa      	cmp	r2, r5
 800dcb2:	d303      	bcc.n	800dcbc <_malloc_r+0x1d8>
 800dcb4:	1b53      	subs	r3, r2, r5
 800dcb6:	2b0f      	cmp	r3, #15
 800dcb8:	f300 8140 	bgt.w	800df3c <_malloc_r+0x458>
 800dcbc:	4b57      	ldr	r3, [pc, #348]	; (800de1c <_malloc_r+0x338>)
 800dcbe:	9200      	str	r2, [sp, #0]
 800dcc0:	2008      	movs	r0, #8
 800dcc2:	681c      	ldr	r4, [r3, #0]
 800dcc4:	f001 fe66 	bl	800f994 <sysconf>
 800dcc8:	4b55      	ldr	r3, [pc, #340]	; (800de20 <_malloc_r+0x33c>)
 800dcca:	9a00      	ldr	r2, [sp, #0]
 800dccc:	6819      	ldr	r1, [r3, #0]
 800dcce:	3410      	adds	r4, #16
 800dcd0:	3101      	adds	r1, #1
 800dcd2:	442c      	add	r4, r5
 800dcd4:	bf1f      	itttt	ne
 800dcd6:	f104 34ff 	addne.w	r4, r4, #4294967295
 800dcda:	1824      	addne	r4, r4, r0
 800dcdc:	4241      	negne	r1, r0
 800dcde:	400c      	andne	r4, r1
 800dce0:	4680      	mov	r8, r0
 800dce2:	4621      	mov	r1, r4
 800dce4:	4630      	mov	r0, r6
 800dce6:	e9cd 2300 	strd	r2, r3, [sp]
 800dcea:	f000 fbab 	bl	800e444 <_sbrk_r>
 800dcee:	f1b0 3fff 	cmp.w	r0, #4294967295
 800dcf2:	4683      	mov	fp, r0
 800dcf4:	f000 80fb 	beq.w	800deee <_malloc_r+0x40a>
 800dcf8:	9a00      	ldr	r2, [sp, #0]
 800dcfa:	9b01      	ldr	r3, [sp, #4]
 800dcfc:	eb0a 0102 	add.w	r1, sl, r2
 800dd00:	4281      	cmp	r1, r0
 800dd02:	d902      	bls.n	800dd0a <_malloc_r+0x226>
 800dd04:	45ba      	cmp	sl, r7
 800dd06:	f040 80f2 	bne.w	800deee <_malloc_r+0x40a>
 800dd0a:	f8df 9120 	ldr.w	r9, [pc, #288]	; 800de2c <_malloc_r+0x348>
 800dd0e:	f8d9 0000 	ldr.w	r0, [r9]
 800dd12:	4559      	cmp	r1, fp
 800dd14:	eb00 0e04 	add.w	lr, r0, r4
 800dd18:	f8c9 e000 	str.w	lr, [r9]
 800dd1c:	f108 3cff 	add.w	ip, r8, #4294967295
 800dd20:	f040 80ae 	bne.w	800de80 <_malloc_r+0x39c>
 800dd24:	ea11 0f0c 	tst.w	r1, ip
 800dd28:	f040 80aa 	bne.w	800de80 <_malloc_r+0x39c>
 800dd2c:	68bb      	ldr	r3, [r7, #8]
 800dd2e:	4414      	add	r4, r2
 800dd30:	f044 0401 	orr.w	r4, r4, #1
 800dd34:	605c      	str	r4, [r3, #4]
 800dd36:	4a3b      	ldr	r2, [pc, #236]	; (800de24 <_malloc_r+0x340>)
 800dd38:	f8d9 3000 	ldr.w	r3, [r9]
 800dd3c:	6811      	ldr	r1, [r2, #0]
 800dd3e:	428b      	cmp	r3, r1
 800dd40:	bf88      	it	hi
 800dd42:	6013      	strhi	r3, [r2, #0]
 800dd44:	4a38      	ldr	r2, [pc, #224]	; (800de28 <_malloc_r+0x344>)
 800dd46:	6811      	ldr	r1, [r2, #0]
 800dd48:	428b      	cmp	r3, r1
 800dd4a:	bf88      	it	hi
 800dd4c:	6013      	strhi	r3, [r2, #0]
 800dd4e:	e0ce      	b.n	800deee <_malloc_r+0x40a>
 800dd50:	ea4f 225c 	mov.w	r2, ip, lsr #9
 800dd54:	2a04      	cmp	r2, #4
 800dd56:	d818      	bhi.n	800dd8a <_malloc_r+0x2a6>
 800dd58:	ea4f 129c 	mov.w	r2, ip, lsr #6
 800dd5c:	3238      	adds	r2, #56	; 0x38
 800dd5e:	f102 0e01 	add.w	lr, r2, #1
 800dd62:	eb07 08c2 	add.w	r8, r7, r2, lsl #3
 800dd66:	f857 e03e 	ldr.w	lr, [r7, lr, lsl #3]
 800dd6a:	45f0      	cmp	r8, lr
 800dd6c:	d12b      	bne.n	800ddc6 <_malloc_r+0x2e2>
 800dd6e:	1092      	asrs	r2, r2, #2
 800dd70:	f04f 0c01 	mov.w	ip, #1
 800dd74:	fa0c f202 	lsl.w	r2, ip, r2
 800dd78:	4310      	orrs	r0, r2
 800dd7a:	6078      	str	r0, [r7, #4]
 800dd7c:	e9c4 e802 	strd	lr, r8, [r4, #8]
 800dd80:	f8c8 4008 	str.w	r4, [r8, #8]
 800dd84:	f8ce 400c 	str.w	r4, [lr, #12]
 800dd88:	e75e      	b.n	800dc48 <_malloc_r+0x164>
 800dd8a:	2a14      	cmp	r2, #20
 800dd8c:	d801      	bhi.n	800dd92 <_malloc_r+0x2ae>
 800dd8e:	325b      	adds	r2, #91	; 0x5b
 800dd90:	e7e5      	b.n	800dd5e <_malloc_r+0x27a>
 800dd92:	2a54      	cmp	r2, #84	; 0x54
 800dd94:	d803      	bhi.n	800dd9e <_malloc_r+0x2ba>
 800dd96:	ea4f 321c 	mov.w	r2, ip, lsr #12
 800dd9a:	326e      	adds	r2, #110	; 0x6e
 800dd9c:	e7df      	b.n	800dd5e <_malloc_r+0x27a>
 800dd9e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800dda2:	d803      	bhi.n	800ddac <_malloc_r+0x2c8>
 800dda4:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 800dda8:	3277      	adds	r2, #119	; 0x77
 800ddaa:	e7d8      	b.n	800dd5e <_malloc_r+0x27a>
 800ddac:	f240 5e54 	movw	lr, #1364	; 0x554
 800ddb0:	4572      	cmp	r2, lr
 800ddb2:	bf9a      	itte	ls
 800ddb4:	ea4f 429c 	movls.w	r2, ip, lsr #18
 800ddb8:	327c      	addls	r2, #124	; 0x7c
 800ddba:	227e      	movhi	r2, #126	; 0x7e
 800ddbc:	e7cf      	b.n	800dd5e <_malloc_r+0x27a>
 800ddbe:	f8de e008 	ldr.w	lr, [lr, #8]
 800ddc2:	45f0      	cmp	r8, lr
 800ddc4:	d005      	beq.n	800ddd2 <_malloc_r+0x2ee>
 800ddc6:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ddca:	f022 0203 	bic.w	r2, r2, #3
 800ddce:	4562      	cmp	r2, ip
 800ddd0:	d8f5      	bhi.n	800ddbe <_malloc_r+0x2da>
 800ddd2:	f8de 800c 	ldr.w	r8, [lr, #12]
 800ddd6:	e7d1      	b.n	800dd7c <_malloc_r+0x298>
 800ddd8:	6860      	ldr	r0, [r4, #4]
 800ddda:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 800ddde:	f020 0003 	bic.w	r0, r0, #3
 800dde2:	eba0 0a05 	sub.w	sl, r0, r5
 800dde6:	f1ba 0f0f 	cmp.w	sl, #15
 800ddea:	dd21      	ble.n	800de30 <_malloc_r+0x34c>
 800ddec:	68a2      	ldr	r2, [r4, #8]
 800ddee:	1963      	adds	r3, r4, r5
 800ddf0:	f045 0501 	orr.w	r5, r5, #1
 800ddf4:	6065      	str	r5, [r4, #4]
 800ddf6:	f8c2 e00c 	str.w	lr, [r2, #12]
 800ddfa:	f8ce 2008 	str.w	r2, [lr, #8]
 800ddfe:	f04a 0201 	orr.w	r2, sl, #1
 800de02:	e9c7 3304 	strd	r3, r3, [r7, #16]
 800de06:	e9c3 1102 	strd	r1, r1, [r3, #8]
 800de0a:	605a      	str	r2, [r3, #4]
 800de0c:	f844 a000 	str.w	sl, [r4, r0]
 800de10:	e699      	b.n	800db46 <_malloc_r+0x62>
 800de12:	bf00      	nop
 800de14:	20000458 	.word	0x20000458
 800de18:	20000460 	.word	0x20000460
 800de1c:	2001e038 	.word	0x2001e038
 800de20:	20000860 	.word	0x20000860
 800de24:	2001e030 	.word	0x2001e030
 800de28:	2001e034 	.word	0x2001e034
 800de2c:	2001e008 	.word	0x2001e008
 800de30:	f1ba 0f00 	cmp.w	sl, #0
 800de34:	db11      	blt.n	800de5a <_malloc_r+0x376>
 800de36:	4420      	add	r0, r4
 800de38:	6843      	ldr	r3, [r0, #4]
 800de3a:	f043 0301 	orr.w	r3, r3, #1
 800de3e:	6043      	str	r3, [r0, #4]
 800de40:	f854 3f08 	ldr.w	r3, [r4, #8]!
 800de44:	4630      	mov	r0, r6
 800de46:	f8c3 e00c 	str.w	lr, [r3, #12]
 800de4a:	f8ce 3008 	str.w	r3, [lr, #8]
 800de4e:	f000 f8c1 	bl	800dfd4 <__malloc_unlock>
 800de52:	4620      	mov	r0, r4
 800de54:	b003      	add	sp, #12
 800de56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de5a:	4674      	mov	r4, lr
 800de5c:	e70a      	b.n	800dc74 <_malloc_r+0x190>
 800de5e:	f1ac 0008 	sub.w	r0, ip, #8
 800de62:	f8dc c000 	ldr.w	ip, [ip]
 800de66:	4584      	cmp	ip, r0
 800de68:	f103 33ff 	add.w	r3, r3, #4294967295
 800de6c:	f43f af0c 	beq.w	800dc88 <_malloc_r+0x1a4>
 800de70:	e711      	b.n	800dc96 <_malloc_r+0x1b2>
 800de72:	3304      	adds	r3, #4
 800de74:	0052      	lsls	r2, r2, #1
 800de76:	4210      	tst	r0, r2
 800de78:	d0fb      	beq.n	800de72 <_malloc_r+0x38e>
 800de7a:	e6f5      	b.n	800dc68 <_malloc_r+0x184>
 800de7c:	4643      	mov	r3, r8
 800de7e:	e7fa      	b.n	800de76 <_malloc_r+0x392>
 800de80:	6818      	ldr	r0, [r3, #0]
 800de82:	9200      	str	r2, [sp, #0]
 800de84:	3001      	adds	r0, #1
 800de86:	bf1b      	ittet	ne
 800de88:	ebab 0101 	subne.w	r1, fp, r1
 800de8c:	4471      	addne	r1, lr
 800de8e:	f8c3 b000 	streq.w	fp, [r3]
 800de92:	f8c9 1000 	strne.w	r1, [r9]
 800de96:	f01b 0307 	ands.w	r3, fp, #7
 800de9a:	bf1c      	itt	ne
 800de9c:	f1c3 0308 	rsbne	r3, r3, #8
 800dea0:	449b      	addne	fp, r3
 800dea2:	445c      	add	r4, fp
 800dea4:	4498      	add	r8, r3
 800dea6:	ea04 030c 	and.w	r3, r4, ip
 800deaa:	eba8 0803 	sub.w	r8, r8, r3
 800deae:	4641      	mov	r1, r8
 800deb0:	4630      	mov	r0, r6
 800deb2:	f000 fac7 	bl	800e444 <_sbrk_r>
 800deb6:	1c43      	adds	r3, r0, #1
 800deb8:	bf04      	itt	eq
 800deba:	4658      	moveq	r0, fp
 800debc:	f04f 0800 	moveq.w	r8, #0
 800dec0:	f8d9 3000 	ldr.w	r3, [r9]
 800dec4:	f8c7 b008 	str.w	fp, [r7, #8]
 800dec8:	eba0 000b 	sub.w	r0, r0, fp
 800decc:	4440      	add	r0, r8
 800dece:	4443      	add	r3, r8
 800ded0:	f040 0001 	orr.w	r0, r0, #1
 800ded4:	45ba      	cmp	sl, r7
 800ded6:	9a00      	ldr	r2, [sp, #0]
 800ded8:	f8c9 3000 	str.w	r3, [r9]
 800dedc:	f8cb 0004 	str.w	r0, [fp, #4]
 800dee0:	f43f af29 	beq.w	800dd36 <_malloc_r+0x252>
 800dee4:	2a0f      	cmp	r2, #15
 800dee6:	d810      	bhi.n	800df0a <_malloc_r+0x426>
 800dee8:	2301      	movs	r3, #1
 800deea:	f8cb 3004 	str.w	r3, [fp, #4]
 800deee:	68bb      	ldr	r3, [r7, #8]
 800def0:	685a      	ldr	r2, [r3, #4]
 800def2:	f022 0203 	bic.w	r2, r2, #3
 800def6:	42aa      	cmp	r2, r5
 800def8:	eba2 0305 	sub.w	r3, r2, r5
 800defc:	d301      	bcc.n	800df02 <_malloc_r+0x41e>
 800defe:	2b0f      	cmp	r3, #15
 800df00:	dc1c      	bgt.n	800df3c <_malloc_r+0x458>
 800df02:	4630      	mov	r0, r6
 800df04:	f000 f866 	bl	800dfd4 <__malloc_unlock>
 800df08:	e5f8      	b.n	800dafc <_malloc_r+0x18>
 800df0a:	f8da 3004 	ldr.w	r3, [sl, #4]
 800df0e:	f1a2 040c 	sub.w	r4, r2, #12
 800df12:	f024 0407 	bic.w	r4, r4, #7
 800df16:	f003 0301 	and.w	r3, r3, #1
 800df1a:	4323      	orrs	r3, r4
 800df1c:	f8ca 3004 	str.w	r3, [sl, #4]
 800df20:	2205      	movs	r2, #5
 800df22:	eb0a 0304 	add.w	r3, sl, r4
 800df26:	2c0f      	cmp	r4, #15
 800df28:	e9c3 2201 	strd	r2, r2, [r3, #4]
 800df2c:	f67f af03 	bls.w	800dd36 <_malloc_r+0x252>
 800df30:	f10a 0108 	add.w	r1, sl, #8
 800df34:	4630      	mov	r0, r6
 800df36:	f002 fdbd 	bl	8010ab4 <_free_r>
 800df3a:	e6fc      	b.n	800dd36 <_malloc_r+0x252>
 800df3c:	68bc      	ldr	r4, [r7, #8]
 800df3e:	f045 0201 	orr.w	r2, r5, #1
 800df42:	4425      	add	r5, r4
 800df44:	f043 0301 	orr.w	r3, r3, #1
 800df48:	6062      	str	r2, [r4, #4]
 800df4a:	60bd      	str	r5, [r7, #8]
 800df4c:	606b      	str	r3, [r5, #4]
 800df4e:	e5fa      	b.n	800db46 <_malloc_r+0x62>

0800df50 <memcmp>:
 800df50:	b530      	push	{r4, r5, lr}
 800df52:	2400      	movs	r4, #0
 800df54:	42a2      	cmp	r2, r4
 800df56:	d101      	bne.n	800df5c <memcmp+0xc>
 800df58:	2000      	movs	r0, #0
 800df5a:	e007      	b.n	800df6c <memcmp+0x1c>
 800df5c:	5d03      	ldrb	r3, [r0, r4]
 800df5e:	3401      	adds	r4, #1
 800df60:	190d      	adds	r5, r1, r4
 800df62:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 800df66:	42ab      	cmp	r3, r5
 800df68:	d0f4      	beq.n	800df54 <memcmp+0x4>
 800df6a:	1b58      	subs	r0, r3, r5
 800df6c:	bd30      	pop	{r4, r5, pc}

0800df6e <memcpy>:
 800df6e:	b510      	push	{r4, lr}
 800df70:	1e43      	subs	r3, r0, #1
 800df72:	440a      	add	r2, r1
 800df74:	4291      	cmp	r1, r2
 800df76:	d100      	bne.n	800df7a <memcpy+0xc>
 800df78:	bd10      	pop	{r4, pc}
 800df7a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800df7e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800df82:	e7f7      	b.n	800df74 <memcpy+0x6>

0800df84 <memmove>:
 800df84:	4288      	cmp	r0, r1
 800df86:	b510      	push	{r4, lr}
 800df88:	eb01 0302 	add.w	r3, r1, r2
 800df8c:	d807      	bhi.n	800df9e <memmove+0x1a>
 800df8e:	1e42      	subs	r2, r0, #1
 800df90:	4299      	cmp	r1, r3
 800df92:	d00a      	beq.n	800dfaa <memmove+0x26>
 800df94:	f811 4b01 	ldrb.w	r4, [r1], #1
 800df98:	f802 4f01 	strb.w	r4, [r2, #1]!
 800df9c:	e7f8      	b.n	800df90 <memmove+0xc>
 800df9e:	4283      	cmp	r3, r0
 800dfa0:	d9f5      	bls.n	800df8e <memmove+0xa>
 800dfa2:	1881      	adds	r1, r0, r2
 800dfa4:	1ad2      	subs	r2, r2, r3
 800dfa6:	42d3      	cmn	r3, r2
 800dfa8:	d100      	bne.n	800dfac <memmove+0x28>
 800dfaa:	bd10      	pop	{r4, pc}
 800dfac:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800dfb0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800dfb4:	e7f7      	b.n	800dfa6 <memmove+0x22>

0800dfb6 <memset>:
 800dfb6:	4402      	add	r2, r0
 800dfb8:	4603      	mov	r3, r0
 800dfba:	4293      	cmp	r3, r2
 800dfbc:	d100      	bne.n	800dfc0 <memset+0xa>
 800dfbe:	4770      	bx	lr
 800dfc0:	f803 1b01 	strb.w	r1, [r3], #1
 800dfc4:	e7f9      	b.n	800dfba <memset+0x4>
	...

0800dfc8 <__malloc_lock>:
 800dfc8:	4801      	ldr	r0, [pc, #4]	; (800dfd0 <__malloc_lock+0x8>)
 800dfca:	f7ff bd79 	b.w	800dac0 <__retarget_lock_acquire_recursive>
 800dfce:	bf00      	nop
 800dfd0:	2001e04c 	.word	0x2001e04c

0800dfd4 <__malloc_unlock>:
 800dfd4:	4801      	ldr	r0, [pc, #4]	; (800dfdc <__malloc_unlock+0x8>)
 800dfd6:	f7ff bd74 	b.w	800dac2 <__retarget_lock_release_recursive>
 800dfda:	bf00      	nop
 800dfdc:	2001e04c 	.word	0x2001e04c

0800dfe0 <_putc_r>:
 800dfe0:	b570      	push	{r4, r5, r6, lr}
 800dfe2:	460d      	mov	r5, r1
 800dfe4:	4614      	mov	r4, r2
 800dfe6:	4606      	mov	r6, r0
 800dfe8:	b118      	cbz	r0, 800dff2 <_putc_r+0x12>
 800dfea:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800dfec:	b90b      	cbnz	r3, 800dff2 <_putc_r+0x12>
 800dfee:	f002 fcd1 	bl	8010994 <__sinit>
 800dff2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dff4:	07d8      	lsls	r0, r3, #31
 800dff6:	d405      	bmi.n	800e004 <_putc_r+0x24>
 800dff8:	89a3      	ldrh	r3, [r4, #12]
 800dffa:	0599      	lsls	r1, r3, #22
 800dffc:	d402      	bmi.n	800e004 <_putc_r+0x24>
 800dffe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e000:	f7ff fd5e 	bl	800dac0 <__retarget_lock_acquire_recursive>
 800e004:	68a3      	ldr	r3, [r4, #8]
 800e006:	3b01      	subs	r3, #1
 800e008:	2b00      	cmp	r3, #0
 800e00a:	60a3      	str	r3, [r4, #8]
 800e00c:	da05      	bge.n	800e01a <_putc_r+0x3a>
 800e00e:	69a2      	ldr	r2, [r4, #24]
 800e010:	4293      	cmp	r3, r2
 800e012:	db12      	blt.n	800e03a <_putc_r+0x5a>
 800e014:	b2eb      	uxtb	r3, r5
 800e016:	2b0a      	cmp	r3, #10
 800e018:	d00f      	beq.n	800e03a <_putc_r+0x5a>
 800e01a:	6823      	ldr	r3, [r4, #0]
 800e01c:	1c5a      	adds	r2, r3, #1
 800e01e:	6022      	str	r2, [r4, #0]
 800e020:	701d      	strb	r5, [r3, #0]
 800e022:	b2ed      	uxtb	r5, r5
 800e024:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e026:	07da      	lsls	r2, r3, #31
 800e028:	d405      	bmi.n	800e036 <_putc_r+0x56>
 800e02a:	89a3      	ldrh	r3, [r4, #12]
 800e02c:	059b      	lsls	r3, r3, #22
 800e02e:	d402      	bmi.n	800e036 <_putc_r+0x56>
 800e030:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e032:	f7ff fd46 	bl	800dac2 <__retarget_lock_release_recursive>
 800e036:	4628      	mov	r0, r5
 800e038:	bd70      	pop	{r4, r5, r6, pc}
 800e03a:	4629      	mov	r1, r5
 800e03c:	4622      	mov	r2, r4
 800e03e:	4630      	mov	r0, r6
 800e040:	f001 fcb5 	bl	800f9ae <__swbuf_r>
 800e044:	4605      	mov	r5, r0
 800e046:	e7ed      	b.n	800e024 <_putc_r+0x44>

0800e048 <_puts_r>:
 800e048:	b530      	push	{r4, r5, lr}
 800e04a:	4605      	mov	r5, r0
 800e04c:	b089      	sub	sp, #36	; 0x24
 800e04e:	4608      	mov	r0, r1
 800e050:	460c      	mov	r4, r1
 800e052:	f7f8 fea7 	bl	8006da4 <strlen>
 800e056:	4b1e      	ldr	r3, [pc, #120]	; (800e0d0 <_puts_r+0x88>)
 800e058:	9306      	str	r3, [sp, #24]
 800e05a:	2301      	movs	r3, #1
 800e05c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800e060:	9307      	str	r3, [sp, #28]
 800e062:	4418      	add	r0, r3
 800e064:	ab04      	add	r3, sp, #16
 800e066:	9301      	str	r3, [sp, #4]
 800e068:	2302      	movs	r3, #2
 800e06a:	9302      	str	r3, [sp, #8]
 800e06c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e06e:	9003      	str	r0, [sp, #12]
 800e070:	68ac      	ldr	r4, [r5, #8]
 800e072:	b913      	cbnz	r3, 800e07a <_puts_r+0x32>
 800e074:	4628      	mov	r0, r5
 800e076:	f002 fc8d 	bl	8010994 <__sinit>
 800e07a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e07c:	07db      	lsls	r3, r3, #31
 800e07e:	d405      	bmi.n	800e08c <_puts_r+0x44>
 800e080:	89a3      	ldrh	r3, [r4, #12]
 800e082:	0598      	lsls	r0, r3, #22
 800e084:	d402      	bmi.n	800e08c <_puts_r+0x44>
 800e086:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e088:	f7ff fd1a 	bl	800dac0 <__retarget_lock_acquire_recursive>
 800e08c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e090:	0499      	lsls	r1, r3, #18
 800e092:	d406      	bmi.n	800e0a2 <_puts_r+0x5a>
 800e094:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800e098:	81a3      	strh	r3, [r4, #12]
 800e09a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e09c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800e0a0:	6663      	str	r3, [r4, #100]	; 0x64
 800e0a2:	4628      	mov	r0, r5
 800e0a4:	aa01      	add	r2, sp, #4
 800e0a6:	4621      	mov	r1, r4
 800e0a8:	f7ff fb3e 	bl	800d728 <__sfvwrite_r>
 800e0ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e0ae:	2800      	cmp	r0, #0
 800e0b0:	bf0c      	ite	eq
 800e0b2:	250a      	moveq	r5, #10
 800e0b4:	f04f 35ff 	movne.w	r5, #4294967295
 800e0b8:	07da      	lsls	r2, r3, #31
 800e0ba:	d405      	bmi.n	800e0c8 <_puts_r+0x80>
 800e0bc:	89a3      	ldrh	r3, [r4, #12]
 800e0be:	059b      	lsls	r3, r3, #22
 800e0c0:	d402      	bmi.n	800e0c8 <_puts_r+0x80>
 800e0c2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e0c4:	f7ff fcfd 	bl	800dac2 <__retarget_lock_release_recursive>
 800e0c8:	4628      	mov	r0, r5
 800e0ca:	b009      	add	sp, #36	; 0x24
 800e0cc:	bd30      	pop	{r4, r5, pc}
 800e0ce:	bf00      	nop
 800e0d0:	0801f5ac 	.word	0x0801f5ac

0800e0d4 <puts>:
 800e0d4:	4b02      	ldr	r3, [pc, #8]	; (800e0e0 <puts+0xc>)
 800e0d6:	4601      	mov	r1, r0
 800e0d8:	6818      	ldr	r0, [r3, #0]
 800e0da:	f7ff bfb5 	b.w	800e048 <_puts_r>
 800e0de:	bf00      	nop
 800e0e0:	2000002c 	.word	0x2000002c

0800e0e4 <realloc>:
 800e0e4:	4b02      	ldr	r3, [pc, #8]	; (800e0f0 <realloc+0xc>)
 800e0e6:	460a      	mov	r2, r1
 800e0e8:	4601      	mov	r1, r0
 800e0ea:	6818      	ldr	r0, [r3, #0]
 800e0ec:	f000 b802 	b.w	800e0f4 <_realloc_r>
 800e0f0:	2000002c 	.word	0x2000002c

0800e0f4 <_realloc_r>:
 800e0f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0f8:	4682      	mov	sl, r0
 800e0fa:	460c      	mov	r4, r1
 800e0fc:	b929      	cbnz	r1, 800e10a <_realloc_r+0x16>
 800e0fe:	4611      	mov	r1, r2
 800e100:	b003      	add	sp, #12
 800e102:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e106:	f7ff bced 	b.w	800dae4 <_malloc_r>
 800e10a:	9201      	str	r2, [sp, #4]
 800e10c:	f7ff ff5c 	bl	800dfc8 <__malloc_lock>
 800e110:	9a01      	ldr	r2, [sp, #4]
 800e112:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800e116:	f102 080b 	add.w	r8, r2, #11
 800e11a:	f1b8 0f16 	cmp.w	r8, #22
 800e11e:	f1a4 0908 	sub.w	r9, r4, #8
 800e122:	f025 0603 	bic.w	r6, r5, #3
 800e126:	d90b      	bls.n	800e140 <_realloc_r+0x4c>
 800e128:	f038 0807 	bics.w	r8, r8, #7
 800e12c:	d50a      	bpl.n	800e144 <_realloc_r+0x50>
 800e12e:	230c      	movs	r3, #12
 800e130:	f8ca 3000 	str.w	r3, [sl]
 800e134:	f04f 0b00 	mov.w	fp, #0
 800e138:	4658      	mov	r0, fp
 800e13a:	b003      	add	sp, #12
 800e13c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e140:	f04f 0810 	mov.w	r8, #16
 800e144:	4590      	cmp	r8, r2
 800e146:	d3f2      	bcc.n	800e12e <_realloc_r+0x3a>
 800e148:	45b0      	cmp	r8, r6
 800e14a:	f340 8170 	ble.w	800e42e <_realloc_r+0x33a>
 800e14e:	49a9      	ldr	r1, [pc, #676]	; (800e3f4 <_realloc_r+0x300>)
 800e150:	9101      	str	r1, [sp, #4]
 800e152:	f8d1 c008 	ldr.w	ip, [r1, #8]
 800e156:	eb09 0306 	add.w	r3, r9, r6
 800e15a:	459c      	cmp	ip, r3
 800e15c:	6858      	ldr	r0, [r3, #4]
 800e15e:	d005      	beq.n	800e16c <_realloc_r+0x78>
 800e160:	f020 0101 	bic.w	r1, r0, #1
 800e164:	4419      	add	r1, r3
 800e166:	6849      	ldr	r1, [r1, #4]
 800e168:	07cf      	lsls	r7, r1, #31
 800e16a:	d447      	bmi.n	800e1fc <_realloc_r+0x108>
 800e16c:	f020 0003 	bic.w	r0, r0, #3
 800e170:	459c      	cmp	ip, r3
 800e172:	eb06 0700 	add.w	r7, r6, r0
 800e176:	d119      	bne.n	800e1ac <_realloc_r+0xb8>
 800e178:	f108 0110 	add.w	r1, r8, #16
 800e17c:	42b9      	cmp	r1, r7
 800e17e:	dc3f      	bgt.n	800e200 <_realloc_r+0x10c>
 800e180:	eb09 0308 	add.w	r3, r9, r8
 800e184:	9a01      	ldr	r2, [sp, #4]
 800e186:	eba7 0708 	sub.w	r7, r7, r8
 800e18a:	f047 0701 	orr.w	r7, r7, #1
 800e18e:	6093      	str	r3, [r2, #8]
 800e190:	605f      	str	r7, [r3, #4]
 800e192:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e196:	f003 0301 	and.w	r3, r3, #1
 800e19a:	ea43 0308 	orr.w	r3, r3, r8
 800e19e:	f844 3c04 	str.w	r3, [r4, #-4]
 800e1a2:	4650      	mov	r0, sl
 800e1a4:	f7ff ff16 	bl	800dfd4 <__malloc_unlock>
 800e1a8:	46a3      	mov	fp, r4
 800e1aa:	e7c5      	b.n	800e138 <_realloc_r+0x44>
 800e1ac:	45b8      	cmp	r8, r7
 800e1ae:	dc27      	bgt.n	800e200 <_realloc_r+0x10c>
 800e1b0:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800e1b4:	60da      	str	r2, [r3, #12]
 800e1b6:	6093      	str	r3, [r2, #8]
 800e1b8:	eba7 0008 	sub.w	r0, r7, r8
 800e1bc:	f8d9 2004 	ldr.w	r2, [r9, #4]
 800e1c0:	280f      	cmp	r0, #15
 800e1c2:	f002 0201 	and.w	r2, r2, #1
 800e1c6:	eb09 0307 	add.w	r3, r9, r7
 800e1ca:	f240 8132 	bls.w	800e432 <_realloc_r+0x33e>
 800e1ce:	eb09 0108 	add.w	r1, r9, r8
 800e1d2:	ea48 0202 	orr.w	r2, r8, r2
 800e1d6:	f040 0001 	orr.w	r0, r0, #1
 800e1da:	f8c9 2004 	str.w	r2, [r9, #4]
 800e1de:	6048      	str	r0, [r1, #4]
 800e1e0:	685a      	ldr	r2, [r3, #4]
 800e1e2:	f042 0201 	orr.w	r2, r2, #1
 800e1e6:	605a      	str	r2, [r3, #4]
 800e1e8:	3108      	adds	r1, #8
 800e1ea:	4650      	mov	r0, sl
 800e1ec:	f002 fc62 	bl	8010ab4 <_free_r>
 800e1f0:	4650      	mov	r0, sl
 800e1f2:	f7ff feef 	bl	800dfd4 <__malloc_unlock>
 800e1f6:	f109 0b08 	add.w	fp, r9, #8
 800e1fa:	e79d      	b.n	800e138 <_realloc_r+0x44>
 800e1fc:	2000      	movs	r0, #0
 800e1fe:	4603      	mov	r3, r0
 800e200:	07e9      	lsls	r1, r5, #31
 800e202:	f100 80c6 	bmi.w	800e392 <_realloc_r+0x29e>
 800e206:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800e20a:	eba9 0505 	sub.w	r5, r9, r5
 800e20e:	6869      	ldr	r1, [r5, #4]
 800e210:	f021 0103 	bic.w	r1, r1, #3
 800e214:	eb01 0b06 	add.w	fp, r1, r6
 800e218:	2b00      	cmp	r3, #0
 800e21a:	f000 8086 	beq.w	800e32a <_realloc_r+0x236>
 800e21e:	459c      	cmp	ip, r3
 800e220:	eb00 070b 	add.w	r7, r0, fp
 800e224:	d149      	bne.n	800e2ba <_realloc_r+0x1c6>
 800e226:	f108 0310 	add.w	r3, r8, #16
 800e22a:	42bb      	cmp	r3, r7
 800e22c:	dc7d      	bgt.n	800e32a <_realloc_r+0x236>
 800e22e:	46ab      	mov	fp, r5
 800e230:	68eb      	ldr	r3, [r5, #12]
 800e232:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 800e236:	60d3      	str	r3, [r2, #12]
 800e238:	609a      	str	r2, [r3, #8]
 800e23a:	1f32      	subs	r2, r6, #4
 800e23c:	2a24      	cmp	r2, #36	; 0x24
 800e23e:	d837      	bhi.n	800e2b0 <_realloc_r+0x1bc>
 800e240:	2a13      	cmp	r2, #19
 800e242:	d933      	bls.n	800e2ac <_realloc_r+0x1b8>
 800e244:	6823      	ldr	r3, [r4, #0]
 800e246:	60ab      	str	r3, [r5, #8]
 800e248:	6863      	ldr	r3, [r4, #4]
 800e24a:	60eb      	str	r3, [r5, #12]
 800e24c:	2a1b      	cmp	r2, #27
 800e24e:	d81b      	bhi.n	800e288 <_realloc_r+0x194>
 800e250:	3408      	adds	r4, #8
 800e252:	f105 0310 	add.w	r3, r5, #16
 800e256:	6822      	ldr	r2, [r4, #0]
 800e258:	601a      	str	r2, [r3, #0]
 800e25a:	6862      	ldr	r2, [r4, #4]
 800e25c:	605a      	str	r2, [r3, #4]
 800e25e:	68a2      	ldr	r2, [r4, #8]
 800e260:	609a      	str	r2, [r3, #8]
 800e262:	eb05 0308 	add.w	r3, r5, r8
 800e266:	9a01      	ldr	r2, [sp, #4]
 800e268:	eba7 0708 	sub.w	r7, r7, r8
 800e26c:	f047 0701 	orr.w	r7, r7, #1
 800e270:	6093      	str	r3, [r2, #8]
 800e272:	605f      	str	r7, [r3, #4]
 800e274:	686b      	ldr	r3, [r5, #4]
 800e276:	f003 0301 	and.w	r3, r3, #1
 800e27a:	ea43 0308 	orr.w	r3, r3, r8
 800e27e:	606b      	str	r3, [r5, #4]
 800e280:	4650      	mov	r0, sl
 800e282:	f7ff fea7 	bl	800dfd4 <__malloc_unlock>
 800e286:	e757      	b.n	800e138 <_realloc_r+0x44>
 800e288:	68a3      	ldr	r3, [r4, #8]
 800e28a:	612b      	str	r3, [r5, #16]
 800e28c:	68e3      	ldr	r3, [r4, #12]
 800e28e:	616b      	str	r3, [r5, #20]
 800e290:	2a24      	cmp	r2, #36	; 0x24
 800e292:	bf01      	itttt	eq
 800e294:	6923      	ldreq	r3, [r4, #16]
 800e296:	61ab      	streq	r3, [r5, #24]
 800e298:	6962      	ldreq	r2, [r4, #20]
 800e29a:	61ea      	streq	r2, [r5, #28]
 800e29c:	bf19      	ittee	ne
 800e29e:	3410      	addne	r4, #16
 800e2a0:	f105 0318 	addne.w	r3, r5, #24
 800e2a4:	f105 0320 	addeq.w	r3, r5, #32
 800e2a8:	3418      	addeq	r4, #24
 800e2aa:	e7d4      	b.n	800e256 <_realloc_r+0x162>
 800e2ac:	465b      	mov	r3, fp
 800e2ae:	e7d2      	b.n	800e256 <_realloc_r+0x162>
 800e2b0:	4621      	mov	r1, r4
 800e2b2:	4658      	mov	r0, fp
 800e2b4:	f7ff fe66 	bl	800df84 <memmove>
 800e2b8:	e7d3      	b.n	800e262 <_realloc_r+0x16e>
 800e2ba:	45b8      	cmp	r8, r7
 800e2bc:	dc35      	bgt.n	800e32a <_realloc_r+0x236>
 800e2be:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800e2c2:	4628      	mov	r0, r5
 800e2c4:	60da      	str	r2, [r3, #12]
 800e2c6:	6093      	str	r3, [r2, #8]
 800e2c8:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800e2cc:	68eb      	ldr	r3, [r5, #12]
 800e2ce:	60d3      	str	r3, [r2, #12]
 800e2d0:	609a      	str	r2, [r3, #8]
 800e2d2:	1f32      	subs	r2, r6, #4
 800e2d4:	2a24      	cmp	r2, #36	; 0x24
 800e2d6:	d824      	bhi.n	800e322 <_realloc_r+0x22e>
 800e2d8:	2a13      	cmp	r2, #19
 800e2da:	d908      	bls.n	800e2ee <_realloc_r+0x1fa>
 800e2dc:	6823      	ldr	r3, [r4, #0]
 800e2de:	60ab      	str	r3, [r5, #8]
 800e2e0:	6863      	ldr	r3, [r4, #4]
 800e2e2:	60eb      	str	r3, [r5, #12]
 800e2e4:	2a1b      	cmp	r2, #27
 800e2e6:	d80a      	bhi.n	800e2fe <_realloc_r+0x20a>
 800e2e8:	3408      	adds	r4, #8
 800e2ea:	f105 0010 	add.w	r0, r5, #16
 800e2ee:	6823      	ldr	r3, [r4, #0]
 800e2f0:	6003      	str	r3, [r0, #0]
 800e2f2:	6863      	ldr	r3, [r4, #4]
 800e2f4:	6043      	str	r3, [r0, #4]
 800e2f6:	68a3      	ldr	r3, [r4, #8]
 800e2f8:	6083      	str	r3, [r0, #8]
 800e2fa:	46a9      	mov	r9, r5
 800e2fc:	e75c      	b.n	800e1b8 <_realloc_r+0xc4>
 800e2fe:	68a3      	ldr	r3, [r4, #8]
 800e300:	612b      	str	r3, [r5, #16]
 800e302:	68e3      	ldr	r3, [r4, #12]
 800e304:	616b      	str	r3, [r5, #20]
 800e306:	2a24      	cmp	r2, #36	; 0x24
 800e308:	bf01      	itttt	eq
 800e30a:	6923      	ldreq	r3, [r4, #16]
 800e30c:	61ab      	streq	r3, [r5, #24]
 800e30e:	6963      	ldreq	r3, [r4, #20]
 800e310:	61eb      	streq	r3, [r5, #28]
 800e312:	bf19      	ittee	ne
 800e314:	3410      	addne	r4, #16
 800e316:	f105 0018 	addne.w	r0, r5, #24
 800e31a:	f105 0020 	addeq.w	r0, r5, #32
 800e31e:	3418      	addeq	r4, #24
 800e320:	e7e5      	b.n	800e2ee <_realloc_r+0x1fa>
 800e322:	4621      	mov	r1, r4
 800e324:	f7ff fe2e 	bl	800df84 <memmove>
 800e328:	e7e7      	b.n	800e2fa <_realloc_r+0x206>
 800e32a:	45d8      	cmp	r8, fp
 800e32c:	dc31      	bgt.n	800e392 <_realloc_r+0x29e>
 800e32e:	4628      	mov	r0, r5
 800e330:	68eb      	ldr	r3, [r5, #12]
 800e332:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800e336:	60d3      	str	r3, [r2, #12]
 800e338:	609a      	str	r2, [r3, #8]
 800e33a:	1f32      	subs	r2, r6, #4
 800e33c:	2a24      	cmp	r2, #36	; 0x24
 800e33e:	d824      	bhi.n	800e38a <_realloc_r+0x296>
 800e340:	2a13      	cmp	r2, #19
 800e342:	d908      	bls.n	800e356 <_realloc_r+0x262>
 800e344:	6823      	ldr	r3, [r4, #0]
 800e346:	60ab      	str	r3, [r5, #8]
 800e348:	6863      	ldr	r3, [r4, #4]
 800e34a:	60eb      	str	r3, [r5, #12]
 800e34c:	2a1b      	cmp	r2, #27
 800e34e:	d80a      	bhi.n	800e366 <_realloc_r+0x272>
 800e350:	3408      	adds	r4, #8
 800e352:	f105 0010 	add.w	r0, r5, #16
 800e356:	6823      	ldr	r3, [r4, #0]
 800e358:	6003      	str	r3, [r0, #0]
 800e35a:	6863      	ldr	r3, [r4, #4]
 800e35c:	6043      	str	r3, [r0, #4]
 800e35e:	68a3      	ldr	r3, [r4, #8]
 800e360:	6083      	str	r3, [r0, #8]
 800e362:	465f      	mov	r7, fp
 800e364:	e7c9      	b.n	800e2fa <_realloc_r+0x206>
 800e366:	68a3      	ldr	r3, [r4, #8]
 800e368:	612b      	str	r3, [r5, #16]
 800e36a:	68e3      	ldr	r3, [r4, #12]
 800e36c:	616b      	str	r3, [r5, #20]
 800e36e:	2a24      	cmp	r2, #36	; 0x24
 800e370:	bf01      	itttt	eq
 800e372:	6923      	ldreq	r3, [r4, #16]
 800e374:	61ab      	streq	r3, [r5, #24]
 800e376:	6963      	ldreq	r3, [r4, #20]
 800e378:	61eb      	streq	r3, [r5, #28]
 800e37a:	bf19      	ittee	ne
 800e37c:	3410      	addne	r4, #16
 800e37e:	f105 0018 	addne.w	r0, r5, #24
 800e382:	f105 0020 	addeq.w	r0, r5, #32
 800e386:	3418      	addeq	r4, #24
 800e388:	e7e5      	b.n	800e356 <_realloc_r+0x262>
 800e38a:	4621      	mov	r1, r4
 800e38c:	f7ff fdfa 	bl	800df84 <memmove>
 800e390:	e7e7      	b.n	800e362 <_realloc_r+0x26e>
 800e392:	4611      	mov	r1, r2
 800e394:	4650      	mov	r0, sl
 800e396:	f7ff fba5 	bl	800dae4 <_malloc_r>
 800e39a:	4683      	mov	fp, r0
 800e39c:	2800      	cmp	r0, #0
 800e39e:	f43f af6f 	beq.w	800e280 <_realloc_r+0x18c>
 800e3a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e3a6:	f023 0301 	bic.w	r3, r3, #1
 800e3aa:	444b      	add	r3, r9
 800e3ac:	f1a0 0208 	sub.w	r2, r0, #8
 800e3b0:	4293      	cmp	r3, r2
 800e3b2:	d105      	bne.n	800e3c0 <_realloc_r+0x2cc>
 800e3b4:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800e3b8:	f027 0703 	bic.w	r7, r7, #3
 800e3bc:	4437      	add	r7, r6
 800e3be:	e6fb      	b.n	800e1b8 <_realloc_r+0xc4>
 800e3c0:	1f32      	subs	r2, r6, #4
 800e3c2:	2a24      	cmp	r2, #36	; 0x24
 800e3c4:	d82f      	bhi.n	800e426 <_realloc_r+0x332>
 800e3c6:	2a13      	cmp	r2, #19
 800e3c8:	d92a      	bls.n	800e420 <_realloc_r+0x32c>
 800e3ca:	6823      	ldr	r3, [r4, #0]
 800e3cc:	6003      	str	r3, [r0, #0]
 800e3ce:	6863      	ldr	r3, [r4, #4]
 800e3d0:	6043      	str	r3, [r0, #4]
 800e3d2:	2a1b      	cmp	r2, #27
 800e3d4:	d810      	bhi.n	800e3f8 <_realloc_r+0x304>
 800e3d6:	f104 0208 	add.w	r2, r4, #8
 800e3da:	f100 0308 	add.w	r3, r0, #8
 800e3de:	6811      	ldr	r1, [r2, #0]
 800e3e0:	6019      	str	r1, [r3, #0]
 800e3e2:	6851      	ldr	r1, [r2, #4]
 800e3e4:	6059      	str	r1, [r3, #4]
 800e3e6:	6892      	ldr	r2, [r2, #8]
 800e3e8:	609a      	str	r2, [r3, #8]
 800e3ea:	4621      	mov	r1, r4
 800e3ec:	4650      	mov	r0, sl
 800e3ee:	f002 fb61 	bl	8010ab4 <_free_r>
 800e3f2:	e745      	b.n	800e280 <_realloc_r+0x18c>
 800e3f4:	20000458 	.word	0x20000458
 800e3f8:	68a3      	ldr	r3, [r4, #8]
 800e3fa:	6083      	str	r3, [r0, #8]
 800e3fc:	68e3      	ldr	r3, [r4, #12]
 800e3fe:	60c3      	str	r3, [r0, #12]
 800e400:	2a24      	cmp	r2, #36	; 0x24
 800e402:	bf01      	itttt	eq
 800e404:	6923      	ldreq	r3, [r4, #16]
 800e406:	6103      	streq	r3, [r0, #16]
 800e408:	6961      	ldreq	r1, [r4, #20]
 800e40a:	6141      	streq	r1, [r0, #20]
 800e40c:	bf19      	ittee	ne
 800e40e:	f104 0210 	addne.w	r2, r4, #16
 800e412:	f100 0310 	addne.w	r3, r0, #16
 800e416:	f104 0218 	addeq.w	r2, r4, #24
 800e41a:	f100 0318 	addeq.w	r3, r0, #24
 800e41e:	e7de      	b.n	800e3de <_realloc_r+0x2ea>
 800e420:	4603      	mov	r3, r0
 800e422:	4622      	mov	r2, r4
 800e424:	e7db      	b.n	800e3de <_realloc_r+0x2ea>
 800e426:	4621      	mov	r1, r4
 800e428:	f7ff fdac 	bl	800df84 <memmove>
 800e42c:	e7dd      	b.n	800e3ea <_realloc_r+0x2f6>
 800e42e:	4637      	mov	r7, r6
 800e430:	e6c2      	b.n	800e1b8 <_realloc_r+0xc4>
 800e432:	4317      	orrs	r7, r2
 800e434:	f8c9 7004 	str.w	r7, [r9, #4]
 800e438:	685a      	ldr	r2, [r3, #4]
 800e43a:	f042 0201 	orr.w	r2, r2, #1
 800e43e:	605a      	str	r2, [r3, #4]
 800e440:	e6d6      	b.n	800e1f0 <_realloc_r+0xfc>
 800e442:	bf00      	nop

0800e444 <_sbrk_r>:
 800e444:	b538      	push	{r3, r4, r5, lr}
 800e446:	4c06      	ldr	r4, [pc, #24]	; (800e460 <_sbrk_r+0x1c>)
 800e448:	2300      	movs	r3, #0
 800e44a:	4605      	mov	r5, r0
 800e44c:	4608      	mov	r0, r1
 800e44e:	6023      	str	r3, [r4, #0]
 800e450:	f003 f99c 	bl	801178c <_sbrk>
 800e454:	1c43      	adds	r3, r0, #1
 800e456:	d102      	bne.n	800e45e <_sbrk_r+0x1a>
 800e458:	6823      	ldr	r3, [r4, #0]
 800e45a:	b103      	cbz	r3, 800e45e <_sbrk_r+0x1a>
 800e45c:	602b      	str	r3, [r5, #0]
 800e45e:	bd38      	pop	{r3, r4, r5, pc}
 800e460:	2001e054 	.word	0x2001e054

0800e464 <_raise_r>:
 800e464:	291f      	cmp	r1, #31
 800e466:	b538      	push	{r3, r4, r5, lr}
 800e468:	4604      	mov	r4, r0
 800e46a:	460d      	mov	r5, r1
 800e46c:	d904      	bls.n	800e478 <_raise_r+0x14>
 800e46e:	2316      	movs	r3, #22
 800e470:	6003      	str	r3, [r0, #0]
 800e472:	f04f 30ff 	mov.w	r0, #4294967295
 800e476:	bd38      	pop	{r3, r4, r5, pc}
 800e478:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 800e47c:	b112      	cbz	r2, 800e484 <_raise_r+0x20>
 800e47e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800e482:	b94b      	cbnz	r3, 800e498 <_raise_r+0x34>
 800e484:	4620      	mov	r0, r4
 800e486:	f000 f831 	bl	800e4ec <_getpid_r>
 800e48a:	462a      	mov	r2, r5
 800e48c:	4601      	mov	r1, r0
 800e48e:	4620      	mov	r0, r4
 800e490:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e494:	f000 b818 	b.w	800e4c8 <_kill_r>
 800e498:	2b01      	cmp	r3, #1
 800e49a:	d00a      	beq.n	800e4b2 <_raise_r+0x4e>
 800e49c:	1c59      	adds	r1, r3, #1
 800e49e:	d103      	bne.n	800e4a8 <_raise_r+0x44>
 800e4a0:	2316      	movs	r3, #22
 800e4a2:	6003      	str	r3, [r0, #0]
 800e4a4:	2001      	movs	r0, #1
 800e4a6:	e7e6      	b.n	800e476 <_raise_r+0x12>
 800e4a8:	2400      	movs	r4, #0
 800e4aa:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800e4ae:	4628      	mov	r0, r5
 800e4b0:	4798      	blx	r3
 800e4b2:	2000      	movs	r0, #0
 800e4b4:	e7df      	b.n	800e476 <_raise_r+0x12>
	...

0800e4b8 <raise>:
 800e4b8:	4b02      	ldr	r3, [pc, #8]	; (800e4c4 <raise+0xc>)
 800e4ba:	4601      	mov	r1, r0
 800e4bc:	6818      	ldr	r0, [r3, #0]
 800e4be:	f7ff bfd1 	b.w	800e464 <_raise_r>
 800e4c2:	bf00      	nop
 800e4c4:	2000002c 	.word	0x2000002c

0800e4c8 <_kill_r>:
 800e4c8:	b538      	push	{r3, r4, r5, lr}
 800e4ca:	4c07      	ldr	r4, [pc, #28]	; (800e4e8 <_kill_r+0x20>)
 800e4cc:	2300      	movs	r3, #0
 800e4ce:	4605      	mov	r5, r0
 800e4d0:	4608      	mov	r0, r1
 800e4d2:	4611      	mov	r1, r2
 800e4d4:	6023      	str	r3, [r4, #0]
 800e4d6:	f003 f951 	bl	801177c <_kill>
 800e4da:	1c43      	adds	r3, r0, #1
 800e4dc:	d102      	bne.n	800e4e4 <_kill_r+0x1c>
 800e4de:	6823      	ldr	r3, [r4, #0]
 800e4e0:	b103      	cbz	r3, 800e4e4 <_kill_r+0x1c>
 800e4e2:	602b      	str	r3, [r5, #0]
 800e4e4:	bd38      	pop	{r3, r4, r5, pc}
 800e4e6:	bf00      	nop
 800e4e8:	2001e054 	.word	0x2001e054

0800e4ec <_getpid_r>:
 800e4ec:	f003 b93e 	b.w	801176c <_getpid>

0800e4f0 <sprintf>:
 800e4f0:	b40e      	push	{r1, r2, r3}
 800e4f2:	b500      	push	{lr}
 800e4f4:	b09c      	sub	sp, #112	; 0x70
 800e4f6:	ab1d      	add	r3, sp, #116	; 0x74
 800e4f8:	9002      	str	r0, [sp, #8]
 800e4fa:	9006      	str	r0, [sp, #24]
 800e4fc:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800e500:	4809      	ldr	r0, [pc, #36]	; (800e528 <sprintf+0x38>)
 800e502:	9107      	str	r1, [sp, #28]
 800e504:	9104      	str	r1, [sp, #16]
 800e506:	4909      	ldr	r1, [pc, #36]	; (800e52c <sprintf+0x3c>)
 800e508:	f853 2b04 	ldr.w	r2, [r3], #4
 800e50c:	9105      	str	r1, [sp, #20]
 800e50e:	6800      	ldr	r0, [r0, #0]
 800e510:	9301      	str	r3, [sp, #4]
 800e512:	a902      	add	r1, sp, #8
 800e514:	f000 f820 	bl	800e558 <_svfprintf_r>
 800e518:	9b02      	ldr	r3, [sp, #8]
 800e51a:	2200      	movs	r2, #0
 800e51c:	701a      	strb	r2, [r3, #0]
 800e51e:	b01c      	add	sp, #112	; 0x70
 800e520:	f85d eb04 	ldr.w	lr, [sp], #4
 800e524:	b003      	add	sp, #12
 800e526:	4770      	bx	lr
 800e528:	2000002c 	.word	0x2000002c
 800e52c:	ffff0208 	.word	0xffff0208

0800e530 <strncmp>:
 800e530:	b510      	push	{r4, lr}
 800e532:	b16a      	cbz	r2, 800e550 <strncmp+0x20>
 800e534:	3901      	subs	r1, #1
 800e536:	1884      	adds	r4, r0, r2
 800e538:	f810 3b01 	ldrb.w	r3, [r0], #1
 800e53c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e540:	4293      	cmp	r3, r2
 800e542:	d103      	bne.n	800e54c <strncmp+0x1c>
 800e544:	42a0      	cmp	r0, r4
 800e546:	d001      	beq.n	800e54c <strncmp+0x1c>
 800e548:	2b00      	cmp	r3, #0
 800e54a:	d1f5      	bne.n	800e538 <strncmp+0x8>
 800e54c:	1a98      	subs	r0, r3, r2
 800e54e:	bd10      	pop	{r4, pc}
 800e550:	4610      	mov	r0, r2
 800e552:	e7fc      	b.n	800e54e <strncmp+0x1e>
 800e554:	0000      	movs	r0, r0
	...

0800e558 <_svfprintf_r>:
 800e558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e55c:	b0d3      	sub	sp, #332	; 0x14c
 800e55e:	4688      	mov	r8, r1
 800e560:	4693      	mov	fp, r2
 800e562:	461e      	mov	r6, r3
 800e564:	9003      	str	r0, [sp, #12]
 800e566:	f002 fb7f 	bl	8010c68 <_localeconv_r>
 800e56a:	6803      	ldr	r3, [r0, #0]
 800e56c:	9316      	str	r3, [sp, #88]	; 0x58
 800e56e:	4618      	mov	r0, r3
 800e570:	f7f8 fc18 	bl	8006da4 <strlen>
 800e574:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800e578:	900d      	str	r0, [sp, #52]	; 0x34
 800e57a:	0618      	lsls	r0, r3, #24
 800e57c:	d518      	bpl.n	800e5b0 <_svfprintf_r+0x58>
 800e57e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e582:	b9ab      	cbnz	r3, 800e5b0 <_svfprintf_r+0x58>
 800e584:	2140      	movs	r1, #64	; 0x40
 800e586:	9803      	ldr	r0, [sp, #12]
 800e588:	f7ff faac 	bl	800dae4 <_malloc_r>
 800e58c:	f8c8 0000 	str.w	r0, [r8]
 800e590:	f8c8 0010 	str.w	r0, [r8, #16]
 800e594:	b948      	cbnz	r0, 800e5aa <_svfprintf_r+0x52>
 800e596:	9a03      	ldr	r2, [sp, #12]
 800e598:	230c      	movs	r3, #12
 800e59a:	6013      	str	r3, [r2, #0]
 800e59c:	f04f 33ff 	mov.w	r3, #4294967295
 800e5a0:	930e      	str	r3, [sp, #56]	; 0x38
 800e5a2:	980e      	ldr	r0, [sp, #56]	; 0x38
 800e5a4:	b053      	add	sp, #332	; 0x14c
 800e5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5aa:	2340      	movs	r3, #64	; 0x40
 800e5ac:	f8c8 3014 	str.w	r3, [r8, #20]
 800e5b0:	ed9f 7bc9 	vldr	d7, [pc, #804]	; 800e8d8 <_svfprintf_r+0x380>
 800e5b4:	2300      	movs	r3, #0
 800e5b6:	e9cd 3327 	strd	r3, r3, [sp, #156]	; 0x9c
 800e5ba:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800e5be:	e9cd 3317 	strd	r3, r3, [sp, #92]	; 0x5c
 800e5c2:	ac29      	add	r4, sp, #164	; 0xa4
 800e5c4:	9426      	str	r4, [sp, #152]	; 0x98
 800e5c6:	9304      	str	r3, [sp, #16]
 800e5c8:	9309      	str	r3, [sp, #36]	; 0x24
 800e5ca:	9312      	str	r3, [sp, #72]	; 0x48
 800e5cc:	9319      	str	r3, [sp, #100]	; 0x64
 800e5ce:	930e      	str	r3, [sp, #56]	; 0x38
 800e5d0:	465d      	mov	r5, fp
 800e5d2:	462b      	mov	r3, r5
 800e5d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e5d8:	b112      	cbz	r2, 800e5e0 <_svfprintf_r+0x88>
 800e5da:	2a25      	cmp	r2, #37	; 0x25
 800e5dc:	f040 80e4 	bne.w	800e7a8 <_svfprintf_r+0x250>
 800e5e0:	ebb5 070b 	subs.w	r7, r5, fp
 800e5e4:	d00e      	beq.n	800e604 <_svfprintf_r+0xac>
 800e5e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800e5e8:	443b      	add	r3, r7
 800e5ea:	9328      	str	r3, [sp, #160]	; 0xa0
 800e5ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800e5ee:	3301      	adds	r3, #1
 800e5f0:	2b07      	cmp	r3, #7
 800e5f2:	e9c4 b700 	strd	fp, r7, [r4]
 800e5f6:	9327      	str	r3, [sp, #156]	; 0x9c
 800e5f8:	f300 80d8 	bgt.w	800e7ac <_svfprintf_r+0x254>
 800e5fc:	3408      	adds	r4, #8
 800e5fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e600:	443b      	add	r3, r7
 800e602:	930e      	str	r3, [sp, #56]	; 0x38
 800e604:	782b      	ldrb	r3, [r5, #0]
 800e606:	2b00      	cmp	r3, #0
 800e608:	f001 81b4 	beq.w	800f974 <_svfprintf_r+0x141c>
 800e60c:	1c6b      	adds	r3, r5, #1
 800e60e:	930c      	str	r3, [sp, #48]	; 0x30
 800e610:	2300      	movs	r3, #0
 800e612:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e616:	f04f 35ff 	mov.w	r5, #4294967295
 800e61a:	930f      	str	r3, [sp, #60]	; 0x3c
 800e61c:	469a      	mov	sl, r3
 800e61e:	270a      	movs	r7, #10
 800e620:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e622:	781b      	ldrb	r3, [r3, #0]
 800e624:	9306      	str	r3, [sp, #24]
 800e626:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e628:	3301      	adds	r3, #1
 800e62a:	930c      	str	r3, [sp, #48]	; 0x30
 800e62c:	9b06      	ldr	r3, [sp, #24]
 800e62e:	3b20      	subs	r3, #32
 800e630:	2b5a      	cmp	r3, #90	; 0x5a
 800e632:	f200 8624 	bhi.w	800f27e <_svfprintf_r+0xd26>
 800e636:	a201      	add	r2, pc, #4	; (adr r2, 800e63c <_svfprintf_r+0xe4>)
 800e638:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e63c:	0800e83f 	.word	0x0800e83f
 800e640:	0800f27f 	.word	0x0800f27f
 800e644:	0800f27f 	.word	0x0800f27f
 800e648:	0800e851 	.word	0x0800e851
 800e64c:	0800f27f 	.word	0x0800f27f
 800e650:	0800f27f 	.word	0x0800f27f
 800e654:	0800f27f 	.word	0x0800f27f
 800e658:	0800e805 	.word	0x0800e805
 800e65c:	0800f27f 	.word	0x0800f27f
 800e660:	0800f27f 	.word	0x0800f27f
 800e664:	0800e857 	.word	0x0800e857
 800e668:	0800e86f 	.word	0x0800e86f
 800e66c:	0800f27f 	.word	0x0800f27f
 800e670:	0800e869 	.word	0x0800e869
 800e674:	0800e873 	.word	0x0800e873
 800e678:	0800f27f 	.word	0x0800f27f
 800e67c:	0800e8a7 	.word	0x0800e8a7
 800e680:	0800e8ad 	.word	0x0800e8ad
 800e684:	0800e8ad 	.word	0x0800e8ad
 800e688:	0800e8ad 	.word	0x0800e8ad
 800e68c:	0800e8ad 	.word	0x0800e8ad
 800e690:	0800e8ad 	.word	0x0800e8ad
 800e694:	0800e8ad 	.word	0x0800e8ad
 800e698:	0800e8ad 	.word	0x0800e8ad
 800e69c:	0800e8ad 	.word	0x0800e8ad
 800e6a0:	0800e8ad 	.word	0x0800e8ad
 800e6a4:	0800f27f 	.word	0x0800f27f
 800e6a8:	0800f27f 	.word	0x0800f27f
 800e6ac:	0800f27f 	.word	0x0800f27f
 800e6b0:	0800f27f 	.word	0x0800f27f
 800e6b4:	0800f27f 	.word	0x0800f27f
 800e6b8:	0800f27f 	.word	0x0800f27f
 800e6bc:	0800f27f 	.word	0x0800f27f
 800e6c0:	0800e9af 	.word	0x0800e9af
 800e6c4:	0800f27f 	.word	0x0800f27f
 800e6c8:	0800e919 	.word	0x0800e919
 800e6cc:	0800e93b 	.word	0x0800e93b
 800e6d0:	0800e9af 	.word	0x0800e9af
 800e6d4:	0800e9af 	.word	0x0800e9af
 800e6d8:	0800e9af 	.word	0x0800e9af
 800e6dc:	0800f27f 	.word	0x0800f27f
 800e6e0:	0800f27f 	.word	0x0800f27f
 800e6e4:	0800f27f 	.word	0x0800f27f
 800e6e8:	0800f27f 	.word	0x0800f27f
 800e6ec:	0800e8cd 	.word	0x0800e8cd
 800e6f0:	0800f27f 	.word	0x0800f27f
 800e6f4:	0800f27f 	.word	0x0800f27f
 800e6f8:	0800ee81 	.word	0x0800ee81
 800e6fc:	0800f27f 	.word	0x0800f27f
 800e700:	0800f27f 	.word	0x0800f27f
 800e704:	0800f27f 	.word	0x0800f27f
 800e708:	0800ef0d 	.word	0x0800ef0d
 800e70c:	0800f27f 	.word	0x0800f27f
 800e710:	0800f0ef 	.word	0x0800f0ef
 800e714:	0800f27f 	.word	0x0800f27f
 800e718:	0800f27f 	.word	0x0800f27f
 800e71c:	0800e7c5 	.word	0x0800e7c5
 800e720:	0800f27f 	.word	0x0800f27f
 800e724:	0800f27f 	.word	0x0800f27f
 800e728:	0800f27f 	.word	0x0800f27f
 800e72c:	0800f27f 	.word	0x0800f27f
 800e730:	0800f27f 	.word	0x0800f27f
 800e734:	0800f27f 	.word	0x0800f27f
 800e738:	0800f27f 	.word	0x0800f27f
 800e73c:	0800f27f 	.word	0x0800f27f
 800e740:	0800e9af 	.word	0x0800e9af
 800e744:	0800f27f 	.word	0x0800f27f
 800e748:	0800e919 	.word	0x0800e919
 800e74c:	0800e93f 	.word	0x0800e93f
 800e750:	0800e9af 	.word	0x0800e9af
 800e754:	0800e9af 	.word	0x0800e9af
 800e758:	0800e9af 	.word	0x0800e9af
 800e75c:	0800e8e5 	.word	0x0800e8e5
 800e760:	0800e93f 	.word	0x0800e93f
 800e764:	0800e90d 	.word	0x0800e90d
 800e768:	0800f27f 	.word	0x0800f27f
 800e76c:	0800e8ff 	.word	0x0800e8ff
 800e770:	0800f27f 	.word	0x0800f27f
 800e774:	0800ee3b 	.word	0x0800ee3b
 800e778:	0800ee85 	.word	0x0800ee85
 800e77c:	0800eeed 	.word	0x0800eeed
 800e780:	0800e90d 	.word	0x0800e90d
 800e784:	0800f27f 	.word	0x0800f27f
 800e788:	0800ef0d 	.word	0x0800ef0d
 800e78c:	0800e621 	.word	0x0800e621
 800e790:	0800f0f3 	.word	0x0800f0f3
 800e794:	0800f27f 	.word	0x0800f27f
 800e798:	0800f27f 	.word	0x0800f27f
 800e79c:	0800f131 	.word	0x0800f131
 800e7a0:	0800f27f 	.word	0x0800f27f
 800e7a4:	0800e621 	.word	0x0800e621
 800e7a8:	461d      	mov	r5, r3
 800e7aa:	e712      	b.n	800e5d2 <_svfprintf_r+0x7a>
 800e7ac:	aa26      	add	r2, sp, #152	; 0x98
 800e7ae:	4641      	mov	r1, r8
 800e7b0:	9803      	ldr	r0, [sp, #12]
 800e7b2:	f002 fe11 	bl	80113d8 <__ssprint_r>
 800e7b6:	2800      	cmp	r0, #0
 800e7b8:	f040 8166 	bne.w	800ea88 <_svfprintf_r+0x530>
 800e7bc:	ac29      	add	r4, sp, #164	; 0xa4
 800e7be:	e71e      	b.n	800e5fe <_svfprintf_r+0xa6>
 800e7c0:	461e      	mov	r6, r3
 800e7c2:	e72d      	b.n	800e620 <_svfprintf_r+0xc8>
 800e7c4:	4b46      	ldr	r3, [pc, #280]	; (800e8e0 <_svfprintf_r+0x388>)
 800e7c6:	9318      	str	r3, [sp, #96]	; 0x60
 800e7c8:	f01a 0f20 	tst.w	sl, #32
 800e7cc:	f000 84b3 	beq.w	800f136 <_svfprintf_r+0xbde>
 800e7d0:	3607      	adds	r6, #7
 800e7d2:	f026 0607 	bic.w	r6, r6, #7
 800e7d6:	f106 0308 	add.w	r3, r6, #8
 800e7da:	e9d6 6700 	ldrd	r6, r7, [r6]
 800e7de:	9308      	str	r3, [sp, #32]
 800e7e0:	f01a 0f01 	tst.w	sl, #1
 800e7e4:	d00a      	beq.n	800e7fc <_svfprintf_r+0x2a4>
 800e7e6:	ea56 0307 	orrs.w	r3, r6, r7
 800e7ea:	d007      	beq.n	800e7fc <_svfprintf_r+0x2a4>
 800e7ec:	2330      	movs	r3, #48	; 0x30
 800e7ee:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800e7f2:	9b06      	ldr	r3, [sp, #24]
 800e7f4:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 800e7f8:	f04a 0a02 	orr.w	sl, sl, #2
 800e7fc:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800e800:	2302      	movs	r3, #2
 800e802:	e34d      	b.n	800eea0 <_svfprintf_r+0x948>
 800e804:	9803      	ldr	r0, [sp, #12]
 800e806:	f002 fa2f 	bl	8010c68 <_localeconv_r>
 800e80a:	6843      	ldr	r3, [r0, #4]
 800e80c:	9319      	str	r3, [sp, #100]	; 0x64
 800e80e:	4618      	mov	r0, r3
 800e810:	f7f8 fac8 	bl	8006da4 <strlen>
 800e814:	9012      	str	r0, [sp, #72]	; 0x48
 800e816:	9803      	ldr	r0, [sp, #12]
 800e818:	f002 fa26 	bl	8010c68 <_localeconv_r>
 800e81c:	6883      	ldr	r3, [r0, #8]
 800e81e:	9309      	str	r3, [sp, #36]	; 0x24
 800e820:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e822:	2b00      	cmp	r3, #0
 800e824:	f43f aefc 	beq.w	800e620 <_svfprintf_r+0xc8>
 800e828:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e82a:	2b00      	cmp	r3, #0
 800e82c:	f43f aef8 	beq.w	800e620 <_svfprintf_r+0xc8>
 800e830:	781b      	ldrb	r3, [r3, #0]
 800e832:	2b00      	cmp	r3, #0
 800e834:	f43f aef4 	beq.w	800e620 <_svfprintf_r+0xc8>
 800e838:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 800e83c:	e6f0      	b.n	800e620 <_svfprintf_r+0xc8>
 800e83e:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800e842:	2b00      	cmp	r3, #0
 800e844:	f47f aeec 	bne.w	800e620 <_svfprintf_r+0xc8>
 800e848:	2320      	movs	r3, #32
 800e84a:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e84e:	e6e7      	b.n	800e620 <_svfprintf_r+0xc8>
 800e850:	f04a 0a01 	orr.w	sl, sl, #1
 800e854:	e6e4      	b.n	800e620 <_svfprintf_r+0xc8>
 800e856:	6832      	ldr	r2, [r6, #0]
 800e858:	920f      	str	r2, [sp, #60]	; 0x3c
 800e85a:	2a00      	cmp	r2, #0
 800e85c:	f106 0304 	add.w	r3, r6, #4
 800e860:	daae      	bge.n	800e7c0 <_svfprintf_r+0x268>
 800e862:	4252      	negs	r2, r2
 800e864:	920f      	str	r2, [sp, #60]	; 0x3c
 800e866:	461e      	mov	r6, r3
 800e868:	f04a 0a04 	orr.w	sl, sl, #4
 800e86c:	e6d8      	b.n	800e620 <_svfprintf_r+0xc8>
 800e86e:	232b      	movs	r3, #43	; 0x2b
 800e870:	e7eb      	b.n	800e84a <_svfprintf_r+0x2f2>
 800e872:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800e874:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e876:	7812      	ldrb	r2, [r2, #0]
 800e878:	9206      	str	r2, [sp, #24]
 800e87a:	2a2a      	cmp	r2, #42	; 0x2a
 800e87c:	f103 0301 	add.w	r3, r3, #1
 800e880:	d10f      	bne.n	800e8a2 <_svfprintf_r+0x34a>
 800e882:	6835      	ldr	r5, [r6, #0]
 800e884:	930c      	str	r3, [sp, #48]	; 0x30
 800e886:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
 800e88a:	3604      	adds	r6, #4
 800e88c:	e6c8      	b.n	800e620 <_svfprintf_r+0xc8>
 800e88e:	fb07 2505 	mla	r5, r7, r5, r2
 800e892:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e896:	9206      	str	r2, [sp, #24]
 800e898:	9a06      	ldr	r2, [sp, #24]
 800e89a:	3a30      	subs	r2, #48	; 0x30
 800e89c:	2a09      	cmp	r2, #9
 800e89e:	d9f6      	bls.n	800e88e <_svfprintf_r+0x336>
 800e8a0:	e6c3      	b.n	800e62a <_svfprintf_r+0xd2>
 800e8a2:	2500      	movs	r5, #0
 800e8a4:	e7f8      	b.n	800e898 <_svfprintf_r+0x340>
 800e8a6:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 800e8aa:	e6b9      	b.n	800e620 <_svfprintf_r+0xc8>
 800e8ac:	2200      	movs	r2, #0
 800e8ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e8b0:	920f      	str	r2, [sp, #60]	; 0x3c
 800e8b2:	9a06      	ldr	r2, [sp, #24]
 800e8b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e8b6:	3a30      	subs	r2, #48	; 0x30
 800e8b8:	fb07 2201 	mla	r2, r7, r1, r2
 800e8bc:	920f      	str	r2, [sp, #60]	; 0x3c
 800e8be:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e8c2:	9206      	str	r2, [sp, #24]
 800e8c4:	3a30      	subs	r2, #48	; 0x30
 800e8c6:	2a09      	cmp	r2, #9
 800e8c8:	d9f3      	bls.n	800e8b2 <_svfprintf_r+0x35a>
 800e8ca:	e6ae      	b.n	800e62a <_svfprintf_r+0xd2>
 800e8cc:	f04a 0a08 	orr.w	sl, sl, #8
 800e8d0:	e6a6      	b.n	800e620 <_svfprintf_r+0xc8>
 800e8d2:	bf00      	nop
 800e8d4:	f3af 8000 	nop.w
	...
 800e8e0:	0801f5cf 	.word	0x0801f5cf
 800e8e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e8e6:	781b      	ldrb	r3, [r3, #0]
 800e8e8:	2b68      	cmp	r3, #104	; 0x68
 800e8ea:	bf01      	itttt	eq
 800e8ec:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
 800e8ee:	3301      	addeq	r3, #1
 800e8f0:	930c      	streq	r3, [sp, #48]	; 0x30
 800e8f2:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 800e8f6:	bf18      	it	ne
 800e8f8:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 800e8fc:	e690      	b.n	800e620 <_svfprintf_r+0xc8>
 800e8fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e900:	781b      	ldrb	r3, [r3, #0]
 800e902:	2b6c      	cmp	r3, #108	; 0x6c
 800e904:	d105      	bne.n	800e912 <_svfprintf_r+0x3ba>
 800e906:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e908:	3301      	adds	r3, #1
 800e90a:	930c      	str	r3, [sp, #48]	; 0x30
 800e90c:	f04a 0a20 	orr.w	sl, sl, #32
 800e910:	e686      	b.n	800e620 <_svfprintf_r+0xc8>
 800e912:	f04a 0a10 	orr.w	sl, sl, #16
 800e916:	e683      	b.n	800e620 <_svfprintf_r+0xc8>
 800e918:	1d33      	adds	r3, r6, #4
 800e91a:	9308      	str	r3, [sp, #32]
 800e91c:	2000      	movs	r0, #0
 800e91e:	6833      	ldr	r3, [r6, #0]
 800e920:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 800e924:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 800e928:	4681      	mov	r9, r0
 800e92a:	2501      	movs	r5, #1
 800e92c:	9010      	str	r0, [sp, #64]	; 0x40
 800e92e:	4607      	mov	r7, r0
 800e930:	9007      	str	r0, [sp, #28]
 800e932:	4606      	mov	r6, r0
 800e934:	f10d 0be4 	add.w	fp, sp, #228	; 0xe4
 800e938:	e301      	b.n	800ef3e <_svfprintf_r+0x9e6>
 800e93a:	f04a 0a10 	orr.w	sl, sl, #16
 800e93e:	f01a 0f20 	tst.w	sl, #32
 800e942:	d021      	beq.n	800e988 <_svfprintf_r+0x430>
 800e944:	3607      	adds	r6, #7
 800e946:	f026 0607 	bic.w	r6, r6, #7
 800e94a:	f106 0308 	add.w	r3, r6, #8
 800e94e:	e9d6 6700 	ldrd	r6, r7, [r6]
 800e952:	9308      	str	r3, [sp, #32]
 800e954:	2e00      	cmp	r6, #0
 800e956:	f177 0300 	sbcs.w	r3, r7, #0
 800e95a:	da06      	bge.n	800e96a <_svfprintf_r+0x412>
 800e95c:	4276      	negs	r6, r6
 800e95e:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800e962:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 800e966:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e96a:	1c6b      	adds	r3, r5, #1
 800e96c:	f040 83f6 	bne.w	800f15c <_svfprintf_r+0xc04>
 800e970:	2f00      	cmp	r7, #0
 800e972:	bf08      	it	eq
 800e974:	2e0a      	cmpeq	r6, #10
 800e976:	f080 8427 	bcs.w	800f1c8 <_svfprintf_r+0xc70>
 800e97a:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800e97e:	3630      	adds	r6, #48	; 0x30
 800e980:	f80b 6d01 	strb.w	r6, [fp, #-1]!
 800e984:	f000 bc0d 	b.w	800f1a2 <_svfprintf_r+0xc4a>
 800e988:	1d33      	adds	r3, r6, #4
 800e98a:	f01a 0f10 	tst.w	sl, #16
 800e98e:	9308      	str	r3, [sp, #32]
 800e990:	d002      	beq.n	800e998 <_svfprintf_r+0x440>
 800e992:	6836      	ldr	r6, [r6, #0]
 800e994:	17f7      	asrs	r7, r6, #31
 800e996:	e7dd      	b.n	800e954 <_svfprintf_r+0x3fc>
 800e998:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800e99c:	6836      	ldr	r6, [r6, #0]
 800e99e:	d001      	beq.n	800e9a4 <_svfprintf_r+0x44c>
 800e9a0:	b236      	sxth	r6, r6
 800e9a2:	e7f7      	b.n	800e994 <_svfprintf_r+0x43c>
 800e9a4:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800e9a8:	bf18      	it	ne
 800e9aa:	b276      	sxtbne	r6, r6
 800e9ac:	e7f2      	b.n	800e994 <_svfprintf_r+0x43c>
 800e9ae:	3607      	adds	r6, #7
 800e9b0:	f026 0607 	bic.w	r6, r6, #7
 800e9b4:	ed96 7b00 	vldr	d7, [r6]
 800e9b8:	f106 0308 	add.w	r3, r6, #8
 800e9bc:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800e9c0:	9308      	str	r3, [sp, #32]
 800e9c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e9c4:	931a      	str	r3, [sp, #104]	; 0x68
 800e9c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e9c8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800e9cc:	931b      	str	r3, [sp, #108]	; 0x6c
 800e9ce:	f04f 32ff 	mov.w	r2, #4294967295
 800e9d2:	4bb2      	ldr	r3, [pc, #712]	; (800ec9c <_svfprintf_r+0x744>)
 800e9d4:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 800e9d8:	f7f8 fe42 	bl	8007660 <__aeabi_dcmpun>
 800e9dc:	bb00      	cbnz	r0, 800ea20 <_svfprintf_r+0x4c8>
 800e9de:	f04f 32ff 	mov.w	r2, #4294967295
 800e9e2:	4bae      	ldr	r3, [pc, #696]	; (800ec9c <_svfprintf_r+0x744>)
 800e9e4:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 800e9e8:	f7f8 fe1c 	bl	8007624 <__aeabi_dcmple>
 800e9ec:	b9c0      	cbnz	r0, 800ea20 <_svfprintf_r+0x4c8>
 800e9ee:	2200      	movs	r2, #0
 800e9f0:	2300      	movs	r3, #0
 800e9f2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800e9f6:	f7f8 fe0b 	bl	8007610 <__aeabi_dcmplt>
 800e9fa:	b110      	cbz	r0, 800ea02 <_svfprintf_r+0x4aa>
 800e9fc:	232d      	movs	r3, #45	; 0x2d
 800e9fe:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800ea02:	4aa7      	ldr	r2, [pc, #668]	; (800eca0 <_svfprintf_r+0x748>)
 800ea04:	4ba7      	ldr	r3, [pc, #668]	; (800eca4 <_svfprintf_r+0x74c>)
 800ea06:	9906      	ldr	r1, [sp, #24]
 800ea08:	f02a 0a80 	bic.w	sl, sl, #128	; 0x80
 800ea0c:	2947      	cmp	r1, #71	; 0x47
 800ea0e:	bfcc      	ite	gt
 800ea10:	4693      	movgt	fp, r2
 800ea12:	469b      	movle	fp, r3
 800ea14:	f04f 0900 	mov.w	r9, #0
 800ea18:	2503      	movs	r5, #3
 800ea1a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800ea1e:	e3c6      	b.n	800f1ae <_svfprintf_r+0xc56>
 800ea20:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ea24:	4610      	mov	r0, r2
 800ea26:	4619      	mov	r1, r3
 800ea28:	f7f8 fe1a 	bl	8007660 <__aeabi_dcmpun>
 800ea2c:	4681      	mov	r9, r0
 800ea2e:	b140      	cbz	r0, 800ea42 <_svfprintf_r+0x4ea>
 800ea30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ea32:	4a9d      	ldr	r2, [pc, #628]	; (800eca8 <_svfprintf_r+0x750>)
 800ea34:	2b00      	cmp	r3, #0
 800ea36:	bfbc      	itt	lt
 800ea38:	232d      	movlt	r3, #45	; 0x2d
 800ea3a:	f88d 307b 	strblt.w	r3, [sp, #123]	; 0x7b
 800ea3e:	4b9b      	ldr	r3, [pc, #620]	; (800ecac <_svfprintf_r+0x754>)
 800ea40:	e7e1      	b.n	800ea06 <_svfprintf_r+0x4ae>
 800ea42:	9b06      	ldr	r3, [sp, #24]
 800ea44:	f023 0320 	bic.w	r3, r3, #32
 800ea48:	2b41      	cmp	r3, #65	; 0x41
 800ea4a:	9307      	str	r3, [sp, #28]
 800ea4c:	d125      	bne.n	800ea9a <_svfprintf_r+0x542>
 800ea4e:	2330      	movs	r3, #48	; 0x30
 800ea50:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800ea54:	9b06      	ldr	r3, [sp, #24]
 800ea56:	2b61      	cmp	r3, #97	; 0x61
 800ea58:	bf14      	ite	ne
 800ea5a:	2358      	movne	r3, #88	; 0x58
 800ea5c:	2378      	moveq	r3, #120	; 0x78
 800ea5e:	2d63      	cmp	r5, #99	; 0x63
 800ea60:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 800ea64:	f04a 0a02 	orr.w	sl, sl, #2
 800ea68:	f340 8108 	ble.w	800ec7c <_svfprintf_r+0x724>
 800ea6c:	1c69      	adds	r1, r5, #1
 800ea6e:	9803      	ldr	r0, [sp, #12]
 800ea70:	f7ff f838 	bl	800dae4 <_malloc_r>
 800ea74:	4683      	mov	fp, r0
 800ea76:	2800      	cmp	r0, #0
 800ea78:	f040 8103 	bne.w	800ec82 <_svfprintf_r+0x72a>
 800ea7c:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800ea80:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ea84:	f8a8 300c 	strh.w	r3, [r8, #12]
 800ea88:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800ea8c:	f013 0f40 	tst.w	r3, #64	; 0x40
 800ea90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ea92:	bf18      	it	ne
 800ea94:	f04f 33ff 	movne.w	r3, #4294967295
 800ea98:	e582      	b.n	800e5a0 <_svfprintf_r+0x48>
 800ea9a:	1c69      	adds	r1, r5, #1
 800ea9c:	f000 80f3 	beq.w	800ec86 <_svfprintf_r+0x72e>
 800eaa0:	9b07      	ldr	r3, [sp, #28]
 800eaa2:	2b47      	cmp	r3, #71	; 0x47
 800eaa4:	d102      	bne.n	800eaac <_svfprintf_r+0x554>
 800eaa6:	2d00      	cmp	r5, #0
 800eaa8:	f000 80ef 	beq.w	800ec8a <_svfprintf_r+0x732>
 800eaac:	f44a 7380 	orr.w	r3, sl, #256	; 0x100
 800eab0:	9310      	str	r3, [sp, #64]	; 0x40
 800eab2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eab4:	2b00      	cmp	r3, #0
 800eab6:	f280 80eb 	bge.w	800ec90 <_svfprintf_r+0x738>
 800eaba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eabc:	9314      	str	r3, [sp, #80]	; 0x50
 800eabe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eac0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800eac4:	9315      	str	r3, [sp, #84]	; 0x54
 800eac6:	232d      	movs	r3, #45	; 0x2d
 800eac8:	9313      	str	r3, [sp, #76]	; 0x4c
 800eaca:	9b07      	ldr	r3, [sp, #28]
 800eacc:	2b41      	cmp	r3, #65	; 0x41
 800eace:	f040 8105 	bne.w	800ecdc <_svfprintf_r+0x784>
 800ead2:	a820      	add	r0, sp, #128	; 0x80
 800ead4:	ed9d 0b14 	vldr	d0, [sp, #80]	; 0x50
 800ead8:	f002 fbf0 	bl	80112bc <frexp>
 800eadc:	2200      	movs	r2, #0
 800eade:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800eae2:	ec51 0b10 	vmov	r0, r1, d0
 800eae6:	f7f8 fb21 	bl	800712c <__aeabi_dmul>
 800eaea:	2200      	movs	r2, #0
 800eaec:	2300      	movs	r3, #0
 800eaee:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800eaf2:	f7f8 fd83 	bl	80075fc <__aeabi_dcmpeq>
 800eaf6:	b108      	cbz	r0, 800eafc <_svfprintf_r+0x5a4>
 800eaf8:	2301      	movs	r3, #1
 800eafa:	9320      	str	r3, [sp, #128]	; 0x80
 800eafc:	4f6c      	ldr	r7, [pc, #432]	; (800ecb0 <_svfprintf_r+0x758>)
 800eafe:	4b6d      	ldr	r3, [pc, #436]	; (800ecb4 <_svfprintf_r+0x75c>)
 800eb00:	9a06      	ldr	r2, [sp, #24]
 800eb02:	2a61      	cmp	r2, #97	; 0x61
 800eb04:	bf08      	it	eq
 800eb06:	461f      	moveq	r7, r3
 800eb08:	9711      	str	r7, [sp, #68]	; 0x44
 800eb0a:	465e      	mov	r6, fp
 800eb0c:	1e6f      	subs	r7, r5, #1
 800eb0e:	2200      	movs	r2, #0
 800eb10:	4b69      	ldr	r3, [pc, #420]	; (800ecb8 <_svfprintf_r+0x760>)
 800eb12:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800eb16:	f7f8 fb09 	bl	800712c <__aeabi_dmul>
 800eb1a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800eb1e:	f7f8 fdb5 	bl	800768c <__aeabi_d2iz>
 800eb22:	901c      	str	r0, [sp, #112]	; 0x70
 800eb24:	f7f8 fa98 	bl	8007058 <__aeabi_i2d>
 800eb28:	4602      	mov	r2, r0
 800eb2a:	460b      	mov	r3, r1
 800eb2c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800eb30:	f7f8 f944 	bl	8006dbc <__aeabi_dsub>
 800eb34:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800eb36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800eb38:	971d      	str	r7, [sp, #116]	; 0x74
 800eb3a:	5c9b      	ldrb	r3, [r3, r2]
 800eb3c:	f806 3b01 	strb.w	r3, [r6], #1
 800eb40:	1c7a      	adds	r2, r7, #1
 800eb42:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800eb46:	d006      	beq.n	800eb56 <_svfprintf_r+0x5fe>
 800eb48:	2200      	movs	r2, #0
 800eb4a:	2300      	movs	r3, #0
 800eb4c:	3f01      	subs	r7, #1
 800eb4e:	f7f8 fd55 	bl	80075fc <__aeabi_dcmpeq>
 800eb52:	2800      	cmp	r0, #0
 800eb54:	d0db      	beq.n	800eb0e <_svfprintf_r+0x5b6>
 800eb56:	2200      	movs	r2, #0
 800eb58:	4b58      	ldr	r3, [pc, #352]	; (800ecbc <_svfprintf_r+0x764>)
 800eb5a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800eb5e:	f7f8 fd75 	bl	800764c <__aeabi_dcmpgt>
 800eb62:	b960      	cbnz	r0, 800eb7e <_svfprintf_r+0x626>
 800eb64:	2200      	movs	r2, #0
 800eb66:	4b55      	ldr	r3, [pc, #340]	; (800ecbc <_svfprintf_r+0x764>)
 800eb68:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800eb6c:	f7f8 fd46 	bl	80075fc <__aeabi_dcmpeq>
 800eb70:	2800      	cmp	r0, #0
 800eb72:	f000 80ae 	beq.w	800ecd2 <_svfprintf_r+0x77a>
 800eb76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800eb78:	07db      	lsls	r3, r3, #31
 800eb7a:	f140 80aa 	bpl.w	800ecd2 <_svfprintf_r+0x77a>
 800eb7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800eb80:	9624      	str	r6, [sp, #144]	; 0x90
 800eb82:	7bd9      	ldrb	r1, [r3, #15]
 800eb84:	2030      	movs	r0, #48	; 0x30
 800eb86:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800eb88:	1e53      	subs	r3, r2, #1
 800eb8a:	9324      	str	r3, [sp, #144]	; 0x90
 800eb8c:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 800eb90:	428b      	cmp	r3, r1
 800eb92:	f000 8095 	beq.w	800ecc0 <_svfprintf_r+0x768>
 800eb96:	2b39      	cmp	r3, #57	; 0x39
 800eb98:	bf0b      	itete	eq
 800eb9a:	9b11      	ldreq	r3, [sp, #68]	; 0x44
 800eb9c:	3301      	addne	r3, #1
 800eb9e:	7a9b      	ldrbeq	r3, [r3, #10]
 800eba0:	b2db      	uxtbne	r3, r3
 800eba2:	f802 3c01 	strb.w	r3, [r2, #-1]
 800eba6:	4633      	mov	r3, r6
 800eba8:	eba3 030b 	sub.w	r3, r3, fp
 800ebac:	9304      	str	r3, [sp, #16]
 800ebae:	9b07      	ldr	r3, [sp, #28]
 800ebb0:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800ebb2:	2b47      	cmp	r3, #71	; 0x47
 800ebb4:	f040 80d7 	bne.w	800ed66 <_svfprintf_r+0x80e>
 800ebb8:	1cf7      	adds	r7, r6, #3
 800ebba:	db02      	blt.n	800ebc2 <_svfprintf_r+0x66a>
 800ebbc:	42b5      	cmp	r5, r6
 800ebbe:	f280 80fd 	bge.w	800edbc <_svfprintf_r+0x864>
 800ebc2:	9b06      	ldr	r3, [sp, #24]
 800ebc4:	3b02      	subs	r3, #2
 800ebc6:	9306      	str	r3, [sp, #24]
 800ebc8:	9906      	ldr	r1, [sp, #24]
 800ebca:	f89d 2018 	ldrb.w	r2, [sp, #24]
 800ebce:	f021 0120 	bic.w	r1, r1, #32
 800ebd2:	2941      	cmp	r1, #65	; 0x41
 800ebd4:	bf08      	it	eq
 800ebd6:	320f      	addeq	r2, #15
 800ebd8:	f106 33ff 	add.w	r3, r6, #4294967295
 800ebdc:	bf06      	itte	eq
 800ebde:	b2d2      	uxtbeq	r2, r2
 800ebe0:	2101      	moveq	r1, #1
 800ebe2:	2100      	movne	r1, #0
 800ebe4:	2b00      	cmp	r3, #0
 800ebe6:	9320      	str	r3, [sp, #128]	; 0x80
 800ebe8:	bfb8      	it	lt
 800ebea:	f1c6 0301 	rsblt	r3, r6, #1
 800ebee:	f88d 2088 	strb.w	r2, [sp, #136]	; 0x88
 800ebf2:	bfb4      	ite	lt
 800ebf4:	222d      	movlt	r2, #45	; 0x2d
 800ebf6:	222b      	movge	r2, #43	; 0x2b
 800ebf8:	2b09      	cmp	r3, #9
 800ebfa:	f88d 2089 	strb.w	r2, [sp, #137]	; 0x89
 800ebfe:	f340 80c9 	ble.w	800ed94 <_svfprintf_r+0x83c>
 800ec02:	f10d 0297 	add.w	r2, sp, #151	; 0x97
 800ec06:	250a      	movs	r5, #10
 800ec08:	fb93 f0f5 	sdiv	r0, r3, r5
 800ec0c:	fb05 3310 	mls	r3, r5, r0, r3
 800ec10:	3330      	adds	r3, #48	; 0x30
 800ec12:	2809      	cmp	r0, #9
 800ec14:	f802 3c01 	strb.w	r3, [r2, #-1]
 800ec18:	f102 31ff 	add.w	r1, r2, #4294967295
 800ec1c:	4603      	mov	r3, r0
 800ec1e:	f300 80b2 	bgt.w	800ed86 <_svfprintf_r+0x82e>
 800ec22:	3330      	adds	r3, #48	; 0x30
 800ec24:	f801 3c01 	strb.w	r3, [r1, #-1]
 800ec28:	3a02      	subs	r2, #2
 800ec2a:	f10d 038a 	add.w	r3, sp, #138	; 0x8a
 800ec2e:	f10d 0097 	add.w	r0, sp, #151	; 0x97
 800ec32:	4282      	cmp	r2, r0
 800ec34:	4619      	mov	r1, r3
 800ec36:	f0c0 80a8 	bcc.w	800ed8a <_svfprintf_r+0x832>
 800ec3a:	9a04      	ldr	r2, [sp, #16]
 800ec3c:	ab22      	add	r3, sp, #136	; 0x88
 800ec3e:	1acb      	subs	r3, r1, r3
 800ec40:	2a01      	cmp	r2, #1
 800ec42:	9317      	str	r3, [sp, #92]	; 0x5c
 800ec44:	eb03 0502 	add.w	r5, r3, r2
 800ec48:	dc02      	bgt.n	800ec50 <_svfprintf_r+0x6f8>
 800ec4a:	f01a 0f01 	tst.w	sl, #1
 800ec4e:	d001      	beq.n	800ec54 <_svfprintf_r+0x6fc>
 800ec50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ec52:	441d      	add	r5, r3
 800ec54:	f42a 6380 	bic.w	r3, sl, #1024	; 0x400
 800ec58:	2700      	movs	r7, #0
 800ec5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ec5e:	9310      	str	r3, [sp, #64]	; 0x40
 800ec60:	9707      	str	r7, [sp, #28]
 800ec62:	463e      	mov	r6, r7
 800ec64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ec66:	2b00      	cmp	r3, #0
 800ec68:	f000 8315 	beq.w	800f296 <_svfprintf_r+0xd3e>
 800ec6c:	232d      	movs	r3, #45	; 0x2d
 800ec6e:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800ec72:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800ec76:	2300      	movs	r3, #0
 800ec78:	9310      	str	r3, [sp, #64]	; 0x40
 800ec7a:	e160      	b.n	800ef3e <_svfprintf_r+0x9e6>
 800ec7c:	f10d 0be4 	add.w	fp, sp, #228	; 0xe4
 800ec80:	e714      	b.n	800eaac <_svfprintf_r+0x554>
 800ec82:	4681      	mov	r9, r0
 800ec84:	e712      	b.n	800eaac <_svfprintf_r+0x554>
 800ec86:	2506      	movs	r5, #6
 800ec88:	e710      	b.n	800eaac <_svfprintf_r+0x554>
 800ec8a:	46a9      	mov	r9, r5
 800ec8c:	2501      	movs	r5, #1
 800ec8e:	e70d      	b.n	800eaac <_svfprintf_r+0x554>
 800ec90:	ed9d 7b0a 	vldr	d7, [sp, #40]	; 0x28
 800ec94:	2300      	movs	r3, #0
 800ec96:	ed8d 7b14 	vstr	d7, [sp, #80]	; 0x50
 800ec9a:	e715      	b.n	800eac8 <_svfprintf_r+0x570>
 800ec9c:	7fefffff 	.word	0x7fefffff
 800eca0:	0801f5b2 	.word	0x0801f5b2
 800eca4:	0801f5ae 	.word	0x0801f5ae
 800eca8:	0801f5ba 	.word	0x0801f5ba
 800ecac:	0801f5b6 	.word	0x0801f5b6
 800ecb0:	0801f5cf 	.word	0x0801f5cf
 800ecb4:	0801f5be 	.word	0x0801f5be
 800ecb8:	40300000 	.word	0x40300000
 800ecbc:	3fe00000 	.word	0x3fe00000
 800ecc0:	f802 0c01 	strb.w	r0, [r2, #-1]
 800ecc4:	e75f      	b.n	800eb86 <_svfprintf_r+0x62e>
 800ecc6:	f803 1b01 	strb.w	r1, [r3], #1
 800ecca:	1af2      	subs	r2, r6, r3
 800eccc:	2a00      	cmp	r2, #0
 800ecce:	dafa      	bge.n	800ecc6 <_svfprintf_r+0x76e>
 800ecd0:	e76a      	b.n	800eba8 <_svfprintf_r+0x650>
 800ecd2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800ecd4:	4633      	mov	r3, r6
 800ecd6:	2130      	movs	r1, #48	; 0x30
 800ecd8:	4416      	add	r6, r2
 800ecda:	e7f6      	b.n	800ecca <_svfprintf_r+0x772>
 800ecdc:	9b07      	ldr	r3, [sp, #28]
 800ecde:	2b46      	cmp	r3, #70	; 0x46
 800ece0:	d004      	beq.n	800ecec <_svfprintf_r+0x794>
 800ece2:	2b45      	cmp	r3, #69	; 0x45
 800ece4:	d13a      	bne.n	800ed5c <_svfprintf_r+0x804>
 800ece6:	1c6e      	adds	r6, r5, #1
 800ece8:	2102      	movs	r1, #2
 800ecea:	e001      	b.n	800ecf0 <_svfprintf_r+0x798>
 800ecec:	462e      	mov	r6, r5
 800ecee:	2103      	movs	r1, #3
 800ecf0:	ab24      	add	r3, sp, #144	; 0x90
 800ecf2:	9301      	str	r3, [sp, #4]
 800ecf4:	ab21      	add	r3, sp, #132	; 0x84
 800ecf6:	9300      	str	r3, [sp, #0]
 800ecf8:	4632      	mov	r2, r6
 800ecfa:	ab20      	add	r3, sp, #128	; 0x80
 800ecfc:	ed9d 0b14 	vldr	d0, [sp, #80]	; 0x50
 800ed00:	9803      	ldr	r0, [sp, #12]
 800ed02:	f000 ffa5 	bl	800fc50 <_dtoa_r>
 800ed06:	9b07      	ldr	r3, [sp, #28]
 800ed08:	2b47      	cmp	r3, #71	; 0x47
 800ed0a:	4683      	mov	fp, r0
 800ed0c:	d102      	bne.n	800ed14 <_svfprintf_r+0x7bc>
 800ed0e:	f01a 0f01 	tst.w	sl, #1
 800ed12:	d026      	beq.n	800ed62 <_svfprintf_r+0x80a>
 800ed14:	9b07      	ldr	r3, [sp, #28]
 800ed16:	2b46      	cmp	r3, #70	; 0x46
 800ed18:	eb0b 0706 	add.w	r7, fp, r6
 800ed1c:	d10f      	bne.n	800ed3e <_svfprintf_r+0x7e6>
 800ed1e:	f89b 3000 	ldrb.w	r3, [fp]
 800ed22:	2b30      	cmp	r3, #48	; 0x30
 800ed24:	d109      	bne.n	800ed3a <_svfprintf_r+0x7e2>
 800ed26:	2200      	movs	r2, #0
 800ed28:	2300      	movs	r3, #0
 800ed2a:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800ed2e:	f7f8 fc65 	bl	80075fc <__aeabi_dcmpeq>
 800ed32:	b910      	cbnz	r0, 800ed3a <_svfprintf_r+0x7e2>
 800ed34:	f1c6 0601 	rsb	r6, r6, #1
 800ed38:	9620      	str	r6, [sp, #128]	; 0x80
 800ed3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800ed3c:	441f      	add	r7, r3
 800ed3e:	2200      	movs	r2, #0
 800ed40:	2300      	movs	r3, #0
 800ed42:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800ed46:	f7f8 fc59 	bl	80075fc <__aeabi_dcmpeq>
 800ed4a:	b948      	cbnz	r0, 800ed60 <_svfprintf_r+0x808>
 800ed4c:	2230      	movs	r2, #48	; 0x30
 800ed4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ed50:	429f      	cmp	r7, r3
 800ed52:	d906      	bls.n	800ed62 <_svfprintf_r+0x80a>
 800ed54:	1c59      	adds	r1, r3, #1
 800ed56:	9124      	str	r1, [sp, #144]	; 0x90
 800ed58:	701a      	strb	r2, [r3, #0]
 800ed5a:	e7f8      	b.n	800ed4e <_svfprintf_r+0x7f6>
 800ed5c:	462e      	mov	r6, r5
 800ed5e:	e7c3      	b.n	800ece8 <_svfprintf_r+0x790>
 800ed60:	9724      	str	r7, [sp, #144]	; 0x90
 800ed62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ed64:	e720      	b.n	800eba8 <_svfprintf_r+0x650>
 800ed66:	9b07      	ldr	r3, [sp, #28]
 800ed68:	2b46      	cmp	r3, #70	; 0x46
 800ed6a:	f47f af2d 	bne.w	800ebc8 <_svfprintf_r+0x670>
 800ed6e:	2e00      	cmp	r6, #0
 800ed70:	dd1d      	ble.n	800edae <_svfprintf_r+0x856>
 800ed72:	b915      	cbnz	r5, 800ed7a <_svfprintf_r+0x822>
 800ed74:	f01a 0f01 	tst.w	sl, #1
 800ed78:	d034      	beq.n	800ede4 <_svfprintf_r+0x88c>
 800ed7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ed7c:	18f3      	adds	r3, r6, r3
 800ed7e:	441d      	add	r5, r3
 800ed80:	2366      	movs	r3, #102	; 0x66
 800ed82:	9306      	str	r3, [sp, #24]
 800ed84:	e033      	b.n	800edee <_svfprintf_r+0x896>
 800ed86:	460a      	mov	r2, r1
 800ed88:	e73e      	b.n	800ec08 <_svfprintf_r+0x6b0>
 800ed8a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ed8e:	f803 1b01 	strb.w	r1, [r3], #1
 800ed92:	e74e      	b.n	800ec32 <_svfprintf_r+0x6da>
 800ed94:	b941      	cbnz	r1, 800eda8 <_svfprintf_r+0x850>
 800ed96:	2230      	movs	r2, #48	; 0x30
 800ed98:	f88d 208a 	strb.w	r2, [sp, #138]	; 0x8a
 800ed9c:	f10d 028b 	add.w	r2, sp, #139	; 0x8b
 800eda0:	3330      	adds	r3, #48	; 0x30
 800eda2:	1c51      	adds	r1, r2, #1
 800eda4:	7013      	strb	r3, [r2, #0]
 800eda6:	e748      	b.n	800ec3a <_svfprintf_r+0x6e2>
 800eda8:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 800edac:	e7f8      	b.n	800eda0 <_svfprintf_r+0x848>
 800edae:	b915      	cbnz	r5, 800edb6 <_svfprintf_r+0x85e>
 800edb0:	f01a 0f01 	tst.w	sl, #1
 800edb4:	d018      	beq.n	800ede8 <_svfprintf_r+0x890>
 800edb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800edb8:	3301      	adds	r3, #1
 800edba:	e7e0      	b.n	800ed7e <_svfprintf_r+0x826>
 800edbc:	9b04      	ldr	r3, [sp, #16]
 800edbe:	42b3      	cmp	r3, r6
 800edc0:	dc06      	bgt.n	800edd0 <_svfprintf_r+0x878>
 800edc2:	f01a 0f01 	tst.w	sl, #1
 800edc6:	d025      	beq.n	800ee14 <_svfprintf_r+0x8bc>
 800edc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800edca:	18f5      	adds	r5, r6, r3
 800edcc:	2367      	movs	r3, #103	; 0x67
 800edce:	e7d8      	b.n	800ed82 <_svfprintf_r+0x82a>
 800edd0:	9b04      	ldr	r3, [sp, #16]
 800edd2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800edd4:	2e00      	cmp	r6, #0
 800edd6:	eb03 0502 	add.w	r5, r3, r2
 800edda:	dcf7      	bgt.n	800edcc <_svfprintf_r+0x874>
 800eddc:	f1c6 0301 	rsb	r3, r6, #1
 800ede0:	441d      	add	r5, r3
 800ede2:	e7f3      	b.n	800edcc <_svfprintf_r+0x874>
 800ede4:	4635      	mov	r5, r6
 800ede6:	e7cb      	b.n	800ed80 <_svfprintf_r+0x828>
 800ede8:	2366      	movs	r3, #102	; 0x66
 800edea:	9306      	str	r3, [sp, #24]
 800edec:	2501      	movs	r5, #1
 800edee:	f41a 6380 	ands.w	r3, sl, #1024	; 0x400
 800edf2:	9307      	str	r3, [sp, #28]
 800edf4:	d01f      	beq.n	800ee36 <_svfprintf_r+0x8de>
 800edf6:	2700      	movs	r7, #0
 800edf8:	2e00      	cmp	r6, #0
 800edfa:	9707      	str	r7, [sp, #28]
 800edfc:	f77f af32 	ble.w	800ec64 <_svfprintf_r+0x70c>
 800ee00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee02:	781b      	ldrb	r3, [r3, #0]
 800ee04:	2bff      	cmp	r3, #255	; 0xff
 800ee06:	d107      	bne.n	800ee18 <_svfprintf_r+0x8c0>
 800ee08:	9b07      	ldr	r3, [sp, #28]
 800ee0a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ee0c:	443b      	add	r3, r7
 800ee0e:	fb02 5503 	mla	r5, r2, r3, r5
 800ee12:	e727      	b.n	800ec64 <_svfprintf_r+0x70c>
 800ee14:	4635      	mov	r5, r6
 800ee16:	e7d9      	b.n	800edcc <_svfprintf_r+0x874>
 800ee18:	42b3      	cmp	r3, r6
 800ee1a:	daf5      	bge.n	800ee08 <_svfprintf_r+0x8b0>
 800ee1c:	1af6      	subs	r6, r6, r3
 800ee1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee20:	785b      	ldrb	r3, [r3, #1]
 800ee22:	b133      	cbz	r3, 800ee32 <_svfprintf_r+0x8da>
 800ee24:	9b07      	ldr	r3, [sp, #28]
 800ee26:	3301      	adds	r3, #1
 800ee28:	9307      	str	r3, [sp, #28]
 800ee2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee2c:	3301      	adds	r3, #1
 800ee2e:	9309      	str	r3, [sp, #36]	; 0x24
 800ee30:	e7e6      	b.n	800ee00 <_svfprintf_r+0x8a8>
 800ee32:	3701      	adds	r7, #1
 800ee34:	e7e4      	b.n	800ee00 <_svfprintf_r+0x8a8>
 800ee36:	9f07      	ldr	r7, [sp, #28]
 800ee38:	e714      	b.n	800ec64 <_svfprintf_r+0x70c>
 800ee3a:	4632      	mov	r2, r6
 800ee3c:	f01a 0f20 	tst.w	sl, #32
 800ee40:	f852 3b04 	ldr.w	r3, [r2], #4
 800ee44:	9208      	str	r2, [sp, #32]
 800ee46:	d009      	beq.n	800ee5c <_svfprintf_r+0x904>
 800ee48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ee4a:	4610      	mov	r0, r2
 800ee4c:	17d1      	asrs	r1, r2, #31
 800ee4e:	e9c3 0100 	strd	r0, r1, [r3]
 800ee52:	9e08      	ldr	r6, [sp, #32]
 800ee54:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
 800ee58:	f7ff bbba 	b.w	800e5d0 <_svfprintf_r+0x78>
 800ee5c:	f01a 0f10 	tst.w	sl, #16
 800ee60:	d002      	beq.n	800ee68 <_svfprintf_r+0x910>
 800ee62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ee64:	601a      	str	r2, [r3, #0]
 800ee66:	e7f4      	b.n	800ee52 <_svfprintf_r+0x8fa>
 800ee68:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800ee6c:	d002      	beq.n	800ee74 <_svfprintf_r+0x91c>
 800ee6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ee70:	801a      	strh	r2, [r3, #0]
 800ee72:	e7ee      	b.n	800ee52 <_svfprintf_r+0x8fa>
 800ee74:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800ee78:	d0f3      	beq.n	800ee62 <_svfprintf_r+0x90a>
 800ee7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ee7c:	701a      	strb	r2, [r3, #0]
 800ee7e:	e7e8      	b.n	800ee52 <_svfprintf_r+0x8fa>
 800ee80:	f04a 0a10 	orr.w	sl, sl, #16
 800ee84:	f01a 0f20 	tst.w	sl, #32
 800ee88:	d01e      	beq.n	800eec8 <_svfprintf_r+0x970>
 800ee8a:	3607      	adds	r6, #7
 800ee8c:	f026 0607 	bic.w	r6, r6, #7
 800ee90:	f106 0308 	add.w	r3, r6, #8
 800ee94:	e9d6 6700 	ldrd	r6, r7, [r6]
 800ee98:	9308      	str	r3, [sp, #32]
 800ee9a:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800ee9e:	2300      	movs	r3, #0
 800eea0:	2200      	movs	r2, #0
 800eea2:	1c69      	adds	r1, r5, #1
 800eea4:	f88d 207b 	strb.w	r2, [sp, #123]	; 0x7b
 800eea8:	f000 815b 	beq.w	800f162 <_svfprintf_r+0xc0a>
 800eeac:	4652      	mov	r2, sl
 800eeae:	ea56 0107 	orrs.w	r1, r6, r7
 800eeb2:	f02a 0a80 	bic.w	sl, sl, #128	; 0x80
 800eeb6:	f040 8154 	bne.w	800f162 <_svfprintf_r+0xc0a>
 800eeba:	2d00      	cmp	r5, #0
 800eebc:	f000 81d5 	beq.w	800f26a <_svfprintf_r+0xd12>
 800eec0:	2b01      	cmp	r3, #1
 800eec2:	f040 8151 	bne.w	800f168 <_svfprintf_r+0xc10>
 800eec6:	e558      	b.n	800e97a <_svfprintf_r+0x422>
 800eec8:	1d33      	adds	r3, r6, #4
 800eeca:	f01a 0f10 	tst.w	sl, #16
 800eece:	9308      	str	r3, [sp, #32]
 800eed0:	d001      	beq.n	800eed6 <_svfprintf_r+0x97e>
 800eed2:	6836      	ldr	r6, [r6, #0]
 800eed4:	e003      	b.n	800eede <_svfprintf_r+0x986>
 800eed6:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800eeda:	d002      	beq.n	800eee2 <_svfprintf_r+0x98a>
 800eedc:	8836      	ldrh	r6, [r6, #0]
 800eede:	2700      	movs	r7, #0
 800eee0:	e7db      	b.n	800ee9a <_svfprintf_r+0x942>
 800eee2:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800eee6:	d0f4      	beq.n	800eed2 <_svfprintf_r+0x97a>
 800eee8:	7836      	ldrb	r6, [r6, #0]
 800eeea:	e7f8      	b.n	800eede <_svfprintf_r+0x986>
 800eeec:	1d33      	adds	r3, r6, #4
 800eeee:	9308      	str	r3, [sp, #32]
 800eef0:	f647 0330 	movw	r3, #30768	; 0x7830
 800eef4:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 800eef8:	2278      	movs	r2, #120	; 0x78
 800eefa:	4bb0      	ldr	r3, [pc, #704]	; (800f1bc <_svfprintf_r+0xc64>)
 800eefc:	9318      	str	r3, [sp, #96]	; 0x60
 800eefe:	6836      	ldr	r6, [r6, #0]
 800ef00:	9206      	str	r2, [sp, #24]
 800ef02:	2700      	movs	r7, #0
 800ef04:	f04a 0a02 	orr.w	sl, sl, #2
 800ef08:	2302      	movs	r3, #2
 800ef0a:	e7c9      	b.n	800eea0 <_svfprintf_r+0x948>
 800ef0c:	1d33      	adds	r3, r6, #4
 800ef0e:	f8d6 b000 	ldr.w	fp, [r6]
 800ef12:	9308      	str	r3, [sp, #32]
 800ef14:	2600      	movs	r6, #0
 800ef16:	1c68      	adds	r0, r5, #1
 800ef18:	f88d 607b 	strb.w	r6, [sp, #123]	; 0x7b
 800ef1c:	f000 80e1 	beq.w	800f0e2 <_svfprintf_r+0xb8a>
 800ef20:	462a      	mov	r2, r5
 800ef22:	4631      	mov	r1, r6
 800ef24:	4658      	mov	r0, fp
 800ef26:	f7f7 fee3 	bl	8006cf0 <memchr>
 800ef2a:	4681      	mov	r9, r0
 800ef2c:	2800      	cmp	r0, #0
 800ef2e:	f43f ad74 	beq.w	800ea1a <_svfprintf_r+0x4c2>
 800ef32:	eba0 050b 	sub.w	r5, r0, fp
 800ef36:	46b1      	mov	r9, r6
 800ef38:	9610      	str	r6, [sp, #64]	; 0x40
 800ef3a:	4637      	mov	r7, r6
 800ef3c:	9607      	str	r6, [sp, #28]
 800ef3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef40:	42ab      	cmp	r3, r5
 800ef42:	bfb8      	it	lt
 800ef44:	462b      	movlt	r3, r5
 800ef46:	9311      	str	r3, [sp, #68]	; 0x44
 800ef48:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800ef4c:	b113      	cbz	r3, 800ef54 <_svfprintf_r+0x9fc>
 800ef4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ef50:	3301      	adds	r3, #1
 800ef52:	9311      	str	r3, [sp, #68]	; 0x44
 800ef54:	f01a 0302 	ands.w	r3, sl, #2
 800ef58:	931c      	str	r3, [sp, #112]	; 0x70
 800ef5a:	bf1e      	ittt	ne
 800ef5c:	9b11      	ldrne	r3, [sp, #68]	; 0x44
 800ef5e:	3302      	addne	r3, #2
 800ef60:	9311      	strne	r3, [sp, #68]	; 0x44
 800ef62:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 800ef66:	931d      	str	r3, [sp, #116]	; 0x74
 800ef68:	d122      	bne.n	800efb0 <_svfprintf_r+0xa58>
 800ef6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ef6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef6e:	1a9b      	subs	r3, r3, r2
 800ef70:	2b00      	cmp	r3, #0
 800ef72:	9313      	str	r3, [sp, #76]	; 0x4c
 800ef74:	dd1c      	ble.n	800efb0 <_svfprintf_r+0xa58>
 800ef76:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef78:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800ef7c:	2810      	cmp	r0, #16
 800ef7e:	4890      	ldr	r0, [pc, #576]	; (800f1c0 <_svfprintf_r+0xc68>)
 800ef80:	6020      	str	r0, [r4, #0]
 800ef82:	f102 0201 	add.w	r2, r2, #1
 800ef86:	f104 0108 	add.w	r1, r4, #8
 800ef8a:	f300 8188 	bgt.w	800f29e <_svfprintf_r+0xd46>
 800ef8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef90:	6060      	str	r0, [r4, #4]
 800ef92:	4403      	add	r3, r0
 800ef94:	2a07      	cmp	r2, #7
 800ef96:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800ef9a:	f340 8195 	ble.w	800f2c8 <_svfprintf_r+0xd70>
 800ef9e:	aa26      	add	r2, sp, #152	; 0x98
 800efa0:	4641      	mov	r1, r8
 800efa2:	9803      	ldr	r0, [sp, #12]
 800efa4:	f002 fa18 	bl	80113d8 <__ssprint_r>
 800efa8:	2800      	cmp	r0, #0
 800efaa:	f040 84c1 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800efae:	ac29      	add	r4, sp, #164	; 0xa4
 800efb0:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800efb4:	b173      	cbz	r3, 800efd4 <_svfprintf_r+0xa7c>
 800efb6:	f10d 037b 	add.w	r3, sp, #123	; 0x7b
 800efba:	6023      	str	r3, [r4, #0]
 800efbc:	2301      	movs	r3, #1
 800efbe:	6063      	str	r3, [r4, #4]
 800efc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800efc2:	3301      	adds	r3, #1
 800efc4:	9328      	str	r3, [sp, #160]	; 0xa0
 800efc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800efc8:	3301      	adds	r3, #1
 800efca:	2b07      	cmp	r3, #7
 800efcc:	9327      	str	r3, [sp, #156]	; 0x9c
 800efce:	f300 817d 	bgt.w	800f2cc <_svfprintf_r+0xd74>
 800efd2:	3408      	adds	r4, #8
 800efd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800efd6:	b16b      	cbz	r3, 800eff4 <_svfprintf_r+0xa9c>
 800efd8:	ab1f      	add	r3, sp, #124	; 0x7c
 800efda:	6023      	str	r3, [r4, #0]
 800efdc:	2302      	movs	r3, #2
 800efde:	6063      	str	r3, [r4, #4]
 800efe0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800efe2:	3302      	adds	r3, #2
 800efe4:	9328      	str	r3, [sp, #160]	; 0xa0
 800efe6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800efe8:	3301      	adds	r3, #1
 800efea:	2b07      	cmp	r3, #7
 800efec:	9327      	str	r3, [sp, #156]	; 0x9c
 800efee:	f300 8177 	bgt.w	800f2e0 <_svfprintf_r+0xd88>
 800eff2:	3408      	adds	r4, #8
 800eff4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800eff6:	2b80      	cmp	r3, #128	; 0x80
 800eff8:	d122      	bne.n	800f040 <_svfprintf_r+0xae8>
 800effa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800effc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800effe:	1a9b      	subs	r3, r3, r2
 800f000:	2b00      	cmp	r3, #0
 800f002:	9313      	str	r3, [sp, #76]	; 0x4c
 800f004:	dd1c      	ble.n	800f040 <_svfprintf_r+0xae8>
 800f006:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f008:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800f00c:	2810      	cmp	r0, #16
 800f00e:	486d      	ldr	r0, [pc, #436]	; (800f1c4 <_svfprintf_r+0xc6c>)
 800f010:	6020      	str	r0, [r4, #0]
 800f012:	f102 0201 	add.w	r2, r2, #1
 800f016:	f104 0108 	add.w	r1, r4, #8
 800f01a:	f300 816b 	bgt.w	800f2f4 <_svfprintf_r+0xd9c>
 800f01e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f020:	6060      	str	r0, [r4, #4]
 800f022:	4403      	add	r3, r0
 800f024:	2a07      	cmp	r2, #7
 800f026:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f02a:	f340 8178 	ble.w	800f31e <_svfprintf_r+0xdc6>
 800f02e:	aa26      	add	r2, sp, #152	; 0x98
 800f030:	4641      	mov	r1, r8
 800f032:	9803      	ldr	r0, [sp, #12]
 800f034:	f002 f9d0 	bl	80113d8 <__ssprint_r>
 800f038:	2800      	cmp	r0, #0
 800f03a:	f040 8479 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f03e:	ac29      	add	r4, sp, #164	; 0xa4
 800f040:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f042:	1b5b      	subs	r3, r3, r5
 800f044:	2b00      	cmp	r3, #0
 800f046:	9310      	str	r3, [sp, #64]	; 0x40
 800f048:	dd1c      	ble.n	800f084 <_svfprintf_r+0xb2c>
 800f04a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800f04c:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800f050:	2810      	cmp	r0, #16
 800f052:	485c      	ldr	r0, [pc, #368]	; (800f1c4 <_svfprintf_r+0xc6c>)
 800f054:	6020      	str	r0, [r4, #0]
 800f056:	f102 0201 	add.w	r2, r2, #1
 800f05a:	f104 0108 	add.w	r1, r4, #8
 800f05e:	f300 8160 	bgt.w	800f322 <_svfprintf_r+0xdca>
 800f062:	9810      	ldr	r0, [sp, #64]	; 0x40
 800f064:	6060      	str	r0, [r4, #4]
 800f066:	4403      	add	r3, r0
 800f068:	2a07      	cmp	r2, #7
 800f06a:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f06e:	f340 816d 	ble.w	800f34c <_svfprintf_r+0xdf4>
 800f072:	aa26      	add	r2, sp, #152	; 0x98
 800f074:	4641      	mov	r1, r8
 800f076:	9803      	ldr	r0, [sp, #12]
 800f078:	f002 f9ae 	bl	80113d8 <__ssprint_r>
 800f07c:	2800      	cmp	r0, #0
 800f07e:	f040 8457 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f082:	ac29      	add	r4, sp, #164	; 0xa4
 800f084:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f086:	9310      	str	r3, [sp, #64]	; 0x40
 800f088:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800f08c:	f040 8160 	bne.w	800f350 <_svfprintf_r+0xdf8>
 800f090:	e9c4 b500 	strd	fp, r5, [r4]
 800f094:	441d      	add	r5, r3
 800f096:	9528      	str	r5, [sp, #160]	; 0xa0
 800f098:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f09a:	3301      	adds	r3, #1
 800f09c:	2b07      	cmp	r3, #7
 800f09e:	9327      	str	r3, [sp, #156]	; 0x9c
 800f0a0:	f300 819c 	bgt.w	800f3dc <_svfprintf_r+0xe84>
 800f0a4:	3408      	adds	r4, #8
 800f0a6:	f01a 0f04 	tst.w	sl, #4
 800f0aa:	f040 8423 	bne.w	800f8f4 <_svfprintf_r+0x139c>
 800f0ae:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f0b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f0b4:	428a      	cmp	r2, r1
 800f0b6:	bfac      	ite	ge
 800f0b8:	189b      	addge	r3, r3, r2
 800f0ba:	185b      	addlt	r3, r3, r1
 800f0bc:	930e      	str	r3, [sp, #56]	; 0x38
 800f0be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f0c0:	b13b      	cbz	r3, 800f0d2 <_svfprintf_r+0xb7a>
 800f0c2:	aa26      	add	r2, sp, #152	; 0x98
 800f0c4:	4641      	mov	r1, r8
 800f0c6:	9803      	ldr	r0, [sp, #12]
 800f0c8:	f002 f986 	bl	80113d8 <__ssprint_r>
 800f0cc:	2800      	cmp	r0, #0
 800f0ce:	f040 842f 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f0d2:	2300      	movs	r3, #0
 800f0d4:	9327      	str	r3, [sp, #156]	; 0x9c
 800f0d6:	f1b9 0f00 	cmp.w	r9, #0
 800f0da:	f040 8445 	bne.w	800f968 <_svfprintf_r+0x1410>
 800f0de:	ac29      	add	r4, sp, #164	; 0xa4
 800f0e0:	e6b7      	b.n	800ee52 <_svfprintf_r+0x8fa>
 800f0e2:	4658      	mov	r0, fp
 800f0e4:	f7f7 fe5e 	bl	8006da4 <strlen>
 800f0e8:	46b1      	mov	r9, r6
 800f0ea:	4605      	mov	r5, r0
 800f0ec:	e495      	b.n	800ea1a <_svfprintf_r+0x4c2>
 800f0ee:	f04a 0a10 	orr.w	sl, sl, #16
 800f0f2:	f01a 0f20 	tst.w	sl, #32
 800f0f6:	d009      	beq.n	800f10c <_svfprintf_r+0xbb4>
 800f0f8:	3607      	adds	r6, #7
 800f0fa:	f026 0607 	bic.w	r6, r6, #7
 800f0fe:	f106 0308 	add.w	r3, r6, #8
 800f102:	e9d6 6700 	ldrd	r6, r7, [r6]
 800f106:	9308      	str	r3, [sp, #32]
 800f108:	2301      	movs	r3, #1
 800f10a:	e6c9      	b.n	800eea0 <_svfprintf_r+0x948>
 800f10c:	1d33      	adds	r3, r6, #4
 800f10e:	f01a 0f10 	tst.w	sl, #16
 800f112:	9308      	str	r3, [sp, #32]
 800f114:	d001      	beq.n	800f11a <_svfprintf_r+0xbc2>
 800f116:	6836      	ldr	r6, [r6, #0]
 800f118:	e003      	b.n	800f122 <_svfprintf_r+0xbca>
 800f11a:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800f11e:	d002      	beq.n	800f126 <_svfprintf_r+0xbce>
 800f120:	8836      	ldrh	r6, [r6, #0]
 800f122:	2700      	movs	r7, #0
 800f124:	e7f0      	b.n	800f108 <_svfprintf_r+0xbb0>
 800f126:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800f12a:	d0f4      	beq.n	800f116 <_svfprintf_r+0xbbe>
 800f12c:	7836      	ldrb	r6, [r6, #0]
 800f12e:	e7f8      	b.n	800f122 <_svfprintf_r+0xbca>
 800f130:	4b22      	ldr	r3, [pc, #136]	; (800f1bc <_svfprintf_r+0xc64>)
 800f132:	f7ff bb48 	b.w	800e7c6 <_svfprintf_r+0x26e>
 800f136:	1d33      	adds	r3, r6, #4
 800f138:	f01a 0f10 	tst.w	sl, #16
 800f13c:	9308      	str	r3, [sp, #32]
 800f13e:	d001      	beq.n	800f144 <_svfprintf_r+0xbec>
 800f140:	6836      	ldr	r6, [r6, #0]
 800f142:	e003      	b.n	800f14c <_svfprintf_r+0xbf4>
 800f144:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800f148:	d003      	beq.n	800f152 <_svfprintf_r+0xbfa>
 800f14a:	8836      	ldrh	r6, [r6, #0]
 800f14c:	2700      	movs	r7, #0
 800f14e:	f7ff bb47 	b.w	800e7e0 <_svfprintf_r+0x288>
 800f152:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800f156:	d0f3      	beq.n	800f140 <_svfprintf_r+0xbe8>
 800f158:	7836      	ldrb	r6, [r6, #0]
 800f15a:	e7f7      	b.n	800f14c <_svfprintf_r+0xbf4>
 800f15c:	4652      	mov	r2, sl
 800f15e:	2301      	movs	r3, #1
 800f160:	e6a5      	b.n	800eeae <_svfprintf_r+0x956>
 800f162:	2b01      	cmp	r3, #1
 800f164:	f43f ac04 	beq.w	800e970 <_svfprintf_r+0x418>
 800f168:	2b02      	cmp	r3, #2
 800f16a:	d06c      	beq.n	800f246 <_svfprintf_r+0xcee>
 800f16c:	ab52      	add	r3, sp, #328	; 0x148
 800f16e:	08f1      	lsrs	r1, r6, #3
 800f170:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 800f174:	08f8      	lsrs	r0, r7, #3
 800f176:	f006 0207 	and.w	r2, r6, #7
 800f17a:	4607      	mov	r7, r0
 800f17c:	460e      	mov	r6, r1
 800f17e:	3230      	adds	r2, #48	; 0x30
 800f180:	ea56 0107 	orrs.w	r1, r6, r7
 800f184:	f103 3bff 	add.w	fp, r3, #4294967295
 800f188:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f18c:	d114      	bne.n	800f1b8 <_svfprintf_r+0xc60>
 800f18e:	f01a 0f01 	tst.w	sl, #1
 800f192:	d006      	beq.n	800f1a2 <_svfprintf_r+0xc4a>
 800f194:	2a30      	cmp	r2, #48	; 0x30
 800f196:	d004      	beq.n	800f1a2 <_svfprintf_r+0xc4a>
 800f198:	2230      	movs	r2, #48	; 0x30
 800f19a:	f80b 2c01 	strb.w	r2, [fp, #-1]
 800f19e:	f1a3 0b02 	sub.w	fp, r3, #2
 800f1a2:	ab52      	add	r3, sp, #328	; 0x148
 800f1a4:	9510      	str	r5, [sp, #64]	; 0x40
 800f1a6:	f04f 0900 	mov.w	r9, #0
 800f1aa:	eba3 050b 	sub.w	r5, r3, fp
 800f1ae:	464f      	mov	r7, r9
 800f1b0:	f8cd 901c 	str.w	r9, [sp, #28]
 800f1b4:	464e      	mov	r6, r9
 800f1b6:	e6c2      	b.n	800ef3e <_svfprintf_r+0x9e6>
 800f1b8:	465b      	mov	r3, fp
 800f1ba:	e7d8      	b.n	800f16e <_svfprintf_r+0xc16>
 800f1bc:	0801f5be 	.word	0x0801f5be
 800f1c0:	0801f5e2 	.word	0x0801f5e2
 800f1c4:	0801f5f2 	.word	0x0801f5f2
 800f1c8:	2300      	movs	r3, #0
 800f1ca:	9304      	str	r3, [sp, #16]
 800f1cc:	f40a 6380 	and.w	r3, sl, #1024	; 0x400
 800f1d0:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 800f1d4:	9307      	str	r3, [sp, #28]
 800f1d6:	220a      	movs	r2, #10
 800f1d8:	2300      	movs	r3, #0
 800f1da:	4630      	mov	r0, r6
 800f1dc:	4639      	mov	r1, r7
 800f1de:	f7f8 facd 	bl	800777c <__aeabi_uldivmod>
 800f1e2:	9b04      	ldr	r3, [sp, #16]
 800f1e4:	3301      	adds	r3, #1
 800f1e6:	9304      	str	r3, [sp, #16]
 800f1e8:	9b07      	ldr	r3, [sp, #28]
 800f1ea:	3230      	adds	r2, #48	; 0x30
 800f1ec:	f109 3bff 	add.w	fp, r9, #4294967295
 800f1f0:	f809 2c01 	strb.w	r2, [r9, #-1]
 800f1f4:	b1d3      	cbz	r3, 800f22c <_svfprintf_r+0xcd4>
 800f1f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1f8:	9a04      	ldr	r2, [sp, #16]
 800f1fa:	781b      	ldrb	r3, [r3, #0]
 800f1fc:	429a      	cmp	r2, r3
 800f1fe:	d115      	bne.n	800f22c <_svfprintf_r+0xcd4>
 800f200:	2aff      	cmp	r2, #255	; 0xff
 800f202:	d013      	beq.n	800f22c <_svfprintf_r+0xcd4>
 800f204:	2f00      	cmp	r7, #0
 800f206:	bf08      	it	eq
 800f208:	2e0a      	cmpeq	r6, #10
 800f20a:	d30f      	bcc.n	800f22c <_svfprintf_r+0xcd4>
 800f20c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f20e:	9919      	ldr	r1, [sp, #100]	; 0x64
 800f210:	ebab 0b03 	sub.w	fp, fp, r3
 800f214:	461a      	mov	r2, r3
 800f216:	4658      	mov	r0, fp
 800f218:	f002 f8c9 	bl	80113ae <strncpy>
 800f21c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f21e:	785b      	ldrb	r3, [r3, #1]
 800f220:	b11b      	cbz	r3, 800f22a <_svfprintf_r+0xcd2>
 800f222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f224:	3301      	adds	r3, #1
 800f226:	9309      	str	r3, [sp, #36]	; 0x24
 800f228:	2300      	movs	r3, #0
 800f22a:	9304      	str	r3, [sp, #16]
 800f22c:	2300      	movs	r3, #0
 800f22e:	4630      	mov	r0, r6
 800f230:	4639      	mov	r1, r7
 800f232:	220a      	movs	r2, #10
 800f234:	f7f8 faa2 	bl	800777c <__aeabi_uldivmod>
 800f238:	4606      	mov	r6, r0
 800f23a:	460f      	mov	r7, r1
 800f23c:	ea56 0307 	orrs.w	r3, r6, r7
 800f240:	d0af      	beq.n	800f1a2 <_svfprintf_r+0xc4a>
 800f242:	46d9      	mov	r9, fp
 800f244:	e7c7      	b.n	800f1d6 <_svfprintf_r+0xc7e>
 800f246:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800f24a:	f006 030f 	and.w	r3, r6, #15
 800f24e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f250:	5cd3      	ldrb	r3, [r2, r3]
 800f252:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 800f256:	0933      	lsrs	r3, r6, #4
 800f258:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800f25c:	093a      	lsrs	r2, r7, #4
 800f25e:	461e      	mov	r6, r3
 800f260:	4617      	mov	r7, r2
 800f262:	ea56 0307 	orrs.w	r3, r6, r7
 800f266:	d1f0      	bne.n	800f24a <_svfprintf_r+0xcf2>
 800f268:	e79b      	b.n	800f1a2 <_svfprintf_r+0xc4a>
 800f26a:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800f26e:	2b00      	cmp	r3, #0
 800f270:	d197      	bne.n	800f1a2 <_svfprintf_r+0xc4a>
 800f272:	07d2      	lsls	r2, r2, #31
 800f274:	bf44      	itt	mi
 800f276:	2330      	movmi	r3, #48	; 0x30
 800f278:	f80b 3d01 	strbmi.w	r3, [fp, #-1]!
 800f27c:	e791      	b.n	800f1a2 <_svfprintf_r+0xc4a>
 800f27e:	9b06      	ldr	r3, [sp, #24]
 800f280:	2b00      	cmp	r3, #0
 800f282:	f000 8377 	beq.w	800f974 <_svfprintf_r+0x141c>
 800f286:	2000      	movs	r0, #0
 800f288:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 800f28c:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 800f290:	9608      	str	r6, [sp, #32]
 800f292:	f7ff bb49 	b.w	800e928 <_svfprintf_r+0x3d0>
 800f296:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800f29a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f29c:	e4ec      	b.n	800ec78 <_svfprintf_r+0x720>
 800f29e:	2010      	movs	r0, #16
 800f2a0:	4403      	add	r3, r0
 800f2a2:	2a07      	cmp	r2, #7
 800f2a4:	6060      	str	r0, [r4, #4]
 800f2a6:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f2aa:	dd08      	ble.n	800f2be <_svfprintf_r+0xd66>
 800f2ac:	aa26      	add	r2, sp, #152	; 0x98
 800f2ae:	4641      	mov	r1, r8
 800f2b0:	9803      	ldr	r0, [sp, #12]
 800f2b2:	f002 f891 	bl	80113d8 <__ssprint_r>
 800f2b6:	2800      	cmp	r0, #0
 800f2b8:	f040 833a 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f2bc:	a929      	add	r1, sp, #164	; 0xa4
 800f2be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f2c0:	3b10      	subs	r3, #16
 800f2c2:	9313      	str	r3, [sp, #76]	; 0x4c
 800f2c4:	460c      	mov	r4, r1
 800f2c6:	e656      	b.n	800ef76 <_svfprintf_r+0xa1e>
 800f2c8:	460c      	mov	r4, r1
 800f2ca:	e671      	b.n	800efb0 <_svfprintf_r+0xa58>
 800f2cc:	aa26      	add	r2, sp, #152	; 0x98
 800f2ce:	4641      	mov	r1, r8
 800f2d0:	9803      	ldr	r0, [sp, #12]
 800f2d2:	f002 f881 	bl	80113d8 <__ssprint_r>
 800f2d6:	2800      	cmp	r0, #0
 800f2d8:	f040 832a 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f2dc:	ac29      	add	r4, sp, #164	; 0xa4
 800f2de:	e679      	b.n	800efd4 <_svfprintf_r+0xa7c>
 800f2e0:	aa26      	add	r2, sp, #152	; 0x98
 800f2e2:	4641      	mov	r1, r8
 800f2e4:	9803      	ldr	r0, [sp, #12]
 800f2e6:	f002 f877 	bl	80113d8 <__ssprint_r>
 800f2ea:	2800      	cmp	r0, #0
 800f2ec:	f040 8320 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f2f0:	ac29      	add	r4, sp, #164	; 0xa4
 800f2f2:	e67f      	b.n	800eff4 <_svfprintf_r+0xa9c>
 800f2f4:	2010      	movs	r0, #16
 800f2f6:	4403      	add	r3, r0
 800f2f8:	2a07      	cmp	r2, #7
 800f2fa:	6060      	str	r0, [r4, #4]
 800f2fc:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f300:	dd08      	ble.n	800f314 <_svfprintf_r+0xdbc>
 800f302:	aa26      	add	r2, sp, #152	; 0x98
 800f304:	4641      	mov	r1, r8
 800f306:	9803      	ldr	r0, [sp, #12]
 800f308:	f002 f866 	bl	80113d8 <__ssprint_r>
 800f30c:	2800      	cmp	r0, #0
 800f30e:	f040 830f 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f312:	a929      	add	r1, sp, #164	; 0xa4
 800f314:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f316:	3b10      	subs	r3, #16
 800f318:	9313      	str	r3, [sp, #76]	; 0x4c
 800f31a:	460c      	mov	r4, r1
 800f31c:	e673      	b.n	800f006 <_svfprintf_r+0xaae>
 800f31e:	460c      	mov	r4, r1
 800f320:	e68e      	b.n	800f040 <_svfprintf_r+0xae8>
 800f322:	2010      	movs	r0, #16
 800f324:	4403      	add	r3, r0
 800f326:	2a07      	cmp	r2, #7
 800f328:	6060      	str	r0, [r4, #4]
 800f32a:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f32e:	dd08      	ble.n	800f342 <_svfprintf_r+0xdea>
 800f330:	aa26      	add	r2, sp, #152	; 0x98
 800f332:	4641      	mov	r1, r8
 800f334:	9803      	ldr	r0, [sp, #12]
 800f336:	f002 f84f 	bl	80113d8 <__ssprint_r>
 800f33a:	2800      	cmp	r0, #0
 800f33c:	f040 82f8 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f340:	a929      	add	r1, sp, #164	; 0xa4
 800f342:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f344:	3b10      	subs	r3, #16
 800f346:	9310      	str	r3, [sp, #64]	; 0x40
 800f348:	460c      	mov	r4, r1
 800f34a:	e67e      	b.n	800f04a <_svfprintf_r+0xaf2>
 800f34c:	460c      	mov	r4, r1
 800f34e:	e699      	b.n	800f084 <_svfprintf_r+0xb2c>
 800f350:	9b06      	ldr	r3, [sp, #24]
 800f352:	2b65      	cmp	r3, #101	; 0x65
 800f354:	f340 8234 	ble.w	800f7c0 <_svfprintf_r+0x1268>
 800f358:	2200      	movs	r2, #0
 800f35a:	2300      	movs	r3, #0
 800f35c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f360:	f7f8 f94c 	bl	80075fc <__aeabi_dcmpeq>
 800f364:	2800      	cmp	r0, #0
 800f366:	d069      	beq.n	800f43c <_svfprintf_r+0xee4>
 800f368:	4b6e      	ldr	r3, [pc, #440]	; (800f524 <_svfprintf_r+0xfcc>)
 800f36a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800f36c:	6023      	str	r3, [r4, #0]
 800f36e:	2301      	movs	r3, #1
 800f370:	441d      	add	r5, r3
 800f372:	6063      	str	r3, [r4, #4]
 800f374:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f376:	9528      	str	r5, [sp, #160]	; 0xa0
 800f378:	3301      	adds	r3, #1
 800f37a:	2b07      	cmp	r3, #7
 800f37c:	9327      	str	r3, [sp, #156]	; 0x9c
 800f37e:	dc37      	bgt.n	800f3f0 <_svfprintf_r+0xe98>
 800f380:	3408      	adds	r4, #8
 800f382:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f384:	9a04      	ldr	r2, [sp, #16]
 800f386:	4293      	cmp	r3, r2
 800f388:	db03      	blt.n	800f392 <_svfprintf_r+0xe3a>
 800f38a:	f01a 0f01 	tst.w	sl, #1
 800f38e:	f43f ae8a 	beq.w	800f0a6 <_svfprintf_r+0xb4e>
 800f392:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f394:	6023      	str	r3, [r4, #0]
 800f396:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f398:	6063      	str	r3, [r4, #4]
 800f39a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f39c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f39e:	4413      	add	r3, r2
 800f3a0:	9328      	str	r3, [sp, #160]	; 0xa0
 800f3a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f3a4:	3301      	adds	r3, #1
 800f3a6:	2b07      	cmp	r3, #7
 800f3a8:	9327      	str	r3, [sp, #156]	; 0x9c
 800f3aa:	dc2b      	bgt.n	800f404 <_svfprintf_r+0xeac>
 800f3ac:	3408      	adds	r4, #8
 800f3ae:	9b04      	ldr	r3, [sp, #16]
 800f3b0:	1e5d      	subs	r5, r3, #1
 800f3b2:	2d00      	cmp	r5, #0
 800f3b4:	f77f ae77 	ble.w	800f0a6 <_svfprintf_r+0xb4e>
 800f3b8:	4e5b      	ldr	r6, [pc, #364]	; (800f528 <_svfprintf_r+0xfd0>)
 800f3ba:	2710      	movs	r7, #16
 800f3bc:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f3c0:	2d10      	cmp	r5, #16
 800f3c2:	f103 0301 	add.w	r3, r3, #1
 800f3c6:	f104 0108 	add.w	r1, r4, #8
 800f3ca:	6026      	str	r6, [r4, #0]
 800f3cc:	dc24      	bgt.n	800f418 <_svfprintf_r+0xec0>
 800f3ce:	6065      	str	r5, [r4, #4]
 800f3d0:	2b07      	cmp	r3, #7
 800f3d2:	4415      	add	r5, r2
 800f3d4:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f3d8:	f340 8289 	ble.w	800f8ee <_svfprintf_r+0x1396>
 800f3dc:	aa26      	add	r2, sp, #152	; 0x98
 800f3de:	4641      	mov	r1, r8
 800f3e0:	9803      	ldr	r0, [sp, #12]
 800f3e2:	f001 fff9 	bl	80113d8 <__ssprint_r>
 800f3e6:	2800      	cmp	r0, #0
 800f3e8:	f040 82a2 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f3ec:	ac29      	add	r4, sp, #164	; 0xa4
 800f3ee:	e65a      	b.n	800f0a6 <_svfprintf_r+0xb4e>
 800f3f0:	aa26      	add	r2, sp, #152	; 0x98
 800f3f2:	4641      	mov	r1, r8
 800f3f4:	9803      	ldr	r0, [sp, #12]
 800f3f6:	f001 ffef 	bl	80113d8 <__ssprint_r>
 800f3fa:	2800      	cmp	r0, #0
 800f3fc:	f040 8298 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f400:	ac29      	add	r4, sp, #164	; 0xa4
 800f402:	e7be      	b.n	800f382 <_svfprintf_r+0xe2a>
 800f404:	aa26      	add	r2, sp, #152	; 0x98
 800f406:	4641      	mov	r1, r8
 800f408:	9803      	ldr	r0, [sp, #12]
 800f40a:	f001 ffe5 	bl	80113d8 <__ssprint_r>
 800f40e:	2800      	cmp	r0, #0
 800f410:	f040 828e 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f414:	ac29      	add	r4, sp, #164	; 0xa4
 800f416:	e7ca      	b.n	800f3ae <_svfprintf_r+0xe56>
 800f418:	3210      	adds	r2, #16
 800f41a:	2b07      	cmp	r3, #7
 800f41c:	6067      	str	r7, [r4, #4]
 800f41e:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f422:	dd08      	ble.n	800f436 <_svfprintf_r+0xede>
 800f424:	aa26      	add	r2, sp, #152	; 0x98
 800f426:	4641      	mov	r1, r8
 800f428:	9803      	ldr	r0, [sp, #12]
 800f42a:	f001 ffd5 	bl	80113d8 <__ssprint_r>
 800f42e:	2800      	cmp	r0, #0
 800f430:	f040 827e 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f434:	a929      	add	r1, sp, #164	; 0xa4
 800f436:	3d10      	subs	r5, #16
 800f438:	460c      	mov	r4, r1
 800f43a:	e7bf      	b.n	800f3bc <_svfprintf_r+0xe64>
 800f43c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f43e:	2b00      	cmp	r3, #0
 800f440:	dc74      	bgt.n	800f52c <_svfprintf_r+0xfd4>
 800f442:	4b38      	ldr	r3, [pc, #224]	; (800f524 <_svfprintf_r+0xfcc>)
 800f444:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800f446:	6023      	str	r3, [r4, #0]
 800f448:	2301      	movs	r3, #1
 800f44a:	441d      	add	r5, r3
 800f44c:	6063      	str	r3, [r4, #4]
 800f44e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f450:	9528      	str	r5, [sp, #160]	; 0xa0
 800f452:	3301      	adds	r3, #1
 800f454:	2b07      	cmp	r3, #7
 800f456:	9327      	str	r3, [sp, #156]	; 0x9c
 800f458:	dc3e      	bgt.n	800f4d8 <_svfprintf_r+0xf80>
 800f45a:	3408      	adds	r4, #8
 800f45c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f45e:	b92b      	cbnz	r3, 800f46c <_svfprintf_r+0xf14>
 800f460:	9b04      	ldr	r3, [sp, #16]
 800f462:	b91b      	cbnz	r3, 800f46c <_svfprintf_r+0xf14>
 800f464:	f01a 0f01 	tst.w	sl, #1
 800f468:	f43f ae1d 	beq.w	800f0a6 <_svfprintf_r+0xb4e>
 800f46c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f46e:	6023      	str	r3, [r4, #0]
 800f470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f472:	6063      	str	r3, [r4, #4]
 800f474:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f476:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f478:	4413      	add	r3, r2
 800f47a:	9328      	str	r3, [sp, #160]	; 0xa0
 800f47c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f47e:	3301      	adds	r3, #1
 800f480:	2b07      	cmp	r3, #7
 800f482:	9327      	str	r3, [sp, #156]	; 0x9c
 800f484:	dc32      	bgt.n	800f4ec <_svfprintf_r+0xf94>
 800f486:	3408      	adds	r4, #8
 800f488:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800f48a:	2d00      	cmp	r5, #0
 800f48c:	da1b      	bge.n	800f4c6 <_svfprintf_r+0xf6e>
 800f48e:	4e26      	ldr	r6, [pc, #152]	; (800f528 <_svfprintf_r+0xfd0>)
 800f490:	426d      	negs	r5, r5
 800f492:	4623      	mov	r3, r4
 800f494:	2710      	movs	r7, #16
 800f496:	e9dd 2127 	ldrd	r2, r1, [sp, #156]	; 0x9c
 800f49a:	2d10      	cmp	r5, #16
 800f49c:	f102 0201 	add.w	r2, r2, #1
 800f4a0:	f104 0408 	add.w	r4, r4, #8
 800f4a4:	601e      	str	r6, [r3, #0]
 800f4a6:	dc2b      	bgt.n	800f500 <_svfprintf_r+0xfa8>
 800f4a8:	605d      	str	r5, [r3, #4]
 800f4aa:	2a07      	cmp	r2, #7
 800f4ac:	440d      	add	r5, r1
 800f4ae:	e9cd 2527 	strd	r2, r5, [sp, #156]	; 0x9c
 800f4b2:	dd08      	ble.n	800f4c6 <_svfprintf_r+0xf6e>
 800f4b4:	aa26      	add	r2, sp, #152	; 0x98
 800f4b6:	4641      	mov	r1, r8
 800f4b8:	9803      	ldr	r0, [sp, #12]
 800f4ba:	f001 ff8d 	bl	80113d8 <__ssprint_r>
 800f4be:	2800      	cmp	r0, #0
 800f4c0:	f040 8236 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f4c4:	ac29      	add	r4, sp, #164	; 0xa4
 800f4c6:	9b04      	ldr	r3, [sp, #16]
 800f4c8:	6063      	str	r3, [r4, #4]
 800f4ca:	9a04      	ldr	r2, [sp, #16]
 800f4cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f4ce:	f8c4 b000 	str.w	fp, [r4]
 800f4d2:	4413      	add	r3, r2
 800f4d4:	9328      	str	r3, [sp, #160]	; 0xa0
 800f4d6:	e5df      	b.n	800f098 <_svfprintf_r+0xb40>
 800f4d8:	aa26      	add	r2, sp, #152	; 0x98
 800f4da:	4641      	mov	r1, r8
 800f4dc:	9803      	ldr	r0, [sp, #12]
 800f4de:	f001 ff7b 	bl	80113d8 <__ssprint_r>
 800f4e2:	2800      	cmp	r0, #0
 800f4e4:	f040 8224 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f4e8:	ac29      	add	r4, sp, #164	; 0xa4
 800f4ea:	e7b7      	b.n	800f45c <_svfprintf_r+0xf04>
 800f4ec:	aa26      	add	r2, sp, #152	; 0x98
 800f4ee:	4641      	mov	r1, r8
 800f4f0:	9803      	ldr	r0, [sp, #12]
 800f4f2:	f001 ff71 	bl	80113d8 <__ssprint_r>
 800f4f6:	2800      	cmp	r0, #0
 800f4f8:	f040 821a 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f4fc:	ac29      	add	r4, sp, #164	; 0xa4
 800f4fe:	e7c3      	b.n	800f488 <_svfprintf_r+0xf30>
 800f500:	3110      	adds	r1, #16
 800f502:	2a07      	cmp	r2, #7
 800f504:	605f      	str	r7, [r3, #4]
 800f506:	e9cd 2127 	strd	r2, r1, [sp, #156]	; 0x9c
 800f50a:	dd08      	ble.n	800f51e <_svfprintf_r+0xfc6>
 800f50c:	aa26      	add	r2, sp, #152	; 0x98
 800f50e:	4641      	mov	r1, r8
 800f510:	9803      	ldr	r0, [sp, #12]
 800f512:	f001 ff61 	bl	80113d8 <__ssprint_r>
 800f516:	2800      	cmp	r0, #0
 800f518:	f040 820a 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f51c:	ac29      	add	r4, sp, #164	; 0xa4
 800f51e:	3d10      	subs	r5, #16
 800f520:	4623      	mov	r3, r4
 800f522:	e7b8      	b.n	800f496 <_svfprintf_r+0xf3e>
 800f524:	0801f5e0 	.word	0x0801f5e0
 800f528:	0801f5f2 	.word	0x0801f5f2
 800f52c:	9b04      	ldr	r3, [sp, #16]
 800f52e:	42b3      	cmp	r3, r6
 800f530:	bfa8      	it	ge
 800f532:	4633      	movge	r3, r6
 800f534:	2b00      	cmp	r3, #0
 800f536:	461d      	mov	r5, r3
 800f538:	dd0b      	ble.n	800f552 <_svfprintf_r+0xffa>
 800f53a:	e9c4 b300 	strd	fp, r3, [r4]
 800f53e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f540:	442b      	add	r3, r5
 800f542:	9328      	str	r3, [sp, #160]	; 0xa0
 800f544:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f546:	3301      	adds	r3, #1
 800f548:	2b07      	cmp	r3, #7
 800f54a:	9327      	str	r3, [sp, #156]	; 0x9c
 800f54c:	f300 8086 	bgt.w	800f65c <_svfprintf_r+0x1104>
 800f550:	3408      	adds	r4, #8
 800f552:	2d00      	cmp	r5, #0
 800f554:	bfac      	ite	ge
 800f556:	1b75      	subge	r5, r6, r5
 800f558:	4635      	movlt	r5, r6
 800f55a:	2d00      	cmp	r5, #0
 800f55c:	dd19      	ble.n	800f592 <_svfprintf_r+0x103a>
 800f55e:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f562:	4896      	ldr	r0, [pc, #600]	; (800f7bc <_svfprintf_r+0x1264>)
 800f564:	6020      	str	r0, [r4, #0]
 800f566:	2d10      	cmp	r5, #16
 800f568:	f103 0301 	add.w	r3, r3, #1
 800f56c:	f104 0108 	add.w	r1, r4, #8
 800f570:	dc7e      	bgt.n	800f670 <_svfprintf_r+0x1118>
 800f572:	6065      	str	r5, [r4, #4]
 800f574:	2b07      	cmp	r3, #7
 800f576:	4415      	add	r5, r2
 800f578:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f57c:	f340 808b 	ble.w	800f696 <_svfprintf_r+0x113e>
 800f580:	aa26      	add	r2, sp, #152	; 0x98
 800f582:	4641      	mov	r1, r8
 800f584:	9803      	ldr	r0, [sp, #12]
 800f586:	f001 ff27 	bl	80113d8 <__ssprint_r>
 800f58a:	2800      	cmp	r0, #0
 800f58c:	f040 81d0 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f590:	ac29      	add	r4, sp, #164	; 0xa4
 800f592:	f41a 6f80 	tst.w	sl, #1024	; 0x400
 800f596:	445e      	add	r6, fp
 800f598:	d009      	beq.n	800f5ae <_svfprintf_r+0x1056>
 800f59a:	9b07      	ldr	r3, [sp, #28]
 800f59c:	2b00      	cmp	r3, #0
 800f59e:	d17c      	bne.n	800f69a <_svfprintf_r+0x1142>
 800f5a0:	2f00      	cmp	r7, #0
 800f5a2:	d17c      	bne.n	800f69e <_svfprintf_r+0x1146>
 800f5a4:	9b04      	ldr	r3, [sp, #16]
 800f5a6:	445b      	add	r3, fp
 800f5a8:	429e      	cmp	r6, r3
 800f5aa:	bf28      	it	cs
 800f5ac:	461e      	movcs	r6, r3
 800f5ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f5b0:	9a04      	ldr	r2, [sp, #16]
 800f5b2:	4293      	cmp	r3, r2
 800f5b4:	db02      	blt.n	800f5bc <_svfprintf_r+0x1064>
 800f5b6:	f01a 0f01 	tst.w	sl, #1
 800f5ba:	d00e      	beq.n	800f5da <_svfprintf_r+0x1082>
 800f5bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f5be:	6023      	str	r3, [r4, #0]
 800f5c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5c2:	6063      	str	r3, [r4, #4]
 800f5c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f5c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f5c8:	4413      	add	r3, r2
 800f5ca:	9328      	str	r3, [sp, #160]	; 0xa0
 800f5cc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f5ce:	3301      	adds	r3, #1
 800f5d0:	2b07      	cmp	r3, #7
 800f5d2:	9327      	str	r3, [sp, #156]	; 0x9c
 800f5d4:	f300 80dd 	bgt.w	800f792 <_svfprintf_r+0x123a>
 800f5d8:	3408      	adds	r4, #8
 800f5da:	9b04      	ldr	r3, [sp, #16]
 800f5dc:	9a04      	ldr	r2, [sp, #16]
 800f5de:	eb0b 0503 	add.w	r5, fp, r3
 800f5e2:	1bab      	subs	r3, r5, r6
 800f5e4:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800f5e6:	1b55      	subs	r5, r2, r5
 800f5e8:	429d      	cmp	r5, r3
 800f5ea:	bfa8      	it	ge
 800f5ec:	461d      	movge	r5, r3
 800f5ee:	2d00      	cmp	r5, #0
 800f5f0:	dd0b      	ble.n	800f60a <_svfprintf_r+0x10b2>
 800f5f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f5f4:	442b      	add	r3, r5
 800f5f6:	9328      	str	r3, [sp, #160]	; 0xa0
 800f5f8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f5fa:	3301      	adds	r3, #1
 800f5fc:	2b07      	cmp	r3, #7
 800f5fe:	e9c4 6500 	strd	r6, r5, [r4]
 800f602:	9327      	str	r3, [sp, #156]	; 0x9c
 800f604:	f300 80cf 	bgt.w	800f7a6 <_svfprintf_r+0x124e>
 800f608:	3408      	adds	r4, #8
 800f60a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f60c:	9a04      	ldr	r2, [sp, #16]
 800f60e:	2d00      	cmp	r5, #0
 800f610:	eba2 0303 	sub.w	r3, r2, r3
 800f614:	bfac      	ite	ge
 800f616:	1b5d      	subge	r5, r3, r5
 800f618:	461d      	movlt	r5, r3
 800f61a:	2d00      	cmp	r5, #0
 800f61c:	f77f ad43 	ble.w	800f0a6 <_svfprintf_r+0xb4e>
 800f620:	4e66      	ldr	r6, [pc, #408]	; (800f7bc <_svfprintf_r+0x1264>)
 800f622:	2710      	movs	r7, #16
 800f624:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f628:	2d10      	cmp	r5, #16
 800f62a:	f103 0301 	add.w	r3, r3, #1
 800f62e:	f104 0108 	add.w	r1, r4, #8
 800f632:	6026      	str	r6, [r4, #0]
 800f634:	f77f aecb 	ble.w	800f3ce <_svfprintf_r+0xe76>
 800f638:	3210      	adds	r2, #16
 800f63a:	2b07      	cmp	r3, #7
 800f63c:	6067      	str	r7, [r4, #4]
 800f63e:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f642:	dd08      	ble.n	800f656 <_svfprintf_r+0x10fe>
 800f644:	aa26      	add	r2, sp, #152	; 0x98
 800f646:	4641      	mov	r1, r8
 800f648:	9803      	ldr	r0, [sp, #12]
 800f64a:	f001 fec5 	bl	80113d8 <__ssprint_r>
 800f64e:	2800      	cmp	r0, #0
 800f650:	f040 816e 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f654:	a929      	add	r1, sp, #164	; 0xa4
 800f656:	3d10      	subs	r5, #16
 800f658:	460c      	mov	r4, r1
 800f65a:	e7e3      	b.n	800f624 <_svfprintf_r+0x10cc>
 800f65c:	aa26      	add	r2, sp, #152	; 0x98
 800f65e:	4641      	mov	r1, r8
 800f660:	9803      	ldr	r0, [sp, #12]
 800f662:	f001 feb9 	bl	80113d8 <__ssprint_r>
 800f666:	2800      	cmp	r0, #0
 800f668:	f040 8162 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f66c:	ac29      	add	r4, sp, #164	; 0xa4
 800f66e:	e770      	b.n	800f552 <_svfprintf_r+0xffa>
 800f670:	2010      	movs	r0, #16
 800f672:	4402      	add	r2, r0
 800f674:	2b07      	cmp	r3, #7
 800f676:	6060      	str	r0, [r4, #4]
 800f678:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f67c:	dd08      	ble.n	800f690 <_svfprintf_r+0x1138>
 800f67e:	aa26      	add	r2, sp, #152	; 0x98
 800f680:	4641      	mov	r1, r8
 800f682:	9803      	ldr	r0, [sp, #12]
 800f684:	f001 fea8 	bl	80113d8 <__ssprint_r>
 800f688:	2800      	cmp	r0, #0
 800f68a:	f040 8151 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f68e:	a929      	add	r1, sp, #164	; 0xa4
 800f690:	3d10      	subs	r5, #16
 800f692:	460c      	mov	r4, r1
 800f694:	e763      	b.n	800f55e <_svfprintf_r+0x1006>
 800f696:	460c      	mov	r4, r1
 800f698:	e77b      	b.n	800f592 <_svfprintf_r+0x103a>
 800f69a:	2f00      	cmp	r7, #0
 800f69c:	d049      	beq.n	800f732 <_svfprintf_r+0x11da>
 800f69e:	3f01      	subs	r7, #1
 800f6a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f6a2:	6023      	str	r3, [r4, #0]
 800f6a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f6a6:	6063      	str	r3, [r4, #4]
 800f6a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f6aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f6ac:	4413      	add	r3, r2
 800f6ae:	9328      	str	r3, [sp, #160]	; 0xa0
 800f6b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f6b2:	3301      	adds	r3, #1
 800f6b4:	2b07      	cmp	r3, #7
 800f6b6:	9327      	str	r3, [sp, #156]	; 0x9c
 800f6b8:	dc42      	bgt.n	800f740 <_svfprintf_r+0x11e8>
 800f6ba:	3408      	adds	r4, #8
 800f6bc:	9b04      	ldr	r3, [sp, #16]
 800f6be:	445b      	add	r3, fp
 800f6c0:	1b9a      	subs	r2, r3, r6
 800f6c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6c4:	781b      	ldrb	r3, [r3, #0]
 800f6c6:	4293      	cmp	r3, r2
 800f6c8:	bfa8      	it	ge
 800f6ca:	4613      	movge	r3, r2
 800f6cc:	2b00      	cmp	r3, #0
 800f6ce:	461d      	mov	r5, r3
 800f6d0:	dd0a      	ble.n	800f6e8 <_svfprintf_r+0x1190>
 800f6d2:	e9c4 6300 	strd	r6, r3, [r4]
 800f6d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f6d8:	442b      	add	r3, r5
 800f6da:	9328      	str	r3, [sp, #160]	; 0xa0
 800f6dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f6de:	3301      	adds	r3, #1
 800f6e0:	2b07      	cmp	r3, #7
 800f6e2:	9327      	str	r3, [sp, #156]	; 0x9c
 800f6e4:	dc36      	bgt.n	800f754 <_svfprintf_r+0x11fc>
 800f6e6:	3408      	adds	r4, #8
 800f6e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6ea:	781b      	ldrb	r3, [r3, #0]
 800f6ec:	2d00      	cmp	r5, #0
 800f6ee:	bfac      	ite	ge
 800f6f0:	1b5d      	subge	r5, r3, r5
 800f6f2:	461d      	movlt	r5, r3
 800f6f4:	2d00      	cmp	r5, #0
 800f6f6:	dd18      	ble.n	800f72a <_svfprintf_r+0x11d2>
 800f6f8:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800f6fc:	482f      	ldr	r0, [pc, #188]	; (800f7bc <_svfprintf_r+0x1264>)
 800f6fe:	6020      	str	r0, [r4, #0]
 800f700:	2d10      	cmp	r5, #16
 800f702:	f102 0201 	add.w	r2, r2, #1
 800f706:	f104 0108 	add.w	r1, r4, #8
 800f70a:	dc2d      	bgt.n	800f768 <_svfprintf_r+0x1210>
 800f70c:	442b      	add	r3, r5
 800f70e:	2a07      	cmp	r2, #7
 800f710:	6065      	str	r5, [r4, #4]
 800f712:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f716:	dd3a      	ble.n	800f78e <_svfprintf_r+0x1236>
 800f718:	aa26      	add	r2, sp, #152	; 0x98
 800f71a:	4641      	mov	r1, r8
 800f71c:	9803      	ldr	r0, [sp, #12]
 800f71e:	f001 fe5b 	bl	80113d8 <__ssprint_r>
 800f722:	2800      	cmp	r0, #0
 800f724:	f040 8104 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f728:	ac29      	add	r4, sp, #164	; 0xa4
 800f72a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f72c:	781b      	ldrb	r3, [r3, #0]
 800f72e:	441e      	add	r6, r3
 800f730:	e733      	b.n	800f59a <_svfprintf_r+0x1042>
 800f732:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f734:	3b01      	subs	r3, #1
 800f736:	9309      	str	r3, [sp, #36]	; 0x24
 800f738:	9b07      	ldr	r3, [sp, #28]
 800f73a:	3b01      	subs	r3, #1
 800f73c:	9307      	str	r3, [sp, #28]
 800f73e:	e7af      	b.n	800f6a0 <_svfprintf_r+0x1148>
 800f740:	aa26      	add	r2, sp, #152	; 0x98
 800f742:	4641      	mov	r1, r8
 800f744:	9803      	ldr	r0, [sp, #12]
 800f746:	f001 fe47 	bl	80113d8 <__ssprint_r>
 800f74a:	2800      	cmp	r0, #0
 800f74c:	f040 80f0 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f750:	ac29      	add	r4, sp, #164	; 0xa4
 800f752:	e7b3      	b.n	800f6bc <_svfprintf_r+0x1164>
 800f754:	aa26      	add	r2, sp, #152	; 0x98
 800f756:	4641      	mov	r1, r8
 800f758:	9803      	ldr	r0, [sp, #12]
 800f75a:	f001 fe3d 	bl	80113d8 <__ssprint_r>
 800f75e:	2800      	cmp	r0, #0
 800f760:	f040 80e6 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f764:	ac29      	add	r4, sp, #164	; 0xa4
 800f766:	e7bf      	b.n	800f6e8 <_svfprintf_r+0x1190>
 800f768:	2010      	movs	r0, #16
 800f76a:	4403      	add	r3, r0
 800f76c:	2a07      	cmp	r2, #7
 800f76e:	6060      	str	r0, [r4, #4]
 800f770:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f774:	dd08      	ble.n	800f788 <_svfprintf_r+0x1230>
 800f776:	aa26      	add	r2, sp, #152	; 0x98
 800f778:	4641      	mov	r1, r8
 800f77a:	9803      	ldr	r0, [sp, #12]
 800f77c:	f001 fe2c 	bl	80113d8 <__ssprint_r>
 800f780:	2800      	cmp	r0, #0
 800f782:	f040 80d5 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f786:	a929      	add	r1, sp, #164	; 0xa4
 800f788:	3d10      	subs	r5, #16
 800f78a:	460c      	mov	r4, r1
 800f78c:	e7b4      	b.n	800f6f8 <_svfprintf_r+0x11a0>
 800f78e:	460c      	mov	r4, r1
 800f790:	e7cb      	b.n	800f72a <_svfprintf_r+0x11d2>
 800f792:	aa26      	add	r2, sp, #152	; 0x98
 800f794:	4641      	mov	r1, r8
 800f796:	9803      	ldr	r0, [sp, #12]
 800f798:	f001 fe1e 	bl	80113d8 <__ssprint_r>
 800f79c:	2800      	cmp	r0, #0
 800f79e:	f040 80c7 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f7a2:	ac29      	add	r4, sp, #164	; 0xa4
 800f7a4:	e719      	b.n	800f5da <_svfprintf_r+0x1082>
 800f7a6:	aa26      	add	r2, sp, #152	; 0x98
 800f7a8:	4641      	mov	r1, r8
 800f7aa:	9803      	ldr	r0, [sp, #12]
 800f7ac:	f001 fe14 	bl	80113d8 <__ssprint_r>
 800f7b0:	2800      	cmp	r0, #0
 800f7b2:	f040 80bd 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f7b6:	ac29      	add	r4, sp, #164	; 0xa4
 800f7b8:	e727      	b.n	800f60a <_svfprintf_r+0x10b2>
 800f7ba:	bf00      	nop
 800f7bc:	0801f5f2 	.word	0x0801f5f2
 800f7c0:	9a04      	ldr	r2, [sp, #16]
 800f7c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800f7c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f7c6:	2a01      	cmp	r2, #1
 800f7c8:	f105 0501 	add.w	r5, r5, #1
 800f7cc:	f103 0301 	add.w	r3, r3, #1
 800f7d0:	f104 0608 	add.w	r6, r4, #8
 800f7d4:	dc02      	bgt.n	800f7dc <_svfprintf_r+0x1284>
 800f7d6:	f01a 0f01 	tst.w	sl, #1
 800f7da:	d07d      	beq.n	800f8d8 <_svfprintf_r+0x1380>
 800f7dc:	2201      	movs	r2, #1
 800f7de:	2b07      	cmp	r3, #7
 800f7e0:	f8c4 b000 	str.w	fp, [r4]
 800f7e4:	6062      	str	r2, [r4, #4]
 800f7e6:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f7ea:	dd08      	ble.n	800f7fe <_svfprintf_r+0x12a6>
 800f7ec:	aa26      	add	r2, sp, #152	; 0x98
 800f7ee:	4641      	mov	r1, r8
 800f7f0:	9803      	ldr	r0, [sp, #12]
 800f7f2:	f001 fdf1 	bl	80113d8 <__ssprint_r>
 800f7f6:	2800      	cmp	r0, #0
 800f7f8:	f040 809a 	bne.w	800f930 <_svfprintf_r+0x13d8>
 800f7fc:	ae29      	add	r6, sp, #164	; 0xa4
 800f7fe:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f800:	6033      	str	r3, [r6, #0]
 800f802:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f804:	6073      	str	r3, [r6, #4]
 800f806:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f808:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f80a:	4413      	add	r3, r2
 800f80c:	9328      	str	r3, [sp, #160]	; 0xa0
 800f80e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f810:	3301      	adds	r3, #1
 800f812:	2b07      	cmp	r3, #7
 800f814:	9327      	str	r3, [sp, #156]	; 0x9c
 800f816:	dc31      	bgt.n	800f87c <_svfprintf_r+0x1324>
 800f818:	3608      	adds	r6, #8
 800f81a:	9b04      	ldr	r3, [sp, #16]
 800f81c:	2200      	movs	r2, #0
 800f81e:	1e5c      	subs	r4, r3, #1
 800f820:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f824:	2300      	movs	r3, #0
 800f826:	f7f7 fee9 	bl	80075fc <__aeabi_dcmpeq>
 800f82a:	2800      	cmp	r0, #0
 800f82c:	d12f      	bne.n	800f88e <_svfprintf_r+0x1336>
 800f82e:	f10b 0301 	add.w	r3, fp, #1
 800f832:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800f834:	9904      	ldr	r1, [sp, #16]
 800f836:	e9c6 3400 	strd	r3, r4, [r6]
 800f83a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f83c:	3201      	adds	r2, #1
 800f83e:	3b01      	subs	r3, #1
 800f840:	440b      	add	r3, r1
 800f842:	2a07      	cmp	r2, #7
 800f844:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f848:	dd4f      	ble.n	800f8ea <_svfprintf_r+0x1392>
 800f84a:	aa26      	add	r2, sp, #152	; 0x98
 800f84c:	4641      	mov	r1, r8
 800f84e:	9803      	ldr	r0, [sp, #12]
 800f850:	f001 fdc2 	bl	80113d8 <__ssprint_r>
 800f854:	2800      	cmp	r0, #0
 800f856:	d16b      	bne.n	800f930 <_svfprintf_r+0x13d8>
 800f858:	ae29      	add	r6, sp, #164	; 0xa4
 800f85a:	ab22      	add	r3, sp, #136	; 0x88
 800f85c:	6033      	str	r3, [r6, #0]
 800f85e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f860:	6073      	str	r3, [r6, #4]
 800f862:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800f864:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f866:	4413      	add	r3, r2
 800f868:	9328      	str	r3, [sp, #160]	; 0xa0
 800f86a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f86c:	3301      	adds	r3, #1
 800f86e:	2b07      	cmp	r3, #7
 800f870:	9327      	str	r3, [sp, #156]	; 0x9c
 800f872:	f73f adb3 	bgt.w	800f3dc <_svfprintf_r+0xe84>
 800f876:	f106 0408 	add.w	r4, r6, #8
 800f87a:	e414      	b.n	800f0a6 <_svfprintf_r+0xb4e>
 800f87c:	aa26      	add	r2, sp, #152	; 0x98
 800f87e:	4641      	mov	r1, r8
 800f880:	9803      	ldr	r0, [sp, #12]
 800f882:	f001 fda9 	bl	80113d8 <__ssprint_r>
 800f886:	2800      	cmp	r0, #0
 800f888:	d152      	bne.n	800f930 <_svfprintf_r+0x13d8>
 800f88a:	ae29      	add	r6, sp, #164	; 0xa4
 800f88c:	e7c5      	b.n	800f81a <_svfprintf_r+0x12c2>
 800f88e:	2c00      	cmp	r4, #0
 800f890:	dde3      	ble.n	800f85a <_svfprintf_r+0x1302>
 800f892:	4d3e      	ldr	r5, [pc, #248]	; (800f98c <_svfprintf_r+0x1434>)
 800f894:	2710      	movs	r7, #16
 800f896:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f89a:	2c10      	cmp	r4, #16
 800f89c:	f103 0301 	add.w	r3, r3, #1
 800f8a0:	f106 0108 	add.w	r1, r6, #8
 800f8a4:	6035      	str	r5, [r6, #0]
 800f8a6:	dc07      	bgt.n	800f8b8 <_svfprintf_r+0x1360>
 800f8a8:	6074      	str	r4, [r6, #4]
 800f8aa:	2b07      	cmp	r3, #7
 800f8ac:	4414      	add	r4, r2
 800f8ae:	e9cd 3427 	strd	r3, r4, [sp, #156]	; 0x9c
 800f8b2:	dcca      	bgt.n	800f84a <_svfprintf_r+0x12f2>
 800f8b4:	460e      	mov	r6, r1
 800f8b6:	e7d0      	b.n	800f85a <_svfprintf_r+0x1302>
 800f8b8:	3210      	adds	r2, #16
 800f8ba:	2b07      	cmp	r3, #7
 800f8bc:	6077      	str	r7, [r6, #4]
 800f8be:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f8c2:	dd06      	ble.n	800f8d2 <_svfprintf_r+0x137a>
 800f8c4:	aa26      	add	r2, sp, #152	; 0x98
 800f8c6:	4641      	mov	r1, r8
 800f8c8:	9803      	ldr	r0, [sp, #12]
 800f8ca:	f001 fd85 	bl	80113d8 <__ssprint_r>
 800f8ce:	bb78      	cbnz	r0, 800f930 <_svfprintf_r+0x13d8>
 800f8d0:	a929      	add	r1, sp, #164	; 0xa4
 800f8d2:	3c10      	subs	r4, #16
 800f8d4:	460e      	mov	r6, r1
 800f8d6:	e7de      	b.n	800f896 <_svfprintf_r+0x133e>
 800f8d8:	2201      	movs	r2, #1
 800f8da:	2b07      	cmp	r3, #7
 800f8dc:	f8c4 b000 	str.w	fp, [r4]
 800f8e0:	6062      	str	r2, [r4, #4]
 800f8e2:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f8e6:	ddb8      	ble.n	800f85a <_svfprintf_r+0x1302>
 800f8e8:	e7af      	b.n	800f84a <_svfprintf_r+0x12f2>
 800f8ea:	3608      	adds	r6, #8
 800f8ec:	e7b5      	b.n	800f85a <_svfprintf_r+0x1302>
 800f8ee:	460c      	mov	r4, r1
 800f8f0:	f7ff bbd9 	b.w	800f0a6 <_svfprintf_r+0xb4e>
 800f8f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f8f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f8f8:	1a9d      	subs	r5, r3, r2
 800f8fa:	2d00      	cmp	r5, #0
 800f8fc:	f77f abd7 	ble.w	800f0ae <_svfprintf_r+0xb56>
 800f900:	4e23      	ldr	r6, [pc, #140]	; (800f990 <_svfprintf_r+0x1438>)
 800f902:	2710      	movs	r7, #16
 800f904:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f908:	2d10      	cmp	r5, #16
 800f90a:	f103 0301 	add.w	r3, r3, #1
 800f90e:	6026      	str	r6, [r4, #0]
 800f910:	dc18      	bgt.n	800f944 <_svfprintf_r+0x13ec>
 800f912:	6065      	str	r5, [r4, #4]
 800f914:	2b07      	cmp	r3, #7
 800f916:	4415      	add	r5, r2
 800f918:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f91c:	f77f abc7 	ble.w	800f0ae <_svfprintf_r+0xb56>
 800f920:	aa26      	add	r2, sp, #152	; 0x98
 800f922:	4641      	mov	r1, r8
 800f924:	9803      	ldr	r0, [sp, #12]
 800f926:	f001 fd57 	bl	80113d8 <__ssprint_r>
 800f92a:	2800      	cmp	r0, #0
 800f92c:	f43f abbf 	beq.w	800f0ae <_svfprintf_r+0xb56>
 800f930:	f1b9 0f00 	cmp.w	r9, #0
 800f934:	f43f a8a8 	beq.w	800ea88 <_svfprintf_r+0x530>
 800f938:	4649      	mov	r1, r9
 800f93a:	9803      	ldr	r0, [sp, #12]
 800f93c:	f001 f8ba 	bl	8010ab4 <_free_r>
 800f940:	f7ff b8a2 	b.w	800ea88 <_svfprintf_r+0x530>
 800f944:	3210      	adds	r2, #16
 800f946:	2b07      	cmp	r3, #7
 800f948:	6067      	str	r7, [r4, #4]
 800f94a:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f94e:	dc02      	bgt.n	800f956 <_svfprintf_r+0x13fe>
 800f950:	3408      	adds	r4, #8
 800f952:	3d10      	subs	r5, #16
 800f954:	e7d6      	b.n	800f904 <_svfprintf_r+0x13ac>
 800f956:	aa26      	add	r2, sp, #152	; 0x98
 800f958:	4641      	mov	r1, r8
 800f95a:	9803      	ldr	r0, [sp, #12]
 800f95c:	f001 fd3c 	bl	80113d8 <__ssprint_r>
 800f960:	2800      	cmp	r0, #0
 800f962:	d1e5      	bne.n	800f930 <_svfprintf_r+0x13d8>
 800f964:	ac29      	add	r4, sp, #164	; 0xa4
 800f966:	e7f4      	b.n	800f952 <_svfprintf_r+0x13fa>
 800f968:	4649      	mov	r1, r9
 800f96a:	9803      	ldr	r0, [sp, #12]
 800f96c:	f001 f8a2 	bl	8010ab4 <_free_r>
 800f970:	f7ff bbb5 	b.w	800f0de <_svfprintf_r+0xb86>
 800f974:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f976:	2b00      	cmp	r3, #0
 800f978:	f43f a886 	beq.w	800ea88 <_svfprintf_r+0x530>
 800f97c:	aa26      	add	r2, sp, #152	; 0x98
 800f97e:	4641      	mov	r1, r8
 800f980:	9803      	ldr	r0, [sp, #12]
 800f982:	f001 fd29 	bl	80113d8 <__ssprint_r>
 800f986:	f7ff b87f 	b.w	800ea88 <_svfprintf_r+0x530>
 800f98a:	bf00      	nop
 800f98c:	0801f5f2 	.word	0x0801f5f2
 800f990:	0801f5e2 	.word	0x0801f5e2

0800f994 <sysconf>:
 800f994:	2808      	cmp	r0, #8
 800f996:	b508      	push	{r3, lr}
 800f998:	d006      	beq.n	800f9a8 <sysconf+0x14>
 800f99a:	f7fd fe51 	bl	800d640 <__errno>
 800f99e:	2316      	movs	r3, #22
 800f9a0:	6003      	str	r3, [r0, #0]
 800f9a2:	f04f 30ff 	mov.w	r0, #4294967295
 800f9a6:	bd08      	pop	{r3, pc}
 800f9a8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800f9ac:	e7fb      	b.n	800f9a6 <sysconf+0x12>

0800f9ae <__swbuf_r>:
 800f9ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9b0:	460d      	mov	r5, r1
 800f9b2:	4614      	mov	r4, r2
 800f9b4:	4606      	mov	r6, r0
 800f9b6:	b118      	cbz	r0, 800f9c0 <__swbuf_r+0x12>
 800f9b8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800f9ba:	b90b      	cbnz	r3, 800f9c0 <__swbuf_r+0x12>
 800f9bc:	f000 ffea 	bl	8010994 <__sinit>
 800f9c0:	69a3      	ldr	r3, [r4, #24]
 800f9c2:	60a3      	str	r3, [r4, #8]
 800f9c4:	89a3      	ldrh	r3, [r4, #12]
 800f9c6:	0719      	lsls	r1, r3, #28
 800f9c8:	d528      	bpl.n	800fa1c <__swbuf_r+0x6e>
 800f9ca:	6923      	ldr	r3, [r4, #16]
 800f9cc:	b333      	cbz	r3, 800fa1c <__swbuf_r+0x6e>
 800f9ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f9d2:	b2ed      	uxtb	r5, r5
 800f9d4:	049a      	lsls	r2, r3, #18
 800f9d6:	462f      	mov	r7, r5
 800f9d8:	d52a      	bpl.n	800fa30 <__swbuf_r+0x82>
 800f9da:	6923      	ldr	r3, [r4, #16]
 800f9dc:	6820      	ldr	r0, [r4, #0]
 800f9de:	1ac0      	subs	r0, r0, r3
 800f9e0:	6963      	ldr	r3, [r4, #20]
 800f9e2:	4283      	cmp	r3, r0
 800f9e4:	dc04      	bgt.n	800f9f0 <__swbuf_r+0x42>
 800f9e6:	4621      	mov	r1, r4
 800f9e8:	4630      	mov	r0, r6
 800f9ea:	f000 ff67 	bl	80108bc <_fflush_r>
 800f9ee:	b9d8      	cbnz	r0, 800fa28 <__swbuf_r+0x7a>
 800f9f0:	68a3      	ldr	r3, [r4, #8]
 800f9f2:	3b01      	subs	r3, #1
 800f9f4:	60a3      	str	r3, [r4, #8]
 800f9f6:	6823      	ldr	r3, [r4, #0]
 800f9f8:	1c5a      	adds	r2, r3, #1
 800f9fa:	6022      	str	r2, [r4, #0]
 800f9fc:	701d      	strb	r5, [r3, #0]
 800f9fe:	6963      	ldr	r3, [r4, #20]
 800fa00:	3001      	adds	r0, #1
 800fa02:	4283      	cmp	r3, r0
 800fa04:	d004      	beq.n	800fa10 <__swbuf_r+0x62>
 800fa06:	89a3      	ldrh	r3, [r4, #12]
 800fa08:	07db      	lsls	r3, r3, #31
 800fa0a:	d50f      	bpl.n	800fa2c <__swbuf_r+0x7e>
 800fa0c:	2d0a      	cmp	r5, #10
 800fa0e:	d10d      	bne.n	800fa2c <__swbuf_r+0x7e>
 800fa10:	4621      	mov	r1, r4
 800fa12:	4630      	mov	r0, r6
 800fa14:	f000 ff52 	bl	80108bc <_fflush_r>
 800fa18:	b140      	cbz	r0, 800fa2c <__swbuf_r+0x7e>
 800fa1a:	e005      	b.n	800fa28 <__swbuf_r+0x7a>
 800fa1c:	4621      	mov	r1, r4
 800fa1e:	4630      	mov	r0, r6
 800fa20:	f000 f820 	bl	800fa64 <__swsetup_r>
 800fa24:	2800      	cmp	r0, #0
 800fa26:	d0d2      	beq.n	800f9ce <__swbuf_r+0x20>
 800fa28:	f04f 37ff 	mov.w	r7, #4294967295
 800fa2c:	4638      	mov	r0, r7
 800fa2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa30:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800fa34:	81a3      	strh	r3, [r4, #12]
 800fa36:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800fa38:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800fa3c:	6663      	str	r3, [r4, #100]	; 0x64
 800fa3e:	e7cc      	b.n	800f9da <__swbuf_r+0x2c>

0800fa40 <_write_r>:
 800fa40:	b538      	push	{r3, r4, r5, lr}
 800fa42:	4c07      	ldr	r4, [pc, #28]	; (800fa60 <_write_r+0x20>)
 800fa44:	4605      	mov	r5, r0
 800fa46:	4608      	mov	r0, r1
 800fa48:	4611      	mov	r1, r2
 800fa4a:	2200      	movs	r2, #0
 800fa4c:	6022      	str	r2, [r4, #0]
 800fa4e:	461a      	mov	r2, r3
 800fa50:	f7fc fb96 	bl	800c180 <_write>
 800fa54:	1c43      	adds	r3, r0, #1
 800fa56:	d102      	bne.n	800fa5e <_write_r+0x1e>
 800fa58:	6823      	ldr	r3, [r4, #0]
 800fa5a:	b103      	cbz	r3, 800fa5e <_write_r+0x1e>
 800fa5c:	602b      	str	r3, [r5, #0]
 800fa5e:	bd38      	pop	{r3, r4, r5, pc}
 800fa60:	2001e054 	.word	0x2001e054

0800fa64 <__swsetup_r>:
 800fa64:	b538      	push	{r3, r4, r5, lr}
 800fa66:	4b2a      	ldr	r3, [pc, #168]	; (800fb10 <__swsetup_r+0xac>)
 800fa68:	4605      	mov	r5, r0
 800fa6a:	6818      	ldr	r0, [r3, #0]
 800fa6c:	460c      	mov	r4, r1
 800fa6e:	b118      	cbz	r0, 800fa78 <__swsetup_r+0x14>
 800fa70:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800fa72:	b90b      	cbnz	r3, 800fa78 <__swsetup_r+0x14>
 800fa74:	f000 ff8e 	bl	8010994 <__sinit>
 800fa78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fa7c:	b29a      	uxth	r2, r3
 800fa7e:	0711      	lsls	r1, r2, #28
 800fa80:	d422      	bmi.n	800fac8 <__swsetup_r+0x64>
 800fa82:	06d0      	lsls	r0, r2, #27
 800fa84:	d407      	bmi.n	800fa96 <__swsetup_r+0x32>
 800fa86:	2209      	movs	r2, #9
 800fa88:	602a      	str	r2, [r5, #0]
 800fa8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fa8e:	81a3      	strh	r3, [r4, #12]
 800fa90:	f04f 30ff 	mov.w	r0, #4294967295
 800fa94:	e034      	b.n	800fb00 <__swsetup_r+0x9c>
 800fa96:	0751      	lsls	r1, r2, #29
 800fa98:	d512      	bpl.n	800fac0 <__swsetup_r+0x5c>
 800fa9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800fa9c:	b141      	cbz	r1, 800fab0 <__swsetup_r+0x4c>
 800fa9e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800faa2:	4299      	cmp	r1, r3
 800faa4:	d002      	beq.n	800faac <__swsetup_r+0x48>
 800faa6:	4628      	mov	r0, r5
 800faa8:	f001 f804 	bl	8010ab4 <_free_r>
 800faac:	2300      	movs	r3, #0
 800faae:	6323      	str	r3, [r4, #48]	; 0x30
 800fab0:	89a3      	ldrh	r3, [r4, #12]
 800fab2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800fab6:	81a3      	strh	r3, [r4, #12]
 800fab8:	2300      	movs	r3, #0
 800faba:	6063      	str	r3, [r4, #4]
 800fabc:	6923      	ldr	r3, [r4, #16]
 800fabe:	6023      	str	r3, [r4, #0]
 800fac0:	89a3      	ldrh	r3, [r4, #12]
 800fac2:	f043 0308 	orr.w	r3, r3, #8
 800fac6:	81a3      	strh	r3, [r4, #12]
 800fac8:	6923      	ldr	r3, [r4, #16]
 800faca:	b94b      	cbnz	r3, 800fae0 <__swsetup_r+0x7c>
 800facc:	89a3      	ldrh	r3, [r4, #12]
 800face:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800fad2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fad6:	d003      	beq.n	800fae0 <__swsetup_r+0x7c>
 800fad8:	4621      	mov	r1, r4
 800fada:	4628      	mov	r0, r5
 800fadc:	f001 f8fe 	bl	8010cdc <__smakebuf_r>
 800fae0:	89a2      	ldrh	r2, [r4, #12]
 800fae2:	f012 0301 	ands.w	r3, r2, #1
 800fae6:	d00c      	beq.n	800fb02 <__swsetup_r+0x9e>
 800fae8:	2300      	movs	r3, #0
 800faea:	60a3      	str	r3, [r4, #8]
 800faec:	6963      	ldr	r3, [r4, #20]
 800faee:	425b      	negs	r3, r3
 800faf0:	61a3      	str	r3, [r4, #24]
 800faf2:	6923      	ldr	r3, [r4, #16]
 800faf4:	b953      	cbnz	r3, 800fb0c <__swsetup_r+0xa8>
 800faf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fafa:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800fafe:	d1c4      	bne.n	800fa8a <__swsetup_r+0x26>
 800fb00:	bd38      	pop	{r3, r4, r5, pc}
 800fb02:	0792      	lsls	r2, r2, #30
 800fb04:	bf58      	it	pl
 800fb06:	6963      	ldrpl	r3, [r4, #20]
 800fb08:	60a3      	str	r3, [r4, #8]
 800fb0a:	e7f2      	b.n	800faf2 <__swsetup_r+0x8e>
 800fb0c:	2000      	movs	r0, #0
 800fb0e:	e7f7      	b.n	800fb00 <__swsetup_r+0x9c>
 800fb10:	2000002c 	.word	0x2000002c

0800fb14 <register_fini>:
 800fb14:	4b02      	ldr	r3, [pc, #8]	; (800fb20 <register_fini+0xc>)
 800fb16:	b113      	cbz	r3, 800fb1e <register_fini+0xa>
 800fb18:	4802      	ldr	r0, [pc, #8]	; (800fb24 <register_fini+0x10>)
 800fb1a:	f000 b805 	b.w	800fb28 <atexit>
 800fb1e:	4770      	bx	lr
 800fb20:	00000000 	.word	0x00000000
 800fb24:	080109e5 	.word	0x080109e5

0800fb28 <atexit>:
 800fb28:	2300      	movs	r3, #0
 800fb2a:	4601      	mov	r1, r0
 800fb2c:	461a      	mov	r2, r3
 800fb2e:	4618      	mov	r0, r3
 800fb30:	f001 bcca 	b.w	80114c8 <__register_exitproc>

0800fb34 <quorem>:
 800fb34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb38:	6903      	ldr	r3, [r0, #16]
 800fb3a:	690c      	ldr	r4, [r1, #16]
 800fb3c:	42a3      	cmp	r3, r4
 800fb3e:	4680      	mov	r8, r0
 800fb40:	f2c0 8082 	blt.w	800fc48 <quorem+0x114>
 800fb44:	3c01      	subs	r4, #1
 800fb46:	f101 0714 	add.w	r7, r1, #20
 800fb4a:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 800fb4e:	f100 0614 	add.w	r6, r0, #20
 800fb52:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800fb56:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800fb5a:	eb06 030c 	add.w	r3, r6, ip
 800fb5e:	3501      	adds	r5, #1
 800fb60:	eb07 090c 	add.w	r9, r7, ip
 800fb64:	9301      	str	r3, [sp, #4]
 800fb66:	fbb0 f5f5 	udiv	r5, r0, r5
 800fb6a:	b395      	cbz	r5, 800fbd2 <quorem+0x9e>
 800fb6c:	f04f 0a00 	mov.w	sl, #0
 800fb70:	4638      	mov	r0, r7
 800fb72:	46b6      	mov	lr, r6
 800fb74:	46d3      	mov	fp, sl
 800fb76:	f850 2b04 	ldr.w	r2, [r0], #4
 800fb7a:	b293      	uxth	r3, r2
 800fb7c:	fb05 a303 	mla	r3, r5, r3, sl
 800fb80:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800fb84:	b29b      	uxth	r3, r3
 800fb86:	ebab 0303 	sub.w	r3, fp, r3
 800fb8a:	0c12      	lsrs	r2, r2, #16
 800fb8c:	f8de b000 	ldr.w	fp, [lr]
 800fb90:	fb05 a202 	mla	r2, r5, r2, sl
 800fb94:	fa13 f38b 	uxtah	r3, r3, fp
 800fb98:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800fb9c:	fa1f fb82 	uxth.w	fp, r2
 800fba0:	f8de 2000 	ldr.w	r2, [lr]
 800fba4:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800fba8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800fbac:	b29b      	uxth	r3, r3
 800fbae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fbb2:	4581      	cmp	r9, r0
 800fbb4:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800fbb8:	f84e 3b04 	str.w	r3, [lr], #4
 800fbbc:	d2db      	bcs.n	800fb76 <quorem+0x42>
 800fbbe:	f856 300c 	ldr.w	r3, [r6, ip]
 800fbc2:	b933      	cbnz	r3, 800fbd2 <quorem+0x9e>
 800fbc4:	9b01      	ldr	r3, [sp, #4]
 800fbc6:	3b04      	subs	r3, #4
 800fbc8:	429e      	cmp	r6, r3
 800fbca:	461a      	mov	r2, r3
 800fbcc:	d330      	bcc.n	800fc30 <quorem+0xfc>
 800fbce:	f8c8 4010 	str.w	r4, [r8, #16]
 800fbd2:	4640      	mov	r0, r8
 800fbd4:	f001 faac 	bl	8011130 <__mcmp>
 800fbd8:	2800      	cmp	r0, #0
 800fbda:	db25      	blt.n	800fc28 <quorem+0xf4>
 800fbdc:	3501      	adds	r5, #1
 800fbde:	4630      	mov	r0, r6
 800fbe0:	f04f 0c00 	mov.w	ip, #0
 800fbe4:	f857 2b04 	ldr.w	r2, [r7], #4
 800fbe8:	f8d0 e000 	ldr.w	lr, [r0]
 800fbec:	b293      	uxth	r3, r2
 800fbee:	ebac 0303 	sub.w	r3, ip, r3
 800fbf2:	0c12      	lsrs	r2, r2, #16
 800fbf4:	fa13 f38e 	uxtah	r3, r3, lr
 800fbf8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800fbfc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800fc00:	b29b      	uxth	r3, r3
 800fc02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fc06:	45b9      	cmp	r9, r7
 800fc08:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fc0c:	f840 3b04 	str.w	r3, [r0], #4
 800fc10:	d2e8      	bcs.n	800fbe4 <quorem+0xb0>
 800fc12:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800fc16:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800fc1a:	b92a      	cbnz	r2, 800fc28 <quorem+0xf4>
 800fc1c:	3b04      	subs	r3, #4
 800fc1e:	429e      	cmp	r6, r3
 800fc20:	461a      	mov	r2, r3
 800fc22:	d30b      	bcc.n	800fc3c <quorem+0x108>
 800fc24:	f8c8 4010 	str.w	r4, [r8, #16]
 800fc28:	4628      	mov	r0, r5
 800fc2a:	b003      	add	sp, #12
 800fc2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc30:	6812      	ldr	r2, [r2, #0]
 800fc32:	3b04      	subs	r3, #4
 800fc34:	2a00      	cmp	r2, #0
 800fc36:	d1ca      	bne.n	800fbce <quorem+0x9a>
 800fc38:	3c01      	subs	r4, #1
 800fc3a:	e7c5      	b.n	800fbc8 <quorem+0x94>
 800fc3c:	6812      	ldr	r2, [r2, #0]
 800fc3e:	3b04      	subs	r3, #4
 800fc40:	2a00      	cmp	r2, #0
 800fc42:	d1ef      	bne.n	800fc24 <quorem+0xf0>
 800fc44:	3c01      	subs	r4, #1
 800fc46:	e7ea      	b.n	800fc1e <quorem+0xea>
 800fc48:	2000      	movs	r0, #0
 800fc4a:	e7ee      	b.n	800fc2a <quorem+0xf6>
 800fc4c:	0000      	movs	r0, r0
	...

0800fc50 <_dtoa_r>:
 800fc50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc54:	b097      	sub	sp, #92	; 0x5c
 800fc56:	ec57 6b10 	vmov	r6, r7, d0
 800fc5a:	9106      	str	r1, [sp, #24]
 800fc5c:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800fc5e:	920b      	str	r2, [sp, #44]	; 0x2c
 800fc60:	4604      	mov	r4, r0
 800fc62:	9312      	str	r3, [sp, #72]	; 0x48
 800fc64:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800fc66:	e9cd 6700 	strd	r6, r7, [sp]
 800fc6a:	b141      	cbz	r1, 800fc7e <_dtoa_r+0x2e>
 800fc6c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fc6e:	604a      	str	r2, [r1, #4]
 800fc70:	2301      	movs	r3, #1
 800fc72:	4093      	lsls	r3, r2
 800fc74:	608b      	str	r3, [r1, #8]
 800fc76:	f001 f896 	bl	8010da6 <_Bfree>
 800fc7a:	2300      	movs	r3, #0
 800fc7c:	6423      	str	r3, [r4, #64]	; 0x40
 800fc7e:	1e3b      	subs	r3, r7, #0
 800fc80:	bfb9      	ittee	lt
 800fc82:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800fc86:	9301      	strlt	r3, [sp, #4]
 800fc88:	2300      	movge	r3, #0
 800fc8a:	602b      	strge	r3, [r5, #0]
 800fc8c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800fc90:	4baf      	ldr	r3, [pc, #700]	; (800ff50 <_dtoa_r+0x300>)
 800fc92:	bfbc      	itt	lt
 800fc94:	2201      	movlt	r2, #1
 800fc96:	602a      	strlt	r2, [r5, #0]
 800fc98:	ea33 0308 	bics.w	r3, r3, r8
 800fc9c:	d116      	bne.n	800fccc <_dtoa_r+0x7c>
 800fc9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fca0:	f242 730f 	movw	r3, #9999	; 0x270f
 800fca4:	6013      	str	r3, [r2, #0]
 800fca6:	9b00      	ldr	r3, [sp, #0]
 800fca8:	b923      	cbnz	r3, 800fcb4 <_dtoa_r+0x64>
 800fcaa:	f3c8 0013 	ubfx	r0, r8, #0, #20
 800fcae:	2800      	cmp	r0, #0
 800fcb0:	f000 8543 	beq.w	801073a <_dtoa_r+0xaea>
 800fcb4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800fcb6:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 800ff64 <_dtoa_r+0x314>
 800fcba:	b11b      	cbz	r3, 800fcc4 <_dtoa_r+0x74>
 800fcbc:	f10b 0303 	add.w	r3, fp, #3
 800fcc0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fcc2:	6013      	str	r3, [r2, #0]
 800fcc4:	4658      	mov	r0, fp
 800fcc6:	b017      	add	sp, #92	; 0x5c
 800fcc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fccc:	e9dd 6700 	ldrd	r6, r7, [sp]
 800fcd0:	2200      	movs	r2, #0
 800fcd2:	2300      	movs	r3, #0
 800fcd4:	4630      	mov	r0, r6
 800fcd6:	4639      	mov	r1, r7
 800fcd8:	f7f7 fc90 	bl	80075fc <__aeabi_dcmpeq>
 800fcdc:	4681      	mov	r9, r0
 800fcde:	b160      	cbz	r0, 800fcfa <_dtoa_r+0xaa>
 800fce0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fce2:	2301      	movs	r3, #1
 800fce4:	6013      	str	r3, [r2, #0]
 800fce6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800fce8:	2b00      	cmp	r3, #0
 800fcea:	f000 8522 	beq.w	8010732 <_dtoa_r+0xae2>
 800fcee:	4b99      	ldr	r3, [pc, #612]	; (800ff54 <_dtoa_r+0x304>)
 800fcf0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fcf2:	f103 3bff 	add.w	fp, r3, #4294967295
 800fcf6:	6013      	str	r3, [r2, #0]
 800fcf8:	e7e4      	b.n	800fcc4 <_dtoa_r+0x74>
 800fcfa:	aa14      	add	r2, sp, #80	; 0x50
 800fcfc:	a915      	add	r1, sp, #84	; 0x54
 800fcfe:	ec47 6b10 	vmov	d0, r6, r7
 800fd02:	4620      	mov	r0, r4
 800fd04:	f001 fa8b 	bl	801121e <__d2b>
 800fd08:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800fd0c:	9004      	str	r0, [sp, #16]
 800fd0e:	2d00      	cmp	r5, #0
 800fd10:	d07c      	beq.n	800fe0c <_dtoa_r+0x1bc>
 800fd12:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800fd16:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 800fd1a:	46b2      	mov	sl, r6
 800fd1c:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 800fd20:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800fd24:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 800fd28:	2200      	movs	r2, #0
 800fd2a:	4b8b      	ldr	r3, [pc, #556]	; (800ff58 <_dtoa_r+0x308>)
 800fd2c:	4650      	mov	r0, sl
 800fd2e:	4659      	mov	r1, fp
 800fd30:	f7f7 f844 	bl	8006dbc <__aeabi_dsub>
 800fd34:	a380      	add	r3, pc, #512	; (adr r3, 800ff38 <_dtoa_r+0x2e8>)
 800fd36:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd3a:	f7f7 f9f7 	bl	800712c <__aeabi_dmul>
 800fd3e:	a380      	add	r3, pc, #512	; (adr r3, 800ff40 <_dtoa_r+0x2f0>)
 800fd40:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd44:	f7f7 f83c 	bl	8006dc0 <__adddf3>
 800fd48:	4606      	mov	r6, r0
 800fd4a:	4628      	mov	r0, r5
 800fd4c:	460f      	mov	r7, r1
 800fd4e:	f7f7 f983 	bl	8007058 <__aeabi_i2d>
 800fd52:	a37d      	add	r3, pc, #500	; (adr r3, 800ff48 <_dtoa_r+0x2f8>)
 800fd54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd58:	f7f7 f9e8 	bl	800712c <__aeabi_dmul>
 800fd5c:	4602      	mov	r2, r0
 800fd5e:	460b      	mov	r3, r1
 800fd60:	4630      	mov	r0, r6
 800fd62:	4639      	mov	r1, r7
 800fd64:	f7f7 f82c 	bl	8006dc0 <__adddf3>
 800fd68:	4606      	mov	r6, r0
 800fd6a:	460f      	mov	r7, r1
 800fd6c:	f7f7 fc8e 	bl	800768c <__aeabi_d2iz>
 800fd70:	2200      	movs	r2, #0
 800fd72:	4682      	mov	sl, r0
 800fd74:	2300      	movs	r3, #0
 800fd76:	4630      	mov	r0, r6
 800fd78:	4639      	mov	r1, r7
 800fd7a:	f7f7 fc49 	bl	8007610 <__aeabi_dcmplt>
 800fd7e:	b148      	cbz	r0, 800fd94 <_dtoa_r+0x144>
 800fd80:	4650      	mov	r0, sl
 800fd82:	f7f7 f969 	bl	8007058 <__aeabi_i2d>
 800fd86:	4632      	mov	r2, r6
 800fd88:	463b      	mov	r3, r7
 800fd8a:	f7f7 fc37 	bl	80075fc <__aeabi_dcmpeq>
 800fd8e:	b908      	cbnz	r0, 800fd94 <_dtoa_r+0x144>
 800fd90:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fd94:	f1ba 0f16 	cmp.w	sl, #22
 800fd98:	d859      	bhi.n	800fe4e <_dtoa_r+0x1fe>
 800fd9a:	4970      	ldr	r1, [pc, #448]	; (800ff5c <_dtoa_r+0x30c>)
 800fd9c:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 800fda0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fda4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fda8:	f7f7 fc50 	bl	800764c <__aeabi_dcmpgt>
 800fdac:	2800      	cmp	r0, #0
 800fdae:	d050      	beq.n	800fe52 <_dtoa_r+0x202>
 800fdb0:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fdb4:	2300      	movs	r3, #0
 800fdb6:	930f      	str	r3, [sp, #60]	; 0x3c
 800fdb8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fdba:	1b5d      	subs	r5, r3, r5
 800fdbc:	f1b5 0801 	subs.w	r8, r5, #1
 800fdc0:	bf49      	itett	mi
 800fdc2:	f1c5 0301 	rsbmi	r3, r5, #1
 800fdc6:	2300      	movpl	r3, #0
 800fdc8:	9305      	strmi	r3, [sp, #20]
 800fdca:	f04f 0800 	movmi.w	r8, #0
 800fdce:	bf58      	it	pl
 800fdd0:	9305      	strpl	r3, [sp, #20]
 800fdd2:	f1ba 0f00 	cmp.w	sl, #0
 800fdd6:	db3e      	blt.n	800fe56 <_dtoa_r+0x206>
 800fdd8:	2300      	movs	r3, #0
 800fdda:	44d0      	add	r8, sl
 800fddc:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800fde0:	9307      	str	r3, [sp, #28]
 800fde2:	9b06      	ldr	r3, [sp, #24]
 800fde4:	2b09      	cmp	r3, #9
 800fde6:	f200 808d 	bhi.w	800ff04 <_dtoa_r+0x2b4>
 800fdea:	2b05      	cmp	r3, #5
 800fdec:	bfc4      	itt	gt
 800fdee:	3b04      	subgt	r3, #4
 800fdf0:	9306      	strgt	r3, [sp, #24]
 800fdf2:	9b06      	ldr	r3, [sp, #24]
 800fdf4:	f1a3 0302 	sub.w	r3, r3, #2
 800fdf8:	bfcc      	ite	gt
 800fdfa:	2500      	movgt	r5, #0
 800fdfc:	2501      	movle	r5, #1
 800fdfe:	2b03      	cmp	r3, #3
 800fe00:	f200 808c 	bhi.w	800ff1c <_dtoa_r+0x2cc>
 800fe04:	e8df f003 	tbb	[pc, r3]
 800fe08:	6e317c7a 	.word	0x6e317c7a
 800fe0c:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 800fe10:	441d      	add	r5, r3
 800fe12:	f205 4032 	addw	r0, r5, #1074	; 0x432
 800fe16:	2820      	cmp	r0, #32
 800fe18:	dd13      	ble.n	800fe42 <_dtoa_r+0x1f2>
 800fe1a:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 800fe1e:	9b00      	ldr	r3, [sp, #0]
 800fe20:	fa08 f800 	lsl.w	r8, r8, r0
 800fe24:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800fe28:	fa23 f000 	lsr.w	r0, r3, r0
 800fe2c:	ea48 0000 	orr.w	r0, r8, r0
 800fe30:	f7f7 f902 	bl	8007038 <__aeabi_ui2d>
 800fe34:	2301      	movs	r3, #1
 800fe36:	4682      	mov	sl, r0
 800fe38:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 800fe3c:	3d01      	subs	r5, #1
 800fe3e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe40:	e772      	b.n	800fd28 <_dtoa_r+0xd8>
 800fe42:	9b00      	ldr	r3, [sp, #0]
 800fe44:	f1c0 0020 	rsb	r0, r0, #32
 800fe48:	fa03 f000 	lsl.w	r0, r3, r0
 800fe4c:	e7f0      	b.n	800fe30 <_dtoa_r+0x1e0>
 800fe4e:	2301      	movs	r3, #1
 800fe50:	e7b1      	b.n	800fdb6 <_dtoa_r+0x166>
 800fe52:	900f      	str	r0, [sp, #60]	; 0x3c
 800fe54:	e7b0      	b.n	800fdb8 <_dtoa_r+0x168>
 800fe56:	9b05      	ldr	r3, [sp, #20]
 800fe58:	eba3 030a 	sub.w	r3, r3, sl
 800fe5c:	9305      	str	r3, [sp, #20]
 800fe5e:	f1ca 0300 	rsb	r3, sl, #0
 800fe62:	9307      	str	r3, [sp, #28]
 800fe64:	2300      	movs	r3, #0
 800fe66:	930e      	str	r3, [sp, #56]	; 0x38
 800fe68:	e7bb      	b.n	800fde2 <_dtoa_r+0x192>
 800fe6a:	2301      	movs	r3, #1
 800fe6c:	930a      	str	r3, [sp, #40]	; 0x28
 800fe6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	dd56      	ble.n	800ff22 <_dtoa_r+0x2d2>
 800fe74:	9302      	str	r3, [sp, #8]
 800fe76:	4699      	mov	r9, r3
 800fe78:	2200      	movs	r2, #0
 800fe7a:	6462      	str	r2, [r4, #68]	; 0x44
 800fe7c:	2204      	movs	r2, #4
 800fe7e:	f102 0014 	add.w	r0, r2, #20
 800fe82:	4298      	cmp	r0, r3
 800fe84:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800fe86:	d951      	bls.n	800ff2c <_dtoa_r+0x2dc>
 800fe88:	4620      	mov	r0, r4
 800fe8a:	f000 ff67 	bl	8010d5c <_Balloc>
 800fe8e:	f1b9 0f0e 	cmp.w	r9, #14
 800fe92:	4683      	mov	fp, r0
 800fe94:	6420      	str	r0, [r4, #64]	; 0x40
 800fe96:	f200 80e8 	bhi.w	801006a <_dtoa_r+0x41a>
 800fe9a:	2d00      	cmp	r5, #0
 800fe9c:	f000 80e5 	beq.w	801006a <_dtoa_r+0x41a>
 800fea0:	ed9d 7b00 	vldr	d7, [sp]
 800fea4:	f1ba 0f00 	cmp.w	sl, #0
 800fea8:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 800feac:	dd76      	ble.n	800ff9c <_dtoa_r+0x34c>
 800feae:	4a2b      	ldr	r2, [pc, #172]	; (800ff5c <_dtoa_r+0x30c>)
 800feb0:	f00a 030f 	and.w	r3, sl, #15
 800feb4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800feb8:	ed93 7b00 	vldr	d7, [r3]
 800febc:	ea4f 162a 	mov.w	r6, sl, asr #4
 800fec0:	06f0      	lsls	r0, r6, #27
 800fec2:	ed8d 7b08 	vstr	d7, [sp, #32]
 800fec6:	d567      	bpl.n	800ff98 <_dtoa_r+0x348>
 800fec8:	4b25      	ldr	r3, [pc, #148]	; (800ff60 <_dtoa_r+0x310>)
 800feca:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800fece:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800fed2:	f7f7 fa55 	bl	8007380 <__aeabi_ddiv>
 800fed6:	e9cd 0100 	strd	r0, r1, [sp]
 800feda:	f006 060f 	and.w	r6, r6, #15
 800fede:	2503      	movs	r5, #3
 800fee0:	4f1f      	ldr	r7, [pc, #124]	; (800ff60 <_dtoa_r+0x310>)
 800fee2:	e04e      	b.n	800ff82 <_dtoa_r+0x332>
 800fee4:	2301      	movs	r3, #1
 800fee6:	930a      	str	r3, [sp, #40]	; 0x28
 800fee8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800feea:	4453      	add	r3, sl
 800feec:	f103 0901 	add.w	r9, r3, #1
 800fef0:	9302      	str	r3, [sp, #8]
 800fef2:	464b      	mov	r3, r9
 800fef4:	2b01      	cmp	r3, #1
 800fef6:	bfb8      	it	lt
 800fef8:	2301      	movlt	r3, #1
 800fefa:	e7bd      	b.n	800fe78 <_dtoa_r+0x228>
 800fefc:	2300      	movs	r3, #0
 800fefe:	e7b5      	b.n	800fe6c <_dtoa_r+0x21c>
 800ff00:	2300      	movs	r3, #0
 800ff02:	e7f0      	b.n	800fee6 <_dtoa_r+0x296>
 800ff04:	2501      	movs	r5, #1
 800ff06:	2300      	movs	r3, #0
 800ff08:	9306      	str	r3, [sp, #24]
 800ff0a:	950a      	str	r5, [sp, #40]	; 0x28
 800ff0c:	f04f 33ff 	mov.w	r3, #4294967295
 800ff10:	9302      	str	r3, [sp, #8]
 800ff12:	4699      	mov	r9, r3
 800ff14:	2200      	movs	r2, #0
 800ff16:	2312      	movs	r3, #18
 800ff18:	920b      	str	r2, [sp, #44]	; 0x2c
 800ff1a:	e7ad      	b.n	800fe78 <_dtoa_r+0x228>
 800ff1c:	2301      	movs	r3, #1
 800ff1e:	930a      	str	r3, [sp, #40]	; 0x28
 800ff20:	e7f4      	b.n	800ff0c <_dtoa_r+0x2bc>
 800ff22:	2301      	movs	r3, #1
 800ff24:	9302      	str	r3, [sp, #8]
 800ff26:	4699      	mov	r9, r3
 800ff28:	461a      	mov	r2, r3
 800ff2a:	e7f5      	b.n	800ff18 <_dtoa_r+0x2c8>
 800ff2c:	3101      	adds	r1, #1
 800ff2e:	6461      	str	r1, [r4, #68]	; 0x44
 800ff30:	0052      	lsls	r2, r2, #1
 800ff32:	e7a4      	b.n	800fe7e <_dtoa_r+0x22e>
 800ff34:	f3af 8000 	nop.w
 800ff38:	636f4361 	.word	0x636f4361
 800ff3c:	3fd287a7 	.word	0x3fd287a7
 800ff40:	8b60c8b3 	.word	0x8b60c8b3
 800ff44:	3fc68a28 	.word	0x3fc68a28
 800ff48:	509f79fb 	.word	0x509f79fb
 800ff4c:	3fd34413 	.word	0x3fd34413
 800ff50:	7ff00000 	.word	0x7ff00000
 800ff54:	0801f5e1 	.word	0x0801f5e1
 800ff58:	3ff80000 	.word	0x3ff80000
 800ff5c:	0801f638 	.word	0x0801f638
 800ff60:	0801f610 	.word	0x0801f610
 800ff64:	0801f60b 	.word	0x0801f60b
 800ff68:	07f1      	lsls	r1, r6, #31
 800ff6a:	d508      	bpl.n	800ff7e <_dtoa_r+0x32e>
 800ff6c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800ff70:	e9d7 2300 	ldrd	r2, r3, [r7]
 800ff74:	f7f7 f8da 	bl	800712c <__aeabi_dmul>
 800ff78:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800ff7c:	3501      	adds	r5, #1
 800ff7e:	1076      	asrs	r6, r6, #1
 800ff80:	3708      	adds	r7, #8
 800ff82:	2e00      	cmp	r6, #0
 800ff84:	d1f0      	bne.n	800ff68 <_dtoa_r+0x318>
 800ff86:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ff8a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800ff8e:	f7f7 f9f7 	bl	8007380 <__aeabi_ddiv>
 800ff92:	e9cd 0100 	strd	r0, r1, [sp]
 800ff96:	e01a      	b.n	800ffce <_dtoa_r+0x37e>
 800ff98:	2502      	movs	r5, #2
 800ff9a:	e7a1      	b.n	800fee0 <_dtoa_r+0x290>
 800ff9c:	f000 80a0 	beq.w	80100e0 <_dtoa_r+0x490>
 800ffa0:	f1ca 0600 	rsb	r6, sl, #0
 800ffa4:	4b9f      	ldr	r3, [pc, #636]	; (8010224 <_dtoa_r+0x5d4>)
 800ffa6:	4fa0      	ldr	r7, [pc, #640]	; (8010228 <_dtoa_r+0x5d8>)
 800ffa8:	f006 020f 	and.w	r2, r6, #15
 800ffac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ffb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ffb4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ffb8:	f7f7 f8b8 	bl	800712c <__aeabi_dmul>
 800ffbc:	e9cd 0100 	strd	r0, r1, [sp]
 800ffc0:	1136      	asrs	r6, r6, #4
 800ffc2:	2300      	movs	r3, #0
 800ffc4:	2502      	movs	r5, #2
 800ffc6:	2e00      	cmp	r6, #0
 800ffc8:	d17f      	bne.n	80100ca <_dtoa_r+0x47a>
 800ffca:	2b00      	cmp	r3, #0
 800ffcc:	d1e1      	bne.n	800ff92 <_dtoa_r+0x342>
 800ffce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ffd0:	2b00      	cmp	r3, #0
 800ffd2:	f000 8087 	beq.w	80100e4 <_dtoa_r+0x494>
 800ffd6:	e9dd 6700 	ldrd	r6, r7, [sp]
 800ffda:	2200      	movs	r2, #0
 800ffdc:	4b93      	ldr	r3, [pc, #588]	; (801022c <_dtoa_r+0x5dc>)
 800ffde:	4630      	mov	r0, r6
 800ffe0:	4639      	mov	r1, r7
 800ffe2:	f7f7 fb15 	bl	8007610 <__aeabi_dcmplt>
 800ffe6:	2800      	cmp	r0, #0
 800ffe8:	d07c      	beq.n	80100e4 <_dtoa_r+0x494>
 800ffea:	f1b9 0f00 	cmp.w	r9, #0
 800ffee:	d079      	beq.n	80100e4 <_dtoa_r+0x494>
 800fff0:	9b02      	ldr	r3, [sp, #8]
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	dd35      	ble.n	8010062 <_dtoa_r+0x412>
 800fff6:	f10a 33ff 	add.w	r3, sl, #4294967295
 800fffa:	9308      	str	r3, [sp, #32]
 800fffc:	4639      	mov	r1, r7
 800fffe:	2200      	movs	r2, #0
 8010000:	4b8b      	ldr	r3, [pc, #556]	; (8010230 <_dtoa_r+0x5e0>)
 8010002:	4630      	mov	r0, r6
 8010004:	f7f7 f892 	bl	800712c <__aeabi_dmul>
 8010008:	e9cd 0100 	strd	r0, r1, [sp]
 801000c:	9f02      	ldr	r7, [sp, #8]
 801000e:	3501      	adds	r5, #1
 8010010:	4628      	mov	r0, r5
 8010012:	f7f7 f821 	bl	8007058 <__aeabi_i2d>
 8010016:	e9dd 2300 	ldrd	r2, r3, [sp]
 801001a:	f7f7 f887 	bl	800712c <__aeabi_dmul>
 801001e:	2200      	movs	r2, #0
 8010020:	4b84      	ldr	r3, [pc, #528]	; (8010234 <_dtoa_r+0x5e4>)
 8010022:	f7f6 fecd 	bl	8006dc0 <__adddf3>
 8010026:	4605      	mov	r5, r0
 8010028:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 801002c:	2f00      	cmp	r7, #0
 801002e:	d15d      	bne.n	80100ec <_dtoa_r+0x49c>
 8010030:	2200      	movs	r2, #0
 8010032:	4b81      	ldr	r3, [pc, #516]	; (8010238 <_dtoa_r+0x5e8>)
 8010034:	e9dd 0100 	ldrd	r0, r1, [sp]
 8010038:	f7f6 fec0 	bl	8006dbc <__aeabi_dsub>
 801003c:	462a      	mov	r2, r5
 801003e:	4633      	mov	r3, r6
 8010040:	e9cd 0100 	strd	r0, r1, [sp]
 8010044:	f7f7 fb02 	bl	800764c <__aeabi_dcmpgt>
 8010048:	2800      	cmp	r0, #0
 801004a:	f040 8288 	bne.w	801055e <_dtoa_r+0x90e>
 801004e:	462a      	mov	r2, r5
 8010050:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8010054:	e9dd 0100 	ldrd	r0, r1, [sp]
 8010058:	f7f7 fada 	bl	8007610 <__aeabi_dcmplt>
 801005c:	2800      	cmp	r0, #0
 801005e:	f040 827c 	bne.w	801055a <_dtoa_r+0x90a>
 8010062:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8010066:	e9cd 2300 	strd	r2, r3, [sp]
 801006a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801006c:	2b00      	cmp	r3, #0
 801006e:	f2c0 8150 	blt.w	8010312 <_dtoa_r+0x6c2>
 8010072:	f1ba 0f0e 	cmp.w	sl, #14
 8010076:	f300 814c 	bgt.w	8010312 <_dtoa_r+0x6c2>
 801007a:	4b6a      	ldr	r3, [pc, #424]	; (8010224 <_dtoa_r+0x5d4>)
 801007c:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8010080:	ed93 7b00 	vldr	d7, [r3]
 8010084:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010086:	2b00      	cmp	r3, #0
 8010088:	ed8d 7b02 	vstr	d7, [sp, #8]
 801008c:	f280 80d8 	bge.w	8010240 <_dtoa_r+0x5f0>
 8010090:	f1b9 0f00 	cmp.w	r9, #0
 8010094:	f300 80d4 	bgt.w	8010240 <_dtoa_r+0x5f0>
 8010098:	f040 825e 	bne.w	8010558 <_dtoa_r+0x908>
 801009c:	2200      	movs	r2, #0
 801009e:	4b66      	ldr	r3, [pc, #408]	; (8010238 <_dtoa_r+0x5e8>)
 80100a0:	ec51 0b17 	vmov	r0, r1, d7
 80100a4:	f7f7 f842 	bl	800712c <__aeabi_dmul>
 80100a8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80100ac:	f7f7 fac4 	bl	8007638 <__aeabi_dcmpge>
 80100b0:	464f      	mov	r7, r9
 80100b2:	464e      	mov	r6, r9
 80100b4:	2800      	cmp	r0, #0
 80100b6:	f040 8234 	bne.w	8010522 <_dtoa_r+0x8d2>
 80100ba:	2331      	movs	r3, #49	; 0x31
 80100bc:	f10b 0501 	add.w	r5, fp, #1
 80100c0:	f88b 3000 	strb.w	r3, [fp]
 80100c4:	f10a 0a01 	add.w	sl, sl, #1
 80100c8:	e22f      	b.n	801052a <_dtoa_r+0x8da>
 80100ca:	07f2      	lsls	r2, r6, #31
 80100cc:	d505      	bpl.n	80100da <_dtoa_r+0x48a>
 80100ce:	e9d7 2300 	ldrd	r2, r3, [r7]
 80100d2:	f7f7 f82b 	bl	800712c <__aeabi_dmul>
 80100d6:	3501      	adds	r5, #1
 80100d8:	2301      	movs	r3, #1
 80100da:	1076      	asrs	r6, r6, #1
 80100dc:	3708      	adds	r7, #8
 80100de:	e772      	b.n	800ffc6 <_dtoa_r+0x376>
 80100e0:	2502      	movs	r5, #2
 80100e2:	e774      	b.n	800ffce <_dtoa_r+0x37e>
 80100e4:	f8cd a020 	str.w	sl, [sp, #32]
 80100e8:	464f      	mov	r7, r9
 80100ea:	e791      	b.n	8010010 <_dtoa_r+0x3c0>
 80100ec:	4b4d      	ldr	r3, [pc, #308]	; (8010224 <_dtoa_r+0x5d4>)
 80100ee:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80100f2:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 80100f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80100f8:	2b00      	cmp	r3, #0
 80100fa:	d047      	beq.n	801018c <_dtoa_r+0x53c>
 80100fc:	4602      	mov	r2, r0
 80100fe:	460b      	mov	r3, r1
 8010100:	2000      	movs	r0, #0
 8010102:	494e      	ldr	r1, [pc, #312]	; (801023c <_dtoa_r+0x5ec>)
 8010104:	f7f7 f93c 	bl	8007380 <__aeabi_ddiv>
 8010108:	462a      	mov	r2, r5
 801010a:	4633      	mov	r3, r6
 801010c:	f7f6 fe56 	bl	8006dbc <__aeabi_dsub>
 8010110:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8010114:	465d      	mov	r5, fp
 8010116:	e9dd 0100 	ldrd	r0, r1, [sp]
 801011a:	f7f7 fab7 	bl	800768c <__aeabi_d2iz>
 801011e:	4606      	mov	r6, r0
 8010120:	f7f6 ff9a 	bl	8007058 <__aeabi_i2d>
 8010124:	4602      	mov	r2, r0
 8010126:	460b      	mov	r3, r1
 8010128:	e9dd 0100 	ldrd	r0, r1, [sp]
 801012c:	f7f6 fe46 	bl	8006dbc <__aeabi_dsub>
 8010130:	3630      	adds	r6, #48	; 0x30
 8010132:	f805 6b01 	strb.w	r6, [r5], #1
 8010136:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801013a:	e9cd 0100 	strd	r0, r1, [sp]
 801013e:	f7f7 fa67 	bl	8007610 <__aeabi_dcmplt>
 8010142:	2800      	cmp	r0, #0
 8010144:	d163      	bne.n	801020e <_dtoa_r+0x5be>
 8010146:	e9dd 2300 	ldrd	r2, r3, [sp]
 801014a:	2000      	movs	r0, #0
 801014c:	4937      	ldr	r1, [pc, #220]	; (801022c <_dtoa_r+0x5dc>)
 801014e:	f7f6 fe35 	bl	8006dbc <__aeabi_dsub>
 8010152:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8010156:	f7f7 fa5b 	bl	8007610 <__aeabi_dcmplt>
 801015a:	2800      	cmp	r0, #0
 801015c:	f040 80b7 	bne.w	80102ce <_dtoa_r+0x67e>
 8010160:	eba5 030b 	sub.w	r3, r5, fp
 8010164:	429f      	cmp	r7, r3
 8010166:	f77f af7c 	ble.w	8010062 <_dtoa_r+0x412>
 801016a:	2200      	movs	r2, #0
 801016c:	4b30      	ldr	r3, [pc, #192]	; (8010230 <_dtoa_r+0x5e0>)
 801016e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8010172:	f7f6 ffdb 	bl	800712c <__aeabi_dmul>
 8010176:	2200      	movs	r2, #0
 8010178:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 801017c:	4b2c      	ldr	r3, [pc, #176]	; (8010230 <_dtoa_r+0x5e0>)
 801017e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8010182:	f7f6 ffd3 	bl	800712c <__aeabi_dmul>
 8010186:	e9cd 0100 	strd	r0, r1, [sp]
 801018a:	e7c4      	b.n	8010116 <_dtoa_r+0x4c6>
 801018c:	462a      	mov	r2, r5
 801018e:	4633      	mov	r3, r6
 8010190:	f7f6 ffcc 	bl	800712c <__aeabi_dmul>
 8010194:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8010198:	eb0b 0507 	add.w	r5, fp, r7
 801019c:	465e      	mov	r6, fp
 801019e:	e9dd 0100 	ldrd	r0, r1, [sp]
 80101a2:	f7f7 fa73 	bl	800768c <__aeabi_d2iz>
 80101a6:	4607      	mov	r7, r0
 80101a8:	f7f6 ff56 	bl	8007058 <__aeabi_i2d>
 80101ac:	3730      	adds	r7, #48	; 0x30
 80101ae:	4602      	mov	r2, r0
 80101b0:	460b      	mov	r3, r1
 80101b2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80101b6:	f7f6 fe01 	bl	8006dbc <__aeabi_dsub>
 80101ba:	f806 7b01 	strb.w	r7, [r6], #1
 80101be:	42ae      	cmp	r6, r5
 80101c0:	e9cd 0100 	strd	r0, r1, [sp]
 80101c4:	f04f 0200 	mov.w	r2, #0
 80101c8:	d126      	bne.n	8010218 <_dtoa_r+0x5c8>
 80101ca:	4b1c      	ldr	r3, [pc, #112]	; (801023c <_dtoa_r+0x5ec>)
 80101cc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80101d0:	f7f6 fdf6 	bl	8006dc0 <__adddf3>
 80101d4:	4602      	mov	r2, r0
 80101d6:	460b      	mov	r3, r1
 80101d8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80101dc:	f7f7 fa36 	bl	800764c <__aeabi_dcmpgt>
 80101e0:	2800      	cmp	r0, #0
 80101e2:	d174      	bne.n	80102ce <_dtoa_r+0x67e>
 80101e4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80101e8:	2000      	movs	r0, #0
 80101ea:	4914      	ldr	r1, [pc, #80]	; (801023c <_dtoa_r+0x5ec>)
 80101ec:	f7f6 fde6 	bl	8006dbc <__aeabi_dsub>
 80101f0:	4602      	mov	r2, r0
 80101f2:	460b      	mov	r3, r1
 80101f4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80101f8:	f7f7 fa0a 	bl	8007610 <__aeabi_dcmplt>
 80101fc:	2800      	cmp	r0, #0
 80101fe:	f43f af30 	beq.w	8010062 <_dtoa_r+0x412>
 8010202:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8010206:	2b30      	cmp	r3, #48	; 0x30
 8010208:	f105 32ff 	add.w	r2, r5, #4294967295
 801020c:	d002      	beq.n	8010214 <_dtoa_r+0x5c4>
 801020e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010212:	e04a      	b.n	80102aa <_dtoa_r+0x65a>
 8010214:	4615      	mov	r5, r2
 8010216:	e7f4      	b.n	8010202 <_dtoa_r+0x5b2>
 8010218:	4b05      	ldr	r3, [pc, #20]	; (8010230 <_dtoa_r+0x5e0>)
 801021a:	f7f6 ff87 	bl	800712c <__aeabi_dmul>
 801021e:	e9cd 0100 	strd	r0, r1, [sp]
 8010222:	e7bc      	b.n	801019e <_dtoa_r+0x54e>
 8010224:	0801f638 	.word	0x0801f638
 8010228:	0801f610 	.word	0x0801f610
 801022c:	3ff00000 	.word	0x3ff00000
 8010230:	40240000 	.word	0x40240000
 8010234:	401c0000 	.word	0x401c0000
 8010238:	40140000 	.word	0x40140000
 801023c:	3fe00000 	.word	0x3fe00000
 8010240:	e9dd 6700 	ldrd	r6, r7, [sp]
 8010244:	465d      	mov	r5, fp
 8010246:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801024a:	4630      	mov	r0, r6
 801024c:	4639      	mov	r1, r7
 801024e:	f7f7 f897 	bl	8007380 <__aeabi_ddiv>
 8010252:	f7f7 fa1b 	bl	800768c <__aeabi_d2iz>
 8010256:	4680      	mov	r8, r0
 8010258:	f7f6 fefe 	bl	8007058 <__aeabi_i2d>
 801025c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010260:	f7f6 ff64 	bl	800712c <__aeabi_dmul>
 8010264:	4602      	mov	r2, r0
 8010266:	460b      	mov	r3, r1
 8010268:	4630      	mov	r0, r6
 801026a:	4639      	mov	r1, r7
 801026c:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8010270:	f7f6 fda4 	bl	8006dbc <__aeabi_dsub>
 8010274:	f805 6b01 	strb.w	r6, [r5], #1
 8010278:	eba5 060b 	sub.w	r6, r5, fp
 801027c:	45b1      	cmp	r9, r6
 801027e:	4602      	mov	r2, r0
 8010280:	460b      	mov	r3, r1
 8010282:	d139      	bne.n	80102f8 <_dtoa_r+0x6a8>
 8010284:	f7f6 fd9c 	bl	8006dc0 <__adddf3>
 8010288:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801028c:	4606      	mov	r6, r0
 801028e:	460f      	mov	r7, r1
 8010290:	f7f7 f9dc 	bl	800764c <__aeabi_dcmpgt>
 8010294:	b9c8      	cbnz	r0, 80102ca <_dtoa_r+0x67a>
 8010296:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801029a:	4630      	mov	r0, r6
 801029c:	4639      	mov	r1, r7
 801029e:	f7f7 f9ad 	bl	80075fc <__aeabi_dcmpeq>
 80102a2:	b110      	cbz	r0, 80102aa <_dtoa_r+0x65a>
 80102a4:	f018 0f01 	tst.w	r8, #1
 80102a8:	d10f      	bne.n	80102ca <_dtoa_r+0x67a>
 80102aa:	9904      	ldr	r1, [sp, #16]
 80102ac:	4620      	mov	r0, r4
 80102ae:	f000 fd7a 	bl	8010da6 <_Bfree>
 80102b2:	2300      	movs	r3, #0
 80102b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80102b6:	702b      	strb	r3, [r5, #0]
 80102b8:	f10a 0301 	add.w	r3, sl, #1
 80102bc:	6013      	str	r3, [r2, #0]
 80102be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80102c0:	2b00      	cmp	r3, #0
 80102c2:	f43f acff 	beq.w	800fcc4 <_dtoa_r+0x74>
 80102c6:	601d      	str	r5, [r3, #0]
 80102c8:	e4fc      	b.n	800fcc4 <_dtoa_r+0x74>
 80102ca:	f8cd a020 	str.w	sl, [sp, #32]
 80102ce:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80102d2:	2a39      	cmp	r2, #57	; 0x39
 80102d4:	f105 33ff 	add.w	r3, r5, #4294967295
 80102d8:	d108      	bne.n	80102ec <_dtoa_r+0x69c>
 80102da:	459b      	cmp	fp, r3
 80102dc:	d10a      	bne.n	80102f4 <_dtoa_r+0x6a4>
 80102de:	9b08      	ldr	r3, [sp, #32]
 80102e0:	3301      	adds	r3, #1
 80102e2:	9308      	str	r3, [sp, #32]
 80102e4:	2330      	movs	r3, #48	; 0x30
 80102e6:	f88b 3000 	strb.w	r3, [fp]
 80102ea:	465b      	mov	r3, fp
 80102ec:	781a      	ldrb	r2, [r3, #0]
 80102ee:	3201      	adds	r2, #1
 80102f0:	701a      	strb	r2, [r3, #0]
 80102f2:	e78c      	b.n	801020e <_dtoa_r+0x5be>
 80102f4:	461d      	mov	r5, r3
 80102f6:	e7ea      	b.n	80102ce <_dtoa_r+0x67e>
 80102f8:	2200      	movs	r2, #0
 80102fa:	4b9b      	ldr	r3, [pc, #620]	; (8010568 <_dtoa_r+0x918>)
 80102fc:	f7f6 ff16 	bl	800712c <__aeabi_dmul>
 8010300:	2200      	movs	r2, #0
 8010302:	2300      	movs	r3, #0
 8010304:	4606      	mov	r6, r0
 8010306:	460f      	mov	r7, r1
 8010308:	f7f7 f978 	bl	80075fc <__aeabi_dcmpeq>
 801030c:	2800      	cmp	r0, #0
 801030e:	d09a      	beq.n	8010246 <_dtoa_r+0x5f6>
 8010310:	e7cb      	b.n	80102aa <_dtoa_r+0x65a>
 8010312:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010314:	2a00      	cmp	r2, #0
 8010316:	f000 808b 	beq.w	8010430 <_dtoa_r+0x7e0>
 801031a:	9a06      	ldr	r2, [sp, #24]
 801031c:	2a01      	cmp	r2, #1
 801031e:	dc6e      	bgt.n	80103fe <_dtoa_r+0x7ae>
 8010320:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010322:	2a00      	cmp	r2, #0
 8010324:	d067      	beq.n	80103f6 <_dtoa_r+0x7a6>
 8010326:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801032a:	9f07      	ldr	r7, [sp, #28]
 801032c:	9d05      	ldr	r5, [sp, #20]
 801032e:	9a05      	ldr	r2, [sp, #20]
 8010330:	2101      	movs	r1, #1
 8010332:	441a      	add	r2, r3
 8010334:	4620      	mov	r0, r4
 8010336:	9205      	str	r2, [sp, #20]
 8010338:	4498      	add	r8, r3
 801033a:	f000 fdc6 	bl	8010eca <__i2b>
 801033e:	4606      	mov	r6, r0
 8010340:	2d00      	cmp	r5, #0
 8010342:	dd0c      	ble.n	801035e <_dtoa_r+0x70e>
 8010344:	f1b8 0f00 	cmp.w	r8, #0
 8010348:	dd09      	ble.n	801035e <_dtoa_r+0x70e>
 801034a:	4545      	cmp	r5, r8
 801034c:	9a05      	ldr	r2, [sp, #20]
 801034e:	462b      	mov	r3, r5
 8010350:	bfa8      	it	ge
 8010352:	4643      	movge	r3, r8
 8010354:	1ad2      	subs	r2, r2, r3
 8010356:	9205      	str	r2, [sp, #20]
 8010358:	1aed      	subs	r5, r5, r3
 801035a:	eba8 0803 	sub.w	r8, r8, r3
 801035e:	9b07      	ldr	r3, [sp, #28]
 8010360:	b1eb      	cbz	r3, 801039e <_dtoa_r+0x74e>
 8010362:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010364:	2b00      	cmp	r3, #0
 8010366:	d067      	beq.n	8010438 <_dtoa_r+0x7e8>
 8010368:	b18f      	cbz	r7, 801038e <_dtoa_r+0x73e>
 801036a:	4631      	mov	r1, r6
 801036c:	463a      	mov	r2, r7
 801036e:	4620      	mov	r0, r4
 8010370:	f000 fe4a 	bl	8011008 <__pow5mult>
 8010374:	9a04      	ldr	r2, [sp, #16]
 8010376:	4601      	mov	r1, r0
 8010378:	4606      	mov	r6, r0
 801037a:	4620      	mov	r0, r4
 801037c:	f000 fdae 	bl	8010edc <__multiply>
 8010380:	9904      	ldr	r1, [sp, #16]
 8010382:	9008      	str	r0, [sp, #32]
 8010384:	4620      	mov	r0, r4
 8010386:	f000 fd0e 	bl	8010da6 <_Bfree>
 801038a:	9b08      	ldr	r3, [sp, #32]
 801038c:	9304      	str	r3, [sp, #16]
 801038e:	9b07      	ldr	r3, [sp, #28]
 8010390:	1bda      	subs	r2, r3, r7
 8010392:	d004      	beq.n	801039e <_dtoa_r+0x74e>
 8010394:	9904      	ldr	r1, [sp, #16]
 8010396:	4620      	mov	r0, r4
 8010398:	f000 fe36 	bl	8011008 <__pow5mult>
 801039c:	9004      	str	r0, [sp, #16]
 801039e:	2101      	movs	r1, #1
 80103a0:	4620      	mov	r0, r4
 80103a2:	f000 fd92 	bl	8010eca <__i2b>
 80103a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103a8:	4607      	mov	r7, r0
 80103aa:	2b00      	cmp	r3, #0
 80103ac:	f000 81cf 	beq.w	801074e <_dtoa_r+0xafe>
 80103b0:	461a      	mov	r2, r3
 80103b2:	4601      	mov	r1, r0
 80103b4:	4620      	mov	r0, r4
 80103b6:	f000 fe27 	bl	8011008 <__pow5mult>
 80103ba:	9b06      	ldr	r3, [sp, #24]
 80103bc:	2b01      	cmp	r3, #1
 80103be:	4607      	mov	r7, r0
 80103c0:	dc40      	bgt.n	8010444 <_dtoa_r+0x7f4>
 80103c2:	9b00      	ldr	r3, [sp, #0]
 80103c4:	2b00      	cmp	r3, #0
 80103c6:	d139      	bne.n	801043c <_dtoa_r+0x7ec>
 80103c8:	9b01      	ldr	r3, [sp, #4]
 80103ca:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	d136      	bne.n	8010440 <_dtoa_r+0x7f0>
 80103d2:	9b01      	ldr	r3, [sp, #4]
 80103d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80103d8:	0d1b      	lsrs	r3, r3, #20
 80103da:	051b      	lsls	r3, r3, #20
 80103dc:	b12b      	cbz	r3, 80103ea <_dtoa_r+0x79a>
 80103de:	9b05      	ldr	r3, [sp, #20]
 80103e0:	3301      	adds	r3, #1
 80103e2:	9305      	str	r3, [sp, #20]
 80103e4:	f108 0801 	add.w	r8, r8, #1
 80103e8:	2301      	movs	r3, #1
 80103ea:	9307      	str	r3, [sp, #28]
 80103ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103ee:	2b00      	cmp	r3, #0
 80103f0:	d12a      	bne.n	8010448 <_dtoa_r+0x7f8>
 80103f2:	2001      	movs	r0, #1
 80103f4:	e030      	b.n	8010458 <_dtoa_r+0x808>
 80103f6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80103f8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80103fc:	e795      	b.n	801032a <_dtoa_r+0x6da>
 80103fe:	9b07      	ldr	r3, [sp, #28]
 8010400:	f109 37ff 	add.w	r7, r9, #4294967295
 8010404:	42bb      	cmp	r3, r7
 8010406:	bfbf      	itttt	lt
 8010408:	9b07      	ldrlt	r3, [sp, #28]
 801040a:	9707      	strlt	r7, [sp, #28]
 801040c:	1afa      	sublt	r2, r7, r3
 801040e:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8010410:	bfbb      	ittet	lt
 8010412:	189b      	addlt	r3, r3, r2
 8010414:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010416:	1bdf      	subge	r7, r3, r7
 8010418:	2700      	movlt	r7, #0
 801041a:	f1b9 0f00 	cmp.w	r9, #0
 801041e:	bfb5      	itete	lt
 8010420:	9b05      	ldrlt	r3, [sp, #20]
 8010422:	9d05      	ldrge	r5, [sp, #20]
 8010424:	eba3 0509 	sublt.w	r5, r3, r9
 8010428:	464b      	movge	r3, r9
 801042a:	bfb8      	it	lt
 801042c:	2300      	movlt	r3, #0
 801042e:	e77e      	b.n	801032e <_dtoa_r+0x6de>
 8010430:	9f07      	ldr	r7, [sp, #28]
 8010432:	9d05      	ldr	r5, [sp, #20]
 8010434:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8010436:	e783      	b.n	8010340 <_dtoa_r+0x6f0>
 8010438:	9a07      	ldr	r2, [sp, #28]
 801043a:	e7ab      	b.n	8010394 <_dtoa_r+0x744>
 801043c:	2300      	movs	r3, #0
 801043e:	e7d4      	b.n	80103ea <_dtoa_r+0x79a>
 8010440:	9b00      	ldr	r3, [sp, #0]
 8010442:	e7d2      	b.n	80103ea <_dtoa_r+0x79a>
 8010444:	2300      	movs	r3, #0
 8010446:	9307      	str	r3, [sp, #28]
 8010448:	693b      	ldr	r3, [r7, #16]
 801044a:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 801044e:	6918      	ldr	r0, [r3, #16]
 8010450:	f000 fced 	bl	8010e2e <__hi0bits>
 8010454:	f1c0 0020 	rsb	r0, r0, #32
 8010458:	4440      	add	r0, r8
 801045a:	f010 001f 	ands.w	r0, r0, #31
 801045e:	d047      	beq.n	80104f0 <_dtoa_r+0x8a0>
 8010460:	f1c0 0320 	rsb	r3, r0, #32
 8010464:	2b04      	cmp	r3, #4
 8010466:	dd3b      	ble.n	80104e0 <_dtoa_r+0x890>
 8010468:	9b05      	ldr	r3, [sp, #20]
 801046a:	f1c0 001c 	rsb	r0, r0, #28
 801046e:	4403      	add	r3, r0
 8010470:	9305      	str	r3, [sp, #20]
 8010472:	4405      	add	r5, r0
 8010474:	4480      	add	r8, r0
 8010476:	9b05      	ldr	r3, [sp, #20]
 8010478:	2b00      	cmp	r3, #0
 801047a:	dd05      	ble.n	8010488 <_dtoa_r+0x838>
 801047c:	461a      	mov	r2, r3
 801047e:	9904      	ldr	r1, [sp, #16]
 8010480:	4620      	mov	r0, r4
 8010482:	f000 fe01 	bl	8011088 <__lshift>
 8010486:	9004      	str	r0, [sp, #16]
 8010488:	f1b8 0f00 	cmp.w	r8, #0
 801048c:	dd05      	ble.n	801049a <_dtoa_r+0x84a>
 801048e:	4639      	mov	r1, r7
 8010490:	4642      	mov	r2, r8
 8010492:	4620      	mov	r0, r4
 8010494:	f000 fdf8 	bl	8011088 <__lshift>
 8010498:	4607      	mov	r7, r0
 801049a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801049c:	b353      	cbz	r3, 80104f4 <_dtoa_r+0x8a4>
 801049e:	4639      	mov	r1, r7
 80104a0:	9804      	ldr	r0, [sp, #16]
 80104a2:	f000 fe45 	bl	8011130 <__mcmp>
 80104a6:	2800      	cmp	r0, #0
 80104a8:	da24      	bge.n	80104f4 <_dtoa_r+0x8a4>
 80104aa:	2300      	movs	r3, #0
 80104ac:	220a      	movs	r2, #10
 80104ae:	9904      	ldr	r1, [sp, #16]
 80104b0:	4620      	mov	r0, r4
 80104b2:	f000 fc81 	bl	8010db8 <__multadd>
 80104b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80104b8:	9004      	str	r0, [sp, #16]
 80104ba:	f10a 3aff 	add.w	sl, sl, #4294967295
 80104be:	2b00      	cmp	r3, #0
 80104c0:	f000 814c 	beq.w	801075c <_dtoa_r+0xb0c>
 80104c4:	2300      	movs	r3, #0
 80104c6:	4631      	mov	r1, r6
 80104c8:	220a      	movs	r2, #10
 80104ca:	4620      	mov	r0, r4
 80104cc:	f000 fc74 	bl	8010db8 <__multadd>
 80104d0:	9b02      	ldr	r3, [sp, #8]
 80104d2:	2b00      	cmp	r3, #0
 80104d4:	4606      	mov	r6, r0
 80104d6:	dc4f      	bgt.n	8010578 <_dtoa_r+0x928>
 80104d8:	9b06      	ldr	r3, [sp, #24]
 80104da:	2b02      	cmp	r3, #2
 80104dc:	dd4c      	ble.n	8010578 <_dtoa_r+0x928>
 80104de:	e011      	b.n	8010504 <_dtoa_r+0x8b4>
 80104e0:	d0c9      	beq.n	8010476 <_dtoa_r+0x826>
 80104e2:	9a05      	ldr	r2, [sp, #20]
 80104e4:	331c      	adds	r3, #28
 80104e6:	441a      	add	r2, r3
 80104e8:	9205      	str	r2, [sp, #20]
 80104ea:	441d      	add	r5, r3
 80104ec:	4498      	add	r8, r3
 80104ee:	e7c2      	b.n	8010476 <_dtoa_r+0x826>
 80104f0:	4603      	mov	r3, r0
 80104f2:	e7f6      	b.n	80104e2 <_dtoa_r+0x892>
 80104f4:	f1b9 0f00 	cmp.w	r9, #0
 80104f8:	dc38      	bgt.n	801056c <_dtoa_r+0x91c>
 80104fa:	9b06      	ldr	r3, [sp, #24]
 80104fc:	2b02      	cmp	r3, #2
 80104fe:	dd35      	ble.n	801056c <_dtoa_r+0x91c>
 8010500:	f8cd 9008 	str.w	r9, [sp, #8]
 8010504:	9b02      	ldr	r3, [sp, #8]
 8010506:	b963      	cbnz	r3, 8010522 <_dtoa_r+0x8d2>
 8010508:	4639      	mov	r1, r7
 801050a:	2205      	movs	r2, #5
 801050c:	4620      	mov	r0, r4
 801050e:	f000 fc53 	bl	8010db8 <__multadd>
 8010512:	4601      	mov	r1, r0
 8010514:	4607      	mov	r7, r0
 8010516:	9804      	ldr	r0, [sp, #16]
 8010518:	f000 fe0a 	bl	8011130 <__mcmp>
 801051c:	2800      	cmp	r0, #0
 801051e:	f73f adcc 	bgt.w	80100ba <_dtoa_r+0x46a>
 8010522:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010524:	465d      	mov	r5, fp
 8010526:	ea6f 0a03 	mvn.w	sl, r3
 801052a:	f04f 0900 	mov.w	r9, #0
 801052e:	4639      	mov	r1, r7
 8010530:	4620      	mov	r0, r4
 8010532:	f000 fc38 	bl	8010da6 <_Bfree>
 8010536:	2e00      	cmp	r6, #0
 8010538:	f43f aeb7 	beq.w	80102aa <_dtoa_r+0x65a>
 801053c:	f1b9 0f00 	cmp.w	r9, #0
 8010540:	d005      	beq.n	801054e <_dtoa_r+0x8fe>
 8010542:	45b1      	cmp	r9, r6
 8010544:	d003      	beq.n	801054e <_dtoa_r+0x8fe>
 8010546:	4649      	mov	r1, r9
 8010548:	4620      	mov	r0, r4
 801054a:	f000 fc2c 	bl	8010da6 <_Bfree>
 801054e:	4631      	mov	r1, r6
 8010550:	4620      	mov	r0, r4
 8010552:	f000 fc28 	bl	8010da6 <_Bfree>
 8010556:	e6a8      	b.n	80102aa <_dtoa_r+0x65a>
 8010558:	2700      	movs	r7, #0
 801055a:	463e      	mov	r6, r7
 801055c:	e7e1      	b.n	8010522 <_dtoa_r+0x8d2>
 801055e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010562:	463e      	mov	r6, r7
 8010564:	e5a9      	b.n	80100ba <_dtoa_r+0x46a>
 8010566:	bf00      	nop
 8010568:	40240000 	.word	0x40240000
 801056c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801056e:	f8cd 9008 	str.w	r9, [sp, #8]
 8010572:	2b00      	cmp	r3, #0
 8010574:	f000 80f9 	beq.w	801076a <_dtoa_r+0xb1a>
 8010578:	2d00      	cmp	r5, #0
 801057a:	dd05      	ble.n	8010588 <_dtoa_r+0x938>
 801057c:	4631      	mov	r1, r6
 801057e:	462a      	mov	r2, r5
 8010580:	4620      	mov	r0, r4
 8010582:	f000 fd81 	bl	8011088 <__lshift>
 8010586:	4606      	mov	r6, r0
 8010588:	9b07      	ldr	r3, [sp, #28]
 801058a:	2b00      	cmp	r3, #0
 801058c:	d04c      	beq.n	8010628 <_dtoa_r+0x9d8>
 801058e:	6871      	ldr	r1, [r6, #4]
 8010590:	4620      	mov	r0, r4
 8010592:	f000 fbe3 	bl	8010d5c <_Balloc>
 8010596:	6932      	ldr	r2, [r6, #16]
 8010598:	3202      	adds	r2, #2
 801059a:	4605      	mov	r5, r0
 801059c:	0092      	lsls	r2, r2, #2
 801059e:	f106 010c 	add.w	r1, r6, #12
 80105a2:	300c      	adds	r0, #12
 80105a4:	f7fd fce3 	bl	800df6e <memcpy>
 80105a8:	2201      	movs	r2, #1
 80105aa:	4629      	mov	r1, r5
 80105ac:	4620      	mov	r0, r4
 80105ae:	f000 fd6b 	bl	8011088 <__lshift>
 80105b2:	9b00      	ldr	r3, [sp, #0]
 80105b4:	f8cd b014 	str.w	fp, [sp, #20]
 80105b8:	f003 0301 	and.w	r3, r3, #1
 80105bc:	46b1      	mov	r9, r6
 80105be:	9307      	str	r3, [sp, #28]
 80105c0:	4606      	mov	r6, r0
 80105c2:	4639      	mov	r1, r7
 80105c4:	9804      	ldr	r0, [sp, #16]
 80105c6:	f7ff fab5 	bl	800fb34 <quorem>
 80105ca:	4649      	mov	r1, r9
 80105cc:	4605      	mov	r5, r0
 80105ce:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80105d2:	9804      	ldr	r0, [sp, #16]
 80105d4:	f000 fdac 	bl	8011130 <__mcmp>
 80105d8:	4632      	mov	r2, r6
 80105da:	9000      	str	r0, [sp, #0]
 80105dc:	4639      	mov	r1, r7
 80105de:	4620      	mov	r0, r4
 80105e0:	f000 fdc0 	bl	8011164 <__mdiff>
 80105e4:	68c3      	ldr	r3, [r0, #12]
 80105e6:	4602      	mov	r2, r0
 80105e8:	bb03      	cbnz	r3, 801062c <_dtoa_r+0x9dc>
 80105ea:	4601      	mov	r1, r0
 80105ec:	9008      	str	r0, [sp, #32]
 80105ee:	9804      	ldr	r0, [sp, #16]
 80105f0:	f000 fd9e 	bl	8011130 <__mcmp>
 80105f4:	9a08      	ldr	r2, [sp, #32]
 80105f6:	4603      	mov	r3, r0
 80105f8:	4611      	mov	r1, r2
 80105fa:	4620      	mov	r0, r4
 80105fc:	9308      	str	r3, [sp, #32]
 80105fe:	f000 fbd2 	bl	8010da6 <_Bfree>
 8010602:	9b08      	ldr	r3, [sp, #32]
 8010604:	b9a3      	cbnz	r3, 8010630 <_dtoa_r+0x9e0>
 8010606:	9a06      	ldr	r2, [sp, #24]
 8010608:	b992      	cbnz	r2, 8010630 <_dtoa_r+0x9e0>
 801060a:	9a07      	ldr	r2, [sp, #28]
 801060c:	b982      	cbnz	r2, 8010630 <_dtoa_r+0x9e0>
 801060e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8010612:	d029      	beq.n	8010668 <_dtoa_r+0xa18>
 8010614:	9b00      	ldr	r3, [sp, #0]
 8010616:	2b00      	cmp	r3, #0
 8010618:	dd01      	ble.n	801061e <_dtoa_r+0x9ce>
 801061a:	f105 0831 	add.w	r8, r5, #49	; 0x31
 801061e:	9b05      	ldr	r3, [sp, #20]
 8010620:	1c5d      	adds	r5, r3, #1
 8010622:	f883 8000 	strb.w	r8, [r3]
 8010626:	e782      	b.n	801052e <_dtoa_r+0x8de>
 8010628:	4630      	mov	r0, r6
 801062a:	e7c2      	b.n	80105b2 <_dtoa_r+0x962>
 801062c:	2301      	movs	r3, #1
 801062e:	e7e3      	b.n	80105f8 <_dtoa_r+0x9a8>
 8010630:	9a00      	ldr	r2, [sp, #0]
 8010632:	2a00      	cmp	r2, #0
 8010634:	db04      	blt.n	8010640 <_dtoa_r+0x9f0>
 8010636:	d125      	bne.n	8010684 <_dtoa_r+0xa34>
 8010638:	9a06      	ldr	r2, [sp, #24]
 801063a:	bb1a      	cbnz	r2, 8010684 <_dtoa_r+0xa34>
 801063c:	9a07      	ldr	r2, [sp, #28]
 801063e:	bb0a      	cbnz	r2, 8010684 <_dtoa_r+0xa34>
 8010640:	2b00      	cmp	r3, #0
 8010642:	ddec      	ble.n	801061e <_dtoa_r+0x9ce>
 8010644:	2201      	movs	r2, #1
 8010646:	9904      	ldr	r1, [sp, #16]
 8010648:	4620      	mov	r0, r4
 801064a:	f000 fd1d 	bl	8011088 <__lshift>
 801064e:	4639      	mov	r1, r7
 8010650:	9004      	str	r0, [sp, #16]
 8010652:	f000 fd6d 	bl	8011130 <__mcmp>
 8010656:	2800      	cmp	r0, #0
 8010658:	dc03      	bgt.n	8010662 <_dtoa_r+0xa12>
 801065a:	d1e0      	bne.n	801061e <_dtoa_r+0x9ce>
 801065c:	f018 0f01 	tst.w	r8, #1
 8010660:	d0dd      	beq.n	801061e <_dtoa_r+0x9ce>
 8010662:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8010666:	d1d8      	bne.n	801061a <_dtoa_r+0x9ca>
 8010668:	9b05      	ldr	r3, [sp, #20]
 801066a:	9a05      	ldr	r2, [sp, #20]
 801066c:	1c5d      	adds	r5, r3, #1
 801066e:	2339      	movs	r3, #57	; 0x39
 8010670:	7013      	strb	r3, [r2, #0]
 8010672:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8010676:	2b39      	cmp	r3, #57	; 0x39
 8010678:	f105 32ff 	add.w	r2, r5, #4294967295
 801067c:	d04f      	beq.n	801071e <_dtoa_r+0xace>
 801067e:	3301      	adds	r3, #1
 8010680:	7013      	strb	r3, [r2, #0]
 8010682:	e754      	b.n	801052e <_dtoa_r+0x8de>
 8010684:	9a05      	ldr	r2, [sp, #20]
 8010686:	2b00      	cmp	r3, #0
 8010688:	f102 0501 	add.w	r5, r2, #1
 801068c:	dd06      	ble.n	801069c <_dtoa_r+0xa4c>
 801068e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8010692:	d0e9      	beq.n	8010668 <_dtoa_r+0xa18>
 8010694:	f108 0801 	add.w	r8, r8, #1
 8010698:	9b05      	ldr	r3, [sp, #20]
 801069a:	e7c2      	b.n	8010622 <_dtoa_r+0x9d2>
 801069c:	9a02      	ldr	r2, [sp, #8]
 801069e:	f805 8c01 	strb.w	r8, [r5, #-1]
 80106a2:	eba5 030b 	sub.w	r3, r5, fp
 80106a6:	4293      	cmp	r3, r2
 80106a8:	d021      	beq.n	80106ee <_dtoa_r+0xa9e>
 80106aa:	2300      	movs	r3, #0
 80106ac:	220a      	movs	r2, #10
 80106ae:	9904      	ldr	r1, [sp, #16]
 80106b0:	4620      	mov	r0, r4
 80106b2:	f000 fb81 	bl	8010db8 <__multadd>
 80106b6:	45b1      	cmp	r9, r6
 80106b8:	9004      	str	r0, [sp, #16]
 80106ba:	f04f 0300 	mov.w	r3, #0
 80106be:	f04f 020a 	mov.w	r2, #10
 80106c2:	4649      	mov	r1, r9
 80106c4:	4620      	mov	r0, r4
 80106c6:	d105      	bne.n	80106d4 <_dtoa_r+0xa84>
 80106c8:	f000 fb76 	bl	8010db8 <__multadd>
 80106cc:	4681      	mov	r9, r0
 80106ce:	4606      	mov	r6, r0
 80106d0:	9505      	str	r5, [sp, #20]
 80106d2:	e776      	b.n	80105c2 <_dtoa_r+0x972>
 80106d4:	f000 fb70 	bl	8010db8 <__multadd>
 80106d8:	4631      	mov	r1, r6
 80106da:	4681      	mov	r9, r0
 80106dc:	2300      	movs	r3, #0
 80106de:	220a      	movs	r2, #10
 80106e0:	4620      	mov	r0, r4
 80106e2:	f000 fb69 	bl	8010db8 <__multadd>
 80106e6:	4606      	mov	r6, r0
 80106e8:	e7f2      	b.n	80106d0 <_dtoa_r+0xa80>
 80106ea:	f04f 0900 	mov.w	r9, #0
 80106ee:	2201      	movs	r2, #1
 80106f0:	9904      	ldr	r1, [sp, #16]
 80106f2:	4620      	mov	r0, r4
 80106f4:	f000 fcc8 	bl	8011088 <__lshift>
 80106f8:	4639      	mov	r1, r7
 80106fa:	9004      	str	r0, [sp, #16]
 80106fc:	f000 fd18 	bl	8011130 <__mcmp>
 8010700:	2800      	cmp	r0, #0
 8010702:	dcb6      	bgt.n	8010672 <_dtoa_r+0xa22>
 8010704:	d102      	bne.n	801070c <_dtoa_r+0xabc>
 8010706:	f018 0f01 	tst.w	r8, #1
 801070a:	d1b2      	bne.n	8010672 <_dtoa_r+0xa22>
 801070c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8010710:	2b30      	cmp	r3, #48	; 0x30
 8010712:	f105 32ff 	add.w	r2, r5, #4294967295
 8010716:	f47f af0a 	bne.w	801052e <_dtoa_r+0x8de>
 801071a:	4615      	mov	r5, r2
 801071c:	e7f6      	b.n	801070c <_dtoa_r+0xabc>
 801071e:	4593      	cmp	fp, r2
 8010720:	d105      	bne.n	801072e <_dtoa_r+0xade>
 8010722:	2331      	movs	r3, #49	; 0x31
 8010724:	f10a 0a01 	add.w	sl, sl, #1
 8010728:	f88b 3000 	strb.w	r3, [fp]
 801072c:	e6ff      	b.n	801052e <_dtoa_r+0x8de>
 801072e:	4615      	mov	r5, r2
 8010730:	e79f      	b.n	8010672 <_dtoa_r+0xa22>
 8010732:	f8df b064 	ldr.w	fp, [pc, #100]	; 8010798 <_dtoa_r+0xb48>
 8010736:	f7ff bac5 	b.w	800fcc4 <_dtoa_r+0x74>
 801073a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801073c:	f8df b05c 	ldr.w	fp, [pc, #92]	; 801079c <_dtoa_r+0xb4c>
 8010740:	2b00      	cmp	r3, #0
 8010742:	f43f aabf 	beq.w	800fcc4 <_dtoa_r+0x74>
 8010746:	f10b 0308 	add.w	r3, fp, #8
 801074a:	f7ff bab9 	b.w	800fcc0 <_dtoa_r+0x70>
 801074e:	9b06      	ldr	r3, [sp, #24]
 8010750:	2b01      	cmp	r3, #1
 8010752:	f77f ae36 	ble.w	80103c2 <_dtoa_r+0x772>
 8010756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010758:	9307      	str	r3, [sp, #28]
 801075a:	e64a      	b.n	80103f2 <_dtoa_r+0x7a2>
 801075c:	9b02      	ldr	r3, [sp, #8]
 801075e:	2b00      	cmp	r3, #0
 8010760:	dc03      	bgt.n	801076a <_dtoa_r+0xb1a>
 8010762:	9b06      	ldr	r3, [sp, #24]
 8010764:	2b02      	cmp	r3, #2
 8010766:	f73f aecd 	bgt.w	8010504 <_dtoa_r+0x8b4>
 801076a:	465d      	mov	r5, fp
 801076c:	4639      	mov	r1, r7
 801076e:	9804      	ldr	r0, [sp, #16]
 8010770:	f7ff f9e0 	bl	800fb34 <quorem>
 8010774:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8010778:	f805 8b01 	strb.w	r8, [r5], #1
 801077c:	9a02      	ldr	r2, [sp, #8]
 801077e:	eba5 030b 	sub.w	r3, r5, fp
 8010782:	429a      	cmp	r2, r3
 8010784:	ddb1      	ble.n	80106ea <_dtoa_r+0xa9a>
 8010786:	2300      	movs	r3, #0
 8010788:	220a      	movs	r2, #10
 801078a:	9904      	ldr	r1, [sp, #16]
 801078c:	4620      	mov	r0, r4
 801078e:	f000 fb13 	bl	8010db8 <__multadd>
 8010792:	9004      	str	r0, [sp, #16]
 8010794:	e7ea      	b.n	801076c <_dtoa_r+0xb1c>
 8010796:	bf00      	nop
 8010798:	0801f5e0 	.word	0x0801f5e0
 801079c:	0801f602 	.word	0x0801f602

080107a0 <__sflush_r>:
 80107a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80107a4:	b293      	uxth	r3, r2
 80107a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107aa:	4605      	mov	r5, r0
 80107ac:	0718      	lsls	r0, r3, #28
 80107ae:	460c      	mov	r4, r1
 80107b0:	d45f      	bmi.n	8010872 <__sflush_r+0xd2>
 80107b2:	684b      	ldr	r3, [r1, #4]
 80107b4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80107b8:	2b00      	cmp	r3, #0
 80107ba:	818a      	strh	r2, [r1, #12]
 80107bc:	dc05      	bgt.n	80107ca <__sflush_r+0x2a>
 80107be:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 80107c0:	2b00      	cmp	r3, #0
 80107c2:	dc02      	bgt.n	80107ca <__sflush_r+0x2a>
 80107c4:	2000      	movs	r0, #0
 80107c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80107cc:	2e00      	cmp	r6, #0
 80107ce:	d0f9      	beq.n	80107c4 <__sflush_r+0x24>
 80107d0:	2300      	movs	r3, #0
 80107d2:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80107d6:	682f      	ldr	r7, [r5, #0]
 80107d8:	69e1      	ldr	r1, [r4, #28]
 80107da:	602b      	str	r3, [r5, #0]
 80107dc:	d036      	beq.n	801084c <__sflush_r+0xac>
 80107de:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80107e0:	89a3      	ldrh	r3, [r4, #12]
 80107e2:	075a      	lsls	r2, r3, #29
 80107e4:	d505      	bpl.n	80107f2 <__sflush_r+0x52>
 80107e6:	6863      	ldr	r3, [r4, #4]
 80107e8:	1ac0      	subs	r0, r0, r3
 80107ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80107ec:	b10b      	cbz	r3, 80107f2 <__sflush_r+0x52>
 80107ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80107f0:	1ac0      	subs	r0, r0, r3
 80107f2:	2300      	movs	r3, #0
 80107f4:	4602      	mov	r2, r0
 80107f6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80107f8:	69e1      	ldr	r1, [r4, #28]
 80107fa:	4628      	mov	r0, r5
 80107fc:	47b0      	blx	r6
 80107fe:	1c43      	adds	r3, r0, #1
 8010800:	89a3      	ldrh	r3, [r4, #12]
 8010802:	d106      	bne.n	8010812 <__sflush_r+0x72>
 8010804:	6829      	ldr	r1, [r5, #0]
 8010806:	291d      	cmp	r1, #29
 8010808:	d84c      	bhi.n	80108a4 <__sflush_r+0x104>
 801080a:	4a2b      	ldr	r2, [pc, #172]	; (80108b8 <__sflush_r+0x118>)
 801080c:	40ca      	lsrs	r2, r1
 801080e:	07d6      	lsls	r6, r2, #31
 8010810:	d548      	bpl.n	80108a4 <__sflush_r+0x104>
 8010812:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010816:	b21b      	sxth	r3, r3
 8010818:	2200      	movs	r2, #0
 801081a:	6062      	str	r2, [r4, #4]
 801081c:	04d9      	lsls	r1, r3, #19
 801081e:	6922      	ldr	r2, [r4, #16]
 8010820:	81a3      	strh	r3, [r4, #12]
 8010822:	6022      	str	r2, [r4, #0]
 8010824:	d504      	bpl.n	8010830 <__sflush_r+0x90>
 8010826:	1c42      	adds	r2, r0, #1
 8010828:	d101      	bne.n	801082e <__sflush_r+0x8e>
 801082a:	682b      	ldr	r3, [r5, #0]
 801082c:	b903      	cbnz	r3, 8010830 <__sflush_r+0x90>
 801082e:	6520      	str	r0, [r4, #80]	; 0x50
 8010830:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010832:	602f      	str	r7, [r5, #0]
 8010834:	2900      	cmp	r1, #0
 8010836:	d0c5      	beq.n	80107c4 <__sflush_r+0x24>
 8010838:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801083c:	4299      	cmp	r1, r3
 801083e:	d002      	beq.n	8010846 <__sflush_r+0xa6>
 8010840:	4628      	mov	r0, r5
 8010842:	f000 f937 	bl	8010ab4 <_free_r>
 8010846:	2000      	movs	r0, #0
 8010848:	6320      	str	r0, [r4, #48]	; 0x30
 801084a:	e7bc      	b.n	80107c6 <__sflush_r+0x26>
 801084c:	2301      	movs	r3, #1
 801084e:	4628      	mov	r0, r5
 8010850:	47b0      	blx	r6
 8010852:	1c41      	adds	r1, r0, #1
 8010854:	d1c4      	bne.n	80107e0 <__sflush_r+0x40>
 8010856:	682b      	ldr	r3, [r5, #0]
 8010858:	2b00      	cmp	r3, #0
 801085a:	d0c1      	beq.n	80107e0 <__sflush_r+0x40>
 801085c:	2b1d      	cmp	r3, #29
 801085e:	d001      	beq.n	8010864 <__sflush_r+0xc4>
 8010860:	2b16      	cmp	r3, #22
 8010862:	d101      	bne.n	8010868 <__sflush_r+0xc8>
 8010864:	602f      	str	r7, [r5, #0]
 8010866:	e7ad      	b.n	80107c4 <__sflush_r+0x24>
 8010868:	89a3      	ldrh	r3, [r4, #12]
 801086a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801086e:	81a3      	strh	r3, [r4, #12]
 8010870:	e7a9      	b.n	80107c6 <__sflush_r+0x26>
 8010872:	690f      	ldr	r7, [r1, #16]
 8010874:	2f00      	cmp	r7, #0
 8010876:	d0a5      	beq.n	80107c4 <__sflush_r+0x24>
 8010878:	079b      	lsls	r3, r3, #30
 801087a:	680e      	ldr	r6, [r1, #0]
 801087c:	bf08      	it	eq
 801087e:	694b      	ldreq	r3, [r1, #20]
 8010880:	600f      	str	r7, [r1, #0]
 8010882:	bf18      	it	ne
 8010884:	2300      	movne	r3, #0
 8010886:	eba6 0807 	sub.w	r8, r6, r7
 801088a:	608b      	str	r3, [r1, #8]
 801088c:	f1b8 0f00 	cmp.w	r8, #0
 8010890:	dd98      	ble.n	80107c4 <__sflush_r+0x24>
 8010892:	4643      	mov	r3, r8
 8010894:	463a      	mov	r2, r7
 8010896:	69e1      	ldr	r1, [r4, #28]
 8010898:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801089a:	4628      	mov	r0, r5
 801089c:	47b0      	blx	r6
 801089e:	2800      	cmp	r0, #0
 80108a0:	dc06      	bgt.n	80108b0 <__sflush_r+0x110>
 80108a2:	89a3      	ldrh	r3, [r4, #12]
 80108a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80108a8:	81a3      	strh	r3, [r4, #12]
 80108aa:	f04f 30ff 	mov.w	r0, #4294967295
 80108ae:	e78a      	b.n	80107c6 <__sflush_r+0x26>
 80108b0:	4407      	add	r7, r0
 80108b2:	eba8 0800 	sub.w	r8, r8, r0
 80108b6:	e7e9      	b.n	801088c <__sflush_r+0xec>
 80108b8:	20400001 	.word	0x20400001

080108bc <_fflush_r>:
 80108bc:	b538      	push	{r3, r4, r5, lr}
 80108be:	460c      	mov	r4, r1
 80108c0:	4605      	mov	r5, r0
 80108c2:	b118      	cbz	r0, 80108cc <_fflush_r+0x10>
 80108c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80108c6:	b90b      	cbnz	r3, 80108cc <_fflush_r+0x10>
 80108c8:	f000 f864 	bl	8010994 <__sinit>
 80108cc:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 80108d0:	b1b8      	cbz	r0, 8010902 <_fflush_r+0x46>
 80108d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80108d4:	07db      	lsls	r3, r3, #31
 80108d6:	d404      	bmi.n	80108e2 <_fflush_r+0x26>
 80108d8:	0581      	lsls	r1, r0, #22
 80108da:	d402      	bmi.n	80108e2 <_fflush_r+0x26>
 80108dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80108de:	f7fd f8ef 	bl	800dac0 <__retarget_lock_acquire_recursive>
 80108e2:	4628      	mov	r0, r5
 80108e4:	4621      	mov	r1, r4
 80108e6:	f7ff ff5b 	bl	80107a0 <__sflush_r>
 80108ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80108ec:	07da      	lsls	r2, r3, #31
 80108ee:	4605      	mov	r5, r0
 80108f0:	d405      	bmi.n	80108fe <_fflush_r+0x42>
 80108f2:	89a3      	ldrh	r3, [r4, #12]
 80108f4:	059b      	lsls	r3, r3, #22
 80108f6:	d402      	bmi.n	80108fe <_fflush_r+0x42>
 80108f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80108fa:	f7fd f8e2 	bl	800dac2 <__retarget_lock_release_recursive>
 80108fe:	4628      	mov	r0, r5
 8010900:	bd38      	pop	{r3, r4, r5, pc}
 8010902:	4605      	mov	r5, r0
 8010904:	e7fb      	b.n	80108fe <_fflush_r+0x42>
	...

08010908 <std>:
 8010908:	2300      	movs	r3, #0
 801090a:	b510      	push	{r4, lr}
 801090c:	4604      	mov	r4, r0
 801090e:	e9c0 3300 	strd	r3, r3, [r0]
 8010912:	6083      	str	r3, [r0, #8]
 8010914:	8181      	strh	r1, [r0, #12]
 8010916:	6643      	str	r3, [r0, #100]	; 0x64
 8010918:	81c2      	strh	r2, [r0, #14]
 801091a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801091e:	6183      	str	r3, [r0, #24]
 8010920:	4619      	mov	r1, r3
 8010922:	2208      	movs	r2, #8
 8010924:	305c      	adds	r0, #92	; 0x5c
 8010926:	f7fd fb46 	bl	800dfb6 <memset>
 801092a:	4b07      	ldr	r3, [pc, #28]	; (8010948 <std+0x40>)
 801092c:	6223      	str	r3, [r4, #32]
 801092e:	4b07      	ldr	r3, [pc, #28]	; (801094c <std+0x44>)
 8010930:	6263      	str	r3, [r4, #36]	; 0x24
 8010932:	4b07      	ldr	r3, [pc, #28]	; (8010950 <std+0x48>)
 8010934:	62a3      	str	r3, [r4, #40]	; 0x28
 8010936:	4b07      	ldr	r3, [pc, #28]	; (8010954 <std+0x4c>)
 8010938:	61e4      	str	r4, [r4, #28]
 801093a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801093c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8010940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010944:	f7fd b8ba 	b.w	800dabc <__retarget_lock_init_recursive>
 8010948:	08011329 	.word	0x08011329
 801094c:	0801134b 	.word	0x0801134b
 8010950:	08011383 	.word	0x08011383
 8010954:	080113a7 	.word	0x080113a7

08010958 <_cleanup_r>:
 8010958:	4901      	ldr	r1, [pc, #4]	; (8010960 <_cleanup_r+0x8>)
 801095a:	f000 b967 	b.w	8010c2c <_fwalk_reent>
 801095e:	bf00      	nop
 8010960:	080115f1 	.word	0x080115f1

08010964 <__sfp_lock_acquire>:
 8010964:	4801      	ldr	r0, [pc, #4]	; (801096c <__sfp_lock_acquire+0x8>)
 8010966:	f7fd b8ab 	b.w	800dac0 <__retarget_lock_acquire_recursive>
 801096a:	bf00      	nop
 801096c:	2001e050 	.word	0x2001e050

08010970 <__sfp_lock_release>:
 8010970:	4801      	ldr	r0, [pc, #4]	; (8010978 <__sfp_lock_release+0x8>)
 8010972:	f7fd b8a6 	b.w	800dac2 <__retarget_lock_release_recursive>
 8010976:	bf00      	nop
 8010978:	2001e050 	.word	0x2001e050

0801097c <__sinit_lock_acquire>:
 801097c:	4801      	ldr	r0, [pc, #4]	; (8010984 <__sinit_lock_acquire+0x8>)
 801097e:	f7fd b89f 	b.w	800dac0 <__retarget_lock_acquire_recursive>
 8010982:	bf00      	nop
 8010984:	2001e04b 	.word	0x2001e04b

08010988 <__sinit_lock_release>:
 8010988:	4801      	ldr	r0, [pc, #4]	; (8010990 <__sinit_lock_release+0x8>)
 801098a:	f7fd b89a 	b.w	800dac2 <__retarget_lock_release_recursive>
 801098e:	bf00      	nop
 8010990:	2001e04b 	.word	0x2001e04b

08010994 <__sinit>:
 8010994:	b510      	push	{r4, lr}
 8010996:	4604      	mov	r4, r0
 8010998:	f7ff fff0 	bl	801097c <__sinit_lock_acquire>
 801099c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801099e:	b11a      	cbz	r2, 80109a8 <__sinit+0x14>
 80109a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109a4:	f7ff bff0 	b.w	8010988 <__sinit_lock_release>
 80109a8:	4b0d      	ldr	r3, [pc, #52]	; (80109e0 <__sinit+0x4c>)
 80109aa:	63e3      	str	r3, [r4, #60]	; 0x3c
 80109ac:	2303      	movs	r3, #3
 80109ae:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 80109b2:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 80109b6:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80109ba:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 80109be:	2104      	movs	r1, #4
 80109c0:	6860      	ldr	r0, [r4, #4]
 80109c2:	f7ff ffa1 	bl	8010908 <std>
 80109c6:	2201      	movs	r2, #1
 80109c8:	2109      	movs	r1, #9
 80109ca:	68a0      	ldr	r0, [r4, #8]
 80109cc:	f7ff ff9c 	bl	8010908 <std>
 80109d0:	2202      	movs	r2, #2
 80109d2:	2112      	movs	r1, #18
 80109d4:	68e0      	ldr	r0, [r4, #12]
 80109d6:	f7ff ff97 	bl	8010908 <std>
 80109da:	2301      	movs	r3, #1
 80109dc:	63a3      	str	r3, [r4, #56]	; 0x38
 80109de:	e7df      	b.n	80109a0 <__sinit+0xc>
 80109e0:	08010959 	.word	0x08010959

080109e4 <__libc_fini_array>:
 80109e4:	b538      	push	{r3, r4, r5, lr}
 80109e6:	4d07      	ldr	r5, [pc, #28]	; (8010a04 <__libc_fini_array+0x20>)
 80109e8:	4c07      	ldr	r4, [pc, #28]	; (8010a08 <__libc_fini_array+0x24>)
 80109ea:	1b64      	subs	r4, r4, r5
 80109ec:	10a4      	asrs	r4, r4, #2
 80109ee:	b91c      	cbnz	r4, 80109f8 <__libc_fini_array+0x14>
 80109f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80109f4:	f000 bede 	b.w	80117b4 <_fini>
 80109f8:	3c01      	subs	r4, #1
 80109fa:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80109fe:	4798      	blx	r3
 8010a00:	e7f5      	b.n	80109ee <__libc_fini_array+0xa>
 8010a02:	bf00      	nop
 8010a04:	0801faa0 	.word	0x0801faa0
 8010a08:	0801faa4 	.word	0x0801faa4

08010a0c <_malloc_trim_r>:
 8010a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a10:	4605      	mov	r5, r0
 8010a12:	2008      	movs	r0, #8
 8010a14:	460c      	mov	r4, r1
 8010a16:	f7fe ffbd 	bl	800f994 <sysconf>
 8010a1a:	4f23      	ldr	r7, [pc, #140]	; (8010aa8 <_malloc_trim_r+0x9c>)
 8010a1c:	4680      	mov	r8, r0
 8010a1e:	4628      	mov	r0, r5
 8010a20:	f7fd fad2 	bl	800dfc8 <__malloc_lock>
 8010a24:	68bb      	ldr	r3, [r7, #8]
 8010a26:	685e      	ldr	r6, [r3, #4]
 8010a28:	f026 0603 	bic.w	r6, r6, #3
 8010a2c:	1b34      	subs	r4, r6, r4
 8010a2e:	3c11      	subs	r4, #17
 8010a30:	4444      	add	r4, r8
 8010a32:	fbb4 f4f8 	udiv	r4, r4, r8
 8010a36:	3c01      	subs	r4, #1
 8010a38:	fb08 f404 	mul.w	r4, r8, r4
 8010a3c:	45a0      	cmp	r8, r4
 8010a3e:	dd05      	ble.n	8010a4c <_malloc_trim_r+0x40>
 8010a40:	4628      	mov	r0, r5
 8010a42:	f7fd fac7 	bl	800dfd4 <__malloc_unlock>
 8010a46:	2000      	movs	r0, #0
 8010a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a4c:	2100      	movs	r1, #0
 8010a4e:	4628      	mov	r0, r5
 8010a50:	f7fd fcf8 	bl	800e444 <_sbrk_r>
 8010a54:	68bb      	ldr	r3, [r7, #8]
 8010a56:	4433      	add	r3, r6
 8010a58:	4298      	cmp	r0, r3
 8010a5a:	d1f1      	bne.n	8010a40 <_malloc_trim_r+0x34>
 8010a5c:	4261      	negs	r1, r4
 8010a5e:	4628      	mov	r0, r5
 8010a60:	f7fd fcf0 	bl	800e444 <_sbrk_r>
 8010a64:	3001      	adds	r0, #1
 8010a66:	d110      	bne.n	8010a8a <_malloc_trim_r+0x7e>
 8010a68:	2100      	movs	r1, #0
 8010a6a:	4628      	mov	r0, r5
 8010a6c:	f7fd fcea 	bl	800e444 <_sbrk_r>
 8010a70:	68ba      	ldr	r2, [r7, #8]
 8010a72:	1a83      	subs	r3, r0, r2
 8010a74:	2b0f      	cmp	r3, #15
 8010a76:	dde3      	ble.n	8010a40 <_malloc_trim_r+0x34>
 8010a78:	490c      	ldr	r1, [pc, #48]	; (8010aac <_malloc_trim_r+0xa0>)
 8010a7a:	6809      	ldr	r1, [r1, #0]
 8010a7c:	1a40      	subs	r0, r0, r1
 8010a7e:	490c      	ldr	r1, [pc, #48]	; (8010ab0 <_malloc_trim_r+0xa4>)
 8010a80:	f043 0301 	orr.w	r3, r3, #1
 8010a84:	6008      	str	r0, [r1, #0]
 8010a86:	6053      	str	r3, [r2, #4]
 8010a88:	e7da      	b.n	8010a40 <_malloc_trim_r+0x34>
 8010a8a:	68bb      	ldr	r3, [r7, #8]
 8010a8c:	4a08      	ldr	r2, [pc, #32]	; (8010ab0 <_malloc_trim_r+0xa4>)
 8010a8e:	1b36      	subs	r6, r6, r4
 8010a90:	f046 0601 	orr.w	r6, r6, #1
 8010a94:	605e      	str	r6, [r3, #4]
 8010a96:	6813      	ldr	r3, [r2, #0]
 8010a98:	4628      	mov	r0, r5
 8010a9a:	1b1c      	subs	r4, r3, r4
 8010a9c:	6014      	str	r4, [r2, #0]
 8010a9e:	f7fd fa99 	bl	800dfd4 <__malloc_unlock>
 8010aa2:	2001      	movs	r0, #1
 8010aa4:	e7d0      	b.n	8010a48 <_malloc_trim_r+0x3c>
 8010aa6:	bf00      	nop
 8010aa8:	20000458 	.word	0x20000458
 8010aac:	20000860 	.word	0x20000860
 8010ab0:	2001e008 	.word	0x2001e008

08010ab4 <_free_r>:
 8010ab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ab8:	4604      	mov	r4, r0
 8010aba:	4688      	mov	r8, r1
 8010abc:	2900      	cmp	r1, #0
 8010abe:	f000 80ab 	beq.w	8010c18 <_free_r+0x164>
 8010ac2:	f7fd fa81 	bl	800dfc8 <__malloc_lock>
 8010ac6:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8010aca:	4d54      	ldr	r5, [pc, #336]	; (8010c1c <_free_r+0x168>)
 8010acc:	f022 0001 	bic.w	r0, r2, #1
 8010ad0:	f1a8 0308 	sub.w	r3, r8, #8
 8010ad4:	181f      	adds	r7, r3, r0
 8010ad6:	68a9      	ldr	r1, [r5, #8]
 8010ad8:	687e      	ldr	r6, [r7, #4]
 8010ada:	42b9      	cmp	r1, r7
 8010adc:	f026 0603 	bic.w	r6, r6, #3
 8010ae0:	f002 0201 	and.w	r2, r2, #1
 8010ae4:	d11b      	bne.n	8010b1e <_free_r+0x6a>
 8010ae6:	4430      	add	r0, r6
 8010ae8:	b93a      	cbnz	r2, 8010afa <_free_r+0x46>
 8010aea:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8010aee:	1a9b      	subs	r3, r3, r2
 8010af0:	4410      	add	r0, r2
 8010af2:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 8010af6:	60ca      	str	r2, [r1, #12]
 8010af8:	6091      	str	r1, [r2, #8]
 8010afa:	f040 0201 	orr.w	r2, r0, #1
 8010afe:	605a      	str	r2, [r3, #4]
 8010b00:	60ab      	str	r3, [r5, #8]
 8010b02:	4b47      	ldr	r3, [pc, #284]	; (8010c20 <_free_r+0x16c>)
 8010b04:	681b      	ldr	r3, [r3, #0]
 8010b06:	4283      	cmp	r3, r0
 8010b08:	d804      	bhi.n	8010b14 <_free_r+0x60>
 8010b0a:	4b46      	ldr	r3, [pc, #280]	; (8010c24 <_free_r+0x170>)
 8010b0c:	4620      	mov	r0, r4
 8010b0e:	6819      	ldr	r1, [r3, #0]
 8010b10:	f7ff ff7c 	bl	8010a0c <_malloc_trim_r>
 8010b14:	4620      	mov	r0, r4
 8010b16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010b1a:	f7fd ba5b 	b.w	800dfd4 <__malloc_unlock>
 8010b1e:	607e      	str	r6, [r7, #4]
 8010b20:	2a00      	cmp	r2, #0
 8010b22:	d139      	bne.n	8010b98 <_free_r+0xe4>
 8010b24:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8010b28:	1a5b      	subs	r3, r3, r1
 8010b2a:	4408      	add	r0, r1
 8010b2c:	6899      	ldr	r1, [r3, #8]
 8010b2e:	f105 0c08 	add.w	ip, r5, #8
 8010b32:	4561      	cmp	r1, ip
 8010b34:	d032      	beq.n	8010b9c <_free_r+0xe8>
 8010b36:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010b3a:	f8c1 c00c 	str.w	ip, [r1, #12]
 8010b3e:	f8cc 1008 	str.w	r1, [ip, #8]
 8010b42:	19b9      	adds	r1, r7, r6
 8010b44:	6849      	ldr	r1, [r1, #4]
 8010b46:	07c9      	lsls	r1, r1, #31
 8010b48:	d40a      	bmi.n	8010b60 <_free_r+0xac>
 8010b4a:	4430      	add	r0, r6
 8010b4c:	68b9      	ldr	r1, [r7, #8]
 8010b4e:	bb3a      	cbnz	r2, 8010ba0 <_free_r+0xec>
 8010b50:	4e35      	ldr	r6, [pc, #212]	; (8010c28 <_free_r+0x174>)
 8010b52:	42b1      	cmp	r1, r6
 8010b54:	d124      	bne.n	8010ba0 <_free_r+0xec>
 8010b56:	e9c5 3304 	strd	r3, r3, [r5, #16]
 8010b5a:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8010b5e:	2201      	movs	r2, #1
 8010b60:	f040 0101 	orr.w	r1, r0, #1
 8010b64:	6059      	str	r1, [r3, #4]
 8010b66:	5018      	str	r0, [r3, r0]
 8010b68:	2a00      	cmp	r2, #0
 8010b6a:	d1d3      	bne.n	8010b14 <_free_r+0x60>
 8010b6c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8010b70:	d21a      	bcs.n	8010ba8 <_free_r+0xf4>
 8010b72:	08c0      	lsrs	r0, r0, #3
 8010b74:	1081      	asrs	r1, r0, #2
 8010b76:	2201      	movs	r2, #1
 8010b78:	408a      	lsls	r2, r1
 8010b7a:	6869      	ldr	r1, [r5, #4]
 8010b7c:	3001      	adds	r0, #1
 8010b7e:	430a      	orrs	r2, r1
 8010b80:	606a      	str	r2, [r5, #4]
 8010b82:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8010b86:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8010b8a:	3a08      	subs	r2, #8
 8010b8c:	e9c3 1202 	strd	r1, r2, [r3, #8]
 8010b90:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8010b94:	60cb      	str	r3, [r1, #12]
 8010b96:	e7bd      	b.n	8010b14 <_free_r+0x60>
 8010b98:	2200      	movs	r2, #0
 8010b9a:	e7d2      	b.n	8010b42 <_free_r+0x8e>
 8010b9c:	2201      	movs	r2, #1
 8010b9e:	e7d0      	b.n	8010b42 <_free_r+0x8e>
 8010ba0:	68fe      	ldr	r6, [r7, #12]
 8010ba2:	60ce      	str	r6, [r1, #12]
 8010ba4:	60b1      	str	r1, [r6, #8]
 8010ba6:	e7db      	b.n	8010b60 <_free_r+0xac>
 8010ba8:	0a42      	lsrs	r2, r0, #9
 8010baa:	2a04      	cmp	r2, #4
 8010bac:	d813      	bhi.n	8010bd6 <_free_r+0x122>
 8010bae:	0982      	lsrs	r2, r0, #6
 8010bb0:	3238      	adds	r2, #56	; 0x38
 8010bb2:	1c51      	adds	r1, r2, #1
 8010bb4:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8010bb8:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8010bbc:	428e      	cmp	r6, r1
 8010bbe:	d124      	bne.n	8010c0a <_free_r+0x156>
 8010bc0:	2001      	movs	r0, #1
 8010bc2:	1092      	asrs	r2, r2, #2
 8010bc4:	fa00 f202 	lsl.w	r2, r0, r2
 8010bc8:	6868      	ldr	r0, [r5, #4]
 8010bca:	4302      	orrs	r2, r0
 8010bcc:	606a      	str	r2, [r5, #4]
 8010bce:	e9c3 1602 	strd	r1, r6, [r3, #8]
 8010bd2:	60b3      	str	r3, [r6, #8]
 8010bd4:	e7de      	b.n	8010b94 <_free_r+0xe0>
 8010bd6:	2a14      	cmp	r2, #20
 8010bd8:	d801      	bhi.n	8010bde <_free_r+0x12a>
 8010bda:	325b      	adds	r2, #91	; 0x5b
 8010bdc:	e7e9      	b.n	8010bb2 <_free_r+0xfe>
 8010bde:	2a54      	cmp	r2, #84	; 0x54
 8010be0:	d802      	bhi.n	8010be8 <_free_r+0x134>
 8010be2:	0b02      	lsrs	r2, r0, #12
 8010be4:	326e      	adds	r2, #110	; 0x6e
 8010be6:	e7e4      	b.n	8010bb2 <_free_r+0xfe>
 8010be8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8010bec:	d802      	bhi.n	8010bf4 <_free_r+0x140>
 8010bee:	0bc2      	lsrs	r2, r0, #15
 8010bf0:	3277      	adds	r2, #119	; 0x77
 8010bf2:	e7de      	b.n	8010bb2 <_free_r+0xfe>
 8010bf4:	f240 5154 	movw	r1, #1364	; 0x554
 8010bf8:	428a      	cmp	r2, r1
 8010bfa:	bf9a      	itte	ls
 8010bfc:	0c82      	lsrls	r2, r0, #18
 8010bfe:	327c      	addls	r2, #124	; 0x7c
 8010c00:	227e      	movhi	r2, #126	; 0x7e
 8010c02:	e7d6      	b.n	8010bb2 <_free_r+0xfe>
 8010c04:	6889      	ldr	r1, [r1, #8]
 8010c06:	428e      	cmp	r6, r1
 8010c08:	d004      	beq.n	8010c14 <_free_r+0x160>
 8010c0a:	684a      	ldr	r2, [r1, #4]
 8010c0c:	f022 0203 	bic.w	r2, r2, #3
 8010c10:	4282      	cmp	r2, r0
 8010c12:	d8f7      	bhi.n	8010c04 <_free_r+0x150>
 8010c14:	68ce      	ldr	r6, [r1, #12]
 8010c16:	e7da      	b.n	8010bce <_free_r+0x11a>
 8010c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c1c:	20000458 	.word	0x20000458
 8010c20:	20000864 	.word	0x20000864
 8010c24:	2001e038 	.word	0x2001e038
 8010c28:	20000460 	.word	0x20000460

08010c2c <_fwalk_reent>:
 8010c2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c30:	4680      	mov	r8, r0
 8010c32:	4689      	mov	r9, r1
 8010c34:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 8010c38:	2600      	movs	r6, #0
 8010c3a:	b914      	cbnz	r4, 8010c42 <_fwalk_reent+0x16>
 8010c3c:	4630      	mov	r0, r6
 8010c3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010c42:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8010c46:	3f01      	subs	r7, #1
 8010c48:	d501      	bpl.n	8010c4e <_fwalk_reent+0x22>
 8010c4a:	6824      	ldr	r4, [r4, #0]
 8010c4c:	e7f5      	b.n	8010c3a <_fwalk_reent+0xe>
 8010c4e:	89ab      	ldrh	r3, [r5, #12]
 8010c50:	2b01      	cmp	r3, #1
 8010c52:	d907      	bls.n	8010c64 <_fwalk_reent+0x38>
 8010c54:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8010c58:	3301      	adds	r3, #1
 8010c5a:	d003      	beq.n	8010c64 <_fwalk_reent+0x38>
 8010c5c:	4629      	mov	r1, r5
 8010c5e:	4640      	mov	r0, r8
 8010c60:	47c8      	blx	r9
 8010c62:	4306      	orrs	r6, r0
 8010c64:	3568      	adds	r5, #104	; 0x68
 8010c66:	e7ee      	b.n	8010c46 <_fwalk_reent+0x1a>

08010c68 <_localeconv_r>:
 8010c68:	4b04      	ldr	r3, [pc, #16]	; (8010c7c <_localeconv_r+0x14>)
 8010c6a:	681b      	ldr	r3, [r3, #0]
 8010c6c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010c6e:	4b04      	ldr	r3, [pc, #16]	; (8010c80 <_localeconv_r+0x18>)
 8010c70:	2800      	cmp	r0, #0
 8010c72:	bf08      	it	eq
 8010c74:	4618      	moveq	r0, r3
 8010c76:	30f0      	adds	r0, #240	; 0xf0
 8010c78:	4770      	bx	lr
 8010c7a:	bf00      	nop
 8010c7c:	2000002c 	.word	0x2000002c
 8010c80:	2000086c 	.word	0x2000086c

08010c84 <__swhatbuf_r>:
 8010c84:	b570      	push	{r4, r5, r6, lr}
 8010c86:	460e      	mov	r6, r1
 8010c88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010c8c:	2900      	cmp	r1, #0
 8010c8e:	b096      	sub	sp, #88	; 0x58
 8010c90:	4614      	mov	r4, r2
 8010c92:	461d      	mov	r5, r3
 8010c94:	da09      	bge.n	8010caa <__swhatbuf_r+0x26>
 8010c96:	89b3      	ldrh	r3, [r6, #12]
 8010c98:	2200      	movs	r2, #0
 8010c9a:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8010c9e:	602a      	str	r2, [r5, #0]
 8010ca0:	d116      	bne.n	8010cd0 <__swhatbuf_r+0x4c>
 8010ca2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010ca6:	6023      	str	r3, [r4, #0]
 8010ca8:	e015      	b.n	8010cd6 <__swhatbuf_r+0x52>
 8010caa:	466a      	mov	r2, sp
 8010cac:	f000 fcf8 	bl	80116a0 <_fstat_r>
 8010cb0:	2800      	cmp	r0, #0
 8010cb2:	dbf0      	blt.n	8010c96 <__swhatbuf_r+0x12>
 8010cb4:	9a01      	ldr	r2, [sp, #4]
 8010cb6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8010cba:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8010cbe:	425a      	negs	r2, r3
 8010cc0:	415a      	adcs	r2, r3
 8010cc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010cc6:	602a      	str	r2, [r5, #0]
 8010cc8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8010ccc:	6023      	str	r3, [r4, #0]
 8010cce:	e002      	b.n	8010cd6 <__swhatbuf_r+0x52>
 8010cd0:	2340      	movs	r3, #64	; 0x40
 8010cd2:	6023      	str	r3, [r4, #0]
 8010cd4:	4610      	mov	r0, r2
 8010cd6:	b016      	add	sp, #88	; 0x58
 8010cd8:	bd70      	pop	{r4, r5, r6, pc}
	...

08010cdc <__smakebuf_r>:
 8010cdc:	898b      	ldrh	r3, [r1, #12]
 8010cde:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ce0:	079d      	lsls	r5, r3, #30
 8010ce2:	4606      	mov	r6, r0
 8010ce4:	460c      	mov	r4, r1
 8010ce6:	d507      	bpl.n	8010cf8 <__smakebuf_r+0x1c>
 8010ce8:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8010cec:	6023      	str	r3, [r4, #0]
 8010cee:	6123      	str	r3, [r4, #16]
 8010cf0:	2301      	movs	r3, #1
 8010cf2:	6163      	str	r3, [r4, #20]
 8010cf4:	b002      	add	sp, #8
 8010cf6:	bd70      	pop	{r4, r5, r6, pc}
 8010cf8:	ab01      	add	r3, sp, #4
 8010cfa:	466a      	mov	r2, sp
 8010cfc:	f7ff ffc2 	bl	8010c84 <__swhatbuf_r>
 8010d00:	9900      	ldr	r1, [sp, #0]
 8010d02:	4605      	mov	r5, r0
 8010d04:	4630      	mov	r0, r6
 8010d06:	f7fc feed 	bl	800dae4 <_malloc_r>
 8010d0a:	b948      	cbnz	r0, 8010d20 <__smakebuf_r+0x44>
 8010d0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010d10:	059a      	lsls	r2, r3, #22
 8010d12:	d4ef      	bmi.n	8010cf4 <__smakebuf_r+0x18>
 8010d14:	f023 0303 	bic.w	r3, r3, #3
 8010d18:	f043 0302 	orr.w	r3, r3, #2
 8010d1c:	81a3      	strh	r3, [r4, #12]
 8010d1e:	e7e3      	b.n	8010ce8 <__smakebuf_r+0xc>
 8010d20:	4b0d      	ldr	r3, [pc, #52]	; (8010d58 <__smakebuf_r+0x7c>)
 8010d22:	63f3      	str	r3, [r6, #60]	; 0x3c
 8010d24:	89a3      	ldrh	r3, [r4, #12]
 8010d26:	6020      	str	r0, [r4, #0]
 8010d28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010d2c:	81a3      	strh	r3, [r4, #12]
 8010d2e:	9b00      	ldr	r3, [sp, #0]
 8010d30:	6163      	str	r3, [r4, #20]
 8010d32:	9b01      	ldr	r3, [sp, #4]
 8010d34:	6120      	str	r0, [r4, #16]
 8010d36:	b15b      	cbz	r3, 8010d50 <__smakebuf_r+0x74>
 8010d38:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8010d3c:	4630      	mov	r0, r6
 8010d3e:	f000 fcc1 	bl	80116c4 <_isatty_r>
 8010d42:	b128      	cbz	r0, 8010d50 <__smakebuf_r+0x74>
 8010d44:	89a3      	ldrh	r3, [r4, #12]
 8010d46:	f023 0303 	bic.w	r3, r3, #3
 8010d4a:	f043 0301 	orr.w	r3, r3, #1
 8010d4e:	81a3      	strh	r3, [r4, #12]
 8010d50:	89a3      	ldrh	r3, [r4, #12]
 8010d52:	431d      	orrs	r5, r3
 8010d54:	81a5      	strh	r5, [r4, #12]
 8010d56:	e7cd      	b.n	8010cf4 <__smakebuf_r+0x18>
 8010d58:	08010959 	.word	0x08010959

08010d5c <_Balloc>:
 8010d5c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010d5e:	b570      	push	{r4, r5, r6, lr}
 8010d60:	4605      	mov	r5, r0
 8010d62:	460c      	mov	r4, r1
 8010d64:	b17b      	cbz	r3, 8010d86 <_Balloc+0x2a>
 8010d66:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8010d68:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8010d6c:	b9a0      	cbnz	r0, 8010d98 <_Balloc+0x3c>
 8010d6e:	2101      	movs	r1, #1
 8010d70:	fa01 f604 	lsl.w	r6, r1, r4
 8010d74:	1d72      	adds	r2, r6, #5
 8010d76:	0092      	lsls	r2, r2, #2
 8010d78:	4628      	mov	r0, r5
 8010d7a:	f000 fbfb 	bl	8011574 <_calloc_r>
 8010d7e:	b148      	cbz	r0, 8010d94 <_Balloc+0x38>
 8010d80:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8010d84:	e00b      	b.n	8010d9e <_Balloc+0x42>
 8010d86:	2221      	movs	r2, #33	; 0x21
 8010d88:	2104      	movs	r1, #4
 8010d8a:	f000 fbf3 	bl	8011574 <_calloc_r>
 8010d8e:	64e8      	str	r0, [r5, #76]	; 0x4c
 8010d90:	2800      	cmp	r0, #0
 8010d92:	d1e8      	bne.n	8010d66 <_Balloc+0xa>
 8010d94:	2000      	movs	r0, #0
 8010d96:	bd70      	pop	{r4, r5, r6, pc}
 8010d98:	6802      	ldr	r2, [r0, #0]
 8010d9a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8010d9e:	2300      	movs	r3, #0
 8010da0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8010da4:	e7f7      	b.n	8010d96 <_Balloc+0x3a>

08010da6 <_Bfree>:
 8010da6:	b131      	cbz	r1, 8010db6 <_Bfree+0x10>
 8010da8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010daa:	684a      	ldr	r2, [r1, #4]
 8010dac:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010db0:	6008      	str	r0, [r1, #0]
 8010db2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8010db6:	4770      	bx	lr

08010db8 <__multadd>:
 8010db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010dbc:	690d      	ldr	r5, [r1, #16]
 8010dbe:	461f      	mov	r7, r3
 8010dc0:	4606      	mov	r6, r0
 8010dc2:	460c      	mov	r4, r1
 8010dc4:	f101 0c14 	add.w	ip, r1, #20
 8010dc8:	2300      	movs	r3, #0
 8010dca:	f8dc 0000 	ldr.w	r0, [ip]
 8010dce:	b281      	uxth	r1, r0
 8010dd0:	fb02 7101 	mla	r1, r2, r1, r7
 8010dd4:	0c0f      	lsrs	r7, r1, #16
 8010dd6:	0c00      	lsrs	r0, r0, #16
 8010dd8:	fb02 7000 	mla	r0, r2, r0, r7
 8010ddc:	b289      	uxth	r1, r1
 8010dde:	3301      	adds	r3, #1
 8010de0:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8010de4:	429d      	cmp	r5, r3
 8010de6:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8010dea:	f84c 1b04 	str.w	r1, [ip], #4
 8010dee:	dcec      	bgt.n	8010dca <__multadd+0x12>
 8010df0:	b1d7      	cbz	r7, 8010e28 <__multadd+0x70>
 8010df2:	68a3      	ldr	r3, [r4, #8]
 8010df4:	42ab      	cmp	r3, r5
 8010df6:	dc12      	bgt.n	8010e1e <__multadd+0x66>
 8010df8:	6861      	ldr	r1, [r4, #4]
 8010dfa:	4630      	mov	r0, r6
 8010dfc:	3101      	adds	r1, #1
 8010dfe:	f7ff ffad 	bl	8010d5c <_Balloc>
 8010e02:	6922      	ldr	r2, [r4, #16]
 8010e04:	3202      	adds	r2, #2
 8010e06:	f104 010c 	add.w	r1, r4, #12
 8010e0a:	4680      	mov	r8, r0
 8010e0c:	0092      	lsls	r2, r2, #2
 8010e0e:	300c      	adds	r0, #12
 8010e10:	f7fd f8ad 	bl	800df6e <memcpy>
 8010e14:	4621      	mov	r1, r4
 8010e16:	4630      	mov	r0, r6
 8010e18:	f7ff ffc5 	bl	8010da6 <_Bfree>
 8010e1c:	4644      	mov	r4, r8
 8010e1e:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8010e22:	3501      	adds	r5, #1
 8010e24:	615f      	str	r7, [r3, #20]
 8010e26:	6125      	str	r5, [r4, #16]
 8010e28:	4620      	mov	r0, r4
 8010e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010e2e <__hi0bits>:
 8010e2e:	0c02      	lsrs	r2, r0, #16
 8010e30:	0412      	lsls	r2, r2, #16
 8010e32:	4603      	mov	r3, r0
 8010e34:	b9b2      	cbnz	r2, 8010e64 <__hi0bits+0x36>
 8010e36:	0403      	lsls	r3, r0, #16
 8010e38:	2010      	movs	r0, #16
 8010e3a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010e3e:	bf04      	itt	eq
 8010e40:	021b      	lsleq	r3, r3, #8
 8010e42:	3008      	addeq	r0, #8
 8010e44:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010e48:	bf04      	itt	eq
 8010e4a:	011b      	lsleq	r3, r3, #4
 8010e4c:	3004      	addeq	r0, #4
 8010e4e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010e52:	bf04      	itt	eq
 8010e54:	009b      	lsleq	r3, r3, #2
 8010e56:	3002      	addeq	r0, #2
 8010e58:	2b00      	cmp	r3, #0
 8010e5a:	db06      	blt.n	8010e6a <__hi0bits+0x3c>
 8010e5c:	005b      	lsls	r3, r3, #1
 8010e5e:	d503      	bpl.n	8010e68 <__hi0bits+0x3a>
 8010e60:	3001      	adds	r0, #1
 8010e62:	4770      	bx	lr
 8010e64:	2000      	movs	r0, #0
 8010e66:	e7e8      	b.n	8010e3a <__hi0bits+0xc>
 8010e68:	2020      	movs	r0, #32
 8010e6a:	4770      	bx	lr

08010e6c <__lo0bits>:
 8010e6c:	6803      	ldr	r3, [r0, #0]
 8010e6e:	f013 0207 	ands.w	r2, r3, #7
 8010e72:	4601      	mov	r1, r0
 8010e74:	d00b      	beq.n	8010e8e <__lo0bits+0x22>
 8010e76:	07da      	lsls	r2, r3, #31
 8010e78:	d423      	bmi.n	8010ec2 <__lo0bits+0x56>
 8010e7a:	0798      	lsls	r0, r3, #30
 8010e7c:	bf49      	itett	mi
 8010e7e:	085b      	lsrmi	r3, r3, #1
 8010e80:	089b      	lsrpl	r3, r3, #2
 8010e82:	2001      	movmi	r0, #1
 8010e84:	600b      	strmi	r3, [r1, #0]
 8010e86:	bf5c      	itt	pl
 8010e88:	600b      	strpl	r3, [r1, #0]
 8010e8a:	2002      	movpl	r0, #2
 8010e8c:	4770      	bx	lr
 8010e8e:	b298      	uxth	r0, r3
 8010e90:	b9a8      	cbnz	r0, 8010ebe <__lo0bits+0x52>
 8010e92:	0c1b      	lsrs	r3, r3, #16
 8010e94:	2010      	movs	r0, #16
 8010e96:	f013 0fff 	tst.w	r3, #255	; 0xff
 8010e9a:	bf04      	itt	eq
 8010e9c:	0a1b      	lsreq	r3, r3, #8
 8010e9e:	3008      	addeq	r0, #8
 8010ea0:	071a      	lsls	r2, r3, #28
 8010ea2:	bf04      	itt	eq
 8010ea4:	091b      	lsreq	r3, r3, #4
 8010ea6:	3004      	addeq	r0, #4
 8010ea8:	079a      	lsls	r2, r3, #30
 8010eaa:	bf04      	itt	eq
 8010eac:	089b      	lsreq	r3, r3, #2
 8010eae:	3002      	addeq	r0, #2
 8010eb0:	07da      	lsls	r2, r3, #31
 8010eb2:	d402      	bmi.n	8010eba <__lo0bits+0x4e>
 8010eb4:	085b      	lsrs	r3, r3, #1
 8010eb6:	d006      	beq.n	8010ec6 <__lo0bits+0x5a>
 8010eb8:	3001      	adds	r0, #1
 8010eba:	600b      	str	r3, [r1, #0]
 8010ebc:	4770      	bx	lr
 8010ebe:	4610      	mov	r0, r2
 8010ec0:	e7e9      	b.n	8010e96 <__lo0bits+0x2a>
 8010ec2:	2000      	movs	r0, #0
 8010ec4:	4770      	bx	lr
 8010ec6:	2020      	movs	r0, #32
 8010ec8:	4770      	bx	lr

08010eca <__i2b>:
 8010eca:	b510      	push	{r4, lr}
 8010ecc:	460c      	mov	r4, r1
 8010ece:	2101      	movs	r1, #1
 8010ed0:	f7ff ff44 	bl	8010d5c <_Balloc>
 8010ed4:	2201      	movs	r2, #1
 8010ed6:	6144      	str	r4, [r0, #20]
 8010ed8:	6102      	str	r2, [r0, #16]
 8010eda:	bd10      	pop	{r4, pc}

08010edc <__multiply>:
 8010edc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ee0:	4614      	mov	r4, r2
 8010ee2:	690a      	ldr	r2, [r1, #16]
 8010ee4:	6923      	ldr	r3, [r4, #16]
 8010ee6:	429a      	cmp	r2, r3
 8010ee8:	bfb8      	it	lt
 8010eea:	460b      	movlt	r3, r1
 8010eec:	4688      	mov	r8, r1
 8010eee:	bfbc      	itt	lt
 8010ef0:	46a0      	movlt	r8, r4
 8010ef2:	461c      	movlt	r4, r3
 8010ef4:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8010ef8:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8010efc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010f00:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010f04:	eb07 0609 	add.w	r6, r7, r9
 8010f08:	42b3      	cmp	r3, r6
 8010f0a:	bfb8      	it	lt
 8010f0c:	3101      	addlt	r1, #1
 8010f0e:	f7ff ff25 	bl	8010d5c <_Balloc>
 8010f12:	f100 0514 	add.w	r5, r0, #20
 8010f16:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8010f1a:	462b      	mov	r3, r5
 8010f1c:	2200      	movs	r2, #0
 8010f1e:	4573      	cmp	r3, lr
 8010f20:	d316      	bcc.n	8010f50 <__multiply+0x74>
 8010f22:	f104 0214 	add.w	r2, r4, #20
 8010f26:	f108 0114 	add.w	r1, r8, #20
 8010f2a:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8010f2e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8010f32:	9300      	str	r3, [sp, #0]
 8010f34:	9b00      	ldr	r3, [sp, #0]
 8010f36:	9201      	str	r2, [sp, #4]
 8010f38:	4293      	cmp	r3, r2
 8010f3a:	d80c      	bhi.n	8010f56 <__multiply+0x7a>
 8010f3c:	2e00      	cmp	r6, #0
 8010f3e:	dd03      	ble.n	8010f48 <__multiply+0x6c>
 8010f40:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8010f44:	2b00      	cmp	r3, #0
 8010f46:	d05d      	beq.n	8011004 <__multiply+0x128>
 8010f48:	6106      	str	r6, [r0, #16]
 8010f4a:	b003      	add	sp, #12
 8010f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f50:	f843 2b04 	str.w	r2, [r3], #4
 8010f54:	e7e3      	b.n	8010f1e <__multiply+0x42>
 8010f56:	f8b2 b000 	ldrh.w	fp, [r2]
 8010f5a:	f1bb 0f00 	cmp.w	fp, #0
 8010f5e:	d023      	beq.n	8010fa8 <__multiply+0xcc>
 8010f60:	4689      	mov	r9, r1
 8010f62:	46ac      	mov	ip, r5
 8010f64:	f04f 0800 	mov.w	r8, #0
 8010f68:	f859 4b04 	ldr.w	r4, [r9], #4
 8010f6c:	f8dc a000 	ldr.w	sl, [ip]
 8010f70:	b2a3      	uxth	r3, r4
 8010f72:	fa1f fa8a 	uxth.w	sl, sl
 8010f76:	fb0b a303 	mla	r3, fp, r3, sl
 8010f7a:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8010f7e:	f8dc 4000 	ldr.w	r4, [ip]
 8010f82:	4443      	add	r3, r8
 8010f84:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8010f88:	fb0b 840a 	mla	r4, fp, sl, r8
 8010f8c:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8010f90:	46e2      	mov	sl, ip
 8010f92:	b29b      	uxth	r3, r3
 8010f94:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8010f98:	454f      	cmp	r7, r9
 8010f9a:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8010f9e:	f84a 3b04 	str.w	r3, [sl], #4
 8010fa2:	d82b      	bhi.n	8010ffc <__multiply+0x120>
 8010fa4:	f8cc 8004 	str.w	r8, [ip, #4]
 8010fa8:	9b01      	ldr	r3, [sp, #4]
 8010faa:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8010fae:	3204      	adds	r2, #4
 8010fb0:	f1ba 0f00 	cmp.w	sl, #0
 8010fb4:	d020      	beq.n	8010ff8 <__multiply+0x11c>
 8010fb6:	682b      	ldr	r3, [r5, #0]
 8010fb8:	4689      	mov	r9, r1
 8010fba:	46a8      	mov	r8, r5
 8010fbc:	f04f 0b00 	mov.w	fp, #0
 8010fc0:	f8b9 c000 	ldrh.w	ip, [r9]
 8010fc4:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8010fc8:	fb0a 440c 	mla	r4, sl, ip, r4
 8010fcc:	445c      	add	r4, fp
 8010fce:	46c4      	mov	ip, r8
 8010fd0:	b29b      	uxth	r3, r3
 8010fd2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8010fd6:	f84c 3b04 	str.w	r3, [ip], #4
 8010fda:	f859 3b04 	ldr.w	r3, [r9], #4
 8010fde:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8010fe2:	0c1b      	lsrs	r3, r3, #16
 8010fe4:	fb0a b303 	mla	r3, sl, r3, fp
 8010fe8:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8010fec:	454f      	cmp	r7, r9
 8010fee:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8010ff2:	d805      	bhi.n	8011000 <__multiply+0x124>
 8010ff4:	f8c8 3004 	str.w	r3, [r8, #4]
 8010ff8:	3504      	adds	r5, #4
 8010ffa:	e79b      	b.n	8010f34 <__multiply+0x58>
 8010ffc:	46d4      	mov	ip, sl
 8010ffe:	e7b3      	b.n	8010f68 <__multiply+0x8c>
 8011000:	46e0      	mov	r8, ip
 8011002:	e7dd      	b.n	8010fc0 <__multiply+0xe4>
 8011004:	3e01      	subs	r6, #1
 8011006:	e799      	b.n	8010f3c <__multiply+0x60>

08011008 <__pow5mult>:
 8011008:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801100c:	4615      	mov	r5, r2
 801100e:	f012 0203 	ands.w	r2, r2, #3
 8011012:	4606      	mov	r6, r0
 8011014:	460f      	mov	r7, r1
 8011016:	d007      	beq.n	8011028 <__pow5mult+0x20>
 8011018:	3a01      	subs	r2, #1
 801101a:	4c1a      	ldr	r4, [pc, #104]	; (8011084 <__pow5mult+0x7c>)
 801101c:	2300      	movs	r3, #0
 801101e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011022:	f7ff fec9 	bl	8010db8 <__multadd>
 8011026:	4607      	mov	r7, r0
 8011028:	10ad      	asrs	r5, r5, #2
 801102a:	d027      	beq.n	801107c <__pow5mult+0x74>
 801102c:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 801102e:	b944      	cbnz	r4, 8011042 <__pow5mult+0x3a>
 8011030:	f240 2171 	movw	r1, #625	; 0x271
 8011034:	4630      	mov	r0, r6
 8011036:	f7ff ff48 	bl	8010eca <__i2b>
 801103a:	2300      	movs	r3, #0
 801103c:	64b0      	str	r0, [r6, #72]	; 0x48
 801103e:	4604      	mov	r4, r0
 8011040:	6003      	str	r3, [r0, #0]
 8011042:	f04f 0800 	mov.w	r8, #0
 8011046:	07eb      	lsls	r3, r5, #31
 8011048:	d50a      	bpl.n	8011060 <__pow5mult+0x58>
 801104a:	4639      	mov	r1, r7
 801104c:	4622      	mov	r2, r4
 801104e:	4630      	mov	r0, r6
 8011050:	f7ff ff44 	bl	8010edc <__multiply>
 8011054:	4639      	mov	r1, r7
 8011056:	4681      	mov	r9, r0
 8011058:	4630      	mov	r0, r6
 801105a:	f7ff fea4 	bl	8010da6 <_Bfree>
 801105e:	464f      	mov	r7, r9
 8011060:	106d      	asrs	r5, r5, #1
 8011062:	d00b      	beq.n	801107c <__pow5mult+0x74>
 8011064:	6820      	ldr	r0, [r4, #0]
 8011066:	b938      	cbnz	r0, 8011078 <__pow5mult+0x70>
 8011068:	4622      	mov	r2, r4
 801106a:	4621      	mov	r1, r4
 801106c:	4630      	mov	r0, r6
 801106e:	f7ff ff35 	bl	8010edc <__multiply>
 8011072:	6020      	str	r0, [r4, #0]
 8011074:	f8c0 8000 	str.w	r8, [r0]
 8011078:	4604      	mov	r4, r0
 801107a:	e7e4      	b.n	8011046 <__pow5mult+0x3e>
 801107c:	4638      	mov	r0, r7
 801107e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011082:	bf00      	nop
 8011084:	0801f700 	.word	0x0801f700

08011088 <__lshift>:
 8011088:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801108c:	460c      	mov	r4, r1
 801108e:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011092:	6923      	ldr	r3, [r4, #16]
 8011094:	6849      	ldr	r1, [r1, #4]
 8011096:	eb0a 0903 	add.w	r9, sl, r3
 801109a:	68a3      	ldr	r3, [r4, #8]
 801109c:	4607      	mov	r7, r0
 801109e:	4616      	mov	r6, r2
 80110a0:	f109 0501 	add.w	r5, r9, #1
 80110a4:	42ab      	cmp	r3, r5
 80110a6:	db32      	blt.n	801110e <__lshift+0x86>
 80110a8:	4638      	mov	r0, r7
 80110aa:	f7ff fe57 	bl	8010d5c <_Balloc>
 80110ae:	2300      	movs	r3, #0
 80110b0:	4680      	mov	r8, r0
 80110b2:	f100 0114 	add.w	r1, r0, #20
 80110b6:	461a      	mov	r2, r3
 80110b8:	4553      	cmp	r3, sl
 80110ba:	db2b      	blt.n	8011114 <__lshift+0x8c>
 80110bc:	6920      	ldr	r0, [r4, #16]
 80110be:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80110c2:	f104 0314 	add.w	r3, r4, #20
 80110c6:	f016 021f 	ands.w	r2, r6, #31
 80110ca:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80110ce:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80110d2:	d025      	beq.n	8011120 <__lshift+0x98>
 80110d4:	f1c2 0e20 	rsb	lr, r2, #32
 80110d8:	2000      	movs	r0, #0
 80110da:	681e      	ldr	r6, [r3, #0]
 80110dc:	468a      	mov	sl, r1
 80110de:	4096      	lsls	r6, r2
 80110e0:	4330      	orrs	r0, r6
 80110e2:	f84a 0b04 	str.w	r0, [sl], #4
 80110e6:	f853 0b04 	ldr.w	r0, [r3], #4
 80110ea:	459c      	cmp	ip, r3
 80110ec:	fa20 f00e 	lsr.w	r0, r0, lr
 80110f0:	d814      	bhi.n	801111c <__lshift+0x94>
 80110f2:	6048      	str	r0, [r1, #4]
 80110f4:	b108      	cbz	r0, 80110fa <__lshift+0x72>
 80110f6:	f109 0502 	add.w	r5, r9, #2
 80110fa:	3d01      	subs	r5, #1
 80110fc:	4638      	mov	r0, r7
 80110fe:	f8c8 5010 	str.w	r5, [r8, #16]
 8011102:	4621      	mov	r1, r4
 8011104:	f7ff fe4f 	bl	8010da6 <_Bfree>
 8011108:	4640      	mov	r0, r8
 801110a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801110e:	3101      	adds	r1, #1
 8011110:	005b      	lsls	r3, r3, #1
 8011112:	e7c7      	b.n	80110a4 <__lshift+0x1c>
 8011114:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8011118:	3301      	adds	r3, #1
 801111a:	e7cd      	b.n	80110b8 <__lshift+0x30>
 801111c:	4651      	mov	r1, sl
 801111e:	e7dc      	b.n	80110da <__lshift+0x52>
 8011120:	3904      	subs	r1, #4
 8011122:	f853 2b04 	ldr.w	r2, [r3], #4
 8011126:	f841 2f04 	str.w	r2, [r1, #4]!
 801112a:	459c      	cmp	ip, r3
 801112c:	d8f9      	bhi.n	8011122 <__lshift+0x9a>
 801112e:	e7e4      	b.n	80110fa <__lshift+0x72>

08011130 <__mcmp>:
 8011130:	6903      	ldr	r3, [r0, #16]
 8011132:	690a      	ldr	r2, [r1, #16]
 8011134:	1a9b      	subs	r3, r3, r2
 8011136:	b530      	push	{r4, r5, lr}
 8011138:	d10c      	bne.n	8011154 <__mcmp+0x24>
 801113a:	0092      	lsls	r2, r2, #2
 801113c:	3014      	adds	r0, #20
 801113e:	3114      	adds	r1, #20
 8011140:	1884      	adds	r4, r0, r2
 8011142:	4411      	add	r1, r2
 8011144:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8011148:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801114c:	4295      	cmp	r5, r2
 801114e:	d003      	beq.n	8011158 <__mcmp+0x28>
 8011150:	d305      	bcc.n	801115e <__mcmp+0x2e>
 8011152:	2301      	movs	r3, #1
 8011154:	4618      	mov	r0, r3
 8011156:	bd30      	pop	{r4, r5, pc}
 8011158:	42a0      	cmp	r0, r4
 801115a:	d3f3      	bcc.n	8011144 <__mcmp+0x14>
 801115c:	e7fa      	b.n	8011154 <__mcmp+0x24>
 801115e:	f04f 33ff 	mov.w	r3, #4294967295
 8011162:	e7f7      	b.n	8011154 <__mcmp+0x24>

08011164 <__mdiff>:
 8011164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011168:	460d      	mov	r5, r1
 801116a:	4607      	mov	r7, r0
 801116c:	4611      	mov	r1, r2
 801116e:	4628      	mov	r0, r5
 8011170:	4614      	mov	r4, r2
 8011172:	f7ff ffdd 	bl	8011130 <__mcmp>
 8011176:	1e06      	subs	r6, r0, #0
 8011178:	d108      	bne.n	801118c <__mdiff+0x28>
 801117a:	4631      	mov	r1, r6
 801117c:	4638      	mov	r0, r7
 801117e:	f7ff fded 	bl	8010d5c <_Balloc>
 8011182:	2301      	movs	r3, #1
 8011184:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8011188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801118c:	bfa4      	itt	ge
 801118e:	4623      	movge	r3, r4
 8011190:	462c      	movge	r4, r5
 8011192:	4638      	mov	r0, r7
 8011194:	6861      	ldr	r1, [r4, #4]
 8011196:	bfa6      	itte	ge
 8011198:	461d      	movge	r5, r3
 801119a:	2600      	movge	r6, #0
 801119c:	2601      	movlt	r6, #1
 801119e:	f7ff fddd 	bl	8010d5c <_Balloc>
 80111a2:	692b      	ldr	r3, [r5, #16]
 80111a4:	60c6      	str	r6, [r0, #12]
 80111a6:	6926      	ldr	r6, [r4, #16]
 80111a8:	f105 0914 	add.w	r9, r5, #20
 80111ac:	f104 0214 	add.w	r2, r4, #20
 80111b0:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 80111b4:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 80111b8:	f100 0514 	add.w	r5, r0, #20
 80111bc:	f04f 0e00 	mov.w	lr, #0
 80111c0:	f852 ab04 	ldr.w	sl, [r2], #4
 80111c4:	f859 4b04 	ldr.w	r4, [r9], #4
 80111c8:	fa1e f18a 	uxtah	r1, lr, sl
 80111cc:	b2a3      	uxth	r3, r4
 80111ce:	1ac9      	subs	r1, r1, r3
 80111d0:	0c23      	lsrs	r3, r4, #16
 80111d2:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 80111d6:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80111da:	b289      	uxth	r1, r1
 80111dc:	ea4f 4e23 	mov.w	lr, r3, asr #16
 80111e0:	45c8      	cmp	r8, r9
 80111e2:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80111e6:	4694      	mov	ip, r2
 80111e8:	f845 3b04 	str.w	r3, [r5], #4
 80111ec:	d8e8      	bhi.n	80111c0 <__mdiff+0x5c>
 80111ee:	45bc      	cmp	ip, r7
 80111f0:	d304      	bcc.n	80111fc <__mdiff+0x98>
 80111f2:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80111f6:	b183      	cbz	r3, 801121a <__mdiff+0xb6>
 80111f8:	6106      	str	r6, [r0, #16]
 80111fa:	e7c5      	b.n	8011188 <__mdiff+0x24>
 80111fc:	f85c 1b04 	ldr.w	r1, [ip], #4
 8011200:	fa1e f381 	uxtah	r3, lr, r1
 8011204:	141a      	asrs	r2, r3, #16
 8011206:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 801120a:	b29b      	uxth	r3, r3
 801120c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011210:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8011214:	f845 3b04 	str.w	r3, [r5], #4
 8011218:	e7e9      	b.n	80111ee <__mdiff+0x8a>
 801121a:	3e01      	subs	r6, #1
 801121c:	e7e9      	b.n	80111f2 <__mdiff+0x8e>

0801121e <__d2b>:
 801121e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011222:	460e      	mov	r6, r1
 8011224:	2101      	movs	r1, #1
 8011226:	ec59 8b10 	vmov	r8, r9, d0
 801122a:	4615      	mov	r5, r2
 801122c:	f7ff fd96 	bl	8010d5c <_Balloc>
 8011230:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8011234:	4607      	mov	r7, r0
 8011236:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801123a:	bb34      	cbnz	r4, 801128a <__d2b+0x6c>
 801123c:	9301      	str	r3, [sp, #4]
 801123e:	f1b8 0300 	subs.w	r3, r8, #0
 8011242:	d027      	beq.n	8011294 <__d2b+0x76>
 8011244:	a802      	add	r0, sp, #8
 8011246:	f840 3d08 	str.w	r3, [r0, #-8]!
 801124a:	f7ff fe0f 	bl	8010e6c <__lo0bits>
 801124e:	9900      	ldr	r1, [sp, #0]
 8011250:	b1f0      	cbz	r0, 8011290 <__d2b+0x72>
 8011252:	9a01      	ldr	r2, [sp, #4]
 8011254:	f1c0 0320 	rsb	r3, r0, #32
 8011258:	fa02 f303 	lsl.w	r3, r2, r3
 801125c:	430b      	orrs	r3, r1
 801125e:	40c2      	lsrs	r2, r0
 8011260:	617b      	str	r3, [r7, #20]
 8011262:	9201      	str	r2, [sp, #4]
 8011264:	9b01      	ldr	r3, [sp, #4]
 8011266:	61bb      	str	r3, [r7, #24]
 8011268:	2b00      	cmp	r3, #0
 801126a:	bf14      	ite	ne
 801126c:	2102      	movne	r1, #2
 801126e:	2101      	moveq	r1, #1
 8011270:	6139      	str	r1, [r7, #16]
 8011272:	b1c4      	cbz	r4, 80112a6 <__d2b+0x88>
 8011274:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8011278:	4404      	add	r4, r0
 801127a:	6034      	str	r4, [r6, #0]
 801127c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011280:	6028      	str	r0, [r5, #0]
 8011282:	4638      	mov	r0, r7
 8011284:	b003      	add	sp, #12
 8011286:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801128a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801128e:	e7d5      	b.n	801123c <__d2b+0x1e>
 8011290:	6179      	str	r1, [r7, #20]
 8011292:	e7e7      	b.n	8011264 <__d2b+0x46>
 8011294:	a801      	add	r0, sp, #4
 8011296:	f7ff fde9 	bl	8010e6c <__lo0bits>
 801129a:	9b01      	ldr	r3, [sp, #4]
 801129c:	617b      	str	r3, [r7, #20]
 801129e:	2101      	movs	r1, #1
 80112a0:	6139      	str	r1, [r7, #16]
 80112a2:	3020      	adds	r0, #32
 80112a4:	e7e5      	b.n	8011272 <__d2b+0x54>
 80112a6:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80112aa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80112ae:	6030      	str	r0, [r6, #0]
 80112b0:	6918      	ldr	r0, [r3, #16]
 80112b2:	f7ff fdbc 	bl	8010e2e <__hi0bits>
 80112b6:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80112ba:	e7e1      	b.n	8011280 <__d2b+0x62>

080112bc <frexp>:
 80112bc:	b570      	push	{r4, r5, r6, lr}
 80112be:	2100      	movs	r1, #0
 80112c0:	ec55 4b10 	vmov	r4, r5, d0
 80112c4:	6001      	str	r1, [r0, #0]
 80112c6:	4916      	ldr	r1, [pc, #88]	; (8011320 <frexp+0x64>)
 80112c8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80112cc:	428b      	cmp	r3, r1
 80112ce:	4606      	mov	r6, r0
 80112d0:	462a      	mov	r2, r5
 80112d2:	dc22      	bgt.n	801131a <frexp+0x5e>
 80112d4:	ee10 1a10 	vmov	r1, s0
 80112d8:	4319      	orrs	r1, r3
 80112da:	d01e      	beq.n	801131a <frexp+0x5e>
 80112dc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80112e0:	da0d      	bge.n	80112fe <frexp+0x42>
 80112e2:	2200      	movs	r2, #0
 80112e4:	4b0f      	ldr	r3, [pc, #60]	; (8011324 <frexp+0x68>)
 80112e6:	ee10 0a10 	vmov	r0, s0
 80112ea:	4629      	mov	r1, r5
 80112ec:	f7f5 ff1e 	bl	800712c <__aeabi_dmul>
 80112f0:	460a      	mov	r2, r1
 80112f2:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80112f6:	f06f 0135 	mvn.w	r1, #53	; 0x35
 80112fa:	4604      	mov	r4, r0
 80112fc:	6031      	str	r1, [r6, #0]
 80112fe:	6831      	ldr	r1, [r6, #0]
 8011300:	151b      	asrs	r3, r3, #20
 8011302:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 8011306:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 801130a:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 801130e:	440b      	add	r3, r1
 8011310:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8011314:	6033      	str	r3, [r6, #0]
 8011316:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 801131a:	ec45 4b10 	vmov	d0, r4, r5
 801131e:	bd70      	pop	{r4, r5, r6, pc}
 8011320:	7fefffff 	.word	0x7fefffff
 8011324:	43500000 	.word	0x43500000

08011328 <__sread>:
 8011328:	b510      	push	{r4, lr}
 801132a:	460c      	mov	r4, r1
 801132c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011330:	f000 f9fc 	bl	801172c <_read_r>
 8011334:	2800      	cmp	r0, #0
 8011336:	bfab      	itete	ge
 8011338:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 801133a:	89a3      	ldrhlt	r3, [r4, #12]
 801133c:	181b      	addge	r3, r3, r0
 801133e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8011342:	bfac      	ite	ge
 8011344:	6523      	strge	r3, [r4, #80]	; 0x50
 8011346:	81a3      	strhlt	r3, [r4, #12]
 8011348:	bd10      	pop	{r4, pc}

0801134a <__swrite>:
 801134a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801134e:	461f      	mov	r7, r3
 8011350:	898b      	ldrh	r3, [r1, #12]
 8011352:	05db      	lsls	r3, r3, #23
 8011354:	4605      	mov	r5, r0
 8011356:	460c      	mov	r4, r1
 8011358:	4616      	mov	r6, r2
 801135a:	d505      	bpl.n	8011368 <__swrite+0x1e>
 801135c:	2302      	movs	r3, #2
 801135e:	2200      	movs	r2, #0
 8011360:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011364:	f000 f9be 	bl	80116e4 <_lseek_r>
 8011368:	89a3      	ldrh	r3, [r4, #12]
 801136a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801136e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8011372:	81a3      	strh	r3, [r4, #12]
 8011374:	4632      	mov	r2, r6
 8011376:	463b      	mov	r3, r7
 8011378:	4628      	mov	r0, r5
 801137a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801137e:	f7fe bb5f 	b.w	800fa40 <_write_r>

08011382 <__sseek>:
 8011382:	b510      	push	{r4, lr}
 8011384:	460c      	mov	r4, r1
 8011386:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801138a:	f000 f9ab 	bl	80116e4 <_lseek_r>
 801138e:	1c43      	adds	r3, r0, #1
 8011390:	89a3      	ldrh	r3, [r4, #12]
 8011392:	bf15      	itete	ne
 8011394:	6520      	strne	r0, [r4, #80]	; 0x50
 8011396:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801139a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801139e:	81a3      	strheq	r3, [r4, #12]
 80113a0:	bf18      	it	ne
 80113a2:	81a3      	strhne	r3, [r4, #12]
 80113a4:	bd10      	pop	{r4, pc}

080113a6 <__sclose>:
 80113a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80113aa:	f000 b911 	b.w	80115d0 <_close_r>

080113ae <strncpy>:
 80113ae:	b570      	push	{r4, r5, r6, lr}
 80113b0:	3901      	subs	r1, #1
 80113b2:	4604      	mov	r4, r0
 80113b4:	b902      	cbnz	r2, 80113b8 <strncpy+0xa>
 80113b6:	bd70      	pop	{r4, r5, r6, pc}
 80113b8:	4623      	mov	r3, r4
 80113ba:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 80113be:	f803 5b01 	strb.w	r5, [r3], #1
 80113c2:	1e56      	subs	r6, r2, #1
 80113c4:	b92d      	cbnz	r5, 80113d2 <strncpy+0x24>
 80113c6:	4414      	add	r4, r2
 80113c8:	42a3      	cmp	r3, r4
 80113ca:	d0f4      	beq.n	80113b6 <strncpy+0x8>
 80113cc:	f803 5b01 	strb.w	r5, [r3], #1
 80113d0:	e7fa      	b.n	80113c8 <strncpy+0x1a>
 80113d2:	461c      	mov	r4, r3
 80113d4:	4632      	mov	r2, r6
 80113d6:	e7ed      	b.n	80113b4 <strncpy+0x6>

080113d8 <__ssprint_r>:
 80113d8:	6893      	ldr	r3, [r2, #8]
 80113da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113de:	4681      	mov	r9, r0
 80113e0:	460c      	mov	r4, r1
 80113e2:	4616      	mov	r6, r2
 80113e4:	2b00      	cmp	r3, #0
 80113e6:	d05e      	beq.n	80114a6 <__ssprint_r+0xce>
 80113e8:	f04f 0b00 	mov.w	fp, #0
 80113ec:	f8d2 a000 	ldr.w	sl, [r2]
 80113f0:	465f      	mov	r7, fp
 80113f2:	b357      	cbz	r7, 801144a <__ssprint_r+0x72>
 80113f4:	68a3      	ldr	r3, [r4, #8]
 80113f6:	429f      	cmp	r7, r3
 80113f8:	d340      	bcc.n	801147c <__ssprint_r+0xa4>
 80113fa:	89a2      	ldrh	r2, [r4, #12]
 80113fc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8011400:	d03c      	beq.n	801147c <__ssprint_r+0xa4>
 8011402:	6825      	ldr	r5, [r4, #0]
 8011404:	6921      	ldr	r1, [r4, #16]
 8011406:	eba5 0801 	sub.w	r8, r5, r1
 801140a:	6965      	ldr	r5, [r4, #20]
 801140c:	2302      	movs	r3, #2
 801140e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011412:	fb95 f5f3 	sdiv	r5, r5, r3
 8011416:	f108 0301 	add.w	r3, r8, #1
 801141a:	443b      	add	r3, r7
 801141c:	429d      	cmp	r5, r3
 801141e:	bf38      	it	cc
 8011420:	461d      	movcc	r5, r3
 8011422:	0553      	lsls	r3, r2, #21
 8011424:	d544      	bpl.n	80114b0 <__ssprint_r+0xd8>
 8011426:	4629      	mov	r1, r5
 8011428:	4648      	mov	r0, r9
 801142a:	f7fc fb5b 	bl	800dae4 <_malloc_r>
 801142e:	b988      	cbnz	r0, 8011454 <__ssprint_r+0x7c>
 8011430:	230c      	movs	r3, #12
 8011432:	f8c9 3000 	str.w	r3, [r9]
 8011436:	89a3      	ldrh	r3, [r4, #12]
 8011438:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801143c:	81a3      	strh	r3, [r4, #12]
 801143e:	2300      	movs	r3, #0
 8011440:	e9c6 3301 	strd	r3, r3, [r6, #4]
 8011444:	f04f 30ff 	mov.w	r0, #4294967295
 8011448:	e02f      	b.n	80114aa <__ssprint_r+0xd2>
 801144a:	e9da b700 	ldrd	fp, r7, [sl]
 801144e:	f10a 0a08 	add.w	sl, sl, #8
 8011452:	e7ce      	b.n	80113f2 <__ssprint_r+0x1a>
 8011454:	4642      	mov	r2, r8
 8011456:	6921      	ldr	r1, [r4, #16]
 8011458:	9001      	str	r0, [sp, #4]
 801145a:	f7fc fd88 	bl	800df6e <memcpy>
 801145e:	89a2      	ldrh	r2, [r4, #12]
 8011460:	9b01      	ldr	r3, [sp, #4]
 8011462:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8011466:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801146a:	81a2      	strh	r2, [r4, #12]
 801146c:	6123      	str	r3, [r4, #16]
 801146e:	6165      	str	r5, [r4, #20]
 8011470:	4443      	add	r3, r8
 8011472:	eba5 0508 	sub.w	r5, r5, r8
 8011476:	6023      	str	r3, [r4, #0]
 8011478:	60a5      	str	r5, [r4, #8]
 801147a:	463b      	mov	r3, r7
 801147c:	42bb      	cmp	r3, r7
 801147e:	bf28      	it	cs
 8011480:	463b      	movcs	r3, r7
 8011482:	461a      	mov	r2, r3
 8011484:	4659      	mov	r1, fp
 8011486:	6820      	ldr	r0, [r4, #0]
 8011488:	9301      	str	r3, [sp, #4]
 801148a:	f7fc fd7b 	bl	800df84 <memmove>
 801148e:	68a2      	ldr	r2, [r4, #8]
 8011490:	9b01      	ldr	r3, [sp, #4]
 8011492:	1ad2      	subs	r2, r2, r3
 8011494:	60a2      	str	r2, [r4, #8]
 8011496:	6822      	ldr	r2, [r4, #0]
 8011498:	4413      	add	r3, r2
 801149a:	6023      	str	r3, [r4, #0]
 801149c:	68b3      	ldr	r3, [r6, #8]
 801149e:	1bdf      	subs	r7, r3, r7
 80114a0:	60b7      	str	r7, [r6, #8]
 80114a2:	2f00      	cmp	r7, #0
 80114a4:	d1d1      	bne.n	801144a <__ssprint_r+0x72>
 80114a6:	2000      	movs	r0, #0
 80114a8:	6070      	str	r0, [r6, #4]
 80114aa:	b003      	add	sp, #12
 80114ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114b0:	462a      	mov	r2, r5
 80114b2:	4648      	mov	r0, r9
 80114b4:	f7fc fe1e 	bl	800e0f4 <_realloc_r>
 80114b8:	4603      	mov	r3, r0
 80114ba:	2800      	cmp	r0, #0
 80114bc:	d1d6      	bne.n	801146c <__ssprint_r+0x94>
 80114be:	6921      	ldr	r1, [r4, #16]
 80114c0:	4648      	mov	r0, r9
 80114c2:	f7ff faf7 	bl	8010ab4 <_free_r>
 80114c6:	e7b3      	b.n	8011430 <__ssprint_r+0x58>

080114c8 <__register_exitproc>:
 80114c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80114cc:	4c26      	ldr	r4, [pc, #152]	; (8011568 <__register_exitproc+0xa0>)
 80114ce:	4606      	mov	r6, r0
 80114d0:	6820      	ldr	r0, [r4, #0]
 80114d2:	4698      	mov	r8, r3
 80114d4:	460f      	mov	r7, r1
 80114d6:	4691      	mov	r9, r2
 80114d8:	f7fc faf2 	bl	800dac0 <__retarget_lock_acquire_recursive>
 80114dc:	4b23      	ldr	r3, [pc, #140]	; (801156c <__register_exitproc+0xa4>)
 80114de:	681d      	ldr	r5, [r3, #0]
 80114e0:	f8d5 0148 	ldr.w	r0, [r5, #328]	; 0x148
 80114e4:	b918      	cbnz	r0, 80114ee <__register_exitproc+0x26>
 80114e6:	f505 70a6 	add.w	r0, r5, #332	; 0x14c
 80114ea:	f8c5 0148 	str.w	r0, [r5, #328]	; 0x148
 80114ee:	6843      	ldr	r3, [r0, #4]
 80114f0:	2b1f      	cmp	r3, #31
 80114f2:	dd19      	ble.n	8011528 <__register_exitproc+0x60>
 80114f4:	4b1e      	ldr	r3, [pc, #120]	; (8011570 <__register_exitproc+0xa8>)
 80114f6:	b933      	cbnz	r3, 8011506 <__register_exitproc+0x3e>
 80114f8:	6820      	ldr	r0, [r4, #0]
 80114fa:	f7fc fae2 	bl	800dac2 <__retarget_lock_release_recursive>
 80114fe:	f04f 30ff 	mov.w	r0, #4294967295
 8011502:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011506:	f44f 70c8 	mov.w	r0, #400	; 0x190
 801150a:	f7fc fadb 	bl	800dac4 <malloc>
 801150e:	2800      	cmp	r0, #0
 8011510:	d0f2      	beq.n	80114f8 <__register_exitproc+0x30>
 8011512:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
 8011516:	6003      	str	r3, [r0, #0]
 8011518:	2200      	movs	r2, #0
 801151a:	6042      	str	r2, [r0, #4]
 801151c:	f8c5 0148 	str.w	r0, [r5, #328]	; 0x148
 8011520:	f8c0 2188 	str.w	r2, [r0, #392]	; 0x188
 8011524:	f8c0 218c 	str.w	r2, [r0, #396]	; 0x18c
 8011528:	6843      	ldr	r3, [r0, #4]
 801152a:	b19e      	cbz	r6, 8011554 <__register_exitproc+0x8c>
 801152c:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8011530:	2201      	movs	r2, #1
 8011532:	f8c5 9088 	str.w	r9, [r5, #136]	; 0x88
 8011536:	f8d0 1188 	ldr.w	r1, [r0, #392]	; 0x188
 801153a:	409a      	lsls	r2, r3
 801153c:	4311      	orrs	r1, r2
 801153e:	2e02      	cmp	r6, #2
 8011540:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
 8011544:	f8c5 8108 	str.w	r8, [r5, #264]	; 0x108
 8011548:	bf02      	ittt	eq
 801154a:	f8d0 118c 	ldreq.w	r1, [r0, #396]	; 0x18c
 801154e:	430a      	orreq	r2, r1
 8011550:	f8c0 218c 	streq.w	r2, [r0, #396]	; 0x18c
 8011554:	1c5a      	adds	r2, r3, #1
 8011556:	3302      	adds	r3, #2
 8011558:	6042      	str	r2, [r0, #4]
 801155a:	f840 7023 	str.w	r7, [r0, r3, lsl #2]
 801155e:	6820      	ldr	r0, [r4, #0]
 8011560:	f7fc faaf 	bl	800dac2 <__retarget_lock_release_recursive>
 8011564:	2000      	movs	r0, #0
 8011566:	e7cc      	b.n	8011502 <__register_exitproc+0x3a>
 8011568:	20000868 	.word	0x20000868
 801156c:	0801f5a8 	.word	0x0801f5a8
 8011570:	0800dac5 	.word	0x0800dac5

08011574 <_calloc_r>:
 8011574:	b510      	push	{r4, lr}
 8011576:	4351      	muls	r1, r2
 8011578:	f7fc fab4 	bl	800dae4 <_malloc_r>
 801157c:	4604      	mov	r4, r0
 801157e:	b198      	cbz	r0, 80115a8 <_calloc_r+0x34>
 8011580:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8011584:	f022 0203 	bic.w	r2, r2, #3
 8011588:	3a04      	subs	r2, #4
 801158a:	2a24      	cmp	r2, #36	; 0x24
 801158c:	d81b      	bhi.n	80115c6 <_calloc_r+0x52>
 801158e:	2a13      	cmp	r2, #19
 8011590:	d917      	bls.n	80115c2 <_calloc_r+0x4e>
 8011592:	2100      	movs	r1, #0
 8011594:	2a1b      	cmp	r2, #27
 8011596:	e9c0 1100 	strd	r1, r1, [r0]
 801159a:	d807      	bhi.n	80115ac <_calloc_r+0x38>
 801159c:	f100 0308 	add.w	r3, r0, #8
 80115a0:	2200      	movs	r2, #0
 80115a2:	e9c3 2200 	strd	r2, r2, [r3]
 80115a6:	609a      	str	r2, [r3, #8]
 80115a8:	4620      	mov	r0, r4
 80115aa:	bd10      	pop	{r4, pc}
 80115ac:	2a24      	cmp	r2, #36	; 0x24
 80115ae:	e9c0 1102 	strd	r1, r1, [r0, #8]
 80115b2:	bf11      	iteee	ne
 80115b4:	f100 0310 	addne.w	r3, r0, #16
 80115b8:	6101      	streq	r1, [r0, #16]
 80115ba:	f100 0318 	addeq.w	r3, r0, #24
 80115be:	6141      	streq	r1, [r0, #20]
 80115c0:	e7ee      	b.n	80115a0 <_calloc_r+0x2c>
 80115c2:	4603      	mov	r3, r0
 80115c4:	e7ec      	b.n	80115a0 <_calloc_r+0x2c>
 80115c6:	2100      	movs	r1, #0
 80115c8:	f7fc fcf5 	bl	800dfb6 <memset>
 80115cc:	e7ec      	b.n	80115a8 <_calloc_r+0x34>
	...

080115d0 <_close_r>:
 80115d0:	b538      	push	{r3, r4, r5, lr}
 80115d2:	4c06      	ldr	r4, [pc, #24]	; (80115ec <_close_r+0x1c>)
 80115d4:	2300      	movs	r3, #0
 80115d6:	4605      	mov	r5, r0
 80115d8:	4608      	mov	r0, r1
 80115da:	6023      	str	r3, [r4, #0]
 80115dc:	f7fa fdec 	bl	800c1b8 <_close>
 80115e0:	1c43      	adds	r3, r0, #1
 80115e2:	d102      	bne.n	80115ea <_close_r+0x1a>
 80115e4:	6823      	ldr	r3, [r4, #0]
 80115e6:	b103      	cbz	r3, 80115ea <_close_r+0x1a>
 80115e8:	602b      	str	r3, [r5, #0]
 80115ea:	bd38      	pop	{r3, r4, r5, pc}
 80115ec:	2001e054 	.word	0x2001e054

080115f0 <_fclose_r>:
 80115f0:	b570      	push	{r4, r5, r6, lr}
 80115f2:	4606      	mov	r6, r0
 80115f4:	460c      	mov	r4, r1
 80115f6:	b911      	cbnz	r1, 80115fe <_fclose_r+0xe>
 80115f8:	2500      	movs	r5, #0
 80115fa:	4628      	mov	r0, r5
 80115fc:	bd70      	pop	{r4, r5, r6, pc}
 80115fe:	b118      	cbz	r0, 8011608 <_fclose_r+0x18>
 8011600:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011602:	b90b      	cbnz	r3, 8011608 <_fclose_r+0x18>
 8011604:	f7ff f9c6 	bl	8010994 <__sinit>
 8011608:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801160a:	07d8      	lsls	r0, r3, #31
 801160c:	d405      	bmi.n	801161a <_fclose_r+0x2a>
 801160e:	89a3      	ldrh	r3, [r4, #12]
 8011610:	0599      	lsls	r1, r3, #22
 8011612:	d402      	bmi.n	801161a <_fclose_r+0x2a>
 8011614:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011616:	f7fc fa53 	bl	800dac0 <__retarget_lock_acquire_recursive>
 801161a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801161e:	b93b      	cbnz	r3, 8011630 <_fclose_r+0x40>
 8011620:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8011622:	f015 0501 	ands.w	r5, r5, #1
 8011626:	d1e7      	bne.n	80115f8 <_fclose_r+0x8>
 8011628:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801162a:	f7fc fa4a 	bl	800dac2 <__retarget_lock_release_recursive>
 801162e:	e7e4      	b.n	80115fa <_fclose_r+0xa>
 8011630:	4621      	mov	r1, r4
 8011632:	4630      	mov	r0, r6
 8011634:	f7ff f8b4 	bl	80107a0 <__sflush_r>
 8011638:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801163a:	4605      	mov	r5, r0
 801163c:	b133      	cbz	r3, 801164c <_fclose_r+0x5c>
 801163e:	69e1      	ldr	r1, [r4, #28]
 8011640:	4630      	mov	r0, r6
 8011642:	4798      	blx	r3
 8011644:	2800      	cmp	r0, #0
 8011646:	bfb8      	it	lt
 8011648:	f04f 35ff 	movlt.w	r5, #4294967295
 801164c:	89a3      	ldrh	r3, [r4, #12]
 801164e:	061a      	lsls	r2, r3, #24
 8011650:	d503      	bpl.n	801165a <_fclose_r+0x6a>
 8011652:	6921      	ldr	r1, [r4, #16]
 8011654:	4630      	mov	r0, r6
 8011656:	f7ff fa2d 	bl	8010ab4 <_free_r>
 801165a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801165c:	b141      	cbz	r1, 8011670 <_fclose_r+0x80>
 801165e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8011662:	4299      	cmp	r1, r3
 8011664:	d002      	beq.n	801166c <_fclose_r+0x7c>
 8011666:	4630      	mov	r0, r6
 8011668:	f7ff fa24 	bl	8010ab4 <_free_r>
 801166c:	2300      	movs	r3, #0
 801166e:	6323      	str	r3, [r4, #48]	; 0x30
 8011670:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011672:	b121      	cbz	r1, 801167e <_fclose_r+0x8e>
 8011674:	4630      	mov	r0, r6
 8011676:	f7ff fa1d 	bl	8010ab4 <_free_r>
 801167a:	2300      	movs	r3, #0
 801167c:	6463      	str	r3, [r4, #68]	; 0x44
 801167e:	f7ff f971 	bl	8010964 <__sfp_lock_acquire>
 8011682:	2300      	movs	r3, #0
 8011684:	81a3      	strh	r3, [r4, #12]
 8011686:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011688:	07db      	lsls	r3, r3, #31
 801168a:	d402      	bmi.n	8011692 <_fclose_r+0xa2>
 801168c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801168e:	f7fc fa18 	bl	800dac2 <__retarget_lock_release_recursive>
 8011692:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011694:	f7fc fa13 	bl	800dabe <__retarget_lock_close_recursive>
 8011698:	f7ff f96a 	bl	8010970 <__sfp_lock_release>
 801169c:	e7ad      	b.n	80115fa <_fclose_r+0xa>
	...

080116a0 <_fstat_r>:
 80116a0:	b538      	push	{r3, r4, r5, lr}
 80116a2:	4c07      	ldr	r4, [pc, #28]	; (80116c0 <_fstat_r+0x20>)
 80116a4:	2300      	movs	r3, #0
 80116a6:	4605      	mov	r5, r0
 80116a8:	4608      	mov	r0, r1
 80116aa:	4611      	mov	r1, r2
 80116ac:	6023      	str	r3, [r4, #0]
 80116ae:	f7fa fd87 	bl	800c1c0 <_fstat>
 80116b2:	1c43      	adds	r3, r0, #1
 80116b4:	d102      	bne.n	80116bc <_fstat_r+0x1c>
 80116b6:	6823      	ldr	r3, [r4, #0]
 80116b8:	b103      	cbz	r3, 80116bc <_fstat_r+0x1c>
 80116ba:	602b      	str	r3, [r5, #0]
 80116bc:	bd38      	pop	{r3, r4, r5, pc}
 80116be:	bf00      	nop
 80116c0:	2001e054 	.word	0x2001e054

080116c4 <_isatty_r>:
 80116c4:	b538      	push	{r3, r4, r5, lr}
 80116c6:	4c06      	ldr	r4, [pc, #24]	; (80116e0 <_isatty_r+0x1c>)
 80116c8:	2300      	movs	r3, #0
 80116ca:	4605      	mov	r5, r0
 80116cc:	4608      	mov	r0, r1
 80116ce:	6023      	str	r3, [r4, #0]
 80116d0:	f7fa fd7a 	bl	800c1c8 <_isatty>
 80116d4:	1c43      	adds	r3, r0, #1
 80116d6:	d102      	bne.n	80116de <_isatty_r+0x1a>
 80116d8:	6823      	ldr	r3, [r4, #0]
 80116da:	b103      	cbz	r3, 80116de <_isatty_r+0x1a>
 80116dc:	602b      	str	r3, [r5, #0]
 80116de:	bd38      	pop	{r3, r4, r5, pc}
 80116e0:	2001e054 	.word	0x2001e054

080116e4 <_lseek_r>:
 80116e4:	b538      	push	{r3, r4, r5, lr}
 80116e6:	4c07      	ldr	r4, [pc, #28]	; (8011704 <_lseek_r+0x20>)
 80116e8:	4605      	mov	r5, r0
 80116ea:	4608      	mov	r0, r1
 80116ec:	4611      	mov	r1, r2
 80116ee:	2200      	movs	r2, #0
 80116f0:	6022      	str	r2, [r4, #0]
 80116f2:	461a      	mov	r2, r3
 80116f4:	f7fa fd6c 	bl	800c1d0 <_lseek>
 80116f8:	1c43      	adds	r3, r0, #1
 80116fa:	d102      	bne.n	8011702 <_lseek_r+0x1e>
 80116fc:	6823      	ldr	r3, [r4, #0]
 80116fe:	b103      	cbz	r3, 8011702 <_lseek_r+0x1e>
 8011700:	602b      	str	r3, [r5, #0]
 8011702:	bd38      	pop	{r3, r4, r5, pc}
 8011704:	2001e054 	.word	0x2001e054

08011708 <__ascii_mbtowc>:
 8011708:	b082      	sub	sp, #8
 801170a:	b901      	cbnz	r1, 801170e <__ascii_mbtowc+0x6>
 801170c:	a901      	add	r1, sp, #4
 801170e:	b142      	cbz	r2, 8011722 <__ascii_mbtowc+0x1a>
 8011710:	b14b      	cbz	r3, 8011726 <__ascii_mbtowc+0x1e>
 8011712:	7813      	ldrb	r3, [r2, #0]
 8011714:	600b      	str	r3, [r1, #0]
 8011716:	7812      	ldrb	r2, [r2, #0]
 8011718:	1c10      	adds	r0, r2, #0
 801171a:	bf18      	it	ne
 801171c:	2001      	movne	r0, #1
 801171e:	b002      	add	sp, #8
 8011720:	4770      	bx	lr
 8011722:	4610      	mov	r0, r2
 8011724:	e7fb      	b.n	801171e <__ascii_mbtowc+0x16>
 8011726:	f06f 0001 	mvn.w	r0, #1
 801172a:	e7f8      	b.n	801171e <__ascii_mbtowc+0x16>

0801172c <_read_r>:
 801172c:	b538      	push	{r3, r4, r5, lr}
 801172e:	4c07      	ldr	r4, [pc, #28]	; (801174c <_read_r+0x20>)
 8011730:	4605      	mov	r5, r0
 8011732:	4608      	mov	r0, r1
 8011734:	4611      	mov	r1, r2
 8011736:	2200      	movs	r2, #0
 8011738:	6022      	str	r2, [r4, #0]
 801173a:	461a      	mov	r2, r3
 801173c:	f7fa fd2e 	bl	800c19c <_read>
 8011740:	1c43      	adds	r3, r0, #1
 8011742:	d102      	bne.n	801174a <_read_r+0x1e>
 8011744:	6823      	ldr	r3, [r4, #0]
 8011746:	b103      	cbz	r3, 801174a <_read_r+0x1e>
 8011748:	602b      	str	r3, [r5, #0]
 801174a:	bd38      	pop	{r3, r4, r5, pc}
 801174c:	2001e054 	.word	0x2001e054

08011750 <__ascii_wctomb>:
 8011750:	b149      	cbz	r1, 8011766 <__ascii_wctomb+0x16>
 8011752:	2aff      	cmp	r2, #255	; 0xff
 8011754:	bf85      	ittet	hi
 8011756:	238a      	movhi	r3, #138	; 0x8a
 8011758:	6003      	strhi	r3, [r0, #0]
 801175a:	700a      	strbls	r2, [r1, #0]
 801175c:	f04f 30ff 	movhi.w	r0, #4294967295
 8011760:	bf98      	it	ls
 8011762:	2001      	movls	r0, #1
 8011764:	4770      	bx	lr
 8011766:	4608      	mov	r0, r1
 8011768:	4770      	bx	lr
	...

0801176c <_getpid>:
 801176c:	4b02      	ldr	r3, [pc, #8]	; (8011778 <_getpid+0xc>)
 801176e:	2258      	movs	r2, #88	; 0x58
 8011770:	601a      	str	r2, [r3, #0]
 8011772:	f04f 30ff 	mov.w	r0, #4294967295
 8011776:	4770      	bx	lr
 8011778:	2001e054 	.word	0x2001e054

0801177c <_kill>:
 801177c:	4b02      	ldr	r3, [pc, #8]	; (8011788 <_kill+0xc>)
 801177e:	2258      	movs	r2, #88	; 0x58
 8011780:	601a      	str	r2, [r3, #0]
 8011782:	f04f 30ff 	mov.w	r0, #4294967295
 8011786:	4770      	bx	lr
 8011788:	2001e054 	.word	0x2001e054

0801178c <_sbrk>:
 801178c:	4b04      	ldr	r3, [pc, #16]	; (80117a0 <_sbrk+0x14>)
 801178e:	6819      	ldr	r1, [r3, #0]
 8011790:	4602      	mov	r2, r0
 8011792:	b909      	cbnz	r1, 8011798 <_sbrk+0xc>
 8011794:	4903      	ldr	r1, [pc, #12]	; (80117a4 <_sbrk+0x18>)
 8011796:	6019      	str	r1, [r3, #0]
 8011798:	6818      	ldr	r0, [r3, #0]
 801179a:	4402      	add	r2, r0
 801179c:	601a      	str	r2, [r3, #0]
 801179e:	4770      	bx	lr
 80117a0:	2001e03c 	.word	0x2001e03c
 80117a4:	2001e058 	.word	0x2001e058

080117a8 <_init>:
 80117a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117aa:	bf00      	nop
 80117ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80117ae:	bc08      	pop	{r3}
 80117b0:	469e      	mov	lr, r3
 80117b2:	4770      	bx	lr

080117b4 <_fini>:
 80117b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117b6:	bf00      	nop
 80117b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80117ba:	bc08      	pop	{r3}
 80117bc:	469e      	mov	lr, r3
 80117be:	4770      	bx	lr
